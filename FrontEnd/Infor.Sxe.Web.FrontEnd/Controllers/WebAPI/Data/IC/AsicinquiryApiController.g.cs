//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.IC
{  
   using Sxe.IC.Data.Models.PdsContext;
   using Sxe.IC.Data.Models.Pdscreatelotstt;
   using Sxe.IC.Data.Models.Pdsorderlotcuts;
   using Sxe.IC.Data.Models.Pdsloadexcptusagett;
   using Sxe.IC.Data.Models.Pdsicwhseavail;
   using Sxe.IC.Data.Models.Pdsicwhseavailwhsetypes;
   using Sxe.IC.Data.Models.Pdsloadexcptreceiptstt;
   using Sxe.IC.Data.Models.Pdsicir;
   using Sxe.IC.Data.Models.Pdsicirquorders;
   using Sxe.IC.Data.Models.Pdsiciccriteria;
   using Sxe.IC.Data.Models.Pdsicicmasterlist;
   using Sxe.IC.Data.Models.Pdsicictransactionlist;
   using Sxe.IC.Data.Models.Pdsicicallocationlist;
   using Sxe.IC.Data.Models.Pdsicicvendorlist;
   using Sxe.IC.Data.Models.Pdsicimbundlescontrol;
   using Sxe.IC.Data.Models.Pdsicimbundles;
   using Sxe.IC.Data.Models.Pdsicimcomponents;
   using Sxe.IC.Data.Models.Pdsicsecretrieve;
   using Sxe.IC.Data.Models.Complex;
   using Sxe.IC.Data.Repositories;
    
   [RoutePrefix("api/ic/asicinquiry")]
   public partial class AsicinquiryApiController : ApiControllerBase
   {
      private readonly AsicinquiryRepository repository;
    
      public AsicinquiryApiController(AsicinquiryRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
      
      [Route("createlotstt")]
      [HttpPost]
      public IEnumerable<Createlotsttresults> CreateLotsTT(Createlotsttcriteria createlotsttcriteria)
      {
         return this.repository.CreateLotsTT(createlotsttcriteria);
      } 
  
      
      [Route("getorderlotcutdata")]
      [HttpPost]
      public IEnumerable<Orderlotcutresults> GetOrderLotCutData(Orderlotcutcriteria orderlotcutcriteria)
      {
         return this.repository.GetOrderLotCutData(orderlotcutcriteria);
      } 
  
      
      [Route("loadexceptionusagett")]
      [HttpPost]
      public IEnumerable<Loadexcptusagettresults> LoadExceptionUsageTT(Loadexcptusagettcriteria loadexcptusagettcriteria)
      {
         return this.repository.LoadExceptionUsageTT(loadexcptusagettcriteria);
      } 
  
      
      [Route("iccataloggetupc")]
      [HttpPost]
      public string ICCatalogGetUPC(AsicinquiryICCatalogGetUPCRequestAPI AsicinquiryICCatalogGetUPCRequestAPI)
      {
         return this.repository.ICCatalogGetUPC(AsicinquiryICCatalogGetUPCRequestAPI);
      } 
  
      
      [Route("icwhseproductgetupc")]
      [HttpPost]
      public string ICWhseProductGetUPC(AsicinquiryICWhseProductGetUPCRequestAPI AsicinquiryICWhseProductGetUPCRequestAPI)
      {
         return this.repository.ICWhseProductGetUPC(AsicinquiryICWhseProductGetUPCRequestAPI);
      } 
  
      
      [Route("icwhseavail")]
      [HttpPost]
      public IEnumerable<Icwhseavailresults> ICWhseAvail(Icwhseavailcriteria icwhseavailcriteria)
      {
         return this.repository.ICWhseAvail(icwhseavailcriteria);
      } 
  
      
      [Route("icwhseavailwhsetypes")]
      [HttpGet]
      public IEnumerable<Icwhseavailwhsetypes> ICWhseAvailWhseTypes()
      {
         return this.repository.ICWhseAvailWhseTypes();
      } 
  
      
      [Route("loadexceptionreceiptstt")]
      [HttpPost]
      public IEnumerable<Loadexcptreceiptsttresults> LoadExceptionReceiptsTT(Loadexcptreceiptsttcriteria loadexcptreceiptsttcriteria)
      {
         return this.repository.LoadExceptionReceiptsTT(loadexcptreceiptsttcriteria);
      } 
  
      
      [Route("icirretrieve")]
      [HttpPost]
      public AsicinquiryICIRRetrieveResponseAPI ICIRRetrieve(Icircriteria icircriteria)
      {
         return this.repository.ICIRRetrieve(icircriteria);
      } 
  
      
      [Route("icirquorders")]
      [HttpPost]
      public IEnumerable<Icirquorders> ICIRQUOrders(IEnumerable<Icirresults> icirresults)
      {
         return this.repository.ICIRQUOrders(icirresults);
      } 
  
      
      [Route("icicbuildmasterlist")]
      [HttpPost]
      public AsicinquiryICICBuildMasterListResponseAPI ICICBuildMasterList(Iciccriteria iciccriteria)
      {
         return this.repository.ICICBuildMasterList(iciccriteria);
      } 
  
      
      [Route("icicbuildtransactionlist")]
      [HttpPost]
      public AsicinquiryICICBuildTransactionListResponseAPI ICICBuildTransactionList(Iciccriteria iciccriteria)
      {
         return this.repository.ICICBuildTransactionList(iciccriteria);
      } 
  
      
      [Route("icicbuildallocationlist")]
      [HttpPost]
      public AsicinquiryICICBuildAllocationListResponseAPI ICICBuildAllocationList(Iciccriteria iciccriteria)
      {
         return this.repository.ICICBuildAllocationList(iciccriteria);
      } 
  
      
      [Route("icicbuildvendorlist")]
      [HttpPost]
      public AsicinquiryICICBuildVendorListResponseAPI ICICBuildVendorList(Iciccriteria iciccriteria)
      {
         return this.repository.ICICBuildVendorList(iciccriteria);
      } 
  
      
      [Route("icimbundlesload")]
      [HttpPost]
      public AsicinquiryICIMBundlesLoadResponseAPI ICIMBundlesLoad(AsicinquiryICIMBundlesLoadRequestAPI AsicinquiryICIMBundlesLoadRequestAPI)
      {
         return this.repository.ICIMBundlesLoad(AsicinquiryICIMBundlesLoadRequestAPI);
      } 
  
      
      [Route("icimcomponentsload")]
      [HttpPost]
      public IEnumerable<Icimcomponents> ICIMComponentsLoad(Icimbundles icimbundles)
      {
         return this.repository.ICIMComponentsLoad(icimbundles);
      } 
  
      
      [Route("icsecretrieve")]
      [HttpPost]
      public IEnumerable<Icsecretrieveresults> ICSECRetrieve(Icsecretrievecriteria icsecretrievecriteria)
      {
         return this.repository.ICSECRetrieve(icsecretrievecriteria);
      } 
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  