//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.SL
{  
   using Sxe.SL.Data.Models.PdsContext;
   using Sxe.SL.Data.Models.Pdsslimportdefcopy;
   using Sxe.SL.Data.Models.Pdsslehgetheadlist;
   using Sxe.SL.Data.Models.Pdssledgetprodlist;
   using Sxe.SL.Data.Models.Pdssledgetproddetail;
   using Sxe.SL.Data.Models.Pdssledgetheadlist;
   using Sxe.SL.Data.Models.Pdssleeprodlistcriteria;
   using Sxe.SL.Data.Models.Pdssleeprodlistresults;
   using Sxe.SL.Data.Models.Pdssleeproductfull;
   using Sxe.SL.Data.Models.Pdssleeproderrorholdcd;
   using Sxe.SL.Data.Models.Pdssleechgstatuscode;
   using Sxe.SL.Data.Models.Pdsslpricecostmultcopy;
   using Sxe.SL.Data.Models.Pdsslnewitemdefaultscopy;
   using Sxe.SL.Data.Models.Pdsslimportdeffix;
   using Sxe.SL.Data.Models.Complex;
   using Sxe.SL.Data.Repositories;
    
   [RoutePrefix("api/sl/asslsetup")]
   public partial class AsslsetupApiController : ApiControllerBase
   {
      private readonly AsslsetupRepository repository;
    
      public AsslsetupApiController(AsslsetupRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
      
      [Route("slimportdefcopy")]
      [HttpPost]
      public Slimportdefcopy SLImportDefCopy(Slimportdefcopy slimportdefcopy)
      {
         return this.repository.SLImportDefCopy(slimportdefcopy);
      } 
  
      
      [Route("slehgetheaderlist/{cImptype}/{cDisplayType}/{iRecordLimit:int}")]
      [HttpGet]
      public AsslsetupSLEHGetHeaderListResponseAPI SLEHGetHeaderList(string cImptype, string cDisplayType, int iRecordLimit)
      {
         return this.repository.SLEHGetHeaderList(cImptype, cDisplayType, iRecordLimit);
      } 
  
      
      [Route("sledgetprodlist")]
      [HttpPost]
      public IEnumerable<Sledgetprodlistresults> SLEDGetProdList(AsslsetupSLEDGetProdListRequestAPI AsslsetupSLEDGetProdListRequestAPI)
      {
         return this.repository.SLEDGetProdList(AsslsetupSLEDGetProdListRequestAPI);
      } 
  
      
      [Route("sledgetproddetail")]
      [HttpGet]
      public Sledgetproddetailresults SLEDGetProdDetail(string cImptype, bool lStatusType, string cSLUpdtNo, string cProd, string cWhse)
      {
         return this.repository.SLEDGetProdDetail(cImptype, lStatusType, cSLUpdtNo, cProd, cWhse);
      } 
  
      
      [Route("sledgetheadlist/{cProd}/{cWhse}")]
      [HttpGet]
      public IEnumerable<Sledgetheadlistresults> SLEDGetHeadList(string cProd, string cWhse)
      {
         return this.repository.SLEDGetHeadList(cProd, cWhse);
      } 
  
      
      [Route("sleegetproductlist")]
      [HttpPost]
      public AsslsetupSLEEGetProductListResponseAPI SLEEGetProductList(Sleeprodlistcriteria sleeprodlistcriteria)
      {
         return this.repository.SLEEGetProductList(sleeprodlistcriteria);
      } 
  
      
      [Route("sleeproductlistdelete")]
      [HttpPost]
      public void SLEEProductListDelete(IEnumerable<Sleeprodlistresults> sleeprodlistresults)
      {
         this.repository.SLEEProductListDelete(sleeprodlistresults);
      } 
  
      
      [Route("sleeproductlistupdate")]
      [HttpPost]
      public AsslsetupSLEEProductListUpdateResponseAPI SLEEProductListUpdate(AsslsetupSLEEProductListUpdateRequestAPI AsslsetupSLEEProductListUpdateRequestAPI)
      {
         return this.repository.SLEEProductListUpdate(AsslsetupSLEEProductListUpdateRequestAPI);
      } 
  
      
      [Route("sleeproductfullretrieve")]
      [HttpPost]
      public Sleeproductfull SLEEProductFullRetrieve(Sleeproductfull sleeproductfull)
      {
         return this.repository.SLEEProductFullRetrieve(sleeproductfull);
      } 
  
      
      [Route("sleeproductfullupdate")]
      [HttpPost]
      public Sleeprodlistresults SLEEProductFullUpdate(AsslsetupSLEEProductFullUpdateRequestAPI AsslsetupSLEEProductFullUpdateRequestAPI)
      {
         return this.repository.SLEEProductFullUpdate(AsslsetupSLEEProductFullUpdateRequestAPI);
      } 
  
      
      [Route("sleeproductaddprepare")]
      [HttpGet]
      public Sleeproductfull SLEEProductAddPrepare()
      {
         return this.repository.SLEEProductAddPrepare();
      } 
  
      
      [Route("sleeproductaddfieldchange")]
      [HttpPost]
      public Sleeproductfull SLEEProductAddFieldChange(AsslsetupSLEEProductAddFieldChangeRequestAPI AsslsetupSLEEProductAddFieldChangeRequestAPI)
      {
         return this.repository.SLEEProductAddFieldChange(AsslsetupSLEEProductAddFieldChangeRequestAPI);
      } 
  
      
      [Route("sleeproductaddupdate")]
      [HttpPost]
      public Sleeprodlistresults SLEEProductAddUpdate(AsslsetupSLEEProductAddUpdateRequestAPI AsslsetupSLEEProductAddUpdateRequestAPI)
      {
         return this.repository.SLEEProductAddUpdate(AsslsetupSLEEProductAddUpdateRequestAPI);
      } 
  
      
      [Route("sleeproducterrorholdcodes")]
      [HttpPost]
      public IEnumerable<Sleeproderrorholdcd> SLEEProductErrorHoldCodes(Sleeprodlistresults sleeprodlistresults)
      {
         return this.repository.SLEEProductErrorHoldCodes(sleeprodlistresults);
      } 
  
      
      [Route("sleechangestatuscode")]
      [HttpPost]
      public void SLEEChangeStatusCode(Sleechgstatuscode sleechgstatuscode)
      {
         this.repository.SLEEChangeStatusCode(sleechgstatuscode);
      } 
  
      
      [Route("slpricecostmultcopy")]
      [HttpPost]
      public Slpricecostmultcopy SLPriceCostMultCopy(Slpricecostmultcopy slpricecostmultcopy)
      {
         return this.repository.SLPriceCostMultCopy(slpricecostmultcopy);
      } 
  
      
      [Route("slnewitemdefaultscopy")]
      [HttpPost]
      public Slnewitemdefaultscopy SLNewItemDefaultsCopy(Slnewitemdefaultscopy slnewitemdefaultscopy)
      {
         return this.repository.SLNewItemDefaultsCopy(slnewitemdefaultscopy);
      } 
  
      
      [Route("slsiimportdeffix")]
      [HttpPost]
      public Slimportdeffix SLSIImportDefFix(Slimportdeffix slimportdeffix)
      {
         return this.repository.SLSIImportDefFix(slimportdeffix);
      } 
  
      
      [Route("slsigetlastrecno")]
      [HttpGet]
      public int SlsiGetLastRecNo()
      {
         return this.repository.SlsiGetLastRecNo();
      } 
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  