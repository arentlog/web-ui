//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.WT
{  
   using Sxe.WT.Data.Models.PdsContext;
   using Sxe.WT.Data.Models.Pdswtrrarreptlist;
   using Sxe.WT.Data.Models.Pdswtrrarreptheader;
   using Sxe.WT.Data.Models.Pdswtrrarreptdelete;
   using Sxe.WT.Data.Models.Pdswtrrarreptupdate;
   using Sxe.WT.Data.Models.Pdswtrrarreptaddnew;
   using Sxe.WT.Data.Models.Pdswtrrarreptadjmerge;
   using Sxe.WT.Data.Models.Pdswtrrarreptnewreptrun;
   using Sxe.WT.Data.Models.Pdsprintersettings;
   using Sxe.WT.Data.Models.Pdswtrrarreptmergerun;
   using Sxe.WT.Data.Models.Pdsmessaging;
   using Sxe.WT.Data.Models.Pdswtrrarlinedspl;
   using Sxe.WT.Data.Models.Pdswtrrarlinetotals;
   using Sxe.WT.Data.Models.Pdswtrrarlinechange;
   using Sxe.WT.Data.Models.Pdswtrrarlineaccept;
   using Sxe.WT.Data.Models.Pdswtrrarlineextend;
   using Sxe.WT.Data.Models.Pdswtrrarlineadd;
   using Sxe.WT.Data.Models.Pdswtesbuildwtlist;
   using Sxe.WT.Data.Models.Pdswtesdetailline;
   using Sxe.WT.Data.Models.Pdswtesshiptransfer;
   using Sxe.WT.Data.Models.Pdswthdr;
   using Sxe.WT.Data.Models.Pdswtesfinalupdate;
   using Sxe.WT.Data.Models.Pdswteiselectwt;
   using Sxe.WT.Data.Models.Pdswteicancelreceipt;
   using Sxe.WT.Data.Models.Pdswteidetailbanner;
   using Sxe.WT.Data.Models.Pdswteitransferlist;
   using Sxe.WT.Data.Models.Pdswteiupdate;
   using Sxe.WT.Data.Models.Pdswteilinelist;
   using Sxe.WT.Data.Models.Pdswteilineserlotchanges;
   using Sxe.WT.Data.Models.Pdswteilineupdate;
   using Sxe.WT.Data.Models.Pdswteslineserlotchanges;
   using Sxe.WT.Data.Models.Pdswteedetaillogoff;
   using Sxe.WT.Data.Models.Complex;
   using Sxe.WT.Data.Repositories;
    
   [RoutePrefix("api/wt/aswtentry")]
   public partial class AswtentryApiController : ApiControllerBase
   {
      private readonly AswtentryRepository repository;
    
      public AswtentryApiController(AswtentryRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
      
      [Route("wtrrarreportlist")]
      [HttpPost]
      public AswtentryWTRRARReportListResponseAPI WTRRARReportList(Wtrrarreptlistcriteria wtrrarreptlistcriteria)
      {
         return this.repository.WTRRARReportList(wtrrarreptlistcriteria);
      } 
  
      
      [Route("wtrrarreportheaderretrieve/{iReportNo:int}")]
      [HttpGet]
      public Wtrrarreptheader WTRRARReportHeaderRetrieve(int iReportNo)
      {
         return this.repository.WTRRARReportHeaderRetrieve(iReportNo);
      } 
  
      
      [Route("wtrrarreportdelete")]
      [HttpPost]
      public void WTRRARReportDelete(IEnumerable<Wtrrarreptdeleterepts> wtrrarreptdeleterepts)
      {
         this.repository.WTRRARReportDelete(wtrrarreptdeleterepts);
      } 
  
      
      [Route("wtrrarreportupdate")]
      [HttpPost]
      public void WTRRARReportUpdate(Wtrrarreptupdatesingle wtrrarreptupdatesingle)
      {
         this.repository.WTRRARReportUpdate(wtrrarreptupdatesingle);
      } 
  
      
      [Route("wtrrarreportaddnew")]
      [HttpPost]
      public Wtrrarreptaddnew WTRRARReportAddNew(Wtrrarreptaddnew wtrrarreptaddnew)
      {
         return this.repository.WTRRARReportAddNew(wtrrarreptaddnew);
      } 
  
      
      [Route("wtrrarreportadjustmerge")]
      [HttpPost]
      public void WTRRARReportAdjustMerge(IEnumerable<Wtrrarreptadjmergerepts> wtrrarreptadjmergerepts)
      {
         this.repository.WTRRARReportAdjustMerge(wtrrarreptadjmergerepts);
      } 
  
      
      [Route("wtrrarreportnewreptrun")]
      [HttpPost]
      public void WTRRARReportNewReptRun(AswtentryWTRRARReportNewReptRunRequestAPI AswtentryWTRRARReportNewReptRunRequestAPI)
      {
         this.repository.WTRRARReportNewReptRun(AswtentryWTRRARReportNewReptRunRequestAPI);
      } 
  
      
      [Route("wtrrarreportmergerun")]
      [HttpPost]
      public void WTRRARReportMergeRun(AswtentryWTRRARReportMergeRunRequestAPI AswtentryWTRRARReportMergeRunRequestAPI)
      {
         this.repository.WTRRARReportMergeRun(AswtentryWTRRARReportMergeRunRequestAPI);
      } 
  
      
      [Route("wtrrarreportheaderupdate")]
      [HttpPost]
      public IEnumerable<Messaging> WTRRARReportHeaderUpdate(Wtrrarreptheader wtrrarreptheader)
      {
         return this.repository.WTRRARReportHeaderUpdate(wtrrarreptheader);
      } 
  
      
      [Route("wtrrarlinedisplay/{iReportNo:int}")]
      [HttpGet]
      public AswtentryWTRRARLineDisplayResponseAPI WTRRARLineDisplay(int iReportNo)
      {
         return this.repository.WTRRARLineDisplay(iReportNo);
      } 
  
      
      [Route("wtrrarlinechange")]
      [HttpPost]
      public AswtentryWTRRARLineChangeResponseAPI WTRRARLineChange(Wtrrarlinechange wtrrarlinechange)
      {
         return this.repository.WTRRARLineChange(wtrrarlinechange);
      } 
  
      
      [Route("wtrrarlineaccept")]
      [HttpPost]
      public AswtentryWTRRARLineAcceptResponseAPI WTRRARLineAccept(AswtentryWTRRARLineAcceptRequestAPI AswtentryWTRRARLineAcceptRequestAPI)
      {
         return this.repository.WTRRARLineAccept(AswtentryWTRRARLineAcceptRequestAPI);
      } 
  
      
      [Route("wtrrarlineextendretrieve")]
      [HttpPost]
      public Wtrrarlineextend WTRRARLineExtendRetrieve(Wtrrarlineextend wtrrarlineextend)
      {
         return this.repository.WTRRARLineExtendRetrieve(wtrrarlineextend);
      } 
  
      
      [Route("wtrrarlineextendupdate")]
      [HttpPost]
      public Wtrrarlineextend WTRRARLineExtendUpdate(Wtrrarlineextend wtrrarlineextend)
      {
         return this.repository.WTRRARLineExtendUpdate(wtrrarlineextend);
      } 
  
      
      [Route("wtrrarreportcheckdrilldownaccess/{iReportNo:int}")]
      [HttpGet]
      public string WTRRARReportCheckDrilldownAccess(int iReportNo)
      {
         return this.repository.WTRRARReportCheckDrilldownAccess(iReportNo);
      } 
  
      
      [Route("wtrrarlineaddleavefield")]
      [HttpPost]
      public AswtentryWTRRARLineAddLeaveFieldResponseAPI WTRRARLineAddLeaveField(AswtentryWTRRARLineAddLeaveFieldRequestAPI AswtentryWTRRARLineAddLeaveFieldRequestAPI)
      {
         return this.repository.WTRRARLineAddLeaveField(AswtentryWTRRARLineAddLeaveFieldRequestAPI);
      } 
  
      
      [Route("wtrrarlineaddcreate")]
      [HttpPost]
      public AswtentryWTRRARLineAddCreateResponseAPI WTRRARLineAddCreate(Wtrrarlineadd wtrrarlineadd)
      {
         return this.repository.WTRRARLineAddCreate(wtrrarlineadd);
      } 
  
      
      [Route("wtesbuildwtlist")]
      [HttpPost]
      public AswtentryWTESBuildWTListResponseAPI WTESBuildWTList(Wtesbuildwtlistcriteria wtesbuildwtlistcriteria)
      {
         return this.repository.WTESBuildWTList(wtesbuildwtlistcriteria);
      } 
  
      
      [Route("wtesbuildwtlinelist/{pvJournalno:int}/{pvWtno:int}/{pvWtsuf:int}")]
      [HttpGet]
      public IEnumerable<Wtesdetailline> WTESBuildWTLineList(int pvJournalno, int pvWtno, int pvWtsuf)
      {
         return this.repository.WTESBuildWTLineList(pvJournalno, pvWtno, pvWtsuf);
      } 
  
      
      [Route("wtescancelship")]
      [HttpPost]
      public AswtentryWTESCancelShipResponseAPI WTESCancelShip(AswtentryWTESCancelShipRequestAPI AswtentryWTESCancelShipRequestAPI)
      {
         return this.repository.WTESCancelShip(AswtentryWTESCancelShipRequestAPI);
      } 
  
      
      [Route("wtesheaderretrieve/{pvWtno:int}/{pvWtsuf:int}")]
      [HttpGet]
      public Wthdr WTESHeaderRetrieve(int pvWtno, int pvWtsuf)
      {
         return this.repository.WTESHeaderRetrieve(pvWtno, pvWtsuf);
      } 
  
      
      [Route("wtesheaderupdate")]
      [HttpPost]
      public AswtentryWTESHeaderUpdateResponseAPI WTESHeaderUpdate(AswtentryWTESHeaderUpdateRequestAPI AswtentryWTESHeaderUpdateRequestAPI)
      {
         return this.repository.WTESHeaderUpdate(AswtentryWTESHeaderUpdateRequestAPI);
      } 
  
      
      [Route("wtesshiptransfer")]
      [HttpPost]
      public AswtentryWTESShipTransferResponseAPI WTESShipTransfer(AswtentryWTESShipTransferRequestAPI AswtentryWTESShipTransferRequestAPI)
      {
         return this.repository.WTESShipTransfer(AswtentryWTESShipTransferRequestAPI);
      } 
  
      
      [Route("wteslineupdate")]
      [HttpPost]
      public AswtentryWTESLineUpdateResponseAPI WTESLineUpdate(AswtentryWTESLineUpdateRequestAPI AswtentryWTESLineUpdateRequestAPI)
      {
         return this.repository.WTESLineUpdate(AswtentryWTESLineUpdateRequestAPI);
      } 
  
      
      [Route("wtesfinalupdate/{iJournalno:int}")]
      [HttpGet]
      public AswtentryWTESFinalUpdateResponseAPI WTESFinalUpdate(int iJournalno)
      {
         return this.repository.WTESFinalUpdate(iJournalno);
      } 
  
      
      [Route("wtesdetaillogoff/{iWTno:int}/{iWTsuf:int}/{iJrnlNo:int}")]
      [HttpGet]
      public IEnumerable<Messaging> WTESDetailLogOff(int iWTno, int iWTsuf, int iJrnlNo)
      {
         return this.repository.WTESDetailLogOff(iWTno, iWTsuf, iJrnlNo);
      } 
  
      
      [Route("wteiallowdetailaccess")]
      [HttpPost]
      public Wteiselectwt WTEIAllowDetailAccess(Wteiselectwt wteiselectwt)
      {
         return this.repository.WTEIAllowDetailAccess(wteiselectwt);
      } 
  
      
      [Route("wteicheckaccess/{iWTno:int}/{iWTsuf:int}")]
      [HttpGet]
      public Wteiselectwt WTEICheckAccess(int iWTno, int iWTsuf)
      {
         return this.repository.WTEICheckAccess(iWTno, iWTsuf);
      } 
  
      
      [Route("wteicancelreceipt")]
      [HttpPost]
      public AswtentryWTEICancelReceiptResponseAPI WTEICancelReceipt(AswtentryWTEICancelReceiptRequestAPI AswtentryWTEICancelReceiptRequestAPI)
      {
         return this.repository.WTEICancelReceipt(AswtentryWTEICancelReceiptRequestAPI);
      } 
  
      
      [Route("wteidetailbanner/{iWTno:int}/{iWTsuf:int}/{iJrnlNo:int}")]
      [HttpGet]
      public Wteidetailbanner WTEIDetailBanner(int iWTno, int iWTsuf, int iJrnlNo)
      {
         return this.repository.WTEIDetailBanner(iWTno, iWTsuf, iJrnlNo);
      } 
  
      
      [Route("wteidetaillogoff/{iWTno:int}/{iWTsuf:int}/{iJrnlNo:int}")]
      [HttpGet]
      public void WTEIDetailLogOff(int iWTno, int iWTsuf, int iJrnlNo)
      {
         this.repository.WTEIDetailLogOff(iWTno, iWTsuf, iJrnlNo);
      } 
  
      
      [Route("wteifullreceipt")]
      [HttpPost]
      public AswtentryWTEIFullReceiptResponseAPI WTEIFullReceipt(IEnumerable<Wteiselectwt> wteiselectwt)
      {
         return this.repository.WTEIFullReceipt(wteiselectwt);
      } 
  
      
      [Route("wteitransferlist")]
      [HttpPost]
      public AswtentryWTEITransferListResponseAPI WTEITransferList(Wteireceivelistcriteria wteireceivelistcriteria)
      {
         return this.repository.WTEITransferList(wteireceivelistcriteria);
      } 
  
      
      [Route("wteiupdateinit/{iJrnlNo:int}/{cWhse}")]
      [HttpGet]
      public Wteiupdate WTEIUpdateInit(int iJrnlNo, string cWhse)
      {
         return this.repository.WTEIUpdateInit(iJrnlNo, cWhse);
      } 
  
      
      [Route("wteiupdatefinal")]
      [HttpPost]
      public IEnumerable<Messaging> WTEIUpdateFinal(Wteiupdate wteiupdate)
      {
         return this.repository.WTEIUpdateFinal(wteiupdate);
      } 
  
      
      [Route("wteilinelist/{iWTno:int}/{iWTsuf:int}/{iJrnlNo:int}")]
      [HttpGet]
      public IEnumerable<Wteilinelist> WTEILineList(int iWTno, int iWTsuf, int iJrnlNo)
      {
         return this.repository.WTEILineList(iWTno, iWTsuf, iJrnlNo);
      } 
  
      
      [Route("wteilinegetseriallotchanges/{iWTno:int}/{iWTsuf:int}/{iJrnlNo:int}/{iLineNo:int}")]
      [HttpGet]
      public Wteilineserlotchanges WTEILineGetSerialLotChanges(int iWTno, int iWTsuf, int iJrnlNo, int iLineNo)
      {
         return this.repository.WTEILineGetSerialLotChanges(iWTno, iWTsuf, iJrnlNo, iLineNo);
      } 
  
      
      [Route("wteilineextendupdate")]
      [HttpPost]
      public AswtentryWTEILineExtendUpdateResponseAPI WTEILineExtendUpdate(Wteilineupdate wteilineupdate)
      {
         return this.repository.WTEILineExtendUpdate(wteilineupdate);
      } 
  
      
      [Route("wteilineupdate")]
      [HttpPost]
      public string WTEILineUpdate(Wteilineupdate wteilineupdate)
      {
         return this.repository.WTEILineUpdate(wteilineupdate);
      } 
  
      
      [Route("wtesdetaillinecheckserlot")]
      [HttpPost]
      public AswtentryWTESDetailLineCheckSerLotResponseAPI WTESDetailLineCheckSerLot(AswtentryWTESDetailLineCheckSerLotRequestAPI AswtentryWTESDetailLineCheckSerLotRequestAPI)
      {
         return this.repository.WTESDetailLineCheckSerLot(AswtentryWTESDetailLineCheckSerLotRequestAPI);
      } 
  
      
      [Route("wteidetaillinecheckserlot")]
      [HttpGet]
      public AswtentryWTEIDetailLineCheckSerLotResponseAPI WTEIDetailLineCheckSerLot(int iWtno, int iWtsuf, int iLineno, string cSerlottype, bool lIcsnpofl, decimal dStkqtyrcv, bool lIsFromMenu)
      {
         return this.repository.WTEIDetailLineCheckSerLot(iWtno, iWtsuf, iLineno, cSerlottype, lIcsnpofl, dStkqtyrcv, lIsFromMenu);
      } 
  
      
      [Route("wteslinegetseriallotchanges/{iWTno:int}/{iWTsuf:int}/{iLineNo:int}")]
      [HttpGet]
      public Wteslineserlotchanges WTESLineGetSerialLotChanges(int iWTno, int iWTsuf, int iLineNo)
      {
         return this.repository.WTESLineGetSerialLotChanges(iWTno, iWTsuf, iLineNo);
      } 
  
      
      [Route("wteedetaillogoff")]
      [HttpPost]
      public void WTEEDetailLogOff(Wteedetaillogoff wteedetaillogoff)
      {
         this.repository.WTEEDetailLogOff(wteedetaillogoff);
      } 
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  