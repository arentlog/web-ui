//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.PD
{  
   using Sxe.PD.Data.Models.PdsContext;
   using Sxe.PD.Data.Models.Pdspder;
   using Sxe.PD.Data.Repositories;
    
   [RoutePrefix("api/pd/pder")]
   public partial class PderApiController : ApiControllerBase
   {
      private readonly PderRepository repository;
    
      public PderApiController(PderRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
    
      [HttpGet]
      [Route("getbyrowid/{rowid:maxLength(30)}")]
      public Pder GetByRowId(string rowid, string fldlist = "")
      {
         if (string.IsNullOrEmpty(rowid))
         {
            return null;
         }
         return this.repository.GetByRowId(rowid, fldlist);
      }
      
      [HttpPost]
      [Route("listbyrowids")]      
      public IEnumerable<Pder> GetListByRowIdList(List<string> rowids, string fldlist = "")
      {
         if (rowids == null || rowids.Count == 0)
         {
            return new List<Pder>();
         }
         return this.repository.GetListByRowIdList(rowids, rowids.Count, fldlist);
      }
        
      [HttpGet]
      [Route("")]
      public IEnumerable<Pder> GetListAllByCono(int batchsize = 0, string fldlist = "")
      {  
         return this.repository.GetListAllByCono(0, batchsize, fldlist);
      }
      [HttpGet]
      [Route("getbypk")]
      public Pder Get(int orderno = 0, int ordersuf = 0, int lineno = 0, int seqno = 0, string rebatecd = "", int pdersuf = 0, string fldlist = "")
      {
         return this.repository.Get(0, orderno, ordersuf, lineno, seqno, rebatecd, pdersuf, 1, fldlist);
      }
        
      [HttpGet]
      [Route("existsbypk")]
      public bool Exists(int orderno = 0, int ordersuf = 0, int lineno = 0, int seqno = 0, string rebatecd = "", int pdersuf = 0)
      {
         return (this.repository.Get(0, orderno, ordersuf, lineno, seqno, rebatecd, pdersuf, 1, string.Empty) != null);
      }

      [HttpGet]
      [Route("existsbyrowid/{rowid:maxLength(30)}")]
      public bool ExistsByRowId(string rowid)
      {
         if (string.IsNullOrEmpty(rowid))
         {
            return false;
         }
         return (this.repository.GetByRowId(rowid, string.Empty) != null);
      }
	  

      [HttpGet]
      [Route("listbycommexcpty")]
      public IEnumerable<Pder> GetListByCommexcpty(string commexcpty = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCommexcpty(0, commexcpty, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycontractno")]
      public IEnumerable<Pder> GetListByContractno(string statustype = "", string rebatecd = "", decimal vendno = 0, string contractno = "", decimal custno = 0,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByContractno(0, statustype, rebatecd, vendno, contractno, custno, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycustno")]
      public IEnumerable<Pder> GetListByCustno(string statustype = "", string rebatecd = "", decimal custno = 0, string shipto = "", decimal vendno = 0,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCustno(0, statustype, rebatecd, custno, shipto, vendno, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyintclaimno")]
      public IEnumerable<Pder> GetListByIntclaimno(int intclaimno = 0, string statustype = "", string contractno = "", int orderno = 0, int ordersuf = 0, int lineno = 0,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByIntclaimno(0, intclaimno, statustype, contractno, orderno, ordersuf, lineno, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyjrnlno")]
      public IEnumerable<Pder> GetListByJrnlno(int jrnlno = 0, int setno = 0,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByJrnlno(0, jrnlno, setno, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyrebrecno")]
      public IEnumerable<Pder> GetListByRebrecno(decimal rebrecno = 0, string statustype = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByRebrecno(0, rebrecno, statustype, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbytransdttmz")]
      public IEnumerable<Pder> GetListByTransdttmz(DateTime? transdttmz = null,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByTransdttmz(transdttmz, batchsize, fldlist);
      }

      [HttpPost]
      [Route("")]
      public Pder Insert(Pder record)
      {
         return this.repository.Insert(record);
      }
      
      [HttpPut]
      [Route("")]
      public Pder Update(Pder record)
      {
         return this.repository.Update(record);
      }
      
      [HttpDelete]
      [Route("")]
      public void Delete(Pder record)
      {
         this.repository.Delete(record);
      }
  
      [HttpDelete]
      [Route("deletelistbyrowids")]
      public void DeleteListByRowIds(List<string> rowIds)
      {
         if (rowIds == null || rowIds.Count == 0)
         {
            return;
         }
         this.repository.DeleteListByRowIds(rowIds);
      }
	  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  