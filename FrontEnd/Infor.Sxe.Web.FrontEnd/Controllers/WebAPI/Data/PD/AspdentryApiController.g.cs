//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.PD
{  
   using Sxe.PD.Data.Models.PdsContext;
   using Sxe.PD.Data.Models.Pdspdevgetprod;
   using Sxe.PD.Data.Models.Pdspdevloadcosts;
   using Sxe.PD.Data.Models.Pdspdevupdatecosts;
   using Sxe.PD.Data.Models.Pdspdecgetproduct;
   using Sxe.PD.Data.Models.Pdspdecgetpricecost;
   using Sxe.PD.Data.Models.Pdspdecupdpricecost;
   using Sxe.PD.Data.Models.Pdspdeminitialload;
   using Sxe.PD.Data.Models.Pdspdeminitializepdsc1;
   using Sxe.PD.Data.Models.Pdspdemloadpdsc1;
   using Sxe.PD.Data.Models.Pdsmessaging;
   using Sxe.PD.Data.Models.Pdspdemgridupdatepdsc1;
   using Sxe.PD.Data.Models.Pdspdeminitializepdsc2;
   using Sxe.PD.Data.Models.Pdspdemloadpdsc2;
   using Sxe.PD.Data.Models.Pdspdeminitializepdsc3;
   using Sxe.PD.Data.Models.Pdspdemloadpdsc3;
   using Sxe.PD.Data.Models.Pdspdeminitializepdsr;
   using Sxe.PD.Data.Models.Pdspdemloadpdsr;
   using Sxe.PD.Data.Models.Pdspdemgridupdatepdsr;
   using Sxe.PD.Data.Models.Pdspdemupdaterptinit;
   using Sxe.PD.Data.Models.Pdspdemupdaterptok;
   using Sxe.PD.Data.Models.Pdsprintersettings;
   using Sxe.PD.Data.Models.Pdspdemdeletefromset;
   using Sxe.PD.Data.Models.Pdspdemimportexcelerrors;
   using Sxe.PD.Data.Models.Pdspdemexcelimportnewinit;
   using Sxe.PD.Data.Models.Pdspdemexcelimportonchgrcrdty;
   using Sxe.PD.Data.Models.Pdspdemexcelimportnew;
   using Sxe.PD.Data.Models.Pdspdemexcelnewsetupdtc;
   using Sxe.PD.Data.Models.Pdspdemexcelnewsetupdtr;
   using Sxe.PD.Data.Models.Pdspdemimportnewfile;
   using Sxe.PD.Data.Models.Pdspdemlookup;
   using Sxe.PD.Data.Models.Pdspderclaimtotal;
   using Sxe.PD.Data.Models.Pdspderlockclaim;
   using Sxe.PD.Data.Models.Pdspdergetclaim;
   using Sxe.PD.Data.Models.Pdspdergetreceipt;
   using Sxe.PD.Data.Models.Pdspdergetitem;
   using Sxe.PD.Data.Models.Pdspderinitreceipt;
   using Sxe.PD.Data.Models.Pdspderaddreceipt;
   using Sxe.PD.Data.Models.Pdspderupdatereceipt;
   using Sxe.PD.Data.Models.Pdspderupdateitem;
   using Sxe.PD.Data.Models.Pdspderfinaledit;
   using Sxe.PD.Data.Models.Pdspderfinalupdate;
   using Sxe.PD.Data.Models.Pdsgleta;
   using Sxe.PD.Data.Models.Pdspdemcolumncalculator;
   using Sxe.PD.Data.Models.Pdspdemnewset;
   using Sxe.PD.Data.Models.Pdspderreceiptvat;
   using Sxe.PD.Data.Models.Complex;
   using Sxe.PD.Data.Repositories;
    
   [RoutePrefix("api/pd/aspdentry")]
   public partial class AspdentryApiController : ApiControllerBase
   {
      private readonly AspdentryRepository repository;
    
      public AspdentryApiController(AspdentryRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
      
      [Route("pdevgetprod")]
      [HttpPost]
      public Pdevgetprod PDEVGetProd(Pdevgetprod pdevgetprod)
      {
         return this.repository.PDEVGetProd(pdevgetprod);
      } 
  
      
      [Route("pdevloadcosts")]
      [HttpPost]
      public Pdevloadcosts PDEVLoadCosts(Pdevloadcosts pdevloadcosts)
      {
         return this.repository.PDEVLoadCosts(pdevloadcosts);
      } 
  
      
      [Route("pdevupdatecosts")]
      [HttpPost]
      public IEnumerable<Pdevupdatecostsresults> PDEVUpdateCosts(Pdevupdatecostscriteria pdevupdatecostscriteria)
      {
         return this.repository.PDEVUpdateCosts(pdevupdatecostscriteria);
      } 
  
      
      [Route("pdecgetproduct")]
      [HttpPost]
      public IEnumerable<Pdecgetproductresults> PDECGetProduct(Pdecgetproductcriteria pdecgetproductcriteria)
      {
         return this.repository.PDECGetProduct(pdecgetproductcriteria);
      } 
  
      
      [Route("pdecgetpricecost")]
      [HttpPost]
      public Pdecgetpricecostresults PDECGetPriceCost(Pdecgetpricecostcriteria pdecgetpricecostcriteria)
      {
         return this.repository.PDECGetPriceCost(pdecgetpricecostcriteria);
      } 
  
      
      [Route("pdecupdatepricecost")]
      [HttpPost]
      public IEnumerable<Pdecupdpricecostresults> PDECUpdatePriceCost(Pdecupdpricecostcriteria pdecupdpricecostcriteria)
      {
         return this.repository.PDECUpdatePriceCost(pdecupdpricecostcriteria);
      } 
  
      
      [Route("pdeminitialload")]
      [HttpPost]
      public Pdeminitialloadresults PDEMInitialLoad(Pdeminitialloadcriteria pdeminitialloadcriteria)
      {
         return this.repository.PDEMInitialLoad(pdeminitialloadcriteria);
      } 
  
      
      [Route("pdeminitializepdsc1/{cSetID}")]
      [HttpGet]
      public Pdeminitializepdsc1 PDEMInitializePDSC1(string cSetID)
      {
         return this.repository.PDEMInitializePDSC1(cSetID);
      } 
  
      
      [Route("pdemloadpdsc1")]
      [HttpPost]
      public AspdentryPDEMLoadPDSC1ResponseAPI PDEMLoadPDSC1(AspdentryPDEMLoadPDSC1RequestAPI AspdentryPDEMLoadPDSC1RequestAPI)
      {
         return this.repository.PDEMLoadPDSC1(AspdentryPDEMLoadPDSC1RequestAPI);
      } 
  
      
      [Route("pdemupdatevalpdsc1")]
      [HttpPost]
      public AspdentryPDEMUpdateValPDSC1ResponseAPI PDEMUpdateValPDSC1(Pdemloadpdsc1criteria pdemloadpdsc1criteria)
      {
         return this.repository.PDEMUpdateValPDSC1(pdemloadpdsc1criteria);
      } 
  
      
      [Route("pdemgridupdatepdsc1")]
      [HttpPost]
      public IEnumerable<Messaging> PDEMGridUpdatePDSC1(AspdentryPDEMGridUpdatePDSC1RequestAPI AspdentryPDEMGridUpdatePDSC1RequestAPI)
      {
         return this.repository.PDEMGridUpdatePDSC1(AspdentryPDEMGridUpdatePDSC1RequestAPI);
      } 
  
      
      [Route("pdeminitializepdsc2/{cSetID}")]
      [HttpGet]
      public Pdeminitializepdsc2 PDEMInitializePDSC2(string cSetID)
      {
         return this.repository.PDEMInitializePDSC2(cSetID);
      } 
  
      
      [Route("pdemloadpdsc2")]
      [HttpPost]
      public AspdentryPDEMLoadPDSC2ResponseAPI PDEMLoadPDSC2(AspdentryPDEMLoadPDSC2RequestAPI AspdentryPDEMLoadPDSC2RequestAPI)
      {
         return this.repository.PDEMLoadPDSC2(AspdentryPDEMLoadPDSC2RequestAPI);
      } 
  
      
      [Route("pdemupdatevalpdsc2")]
      [HttpPost]
      public AspdentryPDEMUpdateValPDSC2ResponseAPI PDEMUpdateValPDSC2(Pdemloadpdsc2criteria pdemloadpdsc2criteria)
      {
         return this.repository.PDEMUpdateValPDSC2(pdemloadpdsc2criteria);
      } 
  
      
      [Route("pdemgridupdatepdsc2")]
      [HttpPost]
      public IEnumerable<Messaging> PDEMGridUpdatePDSC2(AspdentryPDEMGridUpdatePDSC2RequestAPI AspdentryPDEMGridUpdatePDSC2RequestAPI)
      {
         return this.repository.PDEMGridUpdatePDSC2(AspdentryPDEMGridUpdatePDSC2RequestAPI);
      } 
  
      
      [Route("pdeminitializepdsc3/{cSetID}")]
      [HttpGet]
      public Pdeminitializepdsc3 PDEMInitializePDSC3(string cSetID)
      {
         return this.repository.PDEMInitializePDSC3(cSetID);
      } 
  
      
      [Route("pdemloadpdsc3")]
      [HttpPost]
      public AspdentryPDEMLoadPDSC3ResponseAPI PDEMLoadPDSC3(AspdentryPDEMLoadPDSC3RequestAPI AspdentryPDEMLoadPDSC3RequestAPI)
      {
         return this.repository.PDEMLoadPDSC3(AspdentryPDEMLoadPDSC3RequestAPI);
      } 
  
      
      [Route("pdemupdatevalpdsc3")]
      [HttpPost]
      public AspdentryPDEMUpdateValPDSC3ResponseAPI PDEMUpdateValPDSC3(Pdemloadpdsc3criteria pdemloadpdsc3criteria)
      {
         return this.repository.PDEMUpdateValPDSC3(pdemloadpdsc3criteria);
      } 
  
      
      [Route("pdemgridupdatepdsc3")]
      [HttpPost]
      public IEnumerable<Messaging> PDEMGridUpdatePDSC3(AspdentryPDEMGridUpdatePDSC3RequestAPI AspdentryPDEMGridUpdatePDSC3RequestAPI)
      {
         return this.repository.PDEMGridUpdatePDSC3(AspdentryPDEMGridUpdatePDSC3RequestAPI);
      } 
  
      
      [Route("pdeminitializepdsr/{cSetID}")]
      [HttpGet]
      public Pdeminitializepdsr PDEMInitializePDSR(string cSetID)
      {
         return this.repository.PDEMInitializePDSR(cSetID);
      } 
  
      
      [Route("pdemloadpdsr")]
      [HttpPost]
      public AspdentryPDEMLoadPDSRResponseAPI PDEMLoadPDSR(AspdentryPDEMLoadPDSRRequestAPI AspdentryPDEMLoadPDSRRequestAPI)
      {
         return this.repository.PDEMLoadPDSR(AspdentryPDEMLoadPDSRRequestAPI);
      } 
  
      
      [Route("pdemupdatevalpdsr")]
      [HttpPost]
      public AspdentryPDEMUpdateValPDSRResponseAPI PDEMUpdateValPDSR(Pdemloadpdsrcriteria pdemloadpdsrcriteria)
      {
         return this.repository.PDEMUpdateValPDSR(pdemloadpdsrcriteria);
      } 
  
      
      [Route("pdemgridupdatepdsr")]
      [HttpPost]
      public IEnumerable<Messaging> PDEMGridUpdatePDSR(AspdentryPDEMGridUpdatePDSRRequestAPI AspdentryPDEMGridUpdatePDSRRequestAPI)
      {
         return this.repository.PDEMGridUpdatePDSR(AspdentryPDEMGridUpdatePDSRRequestAPI);
      } 
  
      
      [Route("pdemupdaterptinit/{cSetID}")]
      [HttpGet]
      public Pdemupdaterptinit PDEMUpdateRptInit(string cSetID)
      {
         return this.repository.PDEMUpdateRptInit(cSetID);
      } 
  
      
      [Route("pdemupdaterptok")]
      [HttpPost]
      public void PDEMUpdateRptOK(AspdentryPDEMUpdateRptOKRequestAPI AspdentryPDEMUpdateRptOKRequestAPI)
      {
         this.repository.PDEMUpdateRptOK(AspdentryPDEMUpdateRptOKRequestAPI);
      } 
  
      
      [Route("pdemdeletefromset")]
      [HttpPost]
      public void PDEMDeleteFromSet(IEnumerable<Pdemdeletefromset> pdemdeletefromset)
      {
         this.repository.PDEMDeleteFromSet(pdemdeletefromset);
      } 
  
      
      [Route("pdemexcelimportupdtpdsc1")]
      [HttpPost]
      public AspdentryPDEMExcelImportUpdtPDSC1ResponseAPI PDEMExcelImportUpdtPDSC1(AspdentryPDEMExcelImportUpdtPDSC1RequestAPI AspdentryPDEMExcelImportUpdtPDSC1RequestAPI)
      {
         return this.repository.PDEMExcelImportUpdtPDSC1(AspdentryPDEMExcelImportUpdtPDSC1RequestAPI);
      } 
  
      
      [Route("pdemexcelimportupdtpdsc2")]
      [HttpPost]
      public AspdentryPDEMExcelImportUpdtPDSC2ResponseAPI PDEMExcelImportUpdtPDSC2(AspdentryPDEMExcelImportUpdtPDSC2RequestAPI AspdentryPDEMExcelImportUpdtPDSC2RequestAPI)
      {
         return this.repository.PDEMExcelImportUpdtPDSC2(AspdentryPDEMExcelImportUpdtPDSC2RequestAPI);
      } 
  
      
      [Route("pdemexcelimportupdtpdsc3")]
      [HttpPost]
      public AspdentryPDEMExcelImportUpdtPDSC3ResponseAPI PDEMExcelImportUpdtPDSC3(AspdentryPDEMExcelImportUpdtPDSC3RequestAPI AspdentryPDEMExcelImportUpdtPDSC3RequestAPI)
      {
         return this.repository.PDEMExcelImportUpdtPDSC3(AspdentryPDEMExcelImportUpdtPDSC3RequestAPI);
      } 
  
      
      [Route("pdemexcelimportupdtpdsr")]
      [HttpPost]
      public AspdentryPDEMExcelImportUpdtPDSRResponseAPI PDEMExcelImportUpdtPDSR(AspdentryPDEMExcelImportUpdtPDSRRequestAPI AspdentryPDEMExcelImportUpdtPDSRRequestAPI)
      {
         return this.repository.PDEMExcelImportUpdtPDSR(AspdentryPDEMExcelImportUpdtPDSRRequestAPI);
      } 
  
      
      [Route("pdemexcelimportnewinit")]
      [HttpGet]
      public AspdentryPDEMExcelImportNewInitResponseAPI PDEMExcelImportNewInit()
      {
         return this.repository.PDEMExcelImportNewInit();
      } 
  
      
      [Route("pdemexcelimportonchgrcrdty/{cRecordType}")]
      [HttpGet]
      public Pdemexcelimportonchgrcrdty PDEMExcelImportOnChgRcrdTy(string cRecordType)
      {
         return this.repository.PDEMExcelImportOnChgRcrdTy(cRecordType);
      } 
  
      
      [Route("pdemexcelimportaddnewset")]
      [HttpPost]
      public Pdemexcelimportnewsingle PDEMExcelImportAddNewSet(Pdemexcelimportnewcriteria pdemexcelimportnewcriteria)
      {
         return this.repository.PDEMExcelImportAddNewSet(pdemexcelimportnewcriteria);
      } 
  
      
      [Route("pdemexcelnewsetupdtcinit/{cRecordType}")]
      [HttpGet]
      public Pdemexcelnewsetupdtcinit PDEMExcelNewSetUpdtCInit(string cRecordType)
      {
         return this.repository.PDEMExcelNewSetUpdtCInit(cRecordType);
      } 
  
      
      [Route("pdemexcelnewsetupdtcadd")]
      [HttpPost]
      public AspdentryPDEMExcelNewSetUpdtCAddResponseAPI PDEMExcelNewSetUpdtCAdd(AspdentryPDEMExcelNewSetUpdtCAddRequestAPI AspdentryPDEMExcelNewSetUpdtCAddRequestAPI)
      {
         return this.repository.PDEMExcelNewSetUpdtCAdd(AspdentryPDEMExcelNewSetUpdtCAddRequestAPI);
      } 
  
      
      [Route("pdemexcelnewsetupdtradd")]
      [HttpPost]
      public AspdentryPDEMExcelNewSetUpdtRAddResponseAPI PDEMExcelNewSetUpdtRAdd(AspdentryPDEMExcelNewSetUpdtRAddRequestAPI AspdentryPDEMExcelNewSetUpdtRAddRequestAPI)
      {
         return this.repository.PDEMExcelNewSetUpdtRAdd(AspdentryPDEMExcelNewSetUpdtRAddRequestAPI);
      } 
  
      
      [Route("pdemexcelimportnewok")]
      [HttpPost]
      public AspdentryPDEMExcelImportNewOkResponseAPI PDEMExcelImportNewOk(AspdentryPDEMExcelImportNewOkRequestAPI AspdentryPDEMExcelImportNewOkRequestAPI)
      {
         return this.repository.PDEMExcelImportNewOk(AspdentryPDEMExcelImportNewOkRequestAPI);
      } 
  
      
      [Route("pdemlookupsearch")]
      [HttpPost]
      public AspdentryPDEMLookupSearchResponseAPI PDEMLookupSearch(Pdemlookupcriteria pdemlookupcriteria)
      {
         return this.repository.PDEMLookupSearch(pdemlookupcriteria);
      } 
  
      
      [Route("pdemlookupsourcetypes")]
      [HttpGet]
      public AspdentryPDEMLookupSourceTypesResponseAPI PDEMLookupSourceTypes()
      {
         return this.repository.PDEMLookupSourceTypes();
      } 
  
      
      [Route("pderclaimtotal")]
      [HttpPost]
      public IEnumerable<Pderclaimtotalresults> PDERClaimTotal(Pderclaimtotalcriteria pderclaimtotalcriteria)
      {
         return this.repository.PDERClaimTotal(pderclaimtotalcriteria);
      } 
  
      
      [Route("pderlockclaim")]
      [HttpPost]
      public void PDERLockClaim(Pderlockclaim pderlockclaim)
      {
         this.repository.PDERLockClaim(pderlockclaim);
      } 
  
      
      [Route("pderunlockclaim")]
      [HttpPost]
      public void PDERUnlockClaim(Pderlockclaim pderlockclaim)
      {
         this.repository.PDERUnlockClaim(pderlockclaim);
      } 
  
      
      [Route("pdergetclaim")]
      [HttpPost]
      public AspdentryPDERGetClaimResponseAPI PDERGetClaim(Pdergetclaimcriteria pdergetclaimcriteria)
      {
         return this.repository.PDERGetClaim(pdergetclaimcriteria);
      } 
  
      
      [Route("pdergetreceipt")]
      [HttpPost]
      public AspdentryPDERGetReceiptResponseAPI PDERGetReceipt(Pdergetreceiptcriteria pdergetreceiptcriteria)
      {
         return this.repository.PDERGetReceipt(pdergetreceiptcriteria);
      } 
  
      
      [Route("pdergetitem")]
      [HttpPost]
      public AspdentryPDERGetItemResponseAPI PDERGetItem(Pdergetitemcriteria pdergetitemcriteria)
      {
         return this.repository.PDERGetItem(pdergetitemcriteria);
      } 
  
      
      [Route("pderinitreceipt")]
      [HttpPost]
      public Pderinitreceiptresults PDERInitReceipt(Pderinitreceiptcriteria pderinitreceiptcriteria)
      {
         return this.repository.PDERInitReceipt(pderinitreceiptcriteria);
      } 
  
      
      [Route("pderaddreceipt")]
      [HttpPost]
      public string PDERAddReceipt(Pderaddreceipt pderaddreceipt)
      {
         return this.repository.PDERAddReceipt(pderaddreceipt);
      } 
  
      
      [Route("pderupdatereceipt")]
      [HttpPost]
      public void PDERUpdateReceipt(Pderupdatereceipt pderupdatereceipt)
      {
         this.repository.PDERUpdateReceipt(pderupdatereceipt);
      } 
  
      
      [Route("pderupdateitem")]
      [HttpPost]
      public void PDERUpdateItem(Pderupdateitem pderupdateitem)
      {
         this.repository.PDERUpdateItem(pderupdateitem);
      } 
  
      
      [Route("pderfinaledit")]
      [HttpPost]
      public AspdentryPDERFinalEditResponseAPI PDERFinalEdit(Pderfinaleditcriteria pderfinaleditcriteria)
      {
         return this.repository.PDERFinalEdit(pderfinaleditcriteria);
      } 
  
      
      [Route("pderfinalupdate")]
      [HttpPost]
      public void PDERFinalUpdate(AspdentryPDERFinalUpdateRequestAPI AspdentryPDERFinalUpdateRequestAPI)
      {
         this.repository.PDERFinalUpdate(AspdentryPDERFinalUpdateRequestAPI);
      } 
  
      
      [Route("pdemcolumncalculatorvalidate")]
      [HttpPost]
      public Pdemcolumncalculator PDEMColumnCalculatorValidate(Pdemcolumncalculator pdemcolumncalculator)
      {
         return this.repository.PDEMColumnCalculatorValidate(pdemcolumncalculator);
      } 
  
      
      [Route("pdemnewsetinitialize")]
      [HttpPost]
      public AspdentryPDEMNewSetInitializeResponseAPI PDEMNewSetInitialize(AspdentryPDEMNewSetInitializeRequestAPI AspdentryPDEMNewSetInitializeRequestAPI)
      {
         return this.repository.PDEMNewSetInitialize(AspdentryPDEMNewSetInitializeRequestAPI);
      } 
  
      
      [Route("pdemnewsetvalidate")]
      [HttpPost]
      public AspdentryPDEMNewSetValidateResponseAPI PDEMNewSetValidate(AspdentryPDEMNewSetValidateRequestAPI AspdentryPDEMNewSetValidateRequestAPI)
      {
         return this.repository.PDEMNewSetValidate(AspdentryPDEMNewSetValidateRequestAPI);
      } 
  
      
      [Route("pdemnewsetfinal")]
      [HttpPost]
      public void PDEMNewSetFinal(AspdentryPDEMNewSetFinalRequestAPI AspdentryPDEMNewSetFinalRequestAPI)
      {
         this.repository.PDEMNewSetFinal(AspdentryPDEMNewSetFinalRequestAPI);
      } 
  
      
      [Route("pderdeltemprcpt")]
      [HttpPost]
      public void PDERDeltemprcpt(AspdentryPDERDeltemprcptRequestAPI AspdentryPDERDeltemprcptRequestAPI)
      {
         this.repository.PDERDeltemprcpt(AspdentryPDERDeltemprcptRequestAPI);
      } 
  
      
      [Route("pdervatprocessing")]
      [HttpPost]
      public Pderreceiptvat PDERVatProcessing(Pderreceiptvat pderreceiptvat)
      {
         return this.repository.PDERVatProcessing(pderreceiptvat);
      } 
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  