//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.SW
{  
   using Sxe.SW.Data.Models.PdsContext;
   using Sxe.SW.Data.Models.Pdsswelj;
   using Sxe.SW.Data.Repositories;
    
   [RoutePrefix("api/sw/swelj")]
   public partial class SweljApiController : ApiControllerBase
   {
      private readonly SweljRepository repository;
    
      public SweljApiController(SweljRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
    
      [HttpGet]
      [Route("getbyrowid/{rowid:maxLength(30)}")]
      public Swelj GetByRowId(string rowid, string fldlist = "")
      {
         if (string.IsNullOrEmpty(rowid))
         {
            return null;
         }
         return this.repository.GetByRowId(rowid, fldlist);
      }
      
      [HttpPost]
      [Route("listbyrowids")]      
      public IEnumerable<Swelj> GetListByRowIdList(List<string> rowids, string fldlist = "")
      {
         if (rowids == null || rowids.Count == 0)
         {
            return new List<Swelj>();
         }
         return this.repository.GetListByRowIdList(rowids, rowids.Count, fldlist);
      }
        
      [HttpGet]
      [Route("")]
      public IEnumerable<Swelj> GetListAllByCono(int batchsize = 0, string fldlist = "")
      {  
         return this.repository.GetListAllByCono(0, batchsize, fldlist);
      }
      [HttpGet]
      [Route("getbypk")]
      public Swelj Get(string origtech = "", DateTime? systemindt = null, string systemintm = "", int seqno = 0, int transseqno = 0, string fldlist = "")
      {
         return this.repository.Get(0, origtech, systemindt, systemintm, seqno, transseqno, 1, fldlist);
      }
        
      [HttpGet]
      [Route("existsbypk")]
      public bool Exists(string origtech = "", DateTime? systemindt = null, string systemintm = "", int seqno = 0, int transseqno = 0)
      {
         return (this.repository.Get(0, origtech, systemindt, systemintm, seqno, transseqno, 1, string.Empty) != null);
      }

      [HttpGet]
      [Route("existsbyrowid/{rowid:maxLength(30)}")]
      public bool ExistsByRowId(string rowid)
      {
         if (string.IsNullOrEmpty(rowid))
         {
            return false;
         }
         return (this.repository.GetByRowId(rowid, string.Empty) != null);
      }
	  

      [HttpGet]
      [Route("listbyemptype")]
      public IEnumerable<Swelj> GetListByEmptype(bool activefl = false, string emptype = "", int repairordno = 0, int repairordsuf = 0,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByEmptype(0, activefl, emptype, repairordno, repairordsuf, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyinwhse")]
      public IEnumerable<Swelj> GetListByInwhse(bool activefl = false, DateTime? indt = null, string whse = "", string tech = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByInwhse(0, activefl, indt, whse, tech, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyschedopt")]
      public IEnumerable<Swelj> GetListBySchedopt(bool activefl = false, string schedopttype = "", DateTime? indt = null,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListBySchedopt(0, activefl, schedopttype, indt, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbysro")]
      public IEnumerable<Swelj> GetListBySro(bool activefl = false, int repairordno = 0, int repairordsuf = 0, int lineno = 0, DateTime? indt = null, string intm = "", string tech = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListBySro(0, activefl, repairordno, repairordsuf, lineno, indt, intm, tech, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbysroclose")]
      public IEnumerable<Swelj> GetListBySroclose(bool activefl = false, int repairordno = 0, int repairordsuf = 0, bool closedfl = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListBySroclose(0, activefl, repairordno, repairordsuf, closedfl, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbystatus")]
      public IEnumerable<Swelj> GetListByStatus(bool activefl = false, string statustype = "", DateTime? indt = null,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByStatus(0, activefl, statustype, indt, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbytechclose")]
      public IEnumerable<Swelj> GetListByTechclose(bool activefl = false, string tech = "", bool closedfl = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByTechclose(0, activefl, tech, closedfl, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbytechin")]
      public IEnumerable<Swelj> GetListByTechin(bool activefl = false, string tech = "", DateTime? indt = null, string intm = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByTechin(0, activefl, tech, indt, intm, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbytechout")]
      public IEnumerable<Swelj> GetListByTechout(bool activefl = false, string tech = "", DateTime? outdt = null, string outtm = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByTechout(0, activefl, tech, outdt, outtm, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbywhse")]
      public IEnumerable<Swelj> GetListByWhse(bool activefl = false, string whse = "", int deptno = 0, string tech = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByWhse(0, activefl, whse, deptno, tech, batchsize, fldlist);
      }

      [HttpPost]
      [Route("")]
      public Swelj Insert(Swelj record)
      {
         return this.repository.Insert(record);
      }
      
      [HttpPut]
      [Route("")]
      public Swelj Update(Swelj record)
      {
         return this.repository.Update(record);
      }
      
      [HttpDelete]
      [Route("")]
      public void Delete(Swelj record)
      {
         this.repository.Delete(record);
      }
  
      [HttpDelete]
      [Route("deletelistbyrowids")]
      public void DeleteListByRowIds(List<string> rowIds)
      {
         if (rowIds == null || rowIds.Count == 0)
         {
            return;
         }
         this.repository.DeleteListByRowIds(rowIds);
      }
	  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  