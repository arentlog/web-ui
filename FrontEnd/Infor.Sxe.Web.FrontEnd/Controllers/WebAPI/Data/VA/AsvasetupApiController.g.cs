//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.VA
{  
   using Sxe.VA.Data.Models.PdsContext;
   using Sxe.VA.Data.Models.Pdsvaspasmblsegments;
   using Sxe.VA.Data.Models.Pdsvaspasmblruledelete;
   using Sxe.VA.Data.Models.Pdsvaspasmblrule;
   using Sxe.VA.Data.Models.Pdsvaspasmblvalidate;
   using Sxe.VA.Data.Models.Pdsvaspheaderadd;
   using Sxe.VA.Data.Models.Pdsvaspheaderchangeupdate;
   using Sxe.VA.Data.Models.Pdsvaspheadercompload;
   using Sxe.VA.Data.Models.Pdsvaheaderallcomponent;
   using Sxe.VA.Data.Models.Pdsvaspheaderdelete;
   using Sxe.VA.Data.Models.Pdsvaspheaderfind;
   using Sxe.VA.Data.Models.Pdsvaspheaderlist;
   using Sxe.VA.Data.Models.Pdsvasplineadd;
   using Sxe.VA.Data.Models.Pdsvasplinelist;
   using Sxe.VA.Data.Models.Pdsvasplinechange;
   using Sxe.VA.Data.Models.Pdsvasplinedelete;
   using Sxe.VA.Data.Models.Pdsvasplinenonstock;
   using Sxe.VA.Data.Models.Pdsvaspsectionaddsctn;
   using Sxe.VA.Data.Models.Pdsvaspsectionautocrt;
   using Sxe.VA.Data.Models.Pdsvaspsectiondelete;
   using Sxe.VA.Data.Models.Pdsvaspsectionextendex;
   using Sxe.VA.Data.Models.Pdsvaspsectionextendin;
   using Sxe.VA.Data.Models.Pdsvaspsectionlist;
   using Sxe.VA.Data.Models.Pdsvaspsectionnextsctn;
   using Sxe.VA.Data.Models.Pdsvaspsectionrowupdate;
   using Sxe.VA.Data.Models.Pdsmessaging;
   using Sxe.VA.Data.Models.Pdsvaspsectionspecinit;
   using Sxe.VA.Data.Models.Pdsvaspsectionspecupdate;
   using Sxe.VA.Data.Models.Complex;
   using Sxe.VA.Data.Repositories;
    
   [RoutePrefix("api/va/asvasetup")]
   public partial class AsvasetupApiController : ApiControllerBase
   {
      private readonly AsvasetupRepository repository;
    
      public AsvasetupApiController(AsvasetupRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
      
      [Route("vafabwhsearp/{cFabWhse}")]
      [HttpGet]
      public AsvasetupVAFabWhseARPResponseAPI VAFabWhseARP(string cFabWhse)
      {
         return this.repository.VAFabWhseARP(cFabWhse);
      } 
  
      
      [Route("vaspassemblyretrieve")]
      [HttpPost]
      public Vaspasmblsegments VASPAssemblyRetrieve(AsvasetupVASPAssemblyRetrieveRequestAPI AsvasetupVASPAssemblyRetrieveRequestAPI)
      {
         return this.repository.VASPAssemblyRetrieve(AsvasetupVASPAssemblyRetrieveRequestAPI);
      } 
  
      
      [Route("vaspassemblyupdate")]
      [HttpPost]
      public void VASPAssemblyUpdate(Vaspasmblsegments vaspasmblsegments)
      {
         this.repository.VASPAssemblyUpdate(vaspasmblsegments);
      } 
  
      
      [Route("vaspassemblyruledelete")]
      [HttpPost]
      public void VASPAssemblyRuleDelete(Vaspasmblruledelete vaspasmblruledelete)
      {
         this.repository.VASPAssemblyRuleDelete(vaspasmblruledelete);
      } 
  
      
      [Route("vaspassemblyruleretrieve")]
      [HttpGet]
      public Vaspasmblrule VASPAssemblyRuleRetrieve(string vaprod, string vawhse, int vaverno, int segment, int sequence)
      {
         return this.repository.VASPAssemblyRuleRetrieve(vaprod, vawhse, vaverno, segment, sequence);
      } 
  
      
      [Route("vaspassemblyruleupdate")]
      [HttpPost]
      public void VASPAssemblyRuleUpdate(Vaspasmblrule vaspasmblrule)
      {
         this.repository.VASPAssemblyRuleUpdate(vaspasmblrule);
      } 
  
      
      [Route("vaspassemblyvalretrieve")]
      [HttpPost]
      public Vaspasmblvalidate VASPAssemblyValRetrieve(AsvasetupVASPAssemblyValRetrieveRequestAPI AsvasetupVASPAssemblyValRetrieveRequestAPI)
      {
         return this.repository.VASPAssemblyValRetrieve(AsvasetupVASPAssemblyValRetrieveRequestAPI);
      } 
  
      
      [Route("vaspassemblyvalupdate")]
      [HttpPost]
      public void VASPAssemblyValUpdate(Vaspasmblvalidate vaspasmblvalidate)
      {
         this.repository.VASPAssemblyValUpdate(vaspasmblvalidate);
      } 
  
      
      [Route("vaspheaderadd")]
      [HttpPost]
      public Vaspheaderaddcriteria VASPHeaderAdd(Vaspheaderaddcriteria vaspheaderaddcriteria)
      {
         return this.repository.VASPHeaderAdd(vaspheaderaddcriteria);
      } 
  
      
      [Route("vaspheaderchangeupdate")]
      [HttpPost]
      public Vaspheaderchangeupdate VASPHeaderChangeUpdate(Vaspheaderchangeupdate vaspheaderchangeupdate)
      {
         return this.repository.VASPHeaderChangeUpdate(vaspheaderchangeupdate);
      } 
  
      
      [Route("vaspheadercompload")]
      [HttpPost]
      public IEnumerable<Vaheaderallcomponent> VASPHeaderCompLoad(Vaspheadercompload vaspheadercompload)
      {
         return this.repository.VASPHeaderCompLoad(vaspheadercompload);
      } 
  
      
      [Route("vaspheaderdelete")]
      [HttpPost]
      public void VASPHeaderDelete(Vaspheaderdelete vaspheaderdelete)
      {
         this.repository.VASPHeaderDelete(vaspheaderdelete);
      } 
  
      
      [Route("vaspheaderfind")]
      [HttpPost]
      public Vaspheaderfindresults VASPHeaderFind(Vaspheaderfindcriteria vaspheaderfindcriteria)
      {
         return this.repository.VASPHeaderFind(vaspheaderfindcriteria);
      } 
  
      
      [Route("vaspheaderlist")]
      [HttpPost]
      public AsvasetupVASPHeaderListResponseAPI VASPHeaderList(Vaspheaderlistcriteria vaspheaderlistcriteria)
      {
         return this.repository.VASPHeaderList(vaspheaderlistcriteria);
      } 
  
      
      [Route("vaspheadervalidate")]
      [HttpPost]
      public void VASPHeaderValidate(Vaspheaderdelete vaspheaderdelete)
      {
         this.repository.VASPHeaderValidate(vaspheaderdelete);
      } 
  
      
      [Route("vaspcreatenewversion")]
      [HttpPost]
      public int VASPCreateNewVersion(AsvasetupVASPCreateNewVersionRequestAPI AsvasetupVASPCreateNewVersionRequestAPI)
      {
         return this.repository.VASPCreateNewVersion(AsvasetupVASPCreateNewVersionRequestAPI);
      } 
  
      
      [Route("vaspheaderlookup")]
      [HttpPost]
      public AsvasetupVASPHeaderLookupResponseAPI VASPHeaderLookup(Vaspheaderlistcriteria vaspheaderlistcriteria)
      {
         return this.repository.VASPHeaderLookup(vaspheaderlistcriteria);
      } 
  
      
      [Route("vasplineaddinit")]
      [HttpPost]
      public Vasplineadd VASPLineAddInit(AsvasetupVASPLineAddInitRequestAPI AsvasetupVASPLineAddInitRequestAPI)
      {
         return this.repository.VASPLineAddInit(AsvasetupVASPLineAddInitRequestAPI);
      } 
  
      
      [Route("vasplineaddleavefield")]
      [HttpPost]
      public AsvasetupVASPLineAddLeaveFieldResponseAPI VASPLineAddLeaveField(AsvasetupVASPLineAddLeaveFieldRequestAPI AsvasetupVASPLineAddLeaveFieldRequestAPI)
      {
         return this.repository.VASPLineAddLeaveField(AsvasetupVASPLineAddLeaveFieldRequestAPI);
      } 
  
      
      [Route("vasplineaddline")]
      [HttpPost]
      public AsvasetupVASPLineAddLineResponseAPI VASPLineAddLine(Vasplineadd vasplineadd)
      {
         return this.repository.VASPLineAddLine(vasplineadd);
      } 
  
      
      [Route("vasplinechange")]
      [HttpPost]
      public void VASPLineChange(Vasplinechange vasplinechange)
      {
         this.repository.VASPLineChange(vasplinechange);
      } 
  
      
      [Route("vasplinechangeinit")]
      [HttpGet]
      public Vasplinechange VASPLineChangeInit(string vaprod, string vawhse, int vaverno, int seqno, int lineno)
      {
         return this.repository.VASPLineChangeInit(vaprod, vawhse, vaverno, seqno, lineno);
      } 
  
      
      [Route("vasplinedelete")]
      [HttpPost]
      public void VASPLineDelete(Vasplinedelete vasplinedelete)
      {
         this.repository.VASPLineDelete(vasplinedelete);
      } 
  
      
      [Route("vasplinelaborchgprod")]
      [HttpPost]
      public Vasplinechange VASPLineLaborChgProd(Vasplinechange vasplinechange)
      {
         return this.repository.VASPLineLaborChgProd(vasplinechange);
      } 
  
      
      [Route("vasplineextendupdate")]
      [HttpPost]
      public void VASPLineExtendUpdate(Vasplinechange vasplinechange)
      {
         this.repository.VASPLineExtendUpdate(vasplinechange);
      } 
  
      
      [Route("vasplineexlaborupdate")]
      [HttpPost]
      public Vasplinechange VASPLineEXLaborUpdate(Vasplinechange vasplinechange)
      {
         return this.repository.VASPLineEXLaborUpdate(vasplinechange);
      } 
  
      
      [Route("vasplineinlaborupdate")]
      [HttpPost]
      public Vasplinechange VASPLineINLaborUpdate(Vasplinechange vasplinechange)
      {
         return this.repository.VASPLineINLaborUpdate(vasplinechange);
      } 
  
      
      [Route("vasplineleavefab")]
      [HttpPost]
      public Vasplinechange VASPLineLeaveFab(Vasplinechange vasplinechange)
      {
         return this.repository.VASPLineLeaveFab(vasplinechange);
      } 
  
      
      [Route("vasplineleaveprod")]
      [HttpPost]
      public AsvasetupVASPLineLeaveProdResponseAPI VASPLineLeaveProd(Vasplinechange vasplinechange)
      {
         return this.repository.VASPLineLeaveProd(vasplinechange);
      } 
  
      
      [Route("vasplineleaveunit")]
      [HttpPost]
      public Vasplinechange VASPLineLeaveUnit(Vasplinechange vasplinechange)
      {
         return this.repository.VASPLineLeaveUnit(vasplinechange);
      } 
  
      
      [Route("vasplinelist")]
      [HttpPost]
      public AsvasetupVASPLineListResponseAPI VASPLineList(AsvasetupVASPLineListRequestAPI AsvasetupVASPLineListRequestAPI)
      {
         return this.repository.VASPLineList(AsvasetupVASPLineListRequestAPI);
      } 
  
      
      [Route("vasplinenonstock")]
      [HttpPost]
      public Vasplinenonstock VASPLineNonstock(Vasplinenonstock vasplinenonstock)
      {
         return this.repository.VASPLineNonstock(vasplinenonstock);
      } 
  
      
      [Route("vasplinenonstockval")]
      [HttpPost]
      public Vasplinenonstock VASPLineNonstockVal(Vasplinenonstock vasplinenonstock)
      {
         return this.repository.VASPLineNonstockVal(vasplinenonstock);
      } 
  
      
      [Route("vaspsectionaddsctn")]
      [HttpPost]
      public Vaspsectionaddsctn VASPSectionAddSctn(Vaspsectionaddsctn vaspsectionaddsctn)
      {
         return this.repository.VASPSectionAddSctn(vaspsectionaddsctn);
      } 
  
      
      [Route("vaspsectionautocreate")]
      [HttpPost]
      public Vaspsectionautocrt VASPSectionAutoCreate(Vaspsectionautocrt vaspsectionautocrt)
      {
         return this.repository.VASPSectionAutoCreate(vaspsectionautocrt);
      } 
  
      
      [Route("vaspsectiondelete")]
      [HttpPost]
      public void VASPSectionDelete(Vaspsectiondelete vaspsectiondelete)
      {
         this.repository.VASPSectionDelete(vaspsectiondelete);
      } 
  
      
      [Route("vaspsectionextendexchange")]
      [HttpPost]
      public Vaspsectionextendex VASPSectionExtendEXChange(Vaspsectionextendex vaspsectionextendex)
      {
         return this.repository.VASPSectionExtendEXChange(vaspsectionextendex);
      } 
  
      
      [Route("vaspsectionextendexinit")]
      [HttpPost]
      public Vaspsectionextendex VASPSectionExtendEXInit(Vaspsectionextendex vaspsectionextendex)
      {
         return this.repository.VASPSectionExtendEXInit(vaspsectionextendex);
      } 
  
      
      [Route("vaspsectionextendexupdate")]
      [HttpPost]
      public void VASPSectionExtendEXUpdate(Vaspsectionextendex vaspsectionextendex)
      {
         this.repository.VASPSectionExtendEXUpdate(vaspsectionextendex);
      } 
  
      
      [Route("vaspsectionextendinchg")]
      [HttpPost]
      public Vaspsectionextendin VASPSectionExtendINChg(Vaspsectionextendin vaspsectionextendin)
      {
         return this.repository.VASPSectionExtendINChg(vaspsectionextendin);
      } 
  
      
      [Route("vaspsectionextendininit")]
      [HttpPost]
      public Vaspsectionextendin VASPSectionExtendINInit(Vaspsectionextendin vaspsectionextendin)
      {
         return this.repository.VASPSectionExtendINInit(vaspsectionextendin);
      } 
  
      
      [Route("vaspsectionextendinupdate")]
      [HttpPost]
      public void VASPSectionExtendINUpdate(Vaspsectionextendin vaspsectionextendin)
      {
         this.repository.VASPSectionExtendINUpdate(vaspsectionextendin);
      } 
  
      
      [Route("vaspsectionlist")]
      [HttpPost]
      public AsvasetupVASPSectionListResponseAPI VASPSectionList(Vaspsectionlistcriteria vaspsectionlistcriteria)
      {
         return this.repository.VASPSectionList(vaspsectionlistcriteria);
      } 
  
      
      [Route("vaspsectionnextsctn")]
      [HttpPost]
      public Vaspsectionnextsctn VASPSectionNextSctn(Vaspsectionnextsctn vaspsectionnextsctn)
      {
         return this.repository.VASPSectionNextSctn(vaspsectionnextsctn);
      } 
  
      
      [Route("vaspsectionrowupdate")]
      [HttpPost]
      public IEnumerable<Messaging> VASPSectionRowUpdate(Vaspsectionrowupdate vaspsectionrowupdate)
      {
         return this.repository.VASPSectionRowUpdate(vaspsectionrowupdate);
      } 
  
      
      [Route("vaspsectionspecificationinit")]
      [HttpPost]
      public Vaspsectionspecresults VASPSectionSpecificationInit(Vaspsectionspeccriteria vaspsectionspeccriteria)
      {
         return this.repository.VASPSectionSpecificationInit(vaspsectionspeccriteria);
      } 
  
      
      [Route("vaspsectionspecificationupdate")]
      [HttpPost]
      public void VASPSectionSpecificationUpdate(Vaspsectionspecupdate vaspsectionspecupdate)
      {
         this.repository.VASPSectionSpecificationUpdate(vaspsectionspecupdate);
      } 
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  