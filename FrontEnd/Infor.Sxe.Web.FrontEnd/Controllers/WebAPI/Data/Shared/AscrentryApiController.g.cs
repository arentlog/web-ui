//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.Shared
{  
   using Sxe.Shared.Data.Models.PdsContext;
   using Sxe.Shared.Data.Models.Pdscrec;
   using Sxe.Shared.Data.Models.Pdscrectrans;
   using Sxe.Shared.Data.Models.Pdscrecqc;
   using Sxe.Shared.Data.Models.Pdscrectransap;
   using Sxe.Shared.Data.Models.Pdscrectransar;
   using Sxe.Shared.Data.Models.Pdscrecqe;
   using Sxe.Shared.Data.Models.Pdsmessaging;
   using Sxe.Shared.Data.Models.Pdscrecqevoid;
   using Sxe.Shared.Data.Models.Complex;
   using Sxe.Shared.Data.Repositories;
    
   [RoutePrefix("api/shared/ascrentry")]
   public partial class AscrentryApiController : ApiControllerBase
   {
      private readonly AscrentryRepository repository;
    
      public AscrentryApiController(AscrentryRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
      
      [Route("crecreconcile")]
      [HttpPost]
      public AscrentryCRECReconcileResponseAPI CRECReconcile(Creccriteria creccriteria)
      {
         return this.repository.CRECReconcile(creccriteria);
      } 
  
      
      [Route("crectrans")]
      [HttpPost]
      public AscrentryCRECTransResponseAPI CRECTrans(Crectranscriteria crectranscriteria)
      {
         return this.repository.CRECTrans(crectranscriteria);
      } 
  
      
      [Route("crecclearreset")]
      [HttpPost]
      public IEnumerable<Crecreconcile> CRECClearReset(AscrentryCRECClearResetRequestAPI AscrentryCRECClearResetRequestAPI)
      {
         return this.repository.CRECClearReset(AscrentryCRECClearResetRequestAPI);
      } 
  
      
      [Route("crecquickclear")]
      [HttpPost]
      public Crecqc CRECQuickClear(Crecqc crecqc)
      {
         return this.repository.CRECQuickClear(crecqc);
      } 
  
      
      [Route("creccretinfo")]
      [HttpPost]
      public Crecqc CRECCretInfo(Crecqc crecqc)
      {
         return this.repository.CRECCretInfo(crecqc);
      } 
  
      
      [Route("crectransap/{iJrnlno:int}/{iSetno:int}")]
      [HttpGet]
      public IEnumerable<Crectransap> CRECTransAP(int iJrnlno, int iSetno)
      {
         return this.repository.CRECTransAP(iJrnlno, iSetno);
      } 
  
      
      [Route("crectransar/{iJrnlno:int}/{iSetno:int}")]
      [HttpGet]
      public IEnumerable<Crectransar> CRECTransAR(int iJrnlno, int iSetno)
      {
         return this.repository.CRECTransAR(iJrnlno, iSetno);
      } 
  
      
      [Route("crecqeinit")]
      [HttpPost]
      public Crecqe CRECQEinit(AscrentryCRECQEinitRequestAPI AscrentryCRECQEinitRequestAPI)
      {
         return this.repository.CRECQEinit(AscrentryCRECQEinitRequestAPI);
      } 
  
      
      [Route("crecqecheckno")]
      [HttpPost]
      public AscrentryCRECQEchecknoResponseAPI CRECQEcheckno(Crecqe crecqe)
      {
         return this.repository.CRECQEcheckno(crecqe);
      } 
  
      
      [Route("crecqeupdate")]
      [HttpPost]
      public AscrentryCRECQEupdateResponseAPI CRECQEupdate(Crecqe crecqe)
      {
         return this.repository.CRECQEupdate(crecqe);
      } 
  
      
      [Route("crecqevoidinit")]
      [HttpPost]
      public AscrentryCRECQEVOIDinitResponseAPI CRECQEVOIDinit(Crecqevoidcriteria crecqevoidcriteria)
      {
         return this.repository.CRECQEVOIDinit(crecqevoidcriteria);
      } 
  
      
      [Route("crecqevoidupdate")]
      [HttpPost]
      public AscrentryCRECQEVOIDupdateResponseAPI CRECQEVOIDupdate(AscrentryCRECQEVOIDupdateRequestAPI AscrentryCRECQEVOIDupdateRequestAPI)
      {
         return this.repository.CRECQEVOIDupdate(AscrentryCRECQEVOIDupdateRequestAPI);
      } 
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  