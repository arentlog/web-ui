//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.Shared
{  
   using Sxe.Shared.Data.Models.PdsContext;
   using Sxe.Shared.Data.Models.Pdscontactscrt;
   using Sxe.Shared.Data.Models.Pdscamsubject;
   using Sxe.Shared.Data.Models.Pdscamcontactlist;
   using Sxe.Shared.Data.Models.Pdscamcontact;
   using Sxe.Shared.Data.Models.Pdsmessaging;
   using Sxe.Shared.Data.Models.Pdscammethodtypes;
   using Sxe.Shared.Data.Models.Pdscamcontactsearch;
   using Sxe.Shared.Data.Models.Pdscamcontactties;
   using Sxe.Shared.Data.Models.Complex;
   using Sxe.Shared.Data.Repositories;
    
   [RoutePrefix("api/shared/ascam")]
   public partial class AscamApiController : ApiControllerBase
   {
      private readonly AscamRepository repository;
    
      public AscamApiController(AscamRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
      
      [Route("contactcreate")]
      [HttpPost]
      public IEnumerable<Contactscrt> ContactCreate(IEnumerable<Contactscrt> contactscrt)
      {
         return this.repository.ContactCreate(contactscrt);
      } 
  
      
      [Route("contactupdate")]
      [HttpPost]
      public Contactscrt ContactUpdate(Contactscrt contactscrt)
      {
         return this.repository.ContactUpdate(contactscrt);
      } 
  
      
      [Route("cambuildcontactlist")]
      [HttpPost]
      public IEnumerable<Camcontactlist> CAMBuildContactList(Camsubject camsubject)
      {
         return this.repository.CAMBuildContactList(camsubject);
      } 
  
      
      [Route("camcontactdelete/{dContactid:decimal}")]
      [HttpGet]
      public void CAMContactDelete(decimal dContactid)
      {
         this.repository.CAMContactDelete(dContactid);
      } 
  
      
      [Route("camcontactinitialize")]
      [HttpPost]
      public AscamCAMContactInitializeResponseAPI CAMContactInitialize(AscamCAMContactInitializeRequestAPI AscamCAMContactInitializeRequestAPI)
      {
         return this.repository.CAMContactInitialize(AscamCAMContactInitializeRequestAPI);
      } 
  
      
      [Route("camcontactaddtosubject")]
      [HttpPost]
      public void CAMContactAddToSubject(AscamCAMContactAddToSubjectRequestAPI AscamCAMContactAddToSubjectRequestAPI)
      {
         this.repository.CAMContactAddToSubject(AscamCAMContactAddToSubjectRequestAPI);
      } 
  
      
      [Route("camcontactremovefromsubject")]
      [HttpPost]
      public void CAMContactRemoveFromSubject(AscamCAMContactRemoveFromSubjectRequestAPI AscamCAMContactRemoveFromSubjectRequestAPI)
      {
         this.repository.CAMContactRemoveFromSubject(AscamCAMContactRemoveFromSubjectRequestAPI);
      } 
  
      
      [Route("camcontactsearchdupname/{cFirstName}/{cLastName}")]
      [HttpGet]
      public bool CAMContactSearchDupName(string cFirstName, string cLastName)
      {
         return this.repository.CAMContactSearchDupName(cFirstName, cLastName);
      } 
  
      
      [Route("camcontactupdate")]
      [HttpPost]
      public AscamCAMContactUpdateResponseAPI CAMContactUpdate(AscamCAMContactUpdateRequestAPI AscamCAMContactUpdateRequestAPI)
      {
         return this.repository.CAMContactUpdate(AscamCAMContactUpdateRequestAPI);
      } 
  
      
      [Route("cammethodtypesretrieve")]
      [HttpGet]
      public IEnumerable<Cammethodtypes> CAMMethodTypesRetrieve()
      {
         return this.repository.CAMMethodTypesRetrieve();
      } 
  
      
      [Route("camretrievesubjectfororder/{pvOrdertype}/{pvOrderno:int}/{pvOrdersuf:int}")]
      [HttpGet]
      public Camsubject CAMRetrieveSubjectForOrder(string pvOrdertype, int pvOrderno, int pvOrdersuf)
      {
         return this.repository.CAMRetrieveSubjectForOrder(pvOrdertype, pvOrderno, pvOrdersuf);
      } 
  
      
      [Route("camcontactsearch")]
      [HttpPost]
      public AscamCAMContactSearchResponseAPI CAMContactSearch(Camcontactcriteria camcontactcriteria)
      {
         return this.repository.CAMContactSearch(camcontactcriteria);
      } 
  
      
      [Route("camcontactgetties/{dContactid:decimal}")]
      [HttpGet]
      public IEnumerable<Camcontactties> CAMContactGetTies(decimal dContactid)
      {
         return this.repository.CAMContactGetTies(dContactid);
      } 
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  