//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.Shared
{  
   using Sxe.Shared.Data.Models.PdsContext;
   using Sxe.Shared.Data.Models.Pdsnotesmnt;
   using Sxe.Shared.Data.Models.Pdscommentsmnt;
   using Sxe.Shared.Data.Models.Pdsgetnotelist;
   using Sxe.Shared.Data.Models.Pdsnotecreatetext;
   using Sxe.Shared.Data.Models.Pdsnotecreatefile;
   using Sxe.Shared.Data.Models.Pdsnotecreateurl;
   using Sxe.Shared.Data.Models.Pdsnoteupdatetext;
   using Sxe.Shared.Data.Models.Pdsnoteupdatefile;
   using Sxe.Shared.Data.Models.Pdsnoteupdateurl;
   using Sxe.Shared.Data.Models.Pdsnoteflagsettings;
   using Sxe.Shared.Data.Models.Pdsnotemovepageno;
   using Sxe.Shared.Data.Models.Pdsgeticetnotesidbyrowid;
   using Sxe.Shared.Data.Models.Complex;
   using Sxe.Shared.Data.Repositories;
    
   [RoutePrefix("api/shared/asnotescom")]
   public partial class AsnotescomApiController : ApiControllerBase
   {
      private readonly AsnotescomRepository repository;
    
      public AsnotescomApiController(AsnotescomRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
      
      [Route("notescreate")]
      [HttpPost]
      public IEnumerable<Notesmnt> NotesCreate(IEnumerable<Notesmnt> notesmnt)
      {
         return this.repository.NotesCreate(notesmnt);
      } 
  
      
      [Route("notesupdate")]
      [HttpPost]
      public IEnumerable<Notesmnt> NotesUpdate(IEnumerable<Notesmnt> notesmnt)
      {
         return this.repository.NotesUpdate(notesmnt);
      } 
  
      
      [Route("notesdelete")]
      [HttpPost]
      public IEnumerable<Notesmnt> NotesDelete(IEnumerable<Notesmnt> notesmnt)
      {
         return this.repository.NotesDelete(notesmnt);
      } 
  
      
      [Route("commentscreate")]
      [HttpPost]
      public IEnumerable<Commentsmnt> CommentsCreate(IEnumerable<Commentsmnt> commentsmnt)
      {
         return this.repository.CommentsCreate(commentsmnt);
      } 
  
      
      [Route("commentsupdate")]
      [HttpPost]
      public IEnumerable<Commentsmnt> CommentsUpdate(IEnumerable<Commentsmnt> commentsmnt)
      {
         return this.repository.CommentsUpdate(commentsmnt);
      } 
  
      
      [Route("commentsdelete")]
      [HttpPost]
      public IEnumerable<Commentsmnt> CommentsDelete(IEnumerable<Commentsmnt> commentsmnt)
      {
         return this.repository.CommentsDelete(commentsmnt);
      } 
  
      
      [Route("getnotelist")]
      [HttpPost]
      public AsnotescomGetNoteListResponseAPI GetNoteList(Getnotelistcriteria getnotelistcriteria)
      {
         return this.repository.GetNoteList(getnotelistcriteria);
      } 
  
      
      [Route("notecreatetext")]
      [HttpPost]
      public void NoteCreateText(Notecreatetext notecreatetext)
      {
         this.repository.NoteCreateText(notecreatetext);
      } 
  
      
      [Route("notecreatefile")]
      [HttpPost]
      public void NoteCreateFile(IEnumerable<Notecreatefile> notecreatefile)
      {
         this.repository.NoteCreateFile(notecreatefile);
      } 
  
      
      [Route("notecreateurl")]
      [HttpPost]
      public void NoteCreateURL(Notecreateurl notecreateurl)
      {
         this.repository.NoteCreateURL(notecreateurl);
      } 
  
      
      [Route("noteupdatetext")]
      [HttpPost]
      public void NoteUpdateText(Noteupdatetext noteupdatetext)
      {
         this.repository.NoteUpdateText(noteupdatetext);
      } 
  
      
      [Route("noteupdatefile")]
      [HttpPost]
      public void NoteUpdateFile(Noteupdatefile noteupdatefile)
      {
         this.repository.NoteUpdateFile(noteupdatefile);
      } 
  
      
      [Route("noteupdateurl")]
      [HttpPost]
      public void NoteUpdateURL(Noteupdateurl noteupdateurl)
      {
         this.repository.NoteUpdateURL(noteupdateurl);
      } 
  
      
      [Route("notedeletealltypes")]
      [HttpPost]
      public void NoteDeleteAllTypes(Noteupdatetext noteupdatetext)
      {
         this.repository.NoteDeleteAllTypes(noteupdatetext);
      } 
  
      
      [Route("notegetflagsettings")]
      [HttpPost]
      public Noteflagsettings NoteGetFlagSettings(Noteflagsettings noteflagsettings)
      {
         return this.repository.NoteGetFlagSettings(noteflagsettings);
      } 
  
      
      [Route("notemovepagenumber")]
      [HttpPost]
      public IEnumerable<Notemovepagenoresults> NoteMovePageNumber(Notemovepageno notemovepageno)
      {
         return this.repository.NoteMovePageNumber(notemovepageno);
      } 
  
      
      [Route("geticetnotesid/{cIcetRowId}/{lCreateNoteIdFl:bool}")]
      [HttpGet]
      public int GetIcetNotesId(string cIcetRowId, bool lCreateNoteIdFl)
      {
         return this.repository.GetIcetNotesId(cIcetRowId, lCreateNoteIdFl);
      } 
  
      
      [Route("geticetnotesidbyrowid")]
      [HttpPost]
      public Geticetnotesidbyrowid GetIcetNotesIdByRowId(Geticetnotesidbyrowid geticetnotesidbyrowid)
      {
         return this.repository.GetIcetNotesIdByRowId(geticetnotesidbyrowid);
      } 
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  