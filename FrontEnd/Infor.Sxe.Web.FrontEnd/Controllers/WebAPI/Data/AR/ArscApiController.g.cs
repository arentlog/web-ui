//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.AR
{  
   using Sxe.AR.Data.Models.PdsContext;
   using Sxe.AR.Data.Models.Pdsarsc;
   using Sxe.AR.Data.Models.Pdsarcustomerlookup;
   using Sxe.AR.Data.Models.Complex;
   using Sxe.AR.Data.Repositories;
    
   [RoutePrefix("api/ar/arsc")]
   public partial class ArscApiController : ApiControllerBase
   {
      private readonly ArscRepository repository;
    
      public ArscApiController(ArscRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
    
      [HttpGet]
      [Route("getbyrowid/{rowid:maxLength(30)}")]
      public Arsc GetByRowId(string rowid, bool fillmode = false, string fldlist = "")
      {
         if (string.IsNullOrEmpty(rowid))
         {
            return null;
         }
         return this.repository.GetByRowId(rowid, fillmode, fldlist);
      }
      
      [HttpPost]
      [Route("listbyrowids")]      
      public IEnumerable<Arsc> GetListByRowIdList(List<string> rowids, bool fillmode = false, string fldlist = "")
      {
         if (rowids == null || rowids.Count == 0)
         {
            return new List<Arsc>();
         }
         return this.repository.GetListByRowIdList(rowids, fillmode, rowids.Count, fldlist);
      }
        
      [HttpGet]
      [Route("")]
      public IEnumerable<Arsc> GetListAllByCono(bool fillmode = false, int batchsize = 0, string fldlist = "")
      {  
         return this.repository.GetListAllByCono(0, fillmode, batchsize, fldlist);
      }
      [HttpPost]
      [Route("listbyrowpointers")] 
      public IEnumerable<Arsc> GetListByRowpointers(List<string> rowpointers, bool fillmode, string fldlist)
      {
         if (rowpointers == null || rowpointers.Count == 0)
         {
            return new List<Arsc>();
         }	  
         return this.repository.GetListByRowpointers(rowpointers, fillmode, fldlist);
      }
	  
	  
      [HttpGet]
      [Route("getbypk")]
      public Arsc Get(decimal custno = 0, bool fillmode = false, string fldlist = "")
      {
         return this.repository.Get(0, custno, fillmode, 1, fldlist);
      }
        
      [HttpGet]
      [Route("existsbypk")]
      public bool Exists(decimal custno = 0)
      {
         return (this.repository.Get(0, custno, false, 1, string.Empty) != null);
      }

      [HttpGet]
      [Route("existsbyrowid/{rowid:maxLength(30)}")]
      public bool ExistsByRowId(string rowid)
      {
         if (string.IsNullOrEmpty(rowid))
         {
            return false;
         }
         return (this.repository.GetByRowId(rowid, false, string.Empty) != null);
      }
	  

      [HttpGet]
      [Route("existsbyrowpointer/{rowpointer:guid}")]
      public bool ExistsByRowpointer(string rowpointer)
      {
         if (string.IsNullOrEmpty(rowpointer))
         {
            return false;
         }
         return (this.repository.GetByRowpointer(rowpointer, false, string.Empty) != null);
      }
	  
	  
      [HttpGet]
      [Route("listbyaddr")]
      public IEnumerable<Arsc> GetListByAddr(string state = "", string city = "",  bool fillmode = false, int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByAddr(0, state, city, fillmode, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyauthgrplist")]
      public IEnumerable<Arsc> GetListByAuthgrplist(string authGrpList = "",  bool fillmode = false, int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByAuthgrplist(authGrpList, fillmode, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycredit")]
      public IEnumerable<Arsc> GetListByCredit(string creditmgr = "", decimal custno = 0,  bool fillmode = false, int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCredit(0, creditmgr, custno, fillmode, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycustno2")]
      public IEnumerable<Arsc> GetListByCustno2(decimal custno2 = 0,  bool fillmode = false, int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCustno2(0, custno2, fillmode, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyediptnr")]
      public IEnumerable<Arsc> GetListByEdiptnr(string edipartner = "",  bool fillmode = false, int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByEdiptnr(0, edipartner, fillmode, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbygroup")]
      public IEnumerable<Arsc> GetListByGroup(string groupid = "", decimal custno = 0,  bool fillmode = false, int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByGroup(0, groupid, custno, fillmode, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbylkup")]
      public IEnumerable<Arsc> GetListByLkup(string lookupnm = "",  bool fillmode = false, int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByLkup(0, lookupnm, fillmode, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbymasteraccount")]
      public IEnumerable<Arsc> GetListByMasteraccount(int mastercono = 0, decimal mastercustno = 0,  bool fillmode = false, int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByMasteraccount(mastercono, mastercustno, fillmode, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyphone")]
      public IEnumerable<Arsc> GetListByPhone(string phoneno = "", decimal custno = 0,  bool fillmode = false, int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByPhone(0, phoneno, custno, fillmode, batchsize, fldlist);
      }

      [HttpGet]
      [Route("getbyrowpointer/{rowpointer:guid}")]
      public Arsc GetByRowpointer(string rowpointer, bool fillmode = false, string fldlist = "")
      {
         return this.repository.GetByRowpointer(rowpointer, fillmode, fldlist);
      }

      [HttpGet]
      [Route("listbytransdttmz")]
      public IEnumerable<Arsc> GetListByTransdttmz(DateTime? transdttmz = null,  bool fillmode = false, int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByTransdttmz(transdttmz, fillmode, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyzipcd")]
      public IEnumerable<Arsc> GetListByZipcd(string zipcd = "", string lookupnm = "",  bool fillmode = false, int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByZipcd(0, zipcd, lookupnm, fillmode, batchsize, fldlist);
      }

      [HttpPost]
      [Route("")]
      public Arsc Insert(Arsc record)
      {
         return this.repository.Insert(record);
      }
      
      [HttpPut]
      [Route("")]
      public Arsc Update(Arsc record)
      {
         return this.repository.Update(record);
      }
      
      [HttpDelete]
      [Route("")]
      public void Delete(Arsc record)
      {
         this.repository.Delete(record);
      }
  
      [HttpDelete]
      [Route("deletelistbyrowids")]
      public void DeleteListByRowIds(List<string> rowIds)
      {
         if (rowIds == null || rowIds.Count == 0)
         {
            return;
         }
         this.repository.DeleteListByRowIds(rowIds);
      }
	   
	  
      [HttpDelete]
      [Route("deletelistbyrowpointers")]
      public void DeleteListByRowPointers(List<string> rowpointers)
      {
         if (rowpointers == null || rowpointers.Count == 0)
         {
            return;
         }
         this.repository.DeleteListByRowPointers(rowpointers);
      }
	  
      
      [Route("lookup")]
      [HttpPost]
      public ArscLookupResponseAPI Lookup(Arcustomerlookupcriteria arcustomerlookupcriteria)
      {
         return this.repository.Lookup(arcustomerlookupcriteria);
      } 
  

      [HttpGet]
      [Route("listbywordindex")]
      public IEnumerable<Arsc> GetListByWordIndex(string term = "", bool fillmode = false, int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByWordIndex(term, fillmode, batchsize, fldlist);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  