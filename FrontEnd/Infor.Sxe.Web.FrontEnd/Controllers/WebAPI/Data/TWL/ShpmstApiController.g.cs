//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.TWL
{  
   using Sxe.TWL.Data.Models.PdsContext;
   using Sxe.TWL.Data.Models.Pdsshpmst;
   using Sxe.TWL.Data.Repositories;
    
   [RoutePrefix("api/twl/shpmst")]
   public partial class ShpmstApiController : ApiControllerBase
   {
      private readonly ShpmstRepository repository;
    
      public ShpmstApiController(ShpmstRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
    
      [HttpGet]
      [Route("getbyrowid/{rowid:maxLength(30)}")]
      public Shpmst GetByRowId(string rowid, string fldlist = "")
      {
         if (string.IsNullOrEmpty(rowid))
         {
            return null;
         }
         return this.repository.GetByRowId(rowid, fldlist);
      }
      
      [HttpPost]
      [Route("listbyrowids")]      
      public IEnumerable<Shpmst> GetListByRowIdList(List<string> rowids, string fldlist = "")
      {
         if (rowids == null || rowids.Count == 0)
         {
            return new List<Shpmst>();
         }
         return this.repository.GetListByRowIdList(rowids, rowids.Count, fldlist);
      }
        
      [HttpGet]
      [Route("getbypk")]
      public Shpmst Get(string coNum = "", string whNum = "", string carrierId = "", int manifestId = 0, string fldlist = "")
      {
         return this.repository.Get(coNum, whNum, carrierId, manifestId, 1, fldlist);
      }
        
      [HttpGet]
      [Route("existsbypk")]
      public bool Exists(string coNum = "", string whNum = "", string carrierId = "", int manifestId = 0)
      {
         return (this.repository.Get(coNum, whNum, carrierId, manifestId, 1, string.Empty) != null);
      }

      [HttpGet]
      [Route("existsbyrowid/{rowid:maxLength(30)}")]
      public bool ExistsByRowId(string rowid)
      {
         if (string.IsNullOrEmpty(rowid))
         {
            return false;
         }
         return (this.repository.GetByRowId(rowid, string.Empty) != null);
      }
	  

      [HttpGet]
      [Route("listbycowhdocktrailercarrier")]
      public IEnumerable<Shpmst> GetListByCoWhDockTrailerCarrier(string coNum = "", string whNum = "", string dockId = "", string trailerNum = "", string carrierId = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhDockTrailerCarrier(coNum, whNum, dockId, trailerNum, carrierId, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbydockstatus")]
      public IEnumerable<Shpmst> GetListByDockStatus(string dockId = "", bool rowStatus = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByDockStatus(dockId, rowStatus, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyid")]
      public IEnumerable<Shpmst> GetListById(int manifestId = 0,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListById(manifestId, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbystatuschrono")]
      public IEnumerable<Shpmst> GetListByStatusChrono(bool rowStatus = false, string dateTime = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByStatusChrono(rowStatus, dateTime, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbytrailerstatus")]
      public IEnumerable<Shpmst> GetListByTrailerStatus(string trailerNum = "", bool rowStatus = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByTrailerStatus(trailerNum, rowStatus, batchsize, fldlist);
      }

      [HttpPost]
      [Route("")]
      public Shpmst Insert(Shpmst record)
      {
         return this.repository.Insert(record);
      }
      
      [HttpPut]
      [Route("")]
      public Shpmst Update(Shpmst record)
      {
         return this.repository.Update(record);
      }
      
      [HttpDelete]
      [Route("")]
      public void Delete(Shpmst record)
      {
         this.repository.Delete(record);
      }
  
      [HttpDelete]
      [Route("deletelistbyrowids")]
      public void DeleteListByRowIds(List<string> rowIds)
      {
         if (rowIds == null || rowIds.Count == 0)
         {
            return;
         }
         this.repository.DeleteListByRowIds(rowIds);
      }
	  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  