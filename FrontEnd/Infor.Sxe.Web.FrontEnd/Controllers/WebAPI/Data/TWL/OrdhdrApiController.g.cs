//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.TWL
{  
   using Sxe.TWL.Data.Models.PdsContext;
   using Sxe.TWL.Data.Models.Pdsordhdr;
   using Sxe.TWL.Data.Repositories;
    
   [RoutePrefix("api/twl/ordhdr")]
   public partial class OrdhdrApiController : ApiControllerBase
   {
      private readonly OrdhdrRepository repository;
    
      public OrdhdrApiController(OrdhdrRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
    
      [HttpGet]
      [Route("getbyrowid/{rowid:maxLength(30)}")]
      public Ordhdr GetByRowId(string rowid, string fldlist = "")
      {
         if (string.IsNullOrEmpty(rowid))
         {
            return null;
         }
         return this.repository.GetByRowId(rowid, fldlist);
      }
      
      [HttpPost]
      [Route("listbyrowids")]      
      public IEnumerable<Ordhdr> GetListByRowIdList(List<string> rowids, string fldlist = "")
      {
         if (rowids == null || rowids.Count == 0)
         {
            return new List<Ordhdr>();
         }
         return this.repository.GetListByRowIdList(rowids, rowids.Count, fldlist);
      }
        
      [HttpGet]
      [Route("getbypk")]
      public Ordhdr Get(int id = 0, string fldlist = "")
      {
         return this.repository.Get(id, 1, fldlist);
      }
        
      [HttpGet]
      [Route("existsbypk")]
      public bool Exists(int id = 0)
      {
         return (this.repository.Get(id, 1, string.Empty) != null);
      }

      [HttpGet]
      [Route("existsbyrowid/{rowid:maxLength(30)}")]
      public bool ExistsByRowId(string rowid)
      {
         if (string.IsNullOrEmpty(rowid))
         {
            return false;
         }
         return (this.repository.GetByRowId(rowid, string.Empty) != null);
      }
	  

      [HttpGet]
      [Route("listbybatch")]
      public IEnumerable<Ordhdr> GetListByBatch(int batch = 0,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByBatch(batch, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyclearance")]
      public IEnumerable<Ordhdr> GetListByClearance(bool clearanceRequired = false, string clearanceCode = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByClearance(clearanceRequired, clearanceCode, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhassignedcselector")]
      public IEnumerable<Ordhdr> GetListByCoWhAssignedCselector(string coNum = "", string whNum = "", bool assigned = false, string customSelector = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhAssignedCselector(coNum, whNum, assigned, customSelector, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhassignedhostbatch")]
      public IEnumerable<Ordhdr> GetListByCoWhAssignedHostbatch(string coNum = "", string whNum = "", bool assigned = false, string hostBatch = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhAssignedHostbatch(coNum, whNum, assigned, hostBatch, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhassignedhselector")]
      public IEnumerable<Ordhdr> GetListByCoWhAssignedHselector(string coNum = "", string whNum = "", bool assigned = false, string hostSelector = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhAssignedHselector(coNum, whNum, assigned, hostSelector, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhassignedtype")]
      public IEnumerable<Ordhdr> GetListByCoWhAssignedType(string coNum = "", string whNum = "", bool assigned = false, string type = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhAssignedType(coNum, whNum, assigned, type, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhasspricarser")]
      public IEnumerable<Ordhdr> GetListByCoWhAssPriCarSer(string coNum = "", string whNum = "", bool assigned = false, bool printed = false, string carrier = "", string service = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhAssPriCarSer(coNum, whNum, assigned, printed, carrier, service, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhbatch")]
      public IEnumerable<Ordhdr> GetListByCoWhBatch(string coNum = "", string whNum = "", int batch = 0, bool assigned = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhBatch(coNum, whNum, batch, assigned, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhbranchassigned")]
      public IEnumerable<Ordhdr> GetListByCoWhBranchAssigned(string coNum = "", string whNum = "", string branchId = "", bool assigned = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhBranchAssigned(coNum, whNum, branchId, assigned, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhcarrierassigned")]
      public IEnumerable<Ordhdr> GetListByCoWhCarrierAssigned(string coNum = "", string whNum = "", string carrier = "", bool assigned = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhCarrierAssigned(coNum, whNum, carrier, assigned, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhclassassigned")]
      public IEnumerable<Ordhdr> GetListByCoWhClassAssigned(string coNum = "", string whNum = "", string @class = "", bool assigned = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhClassAssigned(coNum, whNum, @class, assigned, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhcustshipto")]
      public IEnumerable<Ordhdr> GetListByCoWhCustShipto(string coNum = "", string whNum = "", string shipCustCode = "", string shipToCode = "", bool assigned = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhCustShipto(coNum, whNum, shipCustCode, shipToCode, assigned, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhdate")]
      public IEnumerable<Ordhdr> GetListByCoWhDate(string coNum = "", string whNum = "", DateTime? orderDate = null,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhDate(coNum, whNum, orderDate, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhexpship")]
      public IEnumerable<Ordhdr> GetListByCoWhExpship(string coNum = "", string whNum = "", DateTime? expShipDate = null,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhExpship(coNum, whNum, expShipDate, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhhostbatchhostsequence")]
      public IEnumerable<Ordhdr> GetListByCoWhHostbatchHostsequence(string coNum = "", string whNum = "", string hostBatch = "", int hostSequence = 0,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhHostbatchHostsequence(coNum, whNum, hostBatch, hostSequence, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhordersuffix")]
      public IEnumerable<Ordhdr> GetListByCoWhOrderSuffix(string coNum = "", string whNum = "", string order = "", string orderSuffix = "", bool assigned = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhOrderSuffix(coNum, whNum, order, orderSuffix, assigned, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhpriorityassigned")]
      public IEnumerable<Ordhdr> GetListByCoWhPriorityAssigned(string coNum = "", string whNum = "", int priority = 0, bool assigned = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhPriorityAssigned(coNum, whNum, priority, assigned, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhprodlinecntassigned")]
      public IEnumerable<Ordhdr> GetListByCoWhProdLinecntAssigned(string coNum = "", string whNum = "", string product = "", int lineCount = 0, bool assigned = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhProdLinecntAssigned(coNum, whNum, product, lineCount, assigned, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhroutestatus")]
      public IEnumerable<Ordhdr> GetListByCoWhRouteStatus(string coNum = "", string whNum = "", string route = "", string orderStatus = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhRouteStatus(coNum, whNum, route, orderStatus, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhship")]
      public IEnumerable<Ordhdr> GetListByCoWhShip(string coNum = "", string whNum = "", DateTime? shipDate = null,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhShip(coNum, whNum, shipDate, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhstatus")]
      public IEnumerable<Ordhdr> GetListByCoWhStatus(string coNum = "", string whNum = "", string orderStatus = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhStatus(coNum, whNum, orderStatus, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhstatusassigned")]
      public IEnumerable<Ordhdr> GetListByCoWhStatusAssigned(string coNum = "", string whNum = "", string orderStatus = "", bool assigned = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhStatusAssigned(coNum, whNum, orderStatus, assigned, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbycowhtypeassigned")]
      public IEnumerable<Ordhdr> GetListByCoWhTypeAssigned(string coNum = "", string whNum = "", string type = "", bool assigned = false,  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByCoWhTypeAssigned(coNum, whNum, type, assigned, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyshipname")]
      public IEnumerable<Ordhdr> GetListByShipname(string shipName = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByShipname(shipName, batchsize, fldlist);
      }

      [HttpGet]
      [Route("listbyshipzip")]
      public IEnumerable<Ordhdr> GetListByShipzip(string shipZip = "",  int batchsize = 0, string fldlist = "")
      {
         return this.repository.GetListByShipzip(shipZip, batchsize, fldlist);
      }

      [HttpPost]
      [Route("")]
      public Ordhdr Insert(Ordhdr record)
      {
         return this.repository.Insert(record);
      }
      
      [HttpPut]
      [Route("")]
      public Ordhdr Update(Ordhdr record)
      {
         return this.repository.Update(record);
      }
      
      [HttpDelete]
      [Route("")]
      public void Delete(Ordhdr record)
      {
         this.repository.Delete(record);
      }
  
      [HttpDelete]
      [Route("deletelistbyrowids")]
      public void DeleteListByRowIds(List<string> rowIds)
      {
         if (rowIds == null || rowIds.Count == 0)
         {
            return;
         }
         this.repository.DeleteListByRowIds(rowIds);
      }
	  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  