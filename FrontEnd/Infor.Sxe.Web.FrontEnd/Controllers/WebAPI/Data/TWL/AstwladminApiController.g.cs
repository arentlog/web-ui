//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.TWL
{  
   using Sxe.TWL.Data.Models.PdsContext;
   using Sxe.TWL.Data.Models.Pdspackinglistpocriteria;
   using Sxe.TWL.Data.Models.Pdspackinglistporesults;
   using Sxe.TWL.Data.Models.Pdspackinglistvalidate;
   using Sxe.TWL.Data.Models.Pdspackinglistcreate;
   using Sxe.TWL.Data.Models.Pdspolinedetailcriteria;
   using Sxe.TWL.Data.Models.Pdspolinedetail;
   using Sxe.TWL.Data.Models.Pdspackinglistaddpo;
   using Sxe.TWL.Data.Models.Pdsmessaging;
   using Sxe.TWL.Data.Models.Pdspackinglistdeletepo;
   using Sxe.TWL.Data.Models.Pdsresendtranscriteria;
   using Sxe.TWL.Data.Models.Pdsresendtransdetail;
   using Sxe.TWL.Data.Models.Pdsresendtranssummary;
   using Sxe.TWL.Data.Models.Pdsresendinitsearch;
   using Sxe.TWL.Data.Models.Pdsresendtranslist;
   using Sxe.TWL.Data.Models.Pdsdeletedrplog;
   using Sxe.TWL.Data.Models.Pdsrcvlabelcriteria;
   using Sxe.TWL.Data.Models.Pdsreplotherbuildlist;
   using Sxe.TWL.Data.Models.Pdsrepltopoffbuildlist;
   using Sxe.TWL.Data.Models.Pdsreplclearlist;
   using Sxe.TWL.Data.Models.Pdsreplclearresults;
   using Sxe.TWL.Data.Models.Pdsreplpendingcriteria;
   using Sxe.TWL.Data.Models.Pdsreplpending;
   using Sxe.TWL.Data.Models.Pdsrepltopoffscriteria;
   using Sxe.TWL.Data.Models.Pdsrepltopoffs;
   using Sxe.TWL.Data.Models.Pdsreplothercriteria;
   using Sxe.TWL.Data.Models.Pdsreplother;
   using Sxe.TWL.Data.Models.Pdsccitemscriteria;
   using Sxe.TWL.Data.Models.Pdsccitems;
   using Sxe.TWL.Data.Models.Pdsccitemlots;
   using Sxe.TWL.Data.Models.Pdscclocationscriteria;
   using Sxe.TWL.Data.Models.Pdscclocations;
   using Sxe.TWL.Data.Models.Pdsccbuildimpactcriteria;
   using Sxe.TWL.Data.Models.Pdsccimpact;
   using Sxe.TWL.Data.Models.Pdsccbuildresults;
   using Sxe.TWL.Data.Models.Pdsinventoryids;
   using Sxe.TWL.Data.Models.Pdsccemployees;
   using Sxe.TWL.Data.Models.Pdsphysinvcriteria;
   using Sxe.TWL.Data.Models.Pdsphysinvsummary;
   using Sxe.TWL.Data.Models.Pdsphysinv;
   using Sxe.TWL.Data.Models.Pdsphysinvseterror;
   using Sxe.TWL.Data.Models.Pdssavewlpasswd;
   using Sxe.TWL.Data.Models.Pdsinvdisclistcriteria;
   using Sxe.TWL.Data.Models.Pdsinvdisclistresults;
   using Sxe.TWL.Data.Models.Pdsinvdiscneginv;
   using Sxe.TWL.Data.Models.Pdsinvdisclistsummary;
   using Sxe.TWL.Data.Models.Pdsinvdiscidlist;
   using Sxe.TWL.Data.Models.Pdsinvdiscbuildcountcriteria;
   using Sxe.TWL.Data.Models.Pdsinvdiscbuildcountresults;
   using Sxe.TWL.Data.Models.Pdsominfo;
   using Sxe.TWL.Data.Models.Pdsomorderdropcriteria;
   using Sxe.TWL.Data.Models.Pdsomorderkey;
   using Sxe.TWL.Data.Models.Pdsomorderdroplist;
   using Sxe.TWL.Data.Models.Pdsomorderdroprvlines;
   using Sxe.TWL.Data.Models.Pdsomorderdroperrors;
   using Sxe.TWL.Data.Models.Pdsomorderdropsummary;
   using Sxe.TWL.Data.Models.Pdsomorderdropwaves;
   using Sxe.TWL.Data.Models.Pdsomorderlinekey;
   using Sxe.TWL.Data.Models.Pdspickdetail;
   using Sxe.TWL.Data.Models.Pdspickdetailsummary;
   using Sxe.TWL.Data.Models.Pdspickalloccriteria;
   using Sxe.TWL.Data.Models.Pdsallocavailinventory;
   using Sxe.TWL.Data.Models.Pdsomorderundropcriteria;
   using Sxe.TWL.Data.Models.Pdsomorderundropcartoninfo;
   using Sxe.TWL.Data.Models.Pdsomorderzeroshipcriteria;
   using Sxe.TWL.Data.Models.Pdswavepickemployees;
   using Sxe.TWL.Data.Models.Pdswavepickassignments;
   using Sxe.TWL.Data.Models.Pdsupdateprodcatlist;
   using Sxe.TWL.Data.Models.Pdsrefreshprodcatcriteria;
   using Sxe.TWL.Data.Models.Pdsrefreshprodcatresults;
   using Sxe.TWL.Data.Models.Pdsreceipttransdetailcriteria;
   using Sxe.TWL.Data.Models.Pdsreceipttransdetail;
   using Sxe.TWL.Data.Models.Pdsreceipttransmastercriteria;
   using Sxe.TWL.Data.Models.Pdsreceipttransmaster;
   using Sxe.TWL.Data.Models.Pdsreceipttranscontcriteria;
   using Sxe.TWL.Data.Models.Pdsreceipttranscontmst;
   using Sxe.TWL.Data.Models.Pdsreceipttranscontdet;
   using Sxe.TWL.Data.Models.Pdsrectransactioncriteria;
   using Sxe.TWL.Data.Models.Pdsrectransactionresults;
   using Sxe.TWL.Data.Models.Pdsreclinetransactioncriteria;
   using Sxe.TWL.Data.Models.Pdsreclinetransactionresults;
   using Sxe.TWL.Data.Models.Pdsstationcriteria;
   using Sxe.TWL.Data.Models.Pdsstationresults;
   using Sxe.TWL.Data.Models.Pdssystemparametertypes;
   using Sxe.TWL.Data.Models.Pdssystemparamdefnlistcriteria;
   using Sxe.TWL.Data.Models.Pdssystemparamdefnlistresults;
   using Sxe.TWL.Data.Models.Pdsupdatesysparamvalcriteria;
   using Sxe.TWL.Data.Models.Pdsdeletesysparamvalcriteria;
   using Sxe.TWL.Data.Models.Pdsvalmultiloccreatecriteria;
   using Sxe.TWL.Data.Models.Pdsbldmultiloclistcriteria;
   using Sxe.TWL.Data.Models.Pdsgetmultiloccontrolcriteria;
   using Sxe.TWL.Data.Models.Pdsgetmultiloccontrolresult;
   using Sxe.TWL.Data.Models.Pdsgetmultiloclistcriteria;
   using Sxe.TWL.Data.Models.Pdsgetmultiloclistresults;
   using Sxe.TWL.Data.Models.Pdsdeletemultilocbinscriteria;
   using Sxe.TWL.Data.Models.Pdscreatemultiloccriteria;
   using Sxe.TWL.Data.Models.Pdsgetlabeludccriteria;
   using Sxe.TWL.Data.Models.Pdsgetlabeludcresults;
   using Sxe.TWL.Data.Models.Pdscopyalllabeludccriteria;
   using Sxe.TWL.Data.Models.Pdscreatelabelcolevudccriteria;
   using Sxe.TWL.Data.Models.Pdscreatelabelprntlevudccriteria;
   using Sxe.TWL.Data.Models.Pdsdeletelabeludccriteria;
   using Sxe.TWL.Data.Models.Pdsgetlabelprintcriteria;
   using Sxe.TWL.Data.Models.Pdsgetlabelprintbinmstresults;
   using Sxe.TWL.Data.Models.Pdsgetlabelprintinvresults;
   using Sxe.TWL.Data.Models.Pdsgetlabelprintitemresults;
   using Sxe.TWL.Data.Models.Pdsgeneratelabelprintcriteria;
   using Sxe.TWL.Data.Models.Pdsgeneratelabelprtbincrit;
   using Sxe.TWL.Data.Models.Pdsgeneratelabelprtinvcrit;
   using Sxe.TWL.Data.Models.Pdsgeneratelabelprtitmcrit;
   using Sxe.TWL.Data.Models.Complex;
   using Sxe.TWL.Data.Repositories;
    
   [RoutePrefix("api/twl/astwladmin")]
   public partial class AstwladminApiController : ApiControllerBase
   {
      private readonly AstwladminRepository repository;
    
      public AstwladminApiController(AstwladminRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
      
      [Route("getpackinglistpo")]
      [HttpPost]
      public IEnumerable<Packinglistporesults> GetPackingListPO(Packinglistpocriteria packinglistpocriteria)
      {
         return this.repository.GetPackingListPO(packinglistpocriteria);
      } 
  
      
      [Route("packinglistvalidate")]
      [HttpPost]
      public void PackingListValidate(Packinglistvalidate packinglistvalidate)
      {
         this.repository.PackingListValidate(packinglistvalidate);
      } 
  
      
      [Route("packinglistcreate")]
      [HttpPost]
      public Packinglistcreate PackingListCreate(Packinglistcreate packinglistcreate)
      {
         return this.repository.PackingListCreate(packinglistcreate);
      } 
  
      
      [Route("getpolinedetail")]
      [HttpPost]
      public IEnumerable<Polinedetail> GetPOLineDetail(Polinedetailcriteria polinedetailcriteria)
      {
         return this.repository.GetPOLineDetail(polinedetailcriteria);
      } 
  
      
      [Route("packinglistaddpo")]
      [HttpPost]
      public IEnumerable<Messaging> PackingListAddPO(Packinglistaddpo packinglistaddpo)
      {
         return this.repository.PackingListAddPO(packinglistaddpo);
      } 
  
      
      [Route("packinglistdeletepo")]
      [HttpPost]
      public void PackingListDeletePO(Packinglistdeletepo packinglistdeletepo)
      {
         this.repository.PackingListDeletePO(packinglistdeletepo);
      } 
  
      
      [Route("getresendtransactions")]
      [HttpPost]
      public AstwladminGetResendTransactionsResponseAPI GetResendTransactions(Resendtranscriteria resendtranscriteria)
      {
         return this.repository.GetResendTransactions(resendtranscriteria);
      } 
  
      
      [Route("resendinitializesearch")]
      [HttpPost]
      public Resendinitsearch ResendInitializeSearch(Resendinitsearch resendinitsearch)
      {
         return this.repository.ResendInitializeSearch(resendinitsearch);
      } 
  
      
      [Route("resendtransactionassign")]
      [HttpPost]
      public IEnumerable<Messaging> ResendTransactionAssign(IEnumerable<Resendtranslist> resendtranslist)
      {
         return this.repository.ResendTransactionAssign(resendtranslist);
      } 
  
      
      [Route("deletedroplogs")]
      [HttpPost]
      public void DeleteDropLogs(Deletedrplog deletedrplog)
      {
         this.repository.DeleteDropLogs(deletedrplog);
      } 
  
      
      [Route("printreceivinglabels")]
      [HttpPost]
      public void PrintReceivingLabels(Rcvlabelcriteria rcvlabelcriteria)
      {
         this.repository.PrintReceivingLabels(rcvlabelcriteria);
      } 
  
      
      [Route("replenishmentsbuildother")]
      [HttpPost]
      public void ReplenishmentsBuildOther(IEnumerable<Replotherbuildlist> replotherbuildlist)
      {
         this.repository.ReplenishmentsBuildOther(replotherbuildlist);
      } 
  
      
      [Route("replenishmentsbuildtopoffs")]
      [HttpPost]
      public void ReplenishmentsBuildTopOffs(IEnumerable<Repltopoffbuildlist> repltopoffbuildlist)
      {
         this.repository.ReplenishmentsBuildTopOffs(repltopoffbuildlist);
      } 
  
      
      [Route("replenishmentsclear")]
      [HttpPost]
      public Replclearresults ReplenishmentsClear(IEnumerable<Replclearlist> replclearlist)
      {
         return this.repository.ReplenishmentsClear(replclearlist);
      } 
  
      
      [Route("replenishmentsloadpending")]
      [HttpPost]
      public IEnumerable<Replpending> ReplenishmentsLoadPending(Replpendingcriteria replpendingcriteria)
      {
         return this.repository.ReplenishmentsLoadPending(replpendingcriteria);
      } 
  
      
      [Route("replenishmentsloadtopoffs")]
      [HttpPost]
      public IEnumerable<Repltopoffs> ReplenishmentsLoadTopOffs(Repltopoffscriteria repltopoffscriteria)
      {
         return this.repository.ReplenishmentsLoadTopOffs(repltopoffscriteria);
      } 
  
      
      [Route("replenishmentsloadother")]
      [HttpPost]
      public AstwladminReplenishmentsLoadOtherResponseAPI ReplenishmentsLoadOther(Replothercriteria replothercriteria)
      {
         return this.repository.ReplenishmentsLoadOther(replothercriteria);
      } 
  
      
      [Route("getccitems")]
      [HttpPost]
      public AstwladminGetCCItemsResponseAPI GetCCItems(Ccitemscriteria ccitemscriteria)
      {
         return this.repository.GetCCItems(ccitemscriteria);
      } 
  
      
      [Route("getccitemlots")]
      [HttpPost]
      public IEnumerable<Ccitemlots> GetCCItemLots(IEnumerable<Ccitems> ccitems)
      {
         return this.repository.GetCCItemLots(ccitems);
      } 
  
      
      [Route("getcclocations")]
      [HttpPost]
      public AstwladminGetCCLocationsResponseAPI GetCCLocations(Cclocationscriteria cclocationscriteria)
      {
         return this.repository.GetCCLocations(cclocationscriteria);
      } 
  
      
      [Route("getcyclecountimpactforitems")]
      [HttpPost]
      public Ccimpact GetCycleCountImpactForItems(AstwladminGetCycleCountImpactForItemsRequestAPI AstwladminGetCycleCountImpactForItemsRequestAPI)
      {
         return this.repository.GetCycleCountImpactForItems(AstwladminGetCycleCountImpactForItemsRequestAPI);
      } 
  
      
      [Route("getcyclecountimpactforlocations")]
      [HttpPost]
      public Ccimpact GetCycleCountImpactForLocations(AstwladminGetCycleCountImpactForLocationsRequestAPI AstwladminGetCycleCountImpactForLocationsRequestAPI)
      {
         return this.repository.GetCycleCountImpactForLocations(AstwladminGetCycleCountImpactForLocationsRequestAPI);
      } 
  
      
      [Route("buildcyclecountsforitems")]
      [HttpPost]
      public Ccbuildresults BuildCycleCountsForItems(AstwladminBuildCycleCountsForItemsRequestAPI AstwladminBuildCycleCountsForItemsRequestAPI)
      {
         return this.repository.BuildCycleCountsForItems(AstwladminBuildCycleCountsForItemsRequestAPI);
      } 
  
      
      [Route("clearcyclecounts")]
      [HttpPost]
      public void ClearCycleCounts(IEnumerable<Inventoryids> inventoryids)
      {
         this.repository.ClearCycleCounts(inventoryids);
      } 
  
      
      [Route("buildcyclecountsforlocations")]
      [HttpPost]
      public Ccbuildresults BuildCycleCountsForLocations(AstwladminBuildCycleCountsForLocationsRequestAPI AstwladminBuildCycleCountsForLocationsRequestAPI)
      {
         return this.repository.BuildCycleCountsForLocations(AstwladminBuildCycleCountsForLocationsRequestAPI);
      } 
  
      
      [Route("getccemployees/{company}/{warehouse}/{cyclewave:int}")]
      [HttpGet]
      public IEnumerable<Ccemployees> GetCCEmployees(string company, string warehouse, int cyclewave)
      {
         return this.repository.GetCCEmployees(company, warehouse, cyclewave);
      } 
  
      
      [Route("setccemployees")]
      [HttpPost]
      public void SetCCEmployees(AstwladminSetCCEmployeesRequestAPI AstwladminSetCCEmployeesRequestAPI)
      {
         this.repository.SetCCEmployees(AstwladminSetCCEmployeesRequestAPI);
      } 
  
      
      [Route("rundailycccount/{company}/{warehouse}")]
      [HttpGet]
      public string RunDailyCcCount(string company, string warehouse)
      {
         return this.repository.RunDailyCcCount(company, warehouse);
      } 
  
      
      [Route("physicalinventorystatus")]
      [HttpPost]
      public Physinvsummary PhysicalInventoryStatus(Physinvcriteria physinvcriteria)
      {
         return this.repository.PhysicalInventoryStatus(physinvcriteria);
      } 
  
      
      [Route("physicalinventorystatuscontinued")]
      [HttpPost]
      public AstwladminPhysicalInventoryStatusContinuedResponseAPI PhysicalInventoryStatusContinued(Physinvsummary physinvsummary)
      {
         return this.repository.PhysicalInventoryStatusContinued(physinvsummary);
      } 
  
      
      [Route("physicalinventoryset")]
      [HttpPost]
      public AstwladminPhysicalInventorySetResponseAPI PhysicalInventorySet(Physinvcriteria physinvcriteria)
      {
         return this.repository.PhysicalInventorySet(physinvcriteria);
      } 
  
      
      [Route("physicalinventorycloseinit")]
      [HttpPost]
      public AstwladminPhysicalInventoryCloseInitResponseAPI PhysicalInventoryCloseInit(Physinvsummary physinvsummary)
      {
         return this.repository.PhysicalInventoryCloseInit(physinvsummary);
      } 
  
      
      [Route("physicalinventoryclose")]
      [HttpPost]
      public void PhysicalInventoryClose(Physinvsummary physinvsummary)
      {
         this.repository.PhysicalInventoryClose(physinvsummary);
      } 
  
      
      [Route("savesecurity")]
      [HttpPost]
      public void SaveSecurity(Savewlpasswd savewlpasswd)
      {
         this.repository.SaveSecurity(savewlpasswd);
      } 
  
      
      [Route("getinvdisclist")]
      [HttpPost]
      public AstwladminGetInvDiscListResponseAPI GetInvDiscList(Invdisclistcriteria invdisclistcriteria)
      {
         return this.repository.GetInvDiscList(invdisclistcriteria);
      } 
  
      
      [Route("buildinvdisccountsnegprep")]
      [HttpPost]
      public IEnumerable<Invdiscidlist> BuildInvDiscCountsNegPrep(IEnumerable<Invdiscneginv> invdiscneginv)
      {
         return this.repository.BuildInvDiscCountsNegPrep(invdiscneginv);
      } 
  
      
      [Route("buildinvdisccounts")]
      [HttpPost]
      public AstwladminBuildInvDiscCountsResponseAPI BuildInvDiscCounts(AstwladminBuildInvDiscCountsRequestAPI AstwladminBuildInvDiscCountsRequestAPI)
      {
         return this.repository.BuildInvDiscCounts(AstwladminBuildInvDiscCountsRequestAPI);
      } 
  
      
      [Route("buildinvdisccountscancel")]
      [HttpPost]
      public void BuildInvDiscCountsCancel(IEnumerable<Invdiscidlist> invdiscidlist)
      {
         this.repository.BuildInvDiscCountsCancel(invdiscidlist);
      } 
  
      
      [Route("deleteinvdisc")]
      [HttpPost]
      public void DeleteInvDisc(IEnumerable<Invdiscidlist> invdiscidlist)
      {
         this.repository.DeleteInvDisc(invdiscidlist);
      } 
  
      
      [Route("getominfo")]
      [HttpPost]
      public Ominfo GetOMInfo(Ominfo ominfo)
      {
         return this.repository.GetOMInfo(ominfo);
      } 
  
      
      [Route("omdropprep")]
      [HttpPost]
      public AstwladminOMDropPrepResponseAPI OMDropPrep(AstwladminOMDropPrepRequestAPI AstwladminOMDropPrepRequestAPI)
      {
         return this.repository.OMDropPrep(AstwladminOMDropPrepRequestAPI);
      } 
  
      
      [Route("omdrop")]
      [HttpPost]
      public AstwladminOMDropResponseAPI OMDrop(AstwladminOMDropRequestAPI AstwladminOMDropRequestAPI)
      {
         return this.repository.OMDrop(AstwladminOMDropRequestAPI);
      } 
  
      
      [Route("omdropfinish")]
      [HttpPost]
      public void OMDropFinish(IEnumerable<Omorderdroplist> omorderdroplist)
      {
         this.repository.OMDropFinish(omorderdroplist);
      } 
  
      
      [Route("getpickallocation")]
      [HttpPost]
      public AstwladminGetPickAllocationResponseAPI GetPickAllocation(Omorderlinekey omorderlinekey)
      {
         return this.repository.GetPickAllocation(omorderlinekey);
      } 
  
      
      [Route("deletepickallocation")]
      [HttpPost]
      public AstwladminDeletePickAllocationResponseAPI DeletePickAllocation(AstwladminDeletePickAllocationRequestAPI AstwladminDeletePickAllocationRequestAPI)
      {
         return this.repository.DeletePickAllocation(AstwladminDeletePickAllocationRequestAPI);
      } 
  
      
      [Route("preppickallocate")]
      [HttpPost]
      public IEnumerable<Allocavailinventory> PrepPickAllocate(Pickalloccriteria pickalloccriteria)
      {
         return this.repository.PrepPickAllocate(pickalloccriteria);
      } 
  
      
      [Route("createpickallocation")]
      [HttpPost]
      public Pickdetailsummary CreatePickAllocation(AstwladminCreatePickAllocationRequestAPI AstwladminCreatePickAllocationRequestAPI)
      {
         return this.repository.CreatePickAllocation(AstwladminCreatePickAllocationRequestAPI);
      } 
  
      
      [Route("autopickallocation")]
      [HttpPost]
      public Pickdetailsummary AutoPickAllocation(Pickdetailsummary pickdetailsummary)
      {
         return this.repository.AutoPickAllocation(pickdetailsummary);
      } 
  
      
      [Route("omundropprep")]
      [HttpPost]
      public AstwladminOMUnDropPrepResponseAPI OMUnDropPrep(AstwladminOMUnDropPrepRequestAPI AstwladminOMUnDropPrepRequestAPI)
      {
         return this.repository.OMUnDropPrep(AstwladminOMUnDropPrepRequestAPI);
      } 
  
      
      [Route("omundrop")]
      [HttpPost]
      public AstwladminOMUnDropResponseAPI OMUnDrop(AstwladminOMUnDropRequestAPI AstwladminOMUnDropRequestAPI)
      {
         return this.repository.OMUnDrop(AstwladminOMUnDropRequestAPI);
      } 
  
      
      [Route("omzeroship")]
      [HttpPost]
      public AstwladminOMZeroShipResponseAPI OMZeroShip(AstwladminOMZeroShipRequestAPI AstwladminOMZeroShipRequestAPI)
      {
         return this.repository.OMZeroShip(AstwladminOMZeroShipRequestAPI);
      } 
  
      
      [Route("changeordercarrier")]
      [HttpPost]
      public string ChangeOrderCarrier(AstwladminChangeOrderCarrierRequestAPI AstwladminChangeOrderCarrierRequestAPI)
      {
         return this.repository.ChangeOrderCarrier(AstwladminChangeOrderCarrierRequestAPI);
      } 
  
      
      [Route("changeordercustom")]
      [HttpPost]
      public string ChangeOrderCustom(AstwladminChangeOrderCustomRequestAPI AstwladminChangeOrderCustomRequestAPI)
      {
         return this.repository.ChangeOrderCustom(AstwladminChangeOrderCustomRequestAPI);
      } 
  
      
      [Route("getwavepickemployees")]
      [HttpPost]
      public IEnumerable<Wavepickemployees> GetWavePickEmployees(Wavepickemployeecriteria wavepickemployeecriteria)
      {
         return this.repository.GetWavePickEmployees(wavepickemployeecriteria);
      } 
  
      
      [Route("setwavepickemployees")]
      [HttpPost]
      public void SetWavePickEmployees(AstwladminSetWavePickEmployeesRequestAPI AstwladminSetWavePickEmployeesRequestAPI)
      {
         this.repository.SetWavePickEmployees(AstwladminSetWavePickEmployeesRequestAPI);
      } 
  
      
      [Route("getwavepickassignments")]
      [HttpPost]
      public AstwladminGetWavePickAssignmentsResponseAPI GetWavePickAssignments(Wavepickcriteria wavepickcriteria)
      {
         return this.repository.GetWavePickAssignments(wavepickcriteria);
      } 
  
      
      [Route("omshiploaded")]
      [HttpPost]
      public void OMShipLoaded(IEnumerable<Omorderkey> omorderkey)
      {
         this.repository.OMShipLoaded(omorderkey);
      } 
  
      
      [Route("omhold")]
      [HttpPost]
      public void OMHold(IEnumerable<Omorderkey> omorderkey)
      {
         this.repository.OMHold(omorderkey);
      } 
  
      
      [Route("omholdlines")]
      [HttpPost]
      public void OMHoldLines(IEnumerable<Omorderlinekey> omorderlinekey)
      {
         this.repository.OMHoldLines(omorderlinekey);
      } 
  
      
      [Route("omreleaseholdlines")]
      [HttpPost]
      public void OMReleaseHoldLines(IEnumerable<Omorderlinekey> omorderlinekey)
      {
         this.repository.OMReleaseHoldLines(omorderlinekey);
      } 
  
      
      [Route("omreleasehold")]
      [HttpPost]
      public void OMReleaseHold(IEnumerable<Omorderkey> omorderkey)
      {
         this.repository.OMReleaseHold(omorderkey);
      } 
  
      
      [Route("updateprodcat")]
      [HttpPost]
      public void UpdateProdCat(IEnumerable<Updateprodcatlist> updateprodcatlist)
      {
         this.repository.UpdateProdCat(updateprodcatlist);
      } 
  
      
      [Route("refreshprodcat")]
      [HttpPost]
      public IEnumerable<Refreshprodcatresults> RefreshProdCat(Refreshprodcatcriteria refreshprodcatcriteria)
      {
         return this.repository.RefreshProdCat(refreshprodcatcriteria);
      } 
  
      
      [Route("getreceipttransactiondetail")]
      [HttpPost]
      public IEnumerable<Receipttransdetail> GetReceiptTransactionDetail(Receipttransdetailcriteria receipttransdetailcriteria)
      {
         return this.repository.GetReceiptTransactionDetail(receipttransdetailcriteria);
      } 
  
      
      [Route("getreceipttransactionmaster")]
      [HttpPost]
      public IEnumerable<Receipttransmaster> GetReceiptTransactionMaster(Receipttransmastercriteria receipttransmastercriteria)
      {
         return this.repository.GetReceiptTransactionMaster(receipttransmastercriteria);
      } 
  
      
      [Route("getreceipttransactioncontents")]
      [HttpPost]
      public AstwladminGetReceiptTransactionContentsResponseAPI GetReceiptTransactionContents(Receipttranscontcriteria receipttranscontcriteria)
      {
         return this.repository.GetReceiptTransactionContents(receipttranscontcriteria);
      } 
  
      
      [Route("deletereceipttransaction")]
      [HttpPost]
      public void DeleteReceiptTransaction(Receipttranscontcriteria receipttranscontcriteria)
      {
         this.repository.DeleteReceiptTransaction(receipttranscontcriteria);
      } 
  
      
      [Route("getreceipttransactionslist")]
      [HttpPost]
      public IEnumerable<Rectransactionresults> GetReceiptTransactionsList(Rectransactioncriteria rectransactioncriteria)
      {
         return this.repository.GetReceiptTransactionsList(rectransactioncriteria);
      } 
  
      
      [Route("getreceiptlinestransactionslist")]
      [HttpPost]
      public IEnumerable<Reclinetransactionresults> GetReceiptLinesTransactionsList(Reclinetransactioncriteria reclinetransactioncriteria)
      {
         return this.repository.GetReceiptLinesTransactionsList(reclinetransactioncriteria);
      } 
  
      
      [Route("getstationlist")]
      [HttpPost]
      public AstwladminGetStationListResponseAPI GetStationList(Stationcriteria stationcriteria)
      {
         return this.repository.GetStationList(stationcriteria);
      } 
  
      
      [Route("getsystemparametertypelist")]
      [HttpGet]
      public IEnumerable<Systemparametertypes> GetSystemParameterTypeList()
      {
         return this.repository.GetSystemParameterTypeList();
      } 
  
      
      [Route("getsystemparameterdefinitionlist")]
      [HttpPost]
      public IEnumerable<Systemparamdefnlistresults> GetSystemParameterDefinitionList(Systemparamdefnlistcriteria systemparamdefnlistcriteria)
      {
         return this.repository.GetSystemParameterDefinitionList(systemparamdefnlistcriteria);
      } 
  
      
      [Route("updatesystemparametervalue")]
      [HttpPost]
      public void UpdateSystemParameterValue(Updatesysparamvalcriteria updatesysparamvalcriteria)
      {
         this.repository.UpdateSystemParameterValue(updatesysparamvalcriteria);
      } 
  
      
      [Route("deletesystemparametervalue")]
      [HttpPost]
      public void DeleteSystemParameterValue(Deletesysparamvalcriteria deletesysparamvalcriteria)
      {
         this.repository.DeleteSystemParameterValue(deletesysparamvalcriteria);
      } 
  
      
      [Route("validatemultiplelocationcreate")]
      [HttpPost]
      public void ValidateMultipleLocationCreate(Valmultiloccreatecriteria valmultiloccreatecriteria)
      {
         this.repository.ValidateMultipleLocationCreate(valmultiloccreatecriteria);
      } 
  
      
      [Route("buildmultiplelocationworkinglist")]
      [HttpPost]
      public void BuildMultipleLocationWorkingList(Bldmultiloclistcriteria bldmultiloclistcriteria)
      {
         this.repository.BuildMultipleLocationWorkingList(bldmultiloclistcriteria);
      } 
  
      
      [Route("getmultiplelocationworkingcontrol")]
      [HttpPost]
      public Getmultiloccontrolresult GetMultipleLocationWorkingControl(Getmultiloccontrolcriteria getmultiloccontrolcriteria)
      {
         return this.repository.GetMultipleLocationWorkingControl(getmultiloccontrolcriteria);
      } 
  
      
      [Route("getmultiplelocationworkinglist")]
      [HttpPost]
      public AstwladminGetMultipleLocationWorkingListResponseAPI GetMultipleLocationWorkingList(Getmultiloclistcriteria getmultiloclistcriteria)
      {
         return this.repository.GetMultipleLocationWorkingList(getmultiloclistcriteria);
      } 
  
      
      [Route("deletemultiplelocationworkingbins")]
      [HttpPost]
      public void DeleteMultipleLocationWorkingBins(IEnumerable<Deletemultilocbinscriteria> deletemultilocbinscriteria)
      {
         this.repository.DeleteMultipleLocationWorkingBins(deletemultilocbinscriteria);
      } 
  
      
      [Route("createmultiplelocations")]
      [HttpPost]
      public void CreateMultipleLocations(Createmultiloccriteria createmultiloccriteria)
      {
         this.repository.CreateMultipleLocations(createmultiloccriteria);
      } 
  
      
      [Route("getlabeluserdefinedconfigurations")]
      [HttpPost]
      public IEnumerable<Getlabeludcresults> GetLabelUserDefinedConfigurations(Getlabeludccriteria getlabeludccriteria)
      {
         return this.repository.GetLabelUserDefinedConfigurations(getlabeludccriteria);
      } 
  
      
      [Route("copyalllabeluserdefinedconfigurations")]
      [HttpPost]
      public void CopyAllLabelUserDefinedConfigurations(Copyalllabeludccriteria copyalllabeludccriteria)
      {
         this.repository.CopyAllLabelUserDefinedConfigurations(copyalllabeludccriteria);
      } 
  
      
      [Route("createlabelcompanylevelconfiguration")]
      [HttpPost]
      public void CreateLabelCompanyLevelConfiguration(IEnumerable<Createlabelcolevudccriteria> createlabelcolevudccriteria)
      {
         this.repository.CreateLabelCompanyLevelConfiguration(createlabelcolevudccriteria);
      } 
  
      
      [Route("createlabelprinterlevelconfiguration")]
      [HttpPost]
      public void CreateLabelPrinterLevelConfiguration(IEnumerable<Createlabelprntlevudccrit> createlabelprntlevudccrit)
      {
         this.repository.CreateLabelPrinterLevelConfiguration(createlabelprntlevudccrit);
      } 
  
      
      [Route("deletelabeluserdefinedconfigurations")]
      [HttpPost]
      public void DeleteLabelUserDefinedConfigurations(IEnumerable<Deletelabeludccriteria> deletelabeludccriteria)
      {
         this.repository.DeleteLabelUserDefinedConfigurations(deletelabeludccriteria);
      } 
  
      
      [Route("getlabelprintlist")]
      [HttpPost]
      public AstwladminGetLabelPrintListResponseAPI GetLabelPrintList(Getlabelprintcriteria getlabelprintcriteria)
      {
         return this.repository.GetLabelPrintList(getlabelprintcriteria);
      } 
  
      
      [Route("generatelabelprint")]
      [HttpPost]
      public AstwladminGenerateLabelPrintResponseAPI GenerateLabelPrint(AstwladminGenerateLabelPrintRequestAPI AstwladminGenerateLabelPrintRequestAPI)
      {
         return this.repository.GenerateLabelPrint(AstwladminGenerateLabelPrintRequestAPI);
      } 
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  