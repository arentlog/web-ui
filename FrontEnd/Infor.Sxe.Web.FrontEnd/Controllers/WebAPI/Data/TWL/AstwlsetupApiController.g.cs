//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.TWL
{  
   using Sxe.TWL.Data.Models.PdsContext;
   using Sxe.TWL.Data.Models.Pdsaltloc;
   using Sxe.TWL.Data.Models.Pdsaltloccriteria;
   using Sxe.TWL.Data.Models.Pdsabcclasscriteria;
   using Sxe.TWL.Data.Models.Pdsabcclass;
   using Sxe.TWL.Data.Models.Pdsabcapplycriteria;
   using Sxe.TWL.Data.Models.Pdsccsetupcriteria;
   using Sxe.TWL.Data.Models.Pdsccsetup;
   using Sxe.TWL.Data.Models.Pdsempmstcopycriteria;
   using Sxe.TWL.Data.Models.Pdsempmstcopy;
   using Sxe.TWL.Data.Models.Pdsitemdetail;
   using Sxe.TWL.Data.Models.Pdsitemdetailupdresponse;
   using Sxe.TWL.Data.Models.Pdsitemdetailcriteria;
   using Sxe.TWL.Data.Models.Pdsitemprimeupd;
   using Sxe.TWL.Data.Models.Pdsitemkitupd;
   using Sxe.TWL.Data.Models.Pdsseqcontrolcriteria;
   using Sxe.TWL.Data.Models.Pdsseqcontrollist;
   using Sxe.TWL.Data.Models.Pdslocationcriteria;
   using Sxe.TWL.Data.Models.Pdslocationresults;
   using Sxe.TWL.Data.Models.Pdsuserspecificcriteria;
   using Sxe.TWL.Data.Models.Pdsuserspecificresults;
   using Sxe.TWL.Data.Models.Pdscopyuserspecific;
   using Sxe.TWL.Data.Models.Pdsgetcrossrefcriteria;
   using Sxe.TWL.Data.Models.Pdsgetcrossrefresults;
   using Sxe.TWL.Data.Models.Pdsvendorshipfromcriteria;
   using Sxe.TWL.Data.Models.Pdsvendorshipfromresults;
   using Sxe.TWL.Data.Models.Pdsbarcodeidcriteria;
   using Sxe.TWL.Data.Models.Pdsbarcodeidresults;
   using Sxe.TWL.Data.Models.Pdsbarcodedetailcriteria;
   using Sxe.TWL.Data.Models.Pdsbarcodedetailresults;
   using Sxe.TWL.Data.Models.Pdsautodroprule;
   using Sxe.TWL.Data.Models.PdsdrpRules;
   using Sxe.TWL.Data.Models.Pdsbinlocationcriteria;
   using Sxe.TWL.Data.Models.Pdsbinlocationresults;
   using Sxe.TWL.Data.Models.Complex;
   using Sxe.TWL.Data.Repositories;
    
   [RoutePrefix("api/twl/astwlsetup")]
   public partial class AstwlsetupApiController : ApiControllerBase
   {
      private readonly AstwlsetupRepository repository;
    
      public AstwlsetupApiController(AstwlsetupRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
      
      [Route("createaltloc")]
      [HttpPost]
      public void CreateAltLoc(Altloc altloc)
      {
         this.repository.CreateAltLoc(altloc);
      } 
  
      
      [Route("deletealtloc")]
      [HttpPost]
      public void DeleteAltLoc(Altloccriteria altloccriteria)
      {
         this.repository.DeleteAltLoc(altloccriteria);
      } 
  
      
      [Route("getaltloc")]
      [HttpPost]
      public Altloc GetAltLoc(Altloccriteria altloccriteria)
      {
         return this.repository.GetAltLoc(altloccriteria);
      } 
  
      
      [Route("updatealtloc")]
      [HttpPost]
      public void UpdateAltLoc(Altloc altloc)
      {
         this.repository.UpdateAltLoc(altloc);
      } 
  
      
      [Route("getabcclassification")]
      [HttpPost]
      public Abcclass GetABCClassification(Abcclasscriteria abcclasscriteria)
      {
         return this.repository.GetABCClassification(abcclasscriteria);
      } 
  
      
      [Route("updateabcclassification")]
      [HttpPost]
      public void UpdateABCClassification(Abcclass abcclass)
      {
         this.repository.UpdateABCClassification(abcclass);
      } 
  
      
      [Route("setabcrundate")]
      [HttpPost]
      public Abcclass SetABCRunDate(Abcclass abcclass)
      {
         return this.repository.SetABCRunDate(abcclass);
      } 
  
      
      [Route("abcapplypending")]
      [HttpPost]
      public void ABCApplyPending(Abcapplycriteria abcapplycriteria)
      {
         this.repository.ABCApplyPending(abcapplycriteria);
      } 
  
      
      [Route("getccsetup")]
      [HttpPost]
      public Ccsetup GetCCSetup(Ccsetupcriteria ccsetupcriteria)
      {
         return this.repository.GetCCSetup(ccsetupcriteria);
      } 
  
      
      [Route("updateccsetup")]
      [HttpPost]
      public void UpdateCCSetup(Ccsetup ccsetup)
      {
         this.repository.UpdateCCSetup(ccsetup);
      } 
  
      
      [Route("empmstcopy")]
      [HttpPost]
      public Empmstcopy EmpmstCopy(Empmstcopycriteria empmstcopycriteria)
      {
         return this.repository.EmpmstCopy(empmstcopycriteria);
      } 
  
      
      [Route("createitemdetail")]
      [HttpPost]
      public Itemdetail CreateItemDetail(Itemdetail itemdetail)
      {
         return this.repository.CreateItemDetail(itemdetail);
      } 
  
      
      [Route("updateitemdetail")]
      [HttpPost]
      public Itemdetailupdresponse UpdateItemDetail(Itemdetail itemdetail)
      {
         return this.repository.UpdateItemDetail(itemdetail);
      } 
  
      
      [Route("deleteitemdetail")]
      [HttpPost]
      public void DeleteItemDetail(Itemdetailcriteria itemdetailcriteria)
      {
         this.repository.DeleteItemDetail(itemdetailcriteria);
      } 
  
      
      [Route("updateitemprime")]
      [HttpPost]
      public void UpdateItemPrime(Itemprimeupd itemprimeupd)
      {
         this.repository.UpdateItemPrime(itemprimeupd);
      } 
  
      
      [Route("updateitemkit")]
      [HttpPost]
      public void UpdateItemKit(Itemkitupd itemkitupd)
      {
         this.repository.UpdateItemKit(itemkitupd);
      } 
  
      
      [Route("getseqcontrols")]
      [HttpPost]
      public AstwlsetupGetSeqControlsResponseAPI GetSeqControls(Seqcontrolcriteria seqcontrolcriteria)
      {
         return this.repository.GetSeqControls(seqcontrolcriteria);
      } 
  
      
      [Route("updateseqcontrols")]
      [HttpPost]
      public void UpdateSeqControls(IEnumerable<Seqcontrollist> seqcontrollist)
      {
         this.repository.UpdateSeqControls(seqcontrollist);
      } 
  
      
      [Route("deletelocation")]
      [HttpPost]
      public void DeleteLocation(Locationcriteria locationcriteria)
      {
         this.repository.DeleteLocation(locationcriteria);
      } 
  
      
      [Route("getlocations")]
      [HttpPost]
      public IEnumerable<Locationresults> GetLocations(Locationcriteria locationcriteria)
      {
         return this.repository.GetLocations(locationcriteria);
      } 
  
      
      [Route("getlocationswithalternates")]
      [HttpPost]
      public IEnumerable<Locationresults> GetLocationsWithAlternates(Locationcriteria locationcriteria)
      {
         return this.repository.GetLocationsWithAlternates(locationcriteria);
      } 
  
      
      [Route("getlocationdetail")]
      [HttpPost]
      public Locationresults GetLocationDetail(Locationcriteria locationcriteria)
      {
         return this.repository.GetLocationDetail(locationcriteria);
      } 
  
      
      [Route("validatelocationdetail")]
      [HttpPost]
      public void ValidateLocationDetail(Locationresults locationresults)
      {
         this.repository.ValidateLocationDetail(locationresults);
      } 
  
      
      [Route("getuserspecific")]
      [HttpPost]
      public AstwlsetupGetUserSpecificResponseAPI GetUserSpecific(Userspecificcriteria userspecificcriteria)
      {
         return this.repository.GetUserSpecific(userspecificcriteria);
      } 
  
      
      [Route("userspecificcopy")]
      [HttpPost]
      public string UserSpecificCopy(IEnumerable<Copyuserspecific> copyuserspecific)
      {
         return this.repository.UserSpecificCopy(copyuserspecific);
      } 
  
      
      [Route("getcrossreferencelist")]
      [HttpPost]
      public AstwlsetupGetCrossReferenceListResponseAPI GetCrossReferenceList(Getcrossrefcriteria getcrossrefcriteria)
      {
         return this.repository.GetCrossReferenceList(getcrossrefcriteria);
      } 
  
      
      [Route("getvendorshipfrom")]
      [HttpPost]
      public AstwlsetupGetVendorShipFromResponseAPI GetVendorShipFrom(Vendorshipfromcriteria vendorshipfromcriteria)
      {
         return this.repository.GetVendorShipFrom(vendorshipfromcriteria);
      } 
  
      
      [Route("getbarcodeid")]
      [HttpPost]
      public IEnumerable<Barcodeidresults> GetBarcodeId(Barcodeidcriteria barcodeidcriteria)
      {
         return this.repository.GetBarcodeId(barcodeidcriteria);
      } 
  
      
      [Route("getbarcodedetail")]
      [HttpPost]
      public IEnumerable<Barcodedetailresults> GetBarcodeDetail(Barcodedetailcriteria barcodedetailcriteria)
      {
         return this.repository.GetBarcodeDetail(barcodedetailcriteria);
      } 
  
      
      [Route("testautodroprule")]
      [HttpPost]
      public Autodroprule TestAutoDropRule(Autodroprule autodroprule)
      {
         return this.repository.TestAutoDropRule(autodroprule);
      } 
  
      
      [Route("validateautodroprule")]
      [HttpPost]
      public DrpRules ValidateAutoDropRule(DrpRules drp_rules)
      {
         return this.repository.ValidateAutoDropRule(drp_rules);
      } 
  
      
      [Route("getbinlocationlist")]
      [HttpPost]
      public AstwlsetupGetBinLocationListResponseAPI GetBinLocationList(Binlocationcriteria binlocationcriteria)
      {
         return this.repository.GetBinLocationList(binlocationcriteria);
      } 
  
      
      [Route("getbinlocationlistwithalternates")]
      [HttpPost]
      public AstwlsetupGetBinLocationListWithAlternatesResponseAPI GetBinLocationListWithAlternates(Binlocationcriteria binlocationcriteria)
      {
         return this.repository.GetBinLocationListWithAlternates(binlocationcriteria);
      } 
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  