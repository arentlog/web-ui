//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.GL
{  
   using Sxe.GL.Data.Models.PdsContext;
   using Sxe.GL.Data.Models.Pdsglaccountcreate;
   using Sxe.GL.Data.Models.Pdsglaccountcopy;
   using Sxe.GL.Data.Models.Pdsgldivisioncreate;
   using Sxe.GL.Data.Models.Pdsmessaging;
   using Sxe.GL.Data.Models.Pdsglbuildacctno;
   using Sxe.GL.Data.Models.Pdsglsbreqinit;
   using Sxe.GL.Data.Models.Pdsglsbreqcalc;
   using Sxe.GL.Data.Models.Pdsglsbreqrecalc;
   using Sxe.GL.Data.Models.Pdsglsbdivcreate;
   using Sxe.GL.Data.Models.Pdsglsbsavechanges;
   using Sxe.GL.Data.Models.Pdsglsbcreate;
   using Sxe.GL.Data.Models.Pdsglsbcopy;
   using Sxe.GL.Data.Models.Pdsglsdtrans;
   using Sxe.GL.Data.Models.Pdsglsdloadtt;
   using Sxe.GL.Data.Models.Pdsglsdtransloadtt;
   using Sxe.GL.Data.Models.Pdsglsfadddesign;
   using Sxe.GL.Data.Models.Pdsglsfdesign;
   using Sxe.GL.Data.Models.Pdsglsfdeletedesign;
   using Sxe.GL.Data.Models.Pdsglsfdelete;
   using Sxe.GL.Data.Models.Pdsglsfdesigndesc;
   using Sxe.GL.Data.Models.Pdsglsfduplicate;
   using Sxe.GL.Data.Models.Pdsglsfgetdesign;
   using Sxe.GL.Data.Models.Pdsglsfinsert;
   using Sxe.GL.Data.Models.Pdsglsfmove;
   using Sxe.GL.Data.Models.Pdsglsfrenumberdesign;
   using Sxe.GL.Data.Models.Pdsglsfsetup;
   using Sxe.GL.Data.Models.Pdsglsfsetupa;
   using Sxe.GL.Data.Models.Pdsglsfsetupc;
   using Sxe.GL.Data.Models.Pdsglsfsetupf;
   using Sxe.GL.Data.Models.Pdsglsfsetuph;
   using Sxe.GL.Data.Models.Pdsglsfsetupm;
   using Sxe.GL.Data.Models.Pdsglsfsetupp;
   using Sxe.GL.Data.Models.Pdsglsfsetups;
   using Sxe.GL.Data.Models.Pdsglsfsetupslist;
   using Sxe.GL.Data.Models.Pdsglsfsetupt;
   using Sxe.GL.Data.Models.Pdsglsfsetupu;
   using Sxe.GL.Data.Models.Pdsglsfsetupz;
   using Sxe.GL.Data.Models.Pdsglsa;
   using Sxe.GL.Data.Models.Pdsglvalidateparse;
   using Sxe.GL.Data.Models.Complex;
   using Sxe.GL.Data.Repositories;
    
   [RoutePrefix("api/gl/asglsetup")]
   public partial class AsglsetupApiController : ApiControllerBase
   {
      private readonly AsglsetupRepository repository;
    
      public AsglsetupApiController(AsglsetupRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
      
      [Route("glaccountcreate")]
      [HttpPost]
      public Glaccountcreate GLAccountCreate(Glaccountcreate glaccountcreate)
      {
         return this.repository.GLAccountCreate(glaccountcreate);
      } 
  
      
      [Route("glaccountcopy")]
      [HttpPost]
      public Glaccountcopy GLAccountCopy(Glaccountcopy glaccountcopy)
      {
         return this.repository.GLAccountCopy(glaccountcopy);
      } 
  
      
      [Route("gldivisioncreate")]
      [HttpPost]
      public IEnumerable<Messaging> GLDivisionCreate(Gldivisioncreate gldivisioncreate)
      {
         return this.repository.GLDivisionCreate(gldivisioncreate);
      } 
  
      
      [Route("glbuildacctno")]
      [HttpPost]
      public IEnumerable<Glbuildacctno> GLBuildAcctNo(IEnumerable<Glbuildacctno> glbuildacctno)
      {
         return this.repository.GLBuildAcctNo(glbuildacctno);
      } 
  
      
      [Route("glsbreqinit")]
      [HttpPost]
      public Glsbreqinitresults GLSBReqInit(Glsbreqinitcriteria glsbreqinitcriteria)
      {
         return this.repository.GLSBReqInit(glsbreqinitcriteria);
      } 
  
      
      [Route("glsbreqcalc")]
      [HttpPost]
      public Glsbreqcalcresults GLSBReqCalc(Glsbreqcalccriteria glsbreqcalccriteria)
      {
         return this.repository.GLSBReqCalc(glsbreqcalccriteria);
      } 
  
      
      [Route("glsbreqrecalc")]
      [HttpPost]
      public Glsbreqrecalcresults GLSBReqRecalc(Glsbreqrecalccriteria glsbreqrecalccriteria)
      {
         return this.repository.GLSBReqRecalc(glsbreqrecalccriteria);
      } 
  
      
      [Route("glsbdivcreate")]
      [HttpPost]
      public string GLSBDivCreate(Glsbdivcreate glsbdivcreate)
      {
         return this.repository.GLSBDivCreate(glsbdivcreate);
      } 
  
      
      [Route("glsbsavechanges")]
      [HttpPost]
      public void GLSBSaveChanges(Glsbsavechanges glsbsavechanges)
      {
         this.repository.GLSBSaveChanges(glsbsavechanges);
      } 
  
      
      [Route("glsbcreate")]
      [HttpPost]
      public Glsbcreateresults GLSBCreate(Glsbcreatecriteria glsbcreatecriteria)
      {
         return this.repository.GLSBCreate(glsbcreatecriteria);
      } 
  
      
      [Route("glsbcopy")]
      [HttpPost]
      public Glsbcopyresults GLSBCopy(Glsbcopycriteria glsbcopycriteria)
      {
         return this.repository.GLSBCopy(glsbcopycriteria);
      } 
  
      
      [Route("glsbdelete")]
      [HttpPost]
      public void GLSBDelete(AsglsetupGLSBDeleteRequestAPI AsglsetupGLSBDeleteRequestAPI)
      {
         this.repository.GLSBDelete(AsglsetupGLSBDeleteRequestAPI);
      } 
  
      
      [Route("glsdcopy")]
      [HttpPost]
      public Glsdtrans GLSDCopy(AsglsetupGLSDCopyRequestAPI AsglsetupGLSDCopyRequestAPI)
      {
         return this.repository.GLSDCopy(AsglsetupGLSDCopyRequestAPI);
      } 
  
      
      [Route("glsdcreate")]
      [HttpPost]
      public AsglsetupGLSDCreateResponseAPI GLSDCreate(Glsdloadttcriteria glsdloadttcriteria)
      {
         return this.repository.GLSDCreate(glsdloadttcriteria);
      } 
  
      
      [Route("glsdleavefield")]
      [HttpPost]
      public Glsdtrans GLSDLeaveField(AsglsetupGLSDLeaveFieldRequestAPI AsglsetupGLSDLeaveFieldRequestAPI)
      {
         return this.repository.GLSDLeaveField(AsglsetupGLSDLeaveFieldRequestAPI);
      } 
  
      
      [Route("glsdloadtt")]
      [HttpPost]
      public AsglsetupGLSDLoadTTResponseAPI GLSDLoadTT(Glsdloadttcriteria glsdloadttcriteria)
      {
         return this.repository.GLSDLoadTT(glsdloadttcriteria);
      } 
  
      
      [Route("glsdsave")]
      [HttpPost]
      public AsglsetupGLSDSaveResponseAPI GLSDSave(Glsdtrans glsdtrans)
      {
         return this.repository.GLSDSave(glsdtrans);
      } 
  
      
      [Route("glsdtransadd")]
      [HttpPost]
      public AsglsetupGLSDTransAddResponseAPI GLSDTransAdd(Glsdtrans glsdtrans)
      {
         return this.repository.GLSDTransAdd(glsdtrans);
      } 
  
      
      [Route("glsdtransaddleavefield")]
      [HttpPost]
      public Glsdtrans GLSDTransAddLeaveField(AsglsetupGLSDTransAddLeaveFieldRequestAPI AsglsetupGLSDTransAddLeaveFieldRequestAPI)
      {
         return this.repository.GLSDTransAddLeaveField(AsglsetupGLSDTransAddLeaveFieldRequestAPI);
      } 
  
      
      [Route("glsdtranscancel")]
      [HttpPost]
      public IEnumerable<Glsdtrans> GLSDTransCancel(IEnumerable<Glsdtrans> glsdtrans)
      {
         return this.repository.GLSDTransCancel(glsdtrans);
      } 
  
      
      [Route("glsdtransdelete")]
      [HttpPost]
      public AsglsetupGLSDTransDeleteResponseAPI GLSDTransDelete(Glsdtrans glsdtrans)
      {
         return this.repository.GLSDTransDelete(glsdtrans);
      } 
  
      
      [Route("glsdtransleavefield")]
      [HttpPost]
      public Glsdtrans GLSDTransLeaveField(AsglsetupGLSDTransLeaveFieldRequestAPI AsglsetupGLSDTransLeaveFieldRequestAPI)
      {
         return this.repository.GLSDTransLeaveField(AsglsetupGLSDTransLeaveFieldRequestAPI);
      } 
  
      
      [Route("glsdtransloadtt")]
      [HttpPost]
      public AsglsetupGLSDTransLoadTTResponseAPI GLSDTransLoadTT(Glsdtransloadttcriteria glsdtransloadttcriteria)
      {
         return this.repository.GLSDTransLoadTT(glsdtransloadttcriteria);
      } 
  
      
      [Route("glsdtransupdate")]
      [HttpPost]
      public AsglsetupGLSDTransUpdateResponseAPI GLSDTransUpdate(Glsdtrans glsdtrans)
      {
         return this.repository.GLSDTransUpdate(glsdtrans);
      } 
  
      
      [Route("glsdvalidate")]
      [HttpPost]
      public AsglsetupGLSDValidateResponseAPI GLSDValidate(AsglsetupGLSDValidateRequestAPI AsglsetupGLSDValidateRequestAPI)
      {
         return this.repository.GLSDValidate(AsglsetupGLSDValidateRequestAPI);
      } 
  
      
      [Route("glsfadddesign")]
      [HttpPost]
      public AsglsetupGLSFAddDesignResponseAPI GLSFAddDesign(Glsfadddesigncriteria glsfadddesigncriteria)
      {
         return this.repository.GLSFAddDesign(glsfadddesigncriteria);
      } 
  
      
      [Route("glsfdeletedesign")]
      [HttpPost]
      public void GLSFDeleteDesign(IEnumerable<Glsfdeletedesigncriteria> glsfdeletedesigncriteria)
      {
         this.repository.GLSFDeleteDesign(glsfdeletedesigncriteria);
      } 
  
      
      [Route("glsfdelete")]
      [HttpPost]
      public void GLSFDelete(IEnumerable<Glsfdeletecriteria> glsfdeletecriteria)
      {
         this.repository.GLSFDelete(glsfdeletecriteria);
      } 
  
      
      [Route("glsfdesigndesc")]
      [HttpPost]
      public void GLSFDesignDesc(Glsfdesigndesccriteria glsfdesigndesccriteria)
      {
         this.repository.GLSFDesignDesc(glsfdesigndesccriteria);
      } 
  
      
      [Route("glsfduplicate")]
      [HttpPost]
      public AsglsetupGLSFDuplicateResponseAPI GLSFDuplicate(AsglsetupGLSFDuplicateRequestAPI AsglsetupGLSFDuplicateRequestAPI)
      {
         return this.repository.GLSFDuplicate(AsglsetupGLSFDuplicateRequestAPI);
      } 
  
      
      [Route("glsfgetdesign")]
      [HttpPost]
      public AsglsetupGLSFGetDesignResponseAPI GLSFGetDesign(Glsfgetdesigncriteria glsfgetdesigncriteria)
      {
         return this.repository.GLSFGetDesign(glsfgetdesigncriteria);
      } 
  
      
      [Route("glsfinsert")]
      [HttpPost]
      public void GLSFInsert(Glsfinsertcriteria glsfinsertcriteria)
      {
         this.repository.GLSFInsert(glsfinsertcriteria);
      } 
  
      
      [Route("glsfmove")]
      [HttpPost]
      public void GLSFMove(IEnumerable<Glsfmovecriteria> glsfmovecriteria)
      {
         this.repository.GLSFMove(glsfmovecriteria);
      } 
  
      
      [Route("glsfrenumberdesign")]
      [HttpPost]
      public void GLSFRenumberDesign(IEnumerable<Glsfrenumberdesigncriteria> glsfrenumberdesigncriteria)
      {
         this.repository.GLSFRenumberDesign(glsfrenumberdesigncriteria);
      } 
  
      
      [Route("glsfparseaccount/{cGLString}")]
      [HttpGet]
      public AsglsetupGLSFParseAccountResponseAPI GLSFParseAccount(string cGLString)
      {
         return this.repository.GLSFParseAccount(cGLString);
      } 
  
      
      [Route("glsfsetupa")]
      [HttpPost]
      public AsglsetupGLSFSetupAResponseAPI GLSFSetupA(AsglsetupGLSFSetupARequestAPI AsglsetupGLSFSetupARequestAPI)
      {
         return this.repository.GLSFSetupA(AsglsetupGLSFSetupARequestAPI);
      } 
  
      
      [Route("glsfsetupc")]
      [HttpPost]
      public AsglsetupGLSFSetupCResponseAPI GLSFSetupC(AsglsetupGLSFSetupCRequestAPI AsglsetupGLSFSetupCRequestAPI)
      {
         return this.repository.GLSFSetupC(AsglsetupGLSFSetupCRequestAPI);
      } 
  
      
      [Route("glsfsetupf")]
      [HttpPost]
      public AsglsetupGLSFSetupFResponseAPI GLSFSetupF(AsglsetupGLSFSetupFRequestAPI AsglsetupGLSFSetupFRequestAPI)
      {
         return this.repository.GLSFSetupF(AsglsetupGLSFSetupFRequestAPI);
      } 
  
      
      [Route("glsfsetuph")]
      [HttpPost]
      public AsglsetupGLSFSetupHResponseAPI GLSFSetupH(AsglsetupGLSFSetupHRequestAPI AsglsetupGLSFSetupHRequestAPI)
      {
         return this.repository.GLSFSetupH(AsglsetupGLSFSetupHRequestAPI);
      } 
  
      
      [Route("glsfsetupm")]
      [HttpPost]
      public AsglsetupGLSFSetupMResponseAPI GLSFSetupM(AsglsetupGLSFSetupMRequestAPI AsglsetupGLSFSetupMRequestAPI)
      {
         return this.repository.GLSFSetupM(AsglsetupGLSFSetupMRequestAPI);
      } 
  
      
      [Route("glsfsetupp")]
      [HttpPost]
      public AsglsetupGLSFSetupPResponseAPI GLSFSetupP(AsglsetupGLSFSetupPRequestAPI AsglsetupGLSFSetupPRequestAPI)
      {
         return this.repository.GLSFSetupP(AsglsetupGLSFSetupPRequestAPI);
      } 
  
      
      [Route("glsfsetups")]
      [HttpPost]
      public AsglsetupGLSFSetupSResponseAPI GLSFSetupS(AsglsetupGLSFSetupSRequestAPI AsglsetupGLSFSetupSRequestAPI)
      {
         return this.repository.GLSFSetupS(AsglsetupGLSFSetupSRequestAPI);
      } 
  
      
      [Route("glsfsetupslist")]
      [HttpPost]
      public AsglsetupGLSFSetupSListResponseAPI GLSFSetupSList(AsglsetupGLSFSetupSListRequestAPI AsglsetupGLSFSetupSListRequestAPI)
      {
         return this.repository.GLSFSetupSList(AsglsetupGLSFSetupSListRequestAPI);
      } 
  
      
      [Route("glsfsetupt")]
      [HttpPost]
      public AsglsetupGLSFSetupTResponseAPI GLSFSetupT(AsglsetupGLSFSetupTRequestAPI AsglsetupGLSFSetupTRequestAPI)
      {
         return this.repository.GLSFSetupT(AsglsetupGLSFSetupTRequestAPI);
      } 
  
      
      [Route("glsfsetupu")]
      [HttpPost]
      public AsglsetupGLSFSetupUResponseAPI GLSFSetupU(AsglsetupGLSFSetupURequestAPI AsglsetupGLSFSetupURequestAPI)
      {
         return this.repository.GLSFSetupU(AsglsetupGLSFSetupURequestAPI);
      } 
  
      
      [Route("glsfsetupz")]
      [HttpPost]
      public AsglsetupGLSFSetupZResponseAPI GLSFSetupZ(AsglsetupGLSFSetupZRequestAPI AsglsetupGLSFSetupZRequestAPI)
      {
         return this.repository.GLSFSetupZ(AsglsetupGLSFSetupZRequestAPI);
      } 
  
      
      [Route("glsasearchwordindex/{pvBatchsize:int}/{pvSearchstring}")]
      [HttpGet]
      public AsglsetupGLSASearchWordIndexResponseAPI GLSASearchWordIndex(int pvBatchsize, string pvSearchstring)
      {
         return this.repository.GLSASearchWordIndex(pvBatchsize, pvSearchstring);
      } 
  
      
      [Route("glvalidateparse")]
      [HttpPost]
      public Glvalidateparse GLValidateParse(Glvalidateparse glvalidateparse)
      {
         return this.repository.GLValidateParse(glvalidateparse);
      } 
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  