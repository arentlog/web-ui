//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 7622 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Web.Http;
using ServiceInterfaceClient.BaseClasses;
    
namespace Infor.Sxe.Web.FrontEnd.Controllers.WebAPI.Data.GL
{  
   using Sxe.GL.Data.Models.PdsContext;
   using Sxe.GL.Data.Models.Pdsgldisplayjournal;
   using Sxe.GL.Data.Models.Pdsglopenjournal;
   using Sxe.GL.Data.Models.Pdsgletioffsetaccts;
   using Sxe.GL.Data.Models.Pdsmessaging;
   using Sxe.GL.Data.Models.Pdsglembsearchupdate;
   using Sxe.GL.Data.Models.Pdsgletgrp;
   using Sxe.GL.Data.Models.Pdsgletresults;
   using Sxe.GL.Data.Models.Pdsgletentry;
   using Sxe.GL.Data.Models.Pdsgletbrowse;
   using Sxe.GL.Data.Models.Pdsgletfinupdrept;
   using Sxe.GL.Data.Models.Pdsprintersettings;
   using Sxe.GL.Data.Models.Pdsgleta;
   using Sxe.GL.Data.Models.Pdsgletainitiatepd;
   using Sxe.GL.Data.Models.Pdsgletaparam;
   using Sxe.GL.Data.Models.Pdsglupdate;
   using Sxe.GL.Data.Models.Complex;
   using Sxe.GL.Data.Repositories;
    
   [RoutePrefix("api/gl/asglentry")]
   public partial class AsglentryApiController : ApiControllerBase
   {
      private readonly AsglentryRepository repository;
    
      public AsglentryApiController(AsglentryRepository repository)
      {
         this.repository = repository;
         this.OnCreated();
      }
    
      partial void OnCreated();
    
      
      [Route("glclosejournal/{iJrnlno:int}")]
      [HttpGet]
      public void GLCloseJournal(int iJrnlno)
      {
         this.repository.GLCloseJournal(iJrnlno);
      } 
  
      
      [Route("gldisplayjournal")]
      [HttpPost]
      public Gldisplayjournalresults GLDisplayJournal(Gldisplayjournalcriteria gldisplayjournalcriteria)
      {
         return this.repository.GLDisplayJournal(gldisplayjournalcriteria);
      } 
  
      
      [Route("glopenjournal")]
      [HttpPost]
      public AsglentryGLOpenJournalResponseAPI GLOpenJournal(Glopenjournalcriteria glopenjournalcriteria)
      {
         return this.repository.GLOpenJournal(glopenjournalcriteria);
      } 
  
      
      [Route("glreopenjournal")]
      [HttpPost]
      public AsglentryGLReOpenJournalResponseAPI GLReOpenJournal(Glopenjournalcriteria glopenjournalcriteria)
      {
         return this.repository.GLReOpenJournal(glopenjournalcriteria);
      } 
  
      
      [Route("setdefaultperiods")]
      [HttpGet]
      public AsglentrySetDefaultPeriodsResponseAPI SetDefaultPeriods()
      {
         return this.repository.SetDefaultPeriods();
      } 
  
      
      [Route("gletivalidateoffsetaccounts")]
      [HttpPost]
      public IEnumerable<Messaging> GLETIValidateOffsetAccounts(AsglentryGLETIValidateOffsetAccountsRequestAPI AsglentryGLETIValidateOffsetAccountsRequestAPI)
      {
         return this.repository.GLETIValidateOffsetAccounts(AsglentryGLETIValidateOffsetAccountsRequestAPI);
      } 
  
      
      [Route("glembsearch")]
      [HttpPost]
      public AsglentryGLEMBSearchResponseAPI GLEMBSearch(Glembcriteria glembcriteria)
      {
         return this.repository.GLEMBSearch(glembcriteria);
      } 
  
      
      [Route("glembupdate")]
      [HttpPost]
      public AsglentryGLEMBUpdateResponseAPI GLEMBUpdate(Glembcriteria glembcriteria)
      {
         return this.repository.GLEMBUpdate(glembcriteria);
      } 
  
      
      [Route("fetchgrpdetail")]
      [HttpPost]
      public AsglentryFetchGrpDetailResponseAPI FetchGrpDetail(Gletgrpcriteria gletgrpcriteria)
      {
         return this.repository.FetchGrpDetail(gletgrpcriteria);
      } 
  
      
      [Route("createnewgroup")]
      [HttpGet]
      public string CreateNewGroup()
      {
         return this.repository.CreateNewGroup();
      } 
  
      
      [Route("entrygletupd")]
      [HttpPost]
      public AsglentryEntryGLETUpdResponseAPI EntryGLETUpd(Gletentrycriteria gletentrycriteria)
      {
         return this.repository.EntryGLETUpd(gletentrycriteria);
      } 
  
      
      [Route("glethistvisible/{cGlno}")]
      [HttpGet]
      public bool GLETHistVisible(string cGlno)
      {
         return this.repository.GLETHistVisible(cGlno);
      } 
  
      
      [Route("transbrowseglet")]
      [HttpPost]
      public Gletamtresults TransbrowseGLET(Gletbrowsecriteria gletbrowsecriteria)
      {
         return this.repository.TransbrowseGLET(gletbrowsecriteria);
      } 
  
      
      [Route("finalupdateglet/{cGroupName}/{iJrnlno:int}")]
      [HttpGet]
      public void FinalUpdateGLET(string cGroupName, int iJrnlno)
      {
         this.repository.FinalUpdateGLET(cGroupName, iJrnlno);
      } 
  
      
      [Route("gletfinupdreptinit/{cGroupName}")]
      [HttpGet]
      public Gletfinupdrept GLETFinUpdReptInit(string cGroupName)
      {
         return this.repository.GLETFinUpdReptInit(cGroupName);
      } 
  
      
      [Route("gletfinupdreptrun")]
      [HttpPost]
      public void GLETFinUpdReptRun(AsglentryGLETFinUpdReptRunRequestAPI AsglentryGLETFinUpdReptRunRequestAPI)
      {
         this.repository.GLETFinUpdReptRun(AsglentryGLETFinUpdReptRunRequestAPI);
      } 
  
      
      [Route("glembfieldchange")]
      [HttpGet]
      public AsglentryGLEMBFieldChangeResponseAPI GLEMBFieldChange()
      {
         return this.repository.GLEMBFieldChange();
      } 
  
      
      [Route("glembvalue")]
      [HttpPost]
      public AsglentryGLEMBValueResponseAPI GLEMBValue(Glembcriteria glembcriteria)
      {
         return this.repository.GLEMBValue(glembcriteria);
      } 
  
      
      [Route("gletainitiatear")]
      [HttpPost]
      public AsglentryGLETAInitiateARResponseAPI GLETAInitiateAR(AsglentryGLETAInitiateARRequestAPI AsglentryGLETAInitiateARRequestAPI)
      {
         return this.repository.GLETAInitiateAR(AsglentryGLETAInitiateARRequestAPI);
      } 
  
      
      [Route("gletainitiatepd")]
      [HttpPost]
      public AsglentryGLETAInitiatePDResponseAPI GLETAInitiatePD(Gletainitiatepd gletainitiatepd)
      {
         return this.repository.GLETAInitiatePD(gletainitiatepd);
      } 
  
      
      [Route("gletafieldleave")]
      [HttpPost]
      public AsglentryGLETAFieldLeaveResponseAPI GLETAFieldLeave(AsglentryGLETAFieldLeaveRequestAPI AsglentryGLETAFieldLeaveRequestAPI)
      {
         return this.repository.GLETAFieldLeave(AsglentryGLETAFieldLeaveRequestAPI);
      } 
  
      
      [Route("gletasetamounttoproof")]
      [HttpPost]
      public AsglentryGLETASetAmountToProofResponseAPI GLETASetAmountToProof(AsglentryGLETASetAmountToProofRequestAPI AsglentryGLETASetAmountToProofRequestAPI)
      {
         return this.repository.GLETASetAmountToProof(AsglentryGLETASetAmountToProofRequestAPI);
      } 
  
      
      [Route("gletaconvertpercenttoamount")]
      [HttpPost]
      public AsglentryGLETAConvertPercentToAmountResponseAPI GLETAConvertPercentToAmount(AsglentryGLETAConvertPercentToAmountRequestAPI AsglentryGLETAConvertPercentToAmountRequestAPI)
      {
         return this.repository.GLETAConvertPercentToAmount(AsglentryGLETAConvertPercentToAmountRequestAPI);
      } 
  
      
      [Route("gletagetupdatedata")]
      [HttpPost]
      public IEnumerable<Glupdate> GLETAGetUpdateData(AsglentryGLETAGetUpdateDataRequestAPI AsglentryGLETAGetUpdateDataRequestAPI)
      {
         return this.repository.GLETAGetUpdateData(AsglentryGLETAGetUpdateDataRequestAPI);
      } 
  
      protected override void Dispose(bool disposing)
      {
         if (!disposing)
         {
            return;
         }
         this.repository?.Dispose();
         base.Dispose(true);
      }
   }   
}
#pragma warning restore 1591
  