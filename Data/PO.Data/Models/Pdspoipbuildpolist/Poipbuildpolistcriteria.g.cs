//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.PO.Data.Models.Pdspoipbuildpolist
{
   [ModelName("Infor.Sxe.PO.Data.Models.Pdspoipbuildpolist.Poipbuildpolistcriteria")]
   public partial class Poipbuildpolistcriteria : ModelBase
   {
      public decimal vendno { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      [StringValidationAttribute]
      public string prod { get; set; }
      [StringValidationAttribute]
      public string compselect { get; set; }
      public int shipfmno { get; set; }
      [StringValidationAttribute]
      public string podisplay { get; set; }
      [StringValidationAttribute]
      public string buyer { get; set; }
      [StringValidationAttribute]
      public string rcvinit { get; set; }
      [StringValidationAttribute]
      public string receiverno { get; set; }
      [StringValidationAttribute]
      public string approval { get; set; }
      [StringValidationAttribute]
      public string takenby { get; set; }
      [StringValidationAttribute]
      public string transtype { get; set; }
      [StringValidationAttribute]
      public string botype { get; set; }
      [StringValidationAttribute]
      public string stage { get; set; }
      public DateTime? fromcosteddt { get; set; }
      public DateTime? fromduedt { get; set; }
      public DateTime? fromenterdt { get; set; }
      public DateTime? fromorderdt { get; set; }
      public DateTime? frompaiddt { get; set; }
      public DateTime? fromprinteddt { get; set; }
      public DateTime? fromreceiptdt { get; set; }
      public DateTime? fromreqshipdt { get; set; }
      public DateTime? tocosteddt { get; set; }
      public DateTime? toduedt { get; set; }
      public DateTime? toenterdt { get; set; }
      public DateTime? toorderdt { get; set; }
      public DateTime? topaiddt { get; set; }
      public DateTime? toprinteddt { get; set; }
      public DateTime? toreceiptdt { get; set; }
      public DateTime? toreqshipdt { get; set; }
      public int repairordno { get; set; }
      public int repairordsuf { get; set; }
      public int trackno { get; set; }
      [StringValidationAttribute]
      public string contno { get; set; }
      public int irecordcountlimit { get; set; }
      [StringValidationAttribute]
      public string customparam { get; set; }
      public int pono { get; set; }
      public int posuf { get; set; }
      [StringValidationAttribute]
      public string vendtype { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Poipbuildpolistcriteria BuildPoipbuildpolistcriteriaFromRow(DataRow row)
      {
         Poipbuildpolistcriteria entity = new Poipbuildpolistcriteria();
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.compselect = row.IsNull("compselect") ? string.Empty : row.Field<string>("compselect");
         entity.shipfmno = row.IsNull("shipfmno") ? 0 : row.Field<int>("shipfmno");
         entity.podisplay = row.IsNull("podisplay") ? string.Empty : row.Field<string>("podisplay");
         entity.buyer = row.IsNull("buyer") ? string.Empty : row.Field<string>("buyer");
         entity.rcvinit = row.IsNull("rcvinit") ? string.Empty : row.Field<string>("rcvinit");
         entity.receiverno = row.IsNull("receiverno") ? string.Empty : row.Field<string>("receiverno");
         entity.approval = row.IsNull("approval") ? string.Empty : row.Field<string>("approval");
         entity.takenby = row.IsNull("takenby") ? string.Empty : row.Field<string>("takenby");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.botype = row.IsNull("botype") ? string.Empty : row.Field<string>("botype");
         entity.stage = row.IsNull("stage") ? string.Empty : row.Field<string>("stage");
         entity.fromcosteddt = row.Field<DateTime?>("fromcosteddt");
         entity.fromduedt = row.Field<DateTime?>("fromduedt");
         entity.fromenterdt = row.Field<DateTime?>("fromenterdt");
         entity.fromorderdt = row.Field<DateTime?>("fromorderdt");
         entity.frompaiddt = row.Field<DateTime?>("frompaiddt");
         entity.fromprinteddt = row.Field<DateTime?>("fromprinteddt");
         entity.fromreceiptdt = row.Field<DateTime?>("fromreceiptdt");
         entity.fromreqshipdt = row.Field<DateTime?>("fromreqshipdt");
         entity.tocosteddt = row.Field<DateTime?>("tocosteddt");
         entity.toduedt = row.Field<DateTime?>("toduedt");
         entity.toenterdt = row.Field<DateTime?>("toenterdt");
         entity.toorderdt = row.Field<DateTime?>("toorderdt");
         entity.topaiddt = row.Field<DateTime?>("topaiddt");
         entity.toprinteddt = row.Field<DateTime?>("toprinteddt");
         entity.toreceiptdt = row.Field<DateTime?>("toreceiptdt");
         entity.toreqshipdt = row.Field<DateTime?>("toreqshipdt");
         entity.repairordno = row.IsNull("repairordno") ? 0 : row.Field<int>("repairordno");
         entity.repairordsuf = row.IsNull("repairordsuf") ? 0 : row.Field<int>("repairordsuf");
         entity.trackno = row.IsNull("trackno") ? 0 : row.Field<int>("trackno");
         entity.contno = row.IsNull("contno") ? string.Empty : row.Field<string>("contno");
         entity.irecordcountlimit = row.IsNull("irecordcountlimit") ? 0 : row.Field<int>("irecordcountlimit");
         entity.customparam = row.IsNull("customparam") ? string.Empty : row.Field<string>("customparam");
         entity.pono = row.IsNull("pono") ? 0 : row.Field<int>("pono");
         entity.posuf = row.IsNull("posuf") ? 0 : row.Field<int>("posuf");
         entity.vendtype = row.IsNull("vendtype") ? string.Empty : row.Field<string>("vendtype");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPoipbuildpolistcriteria(ref DataRow row, Poipbuildpolistcriteria entity)
      {
         row.SetField("vendno", entity.vendno);
         row.SetField("whse", entity.whse);
         row.SetField("prod", entity.prod);
         row.SetField("compselect", entity.compselect);
         row.SetField("shipfmno", entity.shipfmno);
         row.SetField("podisplay", entity.podisplay);
         row.SetField("buyer", entity.buyer);
         row.SetField("rcvinit", entity.rcvinit);
         row.SetField("receiverno", entity.receiverno);
         row.SetField("approval", entity.approval);
         row.SetField("takenby", entity.takenby);
         row.SetField("transtype", entity.transtype);
         row.SetField("botype", entity.botype);
         row.SetField("stage", entity.stage);
         row.SetField("fromcosteddt", entity.fromcosteddt);
         row.SetField("fromduedt", entity.fromduedt);
         row.SetField("fromenterdt", entity.fromenterdt);
         row.SetField("fromorderdt", entity.fromorderdt);
         row.SetField("frompaiddt", entity.frompaiddt);
         row.SetField("fromprinteddt", entity.fromprinteddt);
         row.SetField("fromreceiptdt", entity.fromreceiptdt);
         row.SetField("fromreqshipdt", entity.fromreqshipdt);
         row.SetField("tocosteddt", entity.tocosteddt);
         row.SetField("toduedt", entity.toduedt);
         row.SetField("toenterdt", entity.toenterdt);
         row.SetField("toorderdt", entity.toorderdt);
         row.SetField("topaiddt", entity.topaiddt);
         row.SetField("toprinteddt", entity.toprinteddt);
         row.SetField("toreceiptdt", entity.toreceiptdt);
         row.SetField("toreqshipdt", entity.toreqshipdt);
         row.SetField("repairordno", entity.repairordno);
         row.SetField("repairordsuf", entity.repairordsuf);
         row.SetField("trackno", entity.trackno);
         row.SetField("contno", entity.contno);
         row.SetField("irecordcountlimit", entity.irecordcountlimit);
         row.SetField("customparam", entity.customparam);
         row.SetField("pono", entity.pono);
         row.SetField("posuf", entity.posuf);
         row.SetField("vendtype", entity.vendtype);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
