//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SA
{
   /// <summary>
   /// System Admin, Operators
   /// </summary>
   
   public partial class SasooBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Operator Initials
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string oper2 { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Default Printer Name
      /// </summary>
      [StringValidationAttribute]
      public string printernm { get; set; }

      /// <summary>
      /// Password
      /// </summary>
      [StringValidationAttribute]
      public string password { get; set; }

      /// <summary>
      /// Startup Function Name
      /// </summary>
      [StringValidationAttribute]
      public string currproc { get; set; }

      /// <summary>
      /// Default Warehouse
      /// </summary>
      [StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Default OE Tran Type
      /// </summary>
      [StringValidationAttribute]
      public string oetrntype { get; set; }

      /// <summary>
      /// Update Home Whse Only
      /// </summary>
      public bool homewhsefl { get; set; }

      /// <summary>
      /// View Costs
      /// </summary>
      public bool seecostfl { get; set; }

      /// <summary>
      /// View Commission
      /// </summary>
      public bool seecommfl { get; set; }

      /// <summary>
      /// Change Balances
      /// </summary>
      public bool chgbalfl { get; set; }

      /// <summary>
      /// Customer Credits
      /// </summary>
      public bool credpostfl { get; set; }

      /// <summary>
      /// Override Order Hold
      /// </summary>
      public bool holdoverfl { get; set; }

      /// <summary>
      /// Allow Terms Override
      /// </summary>
      public bool termsoverfl { get; set; }

      /// <summary>
      /// Allow PO,WT,Both or No Ties
      /// </summary>
      [StringValidationAttribute]
      public string temp { get; set; }

      /// <summary>
      /// Allow InterCo Processing
      /// </summary>
      public bool intercofl { get; set; }

      /// <summary>
      /// Allow Non-Stock Entry
      /// </summary>
      public bool nonstockfl { get; set; }

      /// <summary>
      /// Allow PO Non-Resale Entry
      /// </summary>
      public bool resalefl { get; set; }

      /// <summary>
      /// Extended System Table
      /// </summary>
      public bool extendfl { get; set; }

      /// <summary>
      /// Allow Ship To Address Override
      /// </summary>
      public bool shiptofl { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Customer Interactive OE
      /// </summary>
      public bool oephonefl { get; set; }

      /// <summary>
      /// AR
      /// </summary>
      [StringValidationAttribute]
      public string updglarty { get; set; }

      /// <summary>
      /// AP
      /// </summary>
      [StringValidationAttribute]
      public string updglapty { get; set; }

      /// <summary>
      /// IC
      /// </summary>
      [StringValidationAttribute]
      public string updglicty { get; set; }

      /// <summary>
      /// PO
      /// </summary>
      [StringValidationAttribute]
      public string updglpoty { get; set; }

      /// <summary>
      /// OE
      /// </summary>
      [StringValidationAttribute]
      public string updgloety { get; set; }

      /// <summary>
      /// WT
      /// </summary>
      [StringValidationAttribute]
      public string updglwtty { get; set; }

      /// <summary>
      /// KP
      /// </summary>
      [StringValidationAttribute]
      public string updglkpty { get; set; }

      /// <summary>
      /// Cash Rcpts Writeoff Lmt
      /// </summary>
      public decimal arwrtofflim { get; set; }

      /// <summary>
      /// Operator Prospect #
      /// </summary>
      public decimal tqprosno { get; set; }

      /// <summary>
      /// OE Ship Qty Override Type
      /// </summary>
      [StringValidationAttribute]
      public string oeqtyshipty { get; set; }

      /// <summary>
      /// Login Flag
      /// </summary>
      public bool loginfl { get; set; }

      /// <summary>
      /// MAIL
      /// </summary>
      [StringValidationAttribute]
      public string tqemailaddr { get; set; }

      /// <summary>
      /// Login Date
      /// </summary>
      public DateTime? logindt { get; set; }

      /// <summary>
      /// Operator Position
      /// </summary>
      [StringValidationAttribute]
      public string tqposition { get; set; }

      /// <summary>
      /// Login Time
      /// </summary>
      [StringValidationAttribute]
      public string logintm { get; set; }

      /// <summary>
      /// Delivery Preference
      /// </summary>
      [StringValidationAttribute]
      public string tqdelvrmeth { get; set; }

      /// <summary>
      /// OE Rebate Type
      /// </summary>
      [StringValidationAttribute]
      public string oerebty { get; set; }

      /// <summary>
      /// Access Notes
      /// </summary>
      public bool notesfl { get; set; }

      /// <summary>
      /// Vendor Lookups
      /// </summary>
      [StringValidationAttribute]
      public string vendlutype { get; set; }

      /// <summary>
      /// Ring Menu System
      /// </summary>
      public bool ringfl { get; set; }

      /// <summary>
      /// Assigned Salesrep
      /// </summary>
      [StringValidationAttribute]
      public string slsrep { get; set; }

      /// <summary>
      /// Use Previous Non-Stock Settings
      /// </summary>
      public bool useprevnsfl { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// OE Cost Override Type
      /// </summary>
      [StringValidationAttribute]
      public string oecostoverty { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// Open Order #
      /// </summary>
      public int openordno { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// Open Order Suf
      /// </summary>
      public int openordsuf { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// Default to Order Header
      /// </summary>
      public bool oeheaderfl { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// # Lines
      /// </summary>
      public int oelineno { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Only
      /// </summary>
      public bool oeonlyfl { get; set; }

      /// <summary>
      /// Approve WT's for Whse
      /// </summary>
      [StringValidationAttribute]
      public string wtapprwhse { get; set; }

      /// <summary>
      /// Allow Help Screen Entry
      /// </summary>
      public bool helpfl { get; set; }

      /// <summary>
      /// Receipt Printer
      /// </summary>
      [StringValidationAttribute]
      public string rprinternm { get; set; }

      /// <summary>
      /// Force Taken By Window
      /// </summary>
      public bool reqtakenfl { get; set; }

      /// <summary>
      /// Validate Taken By
      /// </summary>
      public bool valtakenfl { get; set; }

      /// <summary>
      /// Supervisor Status
      /// </summary>
      public bool superfl { get; set; }

      /// <summary>
      /// Customer Lookups
      /// </summary>
      [StringValidationAttribute]
      public string custlutype { get; set; }

      /// <summary>
      /// Access Secured Notes
      /// </summary>
      public bool secnotefl { get; set; }

      /// <summary>
      /// Customer # for Channel
      /// </summary>
      public decimal custno { get; set; }

      /// <summary>
      /// Security Violations
      /// </summary>
      public int securevno { get; set; }

      /// <summary>
      /// Person
      /// </summary>
      [StringValidationAttribute]
      public string person { get; set; }

      /// <summary>
      /// Product Lookups
      /// </summary>
      [StringValidationAttribute]
      public string prodlutype { get; set; }

      /// <summary>
      /// Display Options in OE
      /// </summary>
      public bool oeoptionfl { get; set; }

      /// <summary>
      /// Buy List
      /// </summary>
      public bool oebuylistfl { get; set; }

      /// <summary>
      /// Shipping Point
      /// </summary>
      [StringValidationAttribute]
      public string shippingpt { get; set; }

      /// <summary>
      /// Default Background Print
      /// </summary>
      public bool backfl { get; set; }

      /// <summary>
      /// Allow Catalog Stocking
      /// </summary>
      public bool catconvertfl { get; set; }

      /// <summary>
      /// Price/Discount Options
      /// </summary>
      [StringValidationAttribute]
      public string oepricefl { get; set; }

      /// <summary>
      /// A/R Debits
      /// </summary>
      public bool arecedbfl { get; set; }

      /// <summary>
      /// Change GL Cost
      /// </summary>
      public bool chgglcostfl { get; set; }

      /// <summary>
      /// Allow PO,WT,PO&WT,No Ties
      /// </summary>
      [StringValidationAttribute]
      public string oetietype { get; set; }

      /// <summary>
      /// Tender Type
      /// </summary>
      [StringValidationAttribute]
      public string tenderty { get; set; }

      /// <summary>
      /// Revise/Unlock
      /// </summary>
      public bool bprvunlkfl { get; set; }

      /// <summary>
      /// Bid Default Type
      /// </summary>
      [StringValidationAttribute]
      public string bpdeftype { get; set; }

      /// <summary>
      /// Oper Func
      /// </summary>
      [StringValidationAttribute]
      public string ourproc { get; set; }

      /// <summary>
      /// Start Dt
      /// </summary>
      public DateTime? startdt { get; set; }

      /// <summary>
      /// Start Time
      /// </summary>
      public int starttm { get; set; }

      /// <summary>
      /// Secure Div#
      /// </summary>
      public int secdivno { get; set; }

      /// <summary>
      /// Secure Dept#
      /// </summary>
      public int secdeptno { get; set; }

      /// <summary>
      /// Secure Sub#
      /// </summary>
      public int secsubno { get; set; }

      /// <summary>
      /// Verify Changes to PO or WT in Receiving
      /// </summary>
      public bool verrcvchgfl { get; set; }

      /// <summary>
      /// Ap Supervisor
      /// </summary>
      public bool apsuperfl { get; set; }

      /// <summary>
      /// Allow Non-Stock Comm Type Entry
      /// </summary>
      public bool nscommfl { get; set; }

      /// <summary>
      /// GLET Override Flag
      /// </summary>
      public bool gloverfl { get; set; }

      /// <summary>
      /// SPC Entry
      /// </summary>
      public bool spcchngfl { get; set; }

      /// <summary>
      /// Tax Override Flag
      /// </summary>
      public bool taxoverfl { get; set; }

      /// <summary>
      /// Display Usage Warning
      /// </summary>
      public bool usagewarnfl { get; set; }

      /// <summary>
      /// Mail Msg
      /// </summary>
      public bool oimailfl { get; set; }

      /// <summary>
      /// Phone Msg
      /// </summary>
      public bool oiphonefl { get; set; }

      /// <summary>
      /// CM Act
      /// </summary>
      public bool cmactfl { get; set; }

      /// <summary>
      /// Open PO #
      /// </summary>
      public int openpono { get; set; }

      /// <summary>
      /// Open PO Suffix
      /// </summary>
      public int openposuf { get; set; }

      /// <summary>
      /// Open WT #
      /// </summary>
      public int openwtno { get; set; }

      /// <summary>
      /// Open WT Suffix
      /// </summary>
      public int openwtsuf { get; set; }

      /// <summary>
      /// OS Login
      /// </summary>
      [StringValidationAttribute]
      public string loginnm { get; set; }

      /// <summary>
      /// OS Device
      /// </summary>
      [StringValidationAttribute]
      public string devicenm { get; set; }

      /// <summary>
      /// System Administrator
      /// </summary>
      public bool sysadminfl { get; set; }

      /// <summary>
      /// Language Code
      /// </summary>
      [StringValidationAttribute]
      public string langcd { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Allow OE Salesrep Override
      /// </summary>
      [StringValidationAttribute]
      public string oeslsrepfl { get; set; }

      /// <summary>
      /// Credit Card Masking
      /// </summary>
      [StringValidationAttribute]
      public string unmaskccty { get; set; }

      /// <summary>
      /// Access OE Promo Price Window
      /// </summary>
      [StringValidationAttribute]
      public string promoprcwin { get; set; }

      /// <summary>
      /// PC Password
      /// </summary>
      [StringValidationAttribute]
      public string pcpassword { get; set; }

      /// <summary>
      /// PC User Name
      /// </summary>
      [StringValidationAttribute]
      public string pcusername { get; set; }

      /// <summary>
      /// Delivery Preference
      /// </summary>
      [StringValidationAttribute]
      public string emdelvrmeth { get; set; }

      /// <summary>
      /// ExtLn
      /// </summary>
      [StringValidationAttribute]
      public string oeextlfl { get; set; }

      /// <summary>
      /// Allow Purchase Order Corrections
      /// </summary>
      public bool pocrctfl { get; set; }

      /// <summary>
      /// Password Changed
      /// </summary>
      public DateTime? pwlastchgdt { get; set; }

      /// <summary>
      /// Previous Password
      /// </summary>
      [StringValidationAttribute]
      public string pwprevious1 { get; set; }
      [StringValidationAttribute]
      public string pwprevious2 { get; set; }
      [StringValidationAttribute]
      public string pwprevious3 { get; set; }
      [StringValidationAttribute]
      public string pwprevious4 { get; set; }
      [StringValidationAttribute]
      public string pwprevious5 { get; set; }
      [StringValidationAttribute]
      public string pwprevious6 { get; set; }
      [StringValidationAttribute]
      public string pwprevious7 { get; set; }
      [StringValidationAttribute]
      public string pwprevious8 { get; set; }
      [StringValidationAttribute]
      public string pwprevious9 { get; set; }
      [StringValidationAttribute]
      public string pwprevious10 { get; set; }

      /// <summary>
      /// Unsuccessful Logins
      /// </summary>
      public int pwloginattempts { get; set; }

      /// <summary>
      /// Auto Ship Ty
      /// </summary>
      [StringValidationAttribute]
      public string vaautoshipty { get; set; }

      /// <summary>
      /// Auto Login Password
      /// </summary>
      [StringValidationAttribute]
      public string autologpasswd { get; set; }

      /// <summary>
      /// JMEC Allow Printed PO Update
      /// </summary>
      public bool jmupdprtpofl { get; set; }

      /// <summary>
      /// Allow User Clear at Login
      /// </summary>
      public bool userclearfl { get; set; }

      /// <summary>
      /// Default Header Entry Type
      /// </summary>
      [StringValidationAttribute]
      public string vaheaderty { get; set; }

      /// <summary>
      /// Section Line Entry Type
      /// </summary>
      [StringValidationAttribute]
      public string vaautolnentryty { get; set; }

      /// <summary>
      /// Whse Grp
      /// </summary>
      [StringValidationAttribute]
      public string whsegroup { get; set; }

      /// <summary>
      /// Min Hold Dollar Value
      /// </summary>
      public decimal popotyamtmin { get; set; }

      /// <summary>
      /// Max Hold Dollar Value
      /// </summary>
      public decimal popotyamtmax { get; set; }

      /// <summary>
      /// DO Min Hold Dollar Value
      /// </summary>
      public decimal podotyamtmin { get; set; }

      /// <summary>
      /// DO Max Hold Dollar Value
      /// </summary>
      public decimal podotyamtmax { get; set; }

      /// <summary>
      /// Min Hold Dollar Value
      /// </summary>
      public decimal oesotyamtmin { get; set; }

      /// <summary>
      /// Max Hold Dollar Value
      /// </summary>
      public decimal oesotyamtmax { get; set; }

      /// <summary>
      /// DO Min Hold Dollar Value
      /// </summary>
      public decimal oedotyamtmin { get; set; }

      /// <summary>
      /// DO Max Hold Dollar Value
      /// </summary>
      public decimal oedotyamtmax { get; set; }

      /// <summary>
      /// Min Hold Margin %
      /// </summary>
      public decimal oesotymrgpctmin { get; set; }

      /// <summary>
      /// Max Hold Margin %
      /// </summary>
      public decimal oesotymrgpctmax { get; set; }

      /// <summary>
      /// DO Min Hold Margin %
      /// </summary>
      public decimal oedotymrgpctmin { get; set; }

      /// <summary>
      /// DO Max Hold Margin %
      /// </summary>
      public decimal oedotymrgpctmax { get; set; }

      /// <summary>
      /// Min Hold Margin Amt
      /// </summary>
      public decimal oesotymrgamtmin { get; set; }

      /// <summary>
      /// Max Hold Margin Amt
      /// </summary>
      public decimal oesotymrgamtmax { get; set; }

      /// <summary>
      /// DO Min Hold Margin Amt
      /// </summary>
      public decimal oedotymrgamtmin { get; set; }

      /// <summary>
      /// DO Max Hold Margin Amt
      /// </summary>
      public decimal oedotymrgamtmax { get; set; }

      /// <summary>
      /// Form Printer Name
      /// </summary>
      [StringValidationAttribute]
      public string formprinternm { get; set; }

      /// <summary>
      /// User Group
      /// </summary>
      [StringValidationAttribute]
      public string usergroup { get; set; }

      /// <summary>
      /// Printer Group
      /// </summary>
      [StringValidationAttribute]
      public string saspgroup { get; set; }

      /// <summary>
      /// Updt Bin Loc
      /// </summary>
      public bool nsbinlocfl { get; set; }

      /// <summary>
      /// OE NS Ship Qty Override Type
      /// </summary>
      [StringValidationAttribute]
      public string oensqtyshpty { get; set; }

      /// <summary>
      /// Vendor Returns/Credits
      /// </summary>
      public bool vendpostfl { get; set; }

      /// <summary>
      /// Customer Returns
      /// </summary>
      public bool returnpostfl { get; set; }

      /// <summary>
      /// OAN-NS Stocking
      /// </summary>
      [StringValidationAttribute]
      public string nscrtoanty { get; set; }

      /// <summary>
      /// Status Copy/Chg For OAN-NS
      /// </summary>
      public bool icswstchgfl { get; set; }

      /// <summary>
      /// JM Prc/Cst Approve Type
      /// </summary>
      [StringValidationAttribute]
      public string jmapprvty { get; set; }

      /// <summary>
      /// Create OE Billing Orders From WT
      /// </summary>
      public bool autobillwhsefl { get; set; }

      /// <summary>
      /// Update Customer PO#
      /// </summary>
      public bool oeupdtcustpofl { get; set; }

      /// <summary>
      /// ICSW Acquire Date
      /// </summary>
      public bool icacquiredtfl { get; set; }

      /// <summary>
      /// Storefront User ID
      /// </summary>
      [StringValidationAttribute]
      public string storefrontuserid { get; set; }

      /// <summary>
      /// Limit Hold Codes
      /// </summary>
      [StringValidationAttribute]
      public string limitholdcds { get; set; }

      /// <summary>
      /// Limit Taken By
      /// </summary>
      public bool limittakenbyfl { get; set; }

      /// <summary>
      /// Limit Sales Rep
      /// </summary>
      public bool limitslsrepfl { get; set; }

      /// <summary>
      /// Showroom User
      /// </summary>
      public bool showroomuserfl { get; set; }

      /// <summary>
      /// WL Pick Type
      /// </summary>
      [StringValidationAttribute]
      public string wlpicktype { get; set; }

      /// <summary>
      /// Hard Price Override
      /// </summary>
      public bool oehardprcovrfl { get; set; }

      /// <summary>
      /// ICAMU Manual List Type
      /// </summary>
      [StringValidationAttribute]
      public string icmanlistty { get; set; }

      /// <summary>
      /// ICAMU Mass Maintenance
      /// </summary>
      public bool icmassmaintfl { get; set; }

      /// <summary>
      /// ICAMU Override Manual List Operator
      /// </summary>
      public bool icmanlistoverfl { get; set; }

      /// <summary>
      /// Update Product Notes
      /// </summary>
      public bool prodnotesfl { get; set; }

      /// <summary>
      /// Update Customer Notes
      /// </summary>
      public bool custnotesfl { get; set; }

      /// <summary>
      /// Cancel VA Lines
      /// </summary>
      public bool valinecancelfl { get; set; }

      /// <summary>
      /// Catalog Create Type
      /// </summary>
      [StringValidationAttribute]
      public string iccatcrtty { get; set; }

      /// <summary>
      /// Allow NCNR Entry
      /// </summary>
      public bool ncnrfl { get; set; }

      /// <summary>
      /// KP Prev Version Change
      /// </summary>
      [StringValidationAttribute]
      public string kpverchg { get; set; }

      /// <summary>
      /// VA Prev Version Change
      /// </summary>
      [StringValidationAttribute]
      public string vaverchg { get; set; }

      /// <summary>
      /// KP Prev Version Usage
      /// </summary>
      [StringValidationAttribute]
      public string kpveruse { get; set; }

      /// <summary>
      /// OE Change Line Type
      /// </summary>
      public bool oechglntypefl { get; set; }

      /// <summary>
      /// VA Prev Version Usage
      /// </summary>
      [StringValidationAttribute]
      public string vaveruse { get; set; }

      /// <summary>
      /// Allow Maintenance of Orig Promised Date
      /// </summary>
      public bool oeorigpromisefl { get; set; }

      /// <summary>
      /// Auto-Apply Credit Override
      /// </summary>
      public bool oeautoapplyovrfl { get; set; }

      /// <summary>
      /// Order Origin Change
      /// </summary>
      public bool originchangefl { get; set; }

      /// <summary>
      /// Device Location
      /// </summary>
      [StringValidationAttribute]
      public string devloc { get; set; }

      /// <summary>
      /// Auth Hold Default
      /// </summary>
      [StringValidationAttribute]
      public string holdforauthdefault { get; set; }

      /// <summary>
      /// Tolerance Override
      /// </summary>
      public bool oetoleranceovrfl { get; set; }

      /// <summary>
      /// Override International Hold
      /// </summary>
      public bool holdintlfl { get; set; }

      /// <summary>
      /// Configurator Access Code
      /// </summary>
      [StringValidationAttribute]
      public string cfgaccesscd { get; set; }

      /// <summary>
      /// KP PO/WT Ties
      /// </summary>
      [StringValidationAttribute]
      public string kptietype { get; set; }

      /// <summary>
      /// View Cross Cono Costs
      /// </summary>
      public bool xconocostfl { get; set; }

      /// <summary>
      /// Alternate Operator
      /// </summary>
      [StringValidationAttribute]
      public string altoperinit { get; set; }

      /// <summary>
      /// IFS User
      /// </summary>
      [StringValidationAttribute]
      public string ifsuser { get; set; }

      /// <summary>
      /// Catalog Stocking in IC
      /// </summary>
      [StringValidationAttribute]
      public string caticcrtty { get; set; }

      /// <summary>
      /// Action Code
      /// </summary>
      [StringValidationAttribute]
      public string esbactioncode { get; set; }

      /// <summary>
      /// Allow For Our Records Only Invoice
      /// </summary>
      public bool oenoinvoicefl { get; set; }

      /// <summary>
      /// Modify OE token
      /// </summary>
      public bool oetokenmodifyfl { get; set; }

      /// <summary>
      /// Allow OE Fulfillment
      /// </summary>
      [StringValidationAttribute]
      public string allowfulfillmentty { get; set; }

      /// <summary>
      /// Allow Sales Warehouse
      /// </summary>
      [StringValidationAttribute]
      public string oesaleswhsety { get; set; }

      /// <summary>
      /// Allow OAN-NS Create in Quote
      /// </summary>
      [StringValidationAttribute]
      public string nsquoteoanty { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildSasooBaseFromRow<T>(DataRow row) where T:SasooBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.printernm = row.IsNull("printernm") ? string.Empty : row.Field<string>("printernm");
         entity.oper2 = row.IsNull("oper2") ? string.Empty : row.Field<string>("oper2");
         entity.password = row.IsNull("password") ? string.Empty : row.Field<string>("password");
         entity.currproc = row.IsNull("currproc") ? string.Empty : row.Field<string>("currproc");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.oetrntype = row.IsNull("oetrntype") ? string.Empty : row.Field<string>("oetrntype");
         entity.homewhsefl = row.Field<bool>("homewhsefl");
         entity.seecostfl = row.Field<bool>("seecostfl");
         entity.seecommfl = row.Field<bool>("seecommfl");
         entity.chgbalfl = row.Field<bool>("chgbalfl");
         entity.credpostfl = row.Field<bool>("credpostfl");
         entity.holdoverfl = row.Field<bool>("holdoverfl");
         entity.termsoverfl = row.Field<bool>("termsoverfl");
         entity.temp = row.IsNull("temp") ? string.Empty : row.Field<string>("temp");
         entity.intercofl = row.Field<bool>("intercofl");
         entity.nonstockfl = row.Field<bool>("nonstockfl");
         entity.resalefl = row.Field<bool>("resalefl");
         entity.extendfl = row.Field<bool>("extendfl");
         entity.shiptofl = row.Field<bool>("shiptofl");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.oephonefl = row.Field<bool>("oephonefl");
         entity.updglarty = row.IsNull("updglarty") ? string.Empty : row.Field<string>("updglarty");
         entity.updglapty = row.IsNull("updglapty") ? string.Empty : row.Field<string>("updglapty");
         entity.updglicty = row.IsNull("updglicty") ? string.Empty : row.Field<string>("updglicty");
         entity.updglpoty = row.IsNull("updglpoty") ? string.Empty : row.Field<string>("updglpoty");
         entity.updgloety = row.IsNull("updgloety") ? string.Empty : row.Field<string>("updgloety");
         entity.updglwtty = row.IsNull("updglwtty") ? string.Empty : row.Field<string>("updglwtty");
         entity.updglkpty = row.IsNull("updglkpty") ? string.Empty : row.Field<string>("updglkpty");
         entity.arwrtofflim = row.IsNull("arwrtofflim") ? decimal.Zero : row.Field<decimal>("arwrtofflim");
         entity.tqprosno = row.IsNull("tqprosno") ? decimal.Zero : row.Field<decimal>("tqprosno");
         entity.oeqtyshipty = row.IsNull("oeqtyshipty") ? string.Empty : row.Field<string>("oeqtyshipty");
         entity.loginfl = row.Field<bool>("loginfl");
         entity.tqemailaddr = row.IsNull("tqemailaddr") ? string.Empty : row.Field<string>("tqemailaddr");
         entity.logindt = row.Field<DateTime?>("logindt");
         entity.tqposition = row.IsNull("tqposition") ? string.Empty : row.Field<string>("tqposition");
         entity.logintm = row.IsNull("logintm") ? string.Empty : row.Field<string>("logintm");
         entity.tqdelvrmeth = row.IsNull("tqdelvrmeth") ? string.Empty : row.Field<string>("tqdelvrmeth");
         entity.oerebty = row.IsNull("oerebty") ? string.Empty : row.Field<string>("oerebty");
         entity.notesfl = row.Field<bool>("notesfl");
         entity.vendlutype = row.IsNull("vendlutype") ? string.Empty : row.Field<string>("vendlutype");
         entity.ringfl = row.Field<bool>("ringfl");
         entity.slsrep = row.IsNull("slsrep") ? string.Empty : row.Field<string>("slsrep");
         entity.useprevnsfl = row.Field<bool>("useprevnsfl");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.oecostoverty = row.IsNull("oecostoverty") ? string.Empty : row.Field<string>("oecostoverty");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.openordno = row.IsNull("openordno") ? 0 : row.Field<int>("openordno");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.openordsuf = row.IsNull("openordsuf") ? 0 : row.Field<int>("openordsuf");
         entity.user6 = row.Field<decimal?>("user6");
         entity.oeheaderfl = row.Field<bool>("oeheaderfl");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.oelineno = row.IsNull("oelineno") ? 0 : row.Field<int>("oelineno");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.oeonlyfl = row.Field<bool>("oeonlyfl");
         entity.wtapprwhse = row.IsNull("wtapprwhse") ? string.Empty : row.Field<string>("wtapprwhse");
         entity.helpfl = row.Field<bool>("helpfl");
         entity.rprinternm = row.IsNull("rprinternm") ? string.Empty : row.Field<string>("rprinternm");
         entity.reqtakenfl = row.Field<bool>("reqtakenfl");
         entity.valtakenfl = row.Field<bool>("valtakenfl");
         entity.superfl = row.Field<bool>("superfl");
         entity.custlutype = row.IsNull("custlutype") ? string.Empty : row.Field<string>("custlutype");
         entity.secnotefl = row.Field<bool>("secnotefl");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.securevno = row.IsNull("securevno") ? 0 : row.Field<int>("securevno");
         entity.person = row.IsNull("person") ? string.Empty : row.Field<string>("person");
         entity.prodlutype = row.IsNull("prodlutype") ? string.Empty : row.Field<string>("prodlutype");
         entity.oeoptionfl = row.Field<bool>("oeoptionfl");
         entity.oebuylistfl = row.Field<bool>("oebuylistfl");
         entity.shippingpt = row.IsNull("shippingpt") ? string.Empty : row.Field<string>("shippingpt");
         entity.backfl = row.Field<bool>("backfl");
         entity.catconvertfl = row.Field<bool>("catconvertfl");
         entity.oepricefl = row.IsNull("oepricefl") ? string.Empty : row.Field<string>("oepricefl");
         entity.arecedbfl = row.Field<bool>("arecedbfl");
         entity.chgglcostfl = row.Field<bool>("chgglcostfl");
         entity.oetietype = row.IsNull("oetietype") ? string.Empty : row.Field<string>("oetietype");
         entity.tenderty = row.IsNull("tenderty") ? string.Empty : row.Field<string>("tenderty");
         entity.bprvunlkfl = row.Field<bool>("bprvunlkfl");
         entity.bpdeftype = row.IsNull("bpdeftype") ? string.Empty : row.Field<string>("bpdeftype");
         entity.ourproc = row.IsNull("ourproc") ? string.Empty : row.Field<string>("ourproc");
         entity.startdt = row.Field<DateTime?>("startdt");
         entity.starttm = row.IsNull("starttm") ? 0 : row.Field<int>("starttm");
         entity.secdivno = row.IsNull("secdivno") ? 0 : row.Field<int>("secdivno");
         entity.secdeptno = row.IsNull("secdeptno") ? 0 : row.Field<int>("secdeptno");
         entity.secsubno = row.IsNull("secsubno") ? 0 : row.Field<int>("secsubno");
         entity.verrcvchgfl = row.Field<bool>("verrcvchgfl");
         entity.apsuperfl = row.Field<bool>("apsuperfl");
         entity.nscommfl = row.Field<bool>("nscommfl");
         entity.gloverfl = row.Field<bool>("gloverfl");
         entity.spcchngfl = row.Field<bool>("spcchngfl");
         entity.taxoverfl = row.Field<bool>("taxoverfl");
         entity.usagewarnfl = row.Field<bool>("usagewarnfl");
         entity.oimailfl = row.Field<bool>("oimailfl");
         entity.oiphonefl = row.Field<bool>("oiphonefl");
         entity.cmactfl = row.Field<bool>("cmactfl");
         entity.openpono = row.IsNull("openpono") ? 0 : row.Field<int>("openpono");
         entity.openposuf = row.IsNull("openposuf") ? 0 : row.Field<int>("openposuf");
         entity.openwtno = row.IsNull("openwtno") ? 0 : row.Field<int>("openwtno");
         entity.openwtsuf = row.IsNull("openwtsuf") ? 0 : row.Field<int>("openwtsuf");
         entity.loginnm = row.IsNull("loginnm") ? string.Empty : row.Field<string>("loginnm");
         entity.devicenm = row.IsNull("devicenm") ? string.Empty : row.Field<string>("devicenm");
         entity.sysadminfl = row.Field<bool>("sysadminfl");
         entity.langcd = row.IsNull("langcd") ? string.Empty : row.Field<string>("langcd");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.oeslsrepfl = row.IsNull("oeslsrepfl") ? string.Empty : row.Field<string>("oeslsrepfl");
         entity.unmaskccty = row.IsNull("unmaskccty") ? string.Empty : row.Field<string>("unmaskccty");
         entity.promoprcwin = row.IsNull("promoprcwin") ? string.Empty : row.Field<string>("promoprcwin");
         entity.pcpassword = row.IsNull("pcpassword") ? string.Empty : row.Field<string>("pcpassword");
         entity.pcusername = row.IsNull("pcusername") ? string.Empty : row.Field<string>("pcusername");
         entity.emdelvrmeth = row.IsNull("emdelvrmeth") ? string.Empty : row.Field<string>("emdelvrmeth");
         entity.oeextlfl = row.IsNull("oeextlfl") ? string.Empty : row.Field<string>("oeextlfl");
         entity.pocrctfl = row.Field<bool>("pocrctfl");
         entity.pwlastchgdt = row.Field<DateTime?>("pwlastchgdt");
         entity.pwprevious1 = row.IsNull("pwprevious1") ? string.Empty : row.Field<string>("pwprevious1");
         entity.pwprevious2 = row.IsNull("pwprevious2") ? string.Empty : row.Field<string>("pwprevious2");
         entity.pwprevious3 = row.IsNull("pwprevious3") ? string.Empty : row.Field<string>("pwprevious3");
         entity.pwprevious4 = row.IsNull("pwprevious4") ? string.Empty : row.Field<string>("pwprevious4");
         entity.pwprevious5 = row.IsNull("pwprevious5") ? string.Empty : row.Field<string>("pwprevious5");
         entity.pwprevious6 = row.IsNull("pwprevious6") ? string.Empty : row.Field<string>("pwprevious6");
         entity.pwprevious7 = row.IsNull("pwprevious7") ? string.Empty : row.Field<string>("pwprevious7");
         entity.pwprevious8 = row.IsNull("pwprevious8") ? string.Empty : row.Field<string>("pwprevious8");
         entity.pwprevious9 = row.IsNull("pwprevious9") ? string.Empty : row.Field<string>("pwprevious9");
         entity.pwprevious10 = row.IsNull("pwprevious10") ? string.Empty : row.Field<string>("pwprevious10");
         entity.pwloginattempts = row.IsNull("pwloginattempts") ? 0 : row.Field<int>("pwloginattempts");
         entity.vaautoshipty = row.IsNull("vaautoshipty") ? string.Empty : row.Field<string>("vaautoshipty");
         entity.autologpasswd = row.IsNull("autologpasswd") ? string.Empty : row.Field<string>("autologpasswd");
         entity.jmupdprtpofl = row.Field<bool>("jmupdprtpofl");
         entity.userclearfl = row.Field<bool>("userclearfl");
         entity.vaheaderty = row.IsNull("vaheaderty") ? string.Empty : row.Field<string>("vaheaderty");
         entity.vaautolnentryty = row.IsNull("vaautolnentryty") ? string.Empty : row.Field<string>("vaautolnentryty");
         entity.whsegroup = row.IsNull("whsegroup") ? string.Empty : row.Field<string>("whsegroup");
         entity.popotyamtmin = row.IsNull("popotyamtmin") ? decimal.Zero : row.Field<decimal>("popotyamtmin");
         entity.popotyamtmax = row.IsNull("popotyamtmax") ? decimal.Zero : row.Field<decimal>("popotyamtmax");
         entity.podotyamtmin = row.IsNull("podotyamtmin") ? decimal.Zero : row.Field<decimal>("podotyamtmin");
         entity.podotyamtmax = row.IsNull("podotyamtmax") ? decimal.Zero : row.Field<decimal>("podotyamtmax");
         entity.oesotyamtmin = row.IsNull("oesotyamtmin") ? decimal.Zero : row.Field<decimal>("oesotyamtmin");
         entity.oesotyamtmax = row.IsNull("oesotyamtmax") ? decimal.Zero : row.Field<decimal>("oesotyamtmax");
         entity.oedotyamtmin = row.IsNull("oedotyamtmin") ? decimal.Zero : row.Field<decimal>("oedotyamtmin");
         entity.oedotyamtmax = row.IsNull("oedotyamtmax") ? decimal.Zero : row.Field<decimal>("oedotyamtmax");
         entity.oesotymrgpctmin = row.IsNull("oesotymrgpctmin") ? decimal.Zero : row.Field<decimal>("oesotymrgpctmin");
         entity.oesotymrgpctmax = row.IsNull("oesotymrgpctmax") ? decimal.Zero : row.Field<decimal>("oesotymrgpctmax");
         entity.oedotymrgpctmin = row.IsNull("oedotymrgpctmin") ? decimal.Zero : row.Field<decimal>("oedotymrgpctmin");
         entity.oedotymrgpctmax = row.IsNull("oedotymrgpctmax") ? decimal.Zero : row.Field<decimal>("oedotymrgpctmax");
         entity.oesotymrgamtmin = row.IsNull("oesotymrgamtmin") ? decimal.Zero : row.Field<decimal>("oesotymrgamtmin");
         entity.oesotymrgamtmax = row.IsNull("oesotymrgamtmax") ? decimal.Zero : row.Field<decimal>("oesotymrgamtmax");
         entity.oedotymrgamtmin = row.IsNull("oedotymrgamtmin") ? decimal.Zero : row.Field<decimal>("oedotymrgamtmin");
         entity.oedotymrgamtmax = row.IsNull("oedotymrgamtmax") ? decimal.Zero : row.Field<decimal>("oedotymrgamtmax");
         entity.formprinternm = row.IsNull("formprinternm") ? string.Empty : row.Field<string>("formprinternm");
         entity.usergroup = row.IsNull("usergroup") ? string.Empty : row.Field<string>("usergroup");
         entity.saspgroup = row.IsNull("saspgroup") ? string.Empty : row.Field<string>("saspgroup");
         entity.nsbinlocfl = row.Field<bool>("nsbinlocfl");
         entity.oensqtyshpty = row.IsNull("oensqtyshpty") ? string.Empty : row.Field<string>("oensqtyshpty");
         entity.vendpostfl = row.Field<bool>("vendpostfl");
         entity.returnpostfl = row.Field<bool>("returnpostfl");
         entity.nscrtoanty = row.IsNull("nscrtoanty") ? string.Empty : row.Field<string>("nscrtoanty");
         entity.icswstchgfl = row.Field<bool>("icswstchgfl");
         entity.jmapprvty = row.IsNull("jmapprvty") ? string.Empty : row.Field<string>("jmapprvty");
         entity.autobillwhsefl = row.Field<bool>("autobillwhsefl");
         entity.oeupdtcustpofl = row.Field<bool>("oeupdtcustpofl");
         entity.icacquiredtfl = row.Field<bool>("icacquiredtfl");
         entity.storefrontuserid = row.IsNull("storefrontuserid") ? string.Empty : row.Field<string>("storefrontuserid");
         entity.limitholdcds = row.IsNull("limitholdcds") ? string.Empty : row.Field<string>("limitholdcds");
         entity.limittakenbyfl = row.Field<bool>("limittakenbyfl");
         entity.limitslsrepfl = row.Field<bool>("limitslsrepfl");
         entity.showroomuserfl = row.Field<bool>("showroomuserfl");
         entity.wlpicktype = row.IsNull("wlpicktype") ? string.Empty : row.Field<string>("wlpicktype");
         entity.oehardprcovrfl = row.Field<bool>("oehardprcovrfl");
         entity.icmanlistty = row.IsNull("icmanlistty") ? string.Empty : row.Field<string>("icmanlistty");
         entity.icmassmaintfl = row.Field<bool>("icmassmaintfl");
         entity.icmanlistoverfl = row.Field<bool>("icmanlistoverfl");
         entity.prodnotesfl = row.Field<bool>("prodnotesfl");
         entity.custnotesfl = row.Field<bool>("custnotesfl");
         entity.valinecancelfl = row.Field<bool>("valinecancelfl");
         entity.iccatcrtty = row.IsNull("iccatcrtty") ? string.Empty : row.Field<string>("iccatcrtty");
         entity.ncnrfl = row.Field<bool>("ncnrfl");
         entity.kpverchg = row.IsNull("kpverchg") ? string.Empty : row.Field<string>("kpverchg");
         entity.vaverchg = row.IsNull("vaverchg") ? string.Empty : row.Field<string>("vaverchg");
         entity.kpveruse = row.IsNull("kpveruse") ? string.Empty : row.Field<string>("kpveruse");
         entity.oechglntypefl = row.Field<bool>("oechglntypefl");
         entity.vaveruse = row.IsNull("vaveruse") ? string.Empty : row.Field<string>("vaveruse");
         entity.oeorigpromisefl = row.Field<bool>("oeorigpromisefl");
         entity.oeautoapplyovrfl = row.Field<bool>("oeautoapplyovrfl");
         entity.originchangefl = row.Field<bool>("originchangefl");
         entity.devloc = row.IsNull("devloc") ? string.Empty : row.Field<string>("devloc");
         entity.holdforauthdefault = row.IsNull("holdforauthdefault") ? string.Empty : row.Field<string>("holdforauthdefault");
         entity.oetoleranceovrfl = row.Field<bool>("oetoleranceovrfl");
         entity.holdintlfl = row.Field<bool>("holdintlfl");
         entity.cfgaccesscd = row.IsNull("cfgaccesscd") ? string.Empty : row.Field<string>("cfgaccesscd");
         entity.kptietype = row.IsNull("kptietype") ? string.Empty : row.Field<string>("kptietype");
         entity.xconocostfl = row.Field<bool>("xconocostfl");
         entity.altoperinit = row.IsNull("altoperinit") ? string.Empty : row.Field<string>("altoperinit");
         entity.ifsuser = row.IsNull("ifsuser") ? string.Empty : row.Field<string>("ifsuser");
         entity.caticcrtty = row.IsNull("caticcrtty") ? string.Empty : row.Field<string>("caticcrtty");
         entity.esbactioncode = row.IsNull("esbactioncode") ? string.Empty : row.Field<string>("esbactioncode");
         entity.oenoinvoicefl = row.Field<bool>("oenoinvoicefl");
         entity.oetokenmodifyfl = row.Field<bool>("oetokenmodifyfl");
         entity.allowfulfillmentty = row.IsNull("allowfulfillmentty") ? string.Empty : row.Field<string>("allowfulfillmentty");
         entity.oesaleswhsety = row.IsNull("oesaleswhsety") ? string.Empty : row.Field<string>("oesaleswhsety");
         entity.nsquoteoanty = row.IsNull("nsquoteoanty") ? string.Empty : row.Field<string>("nsquoteoanty");
         entity.rowID = row.Field<byte[]>("sasooRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSasooBase(ref DataRow row, SasooBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("operinit", entity.operinit);
         row.SetField("printernm", entity.printernm);
         row.SetField("oper2", entity.oper2);
         row.SetField("password", entity.password);
         row.SetField("currproc", entity.currproc);
         row.SetField("whse", entity.whse);
         row.SetField("oetrntype", entity.oetrntype);
         row.SetField("homewhsefl", entity.homewhsefl);
         row.SetField("seecostfl", entity.seecostfl);
         row.SetField("seecommfl", entity.seecommfl);
         row.SetField("chgbalfl", entity.chgbalfl);
         row.SetField("credpostfl", entity.credpostfl);
         row.SetField("holdoverfl", entity.holdoverfl);
         row.SetField("termsoverfl", entity.termsoverfl);
         row.SetField("temp", entity.temp);
         row.SetField("intercofl", entity.intercofl);
         row.SetField("nonstockfl", entity.nonstockfl);
         row.SetField("resalefl", entity.resalefl);
         row.SetField("extendfl", entity.extendfl);
         row.SetField("shiptofl", entity.shiptofl);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("oephonefl", entity.oephonefl);
         row.SetField("updglarty", entity.updglarty);
         row.SetField("updglapty", entity.updglapty);
         row.SetField("updglicty", entity.updglicty);
         row.SetField("updglpoty", entity.updglpoty);
         row.SetField("updgloety", entity.updgloety);
         row.SetField("updglwtty", entity.updglwtty);
         row.SetField("updglkpty", entity.updglkpty);
         row.SetField("arwrtofflim", entity.arwrtofflim);
         row.SetField("tqprosno", entity.tqprosno);
         row.SetField("oeqtyshipty", entity.oeqtyshipty);
         row.SetField("loginfl", entity.loginfl);
         row.SetField("tqemailaddr", entity.tqemailaddr);
         row.SetField("logindt", entity.logindt);
         row.SetField("tqposition", entity.tqposition);
         row.SetField("logintm", entity.logintm);
         row.SetField("tqdelvrmeth", entity.tqdelvrmeth);
         row.SetField("oerebty", entity.oerebty);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("vendlutype", entity.vendlutype);
         row.SetField("ringfl", entity.ringfl);
         row.SetField("slsrep", entity.slsrep);
         row.SetField("useprevnsfl", entity.useprevnsfl);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("oecostoverty", entity.oecostoverty);
         row.SetField("user4", entity.user4);
         row.SetField("openordno", entity.openordno);
         row.SetField("user5", entity.user5);
         row.SetField("openordsuf", entity.openordsuf);
         row.SetField("user6", entity.user6);
         row.SetField("oeheaderfl", entity.oeheaderfl);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("oelineno", entity.oelineno);
         row.SetField("user9", entity.user9);
         row.SetField("oeonlyfl", entity.oeonlyfl);
         row.SetField("wtapprwhse", entity.wtapprwhse);
         row.SetField("helpfl", entity.helpfl);
         row.SetField("rprinternm", entity.rprinternm);
         row.SetField("reqtakenfl", entity.reqtakenfl);
         row.SetField("valtakenfl", entity.valtakenfl);
         row.SetField("superfl", entity.superfl);
         row.SetField("custlutype", entity.custlutype);
         row.SetField("secnotefl", entity.secnotefl);
         row.SetField("custno", entity.custno);
         row.SetField("securevno", entity.securevno);
         row.SetField("person", entity.person);
         row.SetField("prodlutype", entity.prodlutype);
         row.SetField("oeoptionfl", entity.oeoptionfl);
         row.SetField("oebuylistfl", entity.oebuylistfl);
         row.SetField("shippingpt", entity.shippingpt);
         row.SetField("backfl", entity.backfl);
         row.SetField("catconvertfl", entity.catconvertfl);
         row.SetField("oepricefl", entity.oepricefl);
         row.SetField("arecedbfl", entity.arecedbfl);
         row.SetField("chgglcostfl", entity.chgglcostfl);
         row.SetField("oetietype", entity.oetietype);
         row.SetField("tenderty", entity.tenderty);
         row.SetField("bprvunlkfl", entity.bprvunlkfl);
         row.SetField("bpdeftype", entity.bpdeftype);
         row.SetField("ourproc", entity.ourproc);
         row.SetField("startdt", entity.startdt);
         row.SetField("starttm", entity.starttm);
         row.SetField("secdivno", entity.secdivno);
         row.SetField("secdeptno", entity.secdeptno);
         row.SetField("secsubno", entity.secsubno);
         row.SetField("verrcvchgfl", entity.verrcvchgfl);
         row.SetField("apsuperfl", entity.apsuperfl);
         row.SetField("nscommfl", entity.nscommfl);
         row.SetField("gloverfl", entity.gloverfl);
         row.SetField("spcchngfl", entity.spcchngfl);
         row.SetField("taxoverfl", entity.taxoverfl);
         row.SetField("usagewarnfl", entity.usagewarnfl);
         row.SetField("oimailfl", entity.oimailfl);
         row.SetField("oiphonefl", entity.oiphonefl);
         row.SetField("cmactfl", entity.cmactfl);
         row.SetField("openpono", entity.openpono);
         row.SetField("openposuf", entity.openposuf);
         row.SetField("openwtno", entity.openwtno);
         row.SetField("openwtsuf", entity.openwtsuf);
         row.SetField("loginnm", entity.loginnm);
         row.SetField("devicenm", entity.devicenm);
         row.SetField("sysadminfl", entity.sysadminfl);
         row.SetField("langcd", entity.langcd);
         row.SetField("transproc", entity.transproc);
         row.SetField("oeslsrepfl", entity.oeslsrepfl);
         row.SetField("unmaskccty", entity.unmaskccty);
         row.SetField("promoprcwin", entity.promoprcwin);
         row.SetField("pcpassword", entity.pcpassword);
         row.SetField("pcusername", entity.pcusername);
         row.SetField("emdelvrmeth", entity.emdelvrmeth);
         row.SetField("oeextlfl", entity.oeextlfl);
         row.SetField("pocrctfl", entity.pocrctfl);
         row.SetField("pwlastchgdt", entity.pwlastchgdt);
         row.SetField("pwprevious1", entity.pwprevious1);
         row.SetField("pwprevious2", entity.pwprevious2);
         row.SetField("pwprevious3", entity.pwprevious3);
         row.SetField("pwprevious4", entity.pwprevious4);
         row.SetField("pwprevious5", entity.pwprevious5);
         row.SetField("pwprevious6", entity.pwprevious6);
         row.SetField("pwprevious7", entity.pwprevious7);
         row.SetField("pwprevious8", entity.pwprevious8);
         row.SetField("pwprevious9", entity.pwprevious9);
         row.SetField("pwprevious10", entity.pwprevious10);
         row.SetField("pwloginattempts", entity.pwloginattempts);
         row.SetField("vaautoshipty", entity.vaautoshipty);
         row.SetField("autologpasswd", entity.autologpasswd);
         row.SetField("jmupdprtpofl", entity.jmupdprtpofl);
         row.SetField("userclearfl", entity.userclearfl);
         row.SetField("vaheaderty", entity.vaheaderty);
         row.SetField("vaautolnentryty", entity.vaautolnentryty);
         row.SetField("whsegroup", entity.whsegroup);
         row.SetField("popotyamtmin", entity.popotyamtmin);
         row.SetField("popotyamtmax", entity.popotyamtmax);
         row.SetField("podotyamtmin", entity.podotyamtmin);
         row.SetField("podotyamtmax", entity.podotyamtmax);
         row.SetField("oesotyamtmin", entity.oesotyamtmin);
         row.SetField("oesotyamtmax", entity.oesotyamtmax);
         row.SetField("oedotyamtmin", entity.oedotyamtmin);
         row.SetField("oedotyamtmax", entity.oedotyamtmax);
         row.SetField("oesotymrgpctmin", entity.oesotymrgpctmin);
         row.SetField("oesotymrgpctmax", entity.oesotymrgpctmax);
         row.SetField("oedotymrgpctmin", entity.oedotymrgpctmin);
         row.SetField("oedotymrgpctmax", entity.oedotymrgpctmax);
         row.SetField("oesotymrgamtmin", entity.oesotymrgamtmin);
         row.SetField("oesotymrgamtmax", entity.oesotymrgamtmax);
         row.SetField("oedotymrgamtmin", entity.oedotymrgamtmin);
         row.SetField("oedotymrgamtmax", entity.oedotymrgamtmax);
         row.SetField("formprinternm", entity.formprinternm);
         row.SetField("usergroup", entity.usergroup);
         row.SetField("saspgroup", entity.saspgroup);
         row.SetField("nsbinlocfl", entity.nsbinlocfl);
         row.SetField("oensqtyshpty", entity.oensqtyshpty);
         row.SetField("vendpostfl", entity.vendpostfl);
         row.SetField("returnpostfl", entity.returnpostfl);
         row.SetField("nscrtoanty", entity.nscrtoanty);
         row.SetField("icswstchgfl", entity.icswstchgfl);
         row.SetField("jmapprvty", entity.jmapprvty);
         row.SetField("autobillwhsefl", entity.autobillwhsefl);
         row.SetField("oeupdtcustpofl", entity.oeupdtcustpofl);
         row.SetField("icacquiredtfl", entity.icacquiredtfl);
         row.SetField("storefrontuserid", entity.storefrontuserid);
         row.SetField("limitholdcds", entity.limitholdcds);
         row.SetField("limittakenbyfl", entity.limittakenbyfl);
         row.SetField("limitslsrepfl", entity.limitslsrepfl);
         row.SetField("showroomuserfl", entity.showroomuserfl);
         row.SetField("wlpicktype", entity.wlpicktype);
         row.SetField("oehardprcovrfl", entity.oehardprcovrfl);
         row.SetField("icmanlistty", entity.icmanlistty);
         row.SetField("icmassmaintfl", entity.icmassmaintfl);
         row.SetField("icmanlistoverfl", entity.icmanlistoverfl);
         row.SetField("prodnotesfl", entity.prodnotesfl);
         row.SetField("custnotesfl", entity.custnotesfl);
         row.SetField("valinecancelfl", entity.valinecancelfl);
         row.SetField("iccatcrtty", entity.iccatcrtty);
         row.SetField("ncnrfl", entity.ncnrfl);
         row.SetField("kpverchg", entity.kpverchg);
         row.SetField("vaverchg", entity.vaverchg);
         row.SetField("kpveruse", entity.kpveruse);
         row.SetField("oechglntypefl", entity.oechglntypefl);
         row.SetField("vaveruse", entity.vaveruse);
         row.SetField("oeorigpromisefl", entity.oeorigpromisefl);
         row.SetField("oeautoapplyovrfl", entity.oeautoapplyovrfl);
         row.SetField("originchangefl", entity.originchangefl);
         row.SetField("devloc", entity.devloc);
         row.SetField("holdforauthdefault", entity.holdforauthdefault);
         row.SetField("oetoleranceovrfl", entity.oetoleranceovrfl);
         row.SetField("holdintlfl", entity.holdintlfl);
         row.SetField("cfgaccesscd", entity.cfgaccesscd);
         row.SetField("kptietype", entity.kptietype);
         row.SetField("xconocostfl", entity.xconocostfl);
         row.SetField("altoperinit", entity.altoperinit);
         row.SetField("ifsuser", entity.ifsuser);
         row.SetField("caticcrtty", entity.caticcrtty);
         row.SetField("esbactioncode", entity.esbactioncode);
         row.SetField("oenoinvoicefl", entity.oenoinvoicefl);
         row.SetField("oetokenmodifyfl", entity.oetokenmodifyfl);
         row.SetField("allowfulfillmentty", entity.allowfulfillmentty);
         row.SetField("oesaleswhsety", entity.oesaleswhsety);
         row.SetField("nsquoteoanty", entity.nsquoteoanty);
         row.SetField("sasooRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, SasooBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("oper2", entity.oper2);
         row.SetField("sasooRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	