//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SA
{
   /// <summary>
   /// System Administrator Batch Header
   /// </summary>
   
   public partial class SabsBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Batch
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string batchnm { get; set; }

      /// <summary>
      /// Application
      /// </summary>
      [StringValidationAttribute]
      public string modulenm { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [StringValidationAttribute]
      public string freqtype { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string descrip { get; set; }

      /// <summary>
      /// Operator Initials
      /// </summary>
      [StringValidationAttribute]
      public string securinit { get; set; }

      /// <summary>
      /// Proof Debits
      /// </summary>
      public decimal proofdr { get; set; }

      /// <summary>
      /// Proof Credits
      /// </summary>
      public decimal proofcr { get; set; }

      /// <summary>
      /// Creation
      /// </summary>
      public DateTime? createdt { get; set; }

      /// <summary>
      /// Created By
      /// </summary>
      [StringValidationAttribute]
      public string createinit { get; set; }

      /// <summary>
      /// Last Maintained
      /// </summary>
      public DateTime? lastmtdt { get; set; }

      /// <summary>
      /// Last Changed By
      /// </summary>
      [StringValidationAttribute]
      public string lastmtinit { get; set; }

      /// <summary>
      /// Last Posted
      /// </summary>
      public DateTime? lastupdt { get; set; }

      /// <summary>
      /// Last Posted By
      /// </summary>
      [StringValidationAttribute]
      public string lastupinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Record in Use By
      /// </summary>
      [StringValidationAttribute]
      public string inuseby { get; set; }

      /// <summary>
      /// Total Debits
      /// </summary>
      public decimal totdr { get; set; }

      /// <summary>
      /// Total Credits
      /// </summary>
      public decimal totcr { get; set; }

      /// <summary>
      /// # of Postings
      /// </summary>
      public int nopostings { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      public bool statustype { get; set; }

      /// <summary>
      /// Jrnl #
      /// </summary>
      public int jrnlno { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Group Seq #
      /// </summary>
      public int groupseqno { get; set; }

      /// <summary>
      /// Sequence Dt
      /// </summary>
      public DateTime? sequencedt { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildSabsBaseFromRow<T>(DataRow row) where T:SabsBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.batchnm = row.IsNull("batchnm") ? string.Empty : row.Field<string>("batchnm");
         entity.modulenm = row.IsNull("modulenm") ? string.Empty : row.Field<string>("modulenm");
         entity.freqtype = row.IsNull("freqtype") ? string.Empty : row.Field<string>("freqtype");
         entity.descrip = row.IsNull("descrip") ? string.Empty : row.Field<string>("descrip");
         entity.securinit = row.IsNull("securinit") ? string.Empty : row.Field<string>("securinit");
         entity.proofdr = row.IsNull("proofdr") ? decimal.Zero : row.Field<decimal>("proofdr");
         entity.proofcr = row.IsNull("proofcr") ? decimal.Zero : row.Field<decimal>("proofcr");
         entity.createdt = row.Field<DateTime?>("createdt");
         entity.createinit = row.IsNull("createinit") ? string.Empty : row.Field<string>("createinit");
         entity.lastmtdt = row.Field<DateTime?>("lastmtdt");
         entity.lastmtinit = row.IsNull("lastmtinit") ? string.Empty : row.Field<string>("lastmtinit");
         entity.lastupdt = row.Field<DateTime?>("lastupdt");
         entity.lastupinit = row.IsNull("lastupinit") ? string.Empty : row.Field<string>("lastupinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.inuseby = row.IsNull("inuseby") ? string.Empty : row.Field<string>("inuseby");
         entity.totdr = row.IsNull("totdr") ? decimal.Zero : row.Field<decimal>("totdr");
         entity.totcr = row.IsNull("totcr") ? decimal.Zero : row.Field<decimal>("totcr");
         entity.nopostings = row.IsNull("nopostings") ? 0 : row.Field<int>("nopostings");
         entity.statustype = row.Field<bool>("statustype");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.groupseqno = row.IsNull("groupseqno") ? 0 : row.Field<int>("groupseqno");
         entity.sequencedt = row.Field<DateTime?>("sequencedt");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.rowID = row.Field<byte[]>("sabsRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSabsBase(ref DataRow row, SabsBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("batchnm", entity.batchnm);
         row.SetField("modulenm", entity.modulenm);
         row.SetField("freqtype", entity.freqtype);
         row.SetField("descrip", entity.descrip);
         row.SetField("securinit", entity.securinit);
         row.SetField("proofdr", entity.proofdr);
         row.SetField("proofcr", entity.proofcr);
         row.SetField("createdt", entity.createdt);
         row.SetField("createinit", entity.createinit);
         row.SetField("lastmtdt", entity.lastmtdt);
         row.SetField("lastmtinit", entity.lastmtinit);
         row.SetField("lastupdt", entity.lastupdt);
         row.SetField("lastupinit", entity.lastupinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("inuseby", entity.inuseby);
         row.SetField("totdr", entity.totdr);
         row.SetField("totcr", entity.totcr);
         row.SetField("nopostings", entity.nopostings);
         row.SetField("statustype", entity.statustype);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("groupseqno", entity.groupseqno);
         row.SetField("sequencedt", entity.sequencedt);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("sabsRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, SabsBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("batchnm", entity.batchnm);
         row.SetField("sabsRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	