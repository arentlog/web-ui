//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SA
{
   /// <summary>
   /// System Admin, Gov't State
   /// </summary>
   
   public partial class SasgsBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string descrip { get; set; }

      /// <summary>
      /// Tax ID #
      /// </summary>
      [StringValidationAttribute]
      public string taxid { get; set; }

      /// <summary>
      /// Sales Tax %
      /// </summary>
      public decimal saletax1 { get; set; }
      public decimal saletax2 { get; set; }
      public decimal saletax3 { get; set; }
      public decimal saletax4 { get; set; }
      public decimal saletax5 { get; set; }

      /// <summary>
      /// OE Tax Acct
      /// </summary>
      public int glacctno { get; set; }

      /// <summary>
      /// OE Tax
      /// </summary>
      public int gldivno { get; set; }

      /// <summary>
      /// OE Tax
      /// </summary>
      public int gldeptno { get; set; }

      /// <summary>
      /// OE Tax
      /// </summary>
      public int glsubno { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Tax Group
      /// </summary>
      public int taxgroup1 { get; set; }
      public int taxgroup2 { get; set; }
      public int taxgroup3 { get; set; }
      public int taxgroup4 { get; set; }
      public int taxgroup5 { get; set; }
      public int taxgroup6 { get; set; }
      public int taxgroup7 { get; set; }
      public int taxgroup8 { get; set; }
      public int taxgroup9 { get; set; }

      /// <summary>
      /// P.S.T. on G.S.T
      /// </summary>
      public bool pstgstfl { get; set; }

      /// <summary>
      /// Addon Taxable (PST)
      /// </summary>
      public bool addontaxfl1 { get; set; }
      public bool addontaxfl2 { get; set; }
      public bool addontaxfl3 { get; set; }
      public bool addontaxfl4 { get; set; }
      public bool addontaxfl5 { get; set; }
      public bool addontaxfl6 { get; set; }
      public bool addontaxfl7 { get; set; }
      public bool addontaxfl8 { get; set; }
      public bool addontaxfl9 { get; set; }

      /// <summary>
      /// Harmonized
      /// </summary>
      public bool harmonizedfl { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Terms Discount On PST
      /// </summary>
      public bool termsdisconpstfl { get; set; }

      /// <summary>
      /// EC Sales
      /// </summary>
      public bool ecsalesfl { get; set; }

      /// <summary>
      /// Display VAT Breakdown
      /// </summary>
      public bool dsplvatbrkdwnfl { get; set; }

      /// <summary>
      /// OE Tax Cash Acct
      /// </summary>
      public int glacctno2 { get; set; }

      /// <summary>
      /// OE Tax Cash
      /// </summary>
      public int gldivno2 { get; set; }

      /// <summary>
      /// OE Tax Cash
      /// </summary>
      public int gldeptno2 { get; set; }

      /// <summary>
      /// OE Tax Cash
      /// </summary>
      public int glsubno2 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildSasgsBaseFromRow<T>(DataRow row) where T:SasgsBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.descrip = row.IsNull("descrip") ? string.Empty : row.Field<string>("descrip");
         entity.taxid = row.IsNull("taxid") ? string.Empty : row.Field<string>("taxid");
         entity.saletax1 = row.IsNull("saletax1") ? decimal.Zero : row.Field<decimal>("saletax1");
         entity.saletax2 = row.IsNull("saletax2") ? decimal.Zero : row.Field<decimal>("saletax2");
         entity.saletax3 = row.IsNull("saletax3") ? decimal.Zero : row.Field<decimal>("saletax3");
         entity.saletax4 = row.IsNull("saletax4") ? decimal.Zero : row.Field<decimal>("saletax4");
         entity.saletax5 = row.IsNull("saletax5") ? decimal.Zero : row.Field<decimal>("saletax5");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.taxgroup1 = row.IsNull("taxgroup1") ? 0 : row.Field<int>("taxgroup1");
         entity.taxgroup2 = row.IsNull("taxgroup2") ? 0 : row.Field<int>("taxgroup2");
         entity.taxgroup3 = row.IsNull("taxgroup3") ? 0 : row.Field<int>("taxgroup3");
         entity.taxgroup4 = row.IsNull("taxgroup4") ? 0 : row.Field<int>("taxgroup4");
         entity.taxgroup5 = row.IsNull("taxgroup5") ? 0 : row.Field<int>("taxgroup5");
         entity.taxgroup6 = row.IsNull("taxgroup6") ? 0 : row.Field<int>("taxgroup6");
         entity.taxgroup7 = row.IsNull("taxgroup7") ? 0 : row.Field<int>("taxgroup7");
         entity.taxgroup8 = row.IsNull("taxgroup8") ? 0 : row.Field<int>("taxgroup8");
         entity.taxgroup9 = row.IsNull("taxgroup9") ? 0 : row.Field<int>("taxgroup9");
         entity.pstgstfl = row.Field<bool>("pstgstfl");
         entity.addontaxfl1 = row.Field<bool>("addontaxfl1");
         entity.addontaxfl2 = row.Field<bool>("addontaxfl2");
         entity.addontaxfl3 = row.Field<bool>("addontaxfl3");
         entity.addontaxfl4 = row.Field<bool>("addontaxfl4");
         entity.addontaxfl5 = row.Field<bool>("addontaxfl5");
         entity.addontaxfl6 = row.Field<bool>("addontaxfl6");
         entity.addontaxfl7 = row.Field<bool>("addontaxfl7");
         entity.addontaxfl8 = row.Field<bool>("addontaxfl8");
         entity.addontaxfl9 = row.Field<bool>("addontaxfl9");
         entity.harmonizedfl = row.Field<bool>("harmonizedfl");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.termsdisconpstfl = row.Field<bool>("termsdisconpstfl");
         entity.ecsalesfl = row.Field<bool>("ecsalesfl");
         entity.dsplvatbrkdwnfl = row.Field<bool>("dsplvatbrkdwnfl");
         entity.glacctno2 = row.IsNull("glacctno2") ? 0 : row.Field<int>("glacctno2");
         entity.gldivno2 = row.IsNull("gldivno2") ? 0 : row.Field<int>("gldivno2");
         entity.gldeptno2 = row.IsNull("gldeptno2") ? 0 : row.Field<int>("gldeptno2");
         entity.glsubno2 = row.IsNull("glsubno2") ? 0 : row.Field<int>("glsubno2");
         entity.rowID = row.Field<byte[]>("sasgsRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSasgsBase(ref DataRow row, SasgsBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("state", entity.state);
         row.SetField("descrip", entity.descrip);
         row.SetField("taxid", entity.taxid);
         row.SetField("saletax1", entity.saletax1);
         row.SetField("saletax2", entity.saletax2);
         row.SetField("saletax3", entity.saletax3);
         row.SetField("saletax4", entity.saletax4);
         row.SetField("saletax5", entity.saletax5);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("taxgroup1", entity.taxgroup1);
         row.SetField("taxgroup2", entity.taxgroup2);
         row.SetField("taxgroup3", entity.taxgroup3);
         row.SetField("taxgroup4", entity.taxgroup4);
         row.SetField("taxgroup5", entity.taxgroup5);
         row.SetField("taxgroup6", entity.taxgroup6);
         row.SetField("taxgroup7", entity.taxgroup7);
         row.SetField("taxgroup8", entity.taxgroup8);
         row.SetField("taxgroup9", entity.taxgroup9);
         row.SetField("pstgstfl", entity.pstgstfl);
         row.SetField("addontaxfl1", entity.addontaxfl1);
         row.SetField("addontaxfl2", entity.addontaxfl2);
         row.SetField("addontaxfl3", entity.addontaxfl3);
         row.SetField("addontaxfl4", entity.addontaxfl4);
         row.SetField("addontaxfl5", entity.addontaxfl5);
         row.SetField("addontaxfl6", entity.addontaxfl6);
         row.SetField("addontaxfl7", entity.addontaxfl7);
         row.SetField("addontaxfl8", entity.addontaxfl8);
         row.SetField("addontaxfl9", entity.addontaxfl9);
         row.SetField("harmonizedfl", entity.harmonizedfl);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("termsdisconpstfl", entity.termsdisconpstfl);
         row.SetField("ecsalesfl", entity.ecsalesfl);
         row.SetField("dsplvatbrkdwnfl", entity.dsplvatbrkdwnfl);
         row.SetField("glacctno2", entity.glacctno2);
         row.SetField("gldivno2", entity.gldivno2);
         row.SetField("gldeptno2", entity.gldeptno2);
         row.SetField("glsubno2", entity.glsubno2);
         row.SetField("sasgsRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, SasgsBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("state", entity.state);
         row.SetField("sasgsRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	