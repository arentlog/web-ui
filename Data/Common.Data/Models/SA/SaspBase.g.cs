//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SA
{
   /// <summary>
   /// SA Printer Setup
   /// </summary>
   
   public partial class SaspBase: ModelBase
   {

      /// <summary>
      /// Printer Name
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string printernm { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string descrip { get; set; }

      /// <summary>
      /// Width
      /// </summary>
      public bool wide { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [StringValidationAttribute]
      public string ptype { get; set; }

      /// <summary>
      /// Device or Command
      /// </summary>
      [StringValidationAttribute]
      public string pcommand { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// pclose1
      /// </summary>
      public int pclose1 { get; set; }
      public int pclose2 { get; set; }
      public int pclose3 { get; set; }
      public int pclose4 { get; set; }
      public int pclose5 { get; set; }
      public int pclose6 { get; set; }
      public int pclose7 { get; set; }
      public int pclose8 { get; set; }
      public int pclose9 { get; set; }
      public int pclose10 { get; set; }

      /// <summary>
      /// pcompress1
      /// </summary>
      public int pcompress1 { get; set; }
      public int pcompress2 { get; set; }
      public int pcompress3 { get; set; }
      public int pcompress4 { get; set; }
      public int pcompress5 { get; set; }
      public int pcompress6 { get; set; }
      public int pcompress7 { get; set; }
      public int pcompress8 { get; set; }
      public int pcompress9 { get; set; }
      public int pcompress10 { get; set; }

      /// <summary>
      /// pnormal1
      /// </summary>
      public int pnormal1 { get; set; }
      public int pnormal2 { get; set; }
      public int pnormal3 { get; set; }
      public int pnormal4 { get; set; }
      public int pnormal5 { get; set; }
      public int pnormal6 { get; set; }
      public int pnormal7 { get; set; }
      public int pnormal8 { get; set; }
      public int pnormal9 { get; set; }
      public int pnormal10 { get; set; }

      /// <summary>
      /// pinit1
      /// </summary>
      public int pinit1 { get; set; }
      public int pinit2 { get; set; }
      public int pinit3 { get; set; }
      public int pinit4 { get; set; }
      public int pinit5 { get; set; }
      public int pinit6 { get; set; }
      public int pinit7 { get; set; }
      public int pinit8 { get; set; }
      public int pinit9 { get; set; }
      public int pinit10 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// AR Mail Label
      /// </summary>
      [StringValidationAttribute]
      public string armaillbl { get; set; }

      /// <summary>
      /// CM Mail Label
      /// </summary>
      [StringValidationAttribute]
      public string cmmaillbl { get; set; }

      /// <summary>
      /// Product Label
      /// </summary>
      [StringValidationAttribute]
      public string prodlbl { get; set; }

      /// <summary>
      /// Shipping Label
      /// </summary>
      [StringValidationAttribute]
      public string shiplbl { get; set; }

      /// <summary>
      /// Bin Loc Label
      /// </summary>
      [StringValidationAttribute]
      public string binloclbl { get; set; }

      /// <summary>
      /// EDI Label
      /// </summary>
      [StringValidationAttribute]
      public string edilbl { get; set; }

      /// <summary>
      /// Picking Label
      /// </summary>
      [StringValidationAttribute]
      public string picklbl { get; set; }

      /// <summary>
      /// RxServer Swap Printer
      /// </summary>
      [StringValidationAttribute]
      public string rxsprinter { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      public int cono { get; set; }

      /// <summary>
      /// Carton Label
      /// </summary>
      [StringValidationAttribute]
      public string cartonlbl { get; set; }

      /// <summary>
      /// Receiving Label
      /// </summary>
      [StringValidationAttribute]
      public string rcvlbl { get; set; }

      /// <summary>
      /// WT Receiving Label
      /// </summary>
      [StringValidationAttribute]
      public string rcvwtlbl { get; set; }

      /// <summary>
      /// Maximum Labels
      /// </summary>
      public int maxlabels { get; set; }

      /// <summary>
      /// User 10
      /// </summary>
      [StringValidationAttribute]
      public string user10 { get; set; }

      /// <summary>
      /// User 11
      /// </summary>
      [StringValidationAttribute]
      public string user11 { get; set; }

      /// <summary>
      /// User 12
      /// </summary>
      [StringValidationAttribute]
      public string user12 { get; set; }

      /// <summary>
      /// User 13
      /// </summary>
      [StringValidationAttribute]
      public string user13 { get; set; }

      /// <summary>
      /// User 14
      /// </summary>
      [StringValidationAttribute]
      public string user14 { get; set; }

      /// <summary>
      /// Printer Group
      /// </summary>
      [StringValidationAttribute]
      public string saspgroup { get; set; }

      /// <summary>
      /// Alternate Size Printer
      /// </summary>
      [StringValidationAttribute]
      public string altsizeprinter { get; set; }

      /// <summary>
      /// Label Size
      /// </summary>
      [StringValidationAttribute]
      public string labelsize { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildSaspBaseFromRow<T>(DataRow row) where T:SaspBase, new()
      {
         T entity = new T();
         entity.printernm = row.IsNull("printernm") ? string.Empty : row.Field<string>("printernm");
         entity.descrip = row.IsNull("descrip") ? string.Empty : row.Field<string>("descrip");
         entity.wide = row.Field<bool>("wide");
         entity.ptype = row.IsNull("ptype") ? string.Empty : row.Field<string>("ptype");
         entity.pcommand = row.IsNull("pcommand") ? string.Empty : row.Field<string>("pcommand");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.pclose1 = row.IsNull("pclose1") ? 0 : row.Field<int>("pclose1");
         entity.pclose2 = row.IsNull("pclose2") ? 0 : row.Field<int>("pclose2");
         entity.pclose3 = row.IsNull("pclose3") ? 0 : row.Field<int>("pclose3");
         entity.pclose4 = row.IsNull("pclose4") ? 0 : row.Field<int>("pclose4");
         entity.pclose5 = row.IsNull("pclose5") ? 0 : row.Field<int>("pclose5");
         entity.pclose6 = row.IsNull("pclose6") ? 0 : row.Field<int>("pclose6");
         entity.pclose7 = row.IsNull("pclose7") ? 0 : row.Field<int>("pclose7");
         entity.pclose8 = row.IsNull("pclose8") ? 0 : row.Field<int>("pclose8");
         entity.pclose9 = row.IsNull("pclose9") ? 0 : row.Field<int>("pclose9");
         entity.pclose10 = row.IsNull("pclose10") ? 0 : row.Field<int>("pclose10");
         entity.pcompress1 = row.IsNull("pcompress1") ? 0 : row.Field<int>("pcompress1");
         entity.pcompress2 = row.IsNull("pcompress2") ? 0 : row.Field<int>("pcompress2");
         entity.pcompress3 = row.IsNull("pcompress3") ? 0 : row.Field<int>("pcompress3");
         entity.pcompress4 = row.IsNull("pcompress4") ? 0 : row.Field<int>("pcompress4");
         entity.pcompress5 = row.IsNull("pcompress5") ? 0 : row.Field<int>("pcompress5");
         entity.pcompress6 = row.IsNull("pcompress6") ? 0 : row.Field<int>("pcompress6");
         entity.pcompress7 = row.IsNull("pcompress7") ? 0 : row.Field<int>("pcompress7");
         entity.pcompress8 = row.IsNull("pcompress8") ? 0 : row.Field<int>("pcompress8");
         entity.pcompress9 = row.IsNull("pcompress9") ? 0 : row.Field<int>("pcompress9");
         entity.pcompress10 = row.IsNull("pcompress10") ? 0 : row.Field<int>("pcompress10");
         entity.pnormal1 = row.IsNull("pnormal1") ? 0 : row.Field<int>("pnormal1");
         entity.pnormal2 = row.IsNull("pnormal2") ? 0 : row.Field<int>("pnormal2");
         entity.pnormal3 = row.IsNull("pnormal3") ? 0 : row.Field<int>("pnormal3");
         entity.pnormal4 = row.IsNull("pnormal4") ? 0 : row.Field<int>("pnormal4");
         entity.pnormal5 = row.IsNull("pnormal5") ? 0 : row.Field<int>("pnormal5");
         entity.pnormal6 = row.IsNull("pnormal6") ? 0 : row.Field<int>("pnormal6");
         entity.pnormal7 = row.IsNull("pnormal7") ? 0 : row.Field<int>("pnormal7");
         entity.pnormal8 = row.IsNull("pnormal8") ? 0 : row.Field<int>("pnormal8");
         entity.pnormal9 = row.IsNull("pnormal9") ? 0 : row.Field<int>("pnormal9");
         entity.pnormal10 = row.IsNull("pnormal10") ? 0 : row.Field<int>("pnormal10");
         entity.pinit1 = row.IsNull("pinit1") ? 0 : row.Field<int>("pinit1");
         entity.pinit2 = row.IsNull("pinit2") ? 0 : row.Field<int>("pinit2");
         entity.pinit3 = row.IsNull("pinit3") ? 0 : row.Field<int>("pinit3");
         entity.pinit4 = row.IsNull("pinit4") ? 0 : row.Field<int>("pinit4");
         entity.pinit5 = row.IsNull("pinit5") ? 0 : row.Field<int>("pinit5");
         entity.pinit6 = row.IsNull("pinit6") ? 0 : row.Field<int>("pinit6");
         entity.pinit7 = row.IsNull("pinit7") ? 0 : row.Field<int>("pinit7");
         entity.pinit8 = row.IsNull("pinit8") ? 0 : row.Field<int>("pinit8");
         entity.pinit9 = row.IsNull("pinit9") ? 0 : row.Field<int>("pinit9");
         entity.pinit10 = row.IsNull("pinit10") ? 0 : row.Field<int>("pinit10");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.armaillbl = row.IsNull("armaillbl") ? string.Empty : row.Field<string>("armaillbl");
         entity.cmmaillbl = row.IsNull("cmmaillbl") ? string.Empty : row.Field<string>("cmmaillbl");
         entity.prodlbl = row.IsNull("prodlbl") ? string.Empty : row.Field<string>("prodlbl");
         entity.shiplbl = row.IsNull("shiplbl") ? string.Empty : row.Field<string>("shiplbl");
         entity.binloclbl = row.IsNull("binloclbl") ? string.Empty : row.Field<string>("binloclbl");
         entity.edilbl = row.IsNull("edilbl") ? string.Empty : row.Field<string>("edilbl");
         entity.picklbl = row.IsNull("picklbl") ? string.Empty : row.Field<string>("picklbl");
         entity.rxsprinter = row.IsNull("rxsprinter") ? string.Empty : row.Field<string>("rxsprinter");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.cartonlbl = row.IsNull("cartonlbl") ? string.Empty : row.Field<string>("cartonlbl");
         entity.rcvlbl = row.IsNull("rcvlbl") ? string.Empty : row.Field<string>("rcvlbl");
         entity.rcvwtlbl = row.IsNull("rcvwtlbl") ? string.Empty : row.Field<string>("rcvwtlbl");
         entity.maxlabels = row.IsNull("maxlabels") ? 0 : row.Field<int>("maxlabels");
         entity.user10 = row.IsNull("user10") ? string.Empty : row.Field<string>("user10");
         entity.user11 = row.IsNull("user11") ? string.Empty : row.Field<string>("user11");
         entity.user12 = row.IsNull("user12") ? string.Empty : row.Field<string>("user12");
         entity.user13 = row.IsNull("user13") ? string.Empty : row.Field<string>("user13");
         entity.user14 = row.IsNull("user14") ? string.Empty : row.Field<string>("user14");
         entity.saspgroup = row.IsNull("saspgroup") ? string.Empty : row.Field<string>("saspgroup");
         entity.altsizeprinter = row.IsNull("altsizeprinter") ? string.Empty : row.Field<string>("altsizeprinter");
         entity.labelsize = row.IsNull("labelsize") ? string.Empty : row.Field<string>("labelsize");
         entity.rowID = row.Field<byte[]>("saspRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSaspBase(ref DataRow row, SaspBase entity)
      {
         row.SetField("printernm", entity.printernm);
         row.SetField("descrip", entity.descrip);
         row.SetField("wide", entity.wide);
         row.SetField("ptype", entity.ptype);
         row.SetField("pcommand", entity.pcommand);
         row.SetField("operinit", entity.operinit);
         row.SetField("transtm", entity.transtm);
         row.SetField("transdt", entity.transdt);
         row.SetField("pclose1", entity.pclose1);
         row.SetField("pclose2", entity.pclose2);
         row.SetField("pclose3", entity.pclose3);
         row.SetField("pclose4", entity.pclose4);
         row.SetField("pclose5", entity.pclose5);
         row.SetField("pclose6", entity.pclose6);
         row.SetField("pclose7", entity.pclose7);
         row.SetField("pclose8", entity.pclose8);
         row.SetField("pclose9", entity.pclose9);
         row.SetField("pclose10", entity.pclose10);
         row.SetField("pcompress1", entity.pcompress1);
         row.SetField("pcompress2", entity.pcompress2);
         row.SetField("pcompress3", entity.pcompress3);
         row.SetField("pcompress4", entity.pcompress4);
         row.SetField("pcompress5", entity.pcompress5);
         row.SetField("pcompress6", entity.pcompress6);
         row.SetField("pcompress7", entity.pcompress7);
         row.SetField("pcompress8", entity.pcompress8);
         row.SetField("pcompress9", entity.pcompress9);
         row.SetField("pcompress10", entity.pcompress10);
         row.SetField("pnormal1", entity.pnormal1);
         row.SetField("pnormal2", entity.pnormal2);
         row.SetField("pnormal3", entity.pnormal3);
         row.SetField("pnormal4", entity.pnormal4);
         row.SetField("pnormal5", entity.pnormal5);
         row.SetField("pnormal6", entity.pnormal6);
         row.SetField("pnormal7", entity.pnormal7);
         row.SetField("pnormal8", entity.pnormal8);
         row.SetField("pnormal9", entity.pnormal9);
         row.SetField("pnormal10", entity.pnormal10);
         row.SetField("pinit1", entity.pinit1);
         row.SetField("pinit2", entity.pinit2);
         row.SetField("pinit3", entity.pinit3);
         row.SetField("pinit4", entity.pinit4);
         row.SetField("pinit5", entity.pinit5);
         row.SetField("pinit6", entity.pinit6);
         row.SetField("pinit7", entity.pinit7);
         row.SetField("pinit8", entity.pinit8);
         row.SetField("pinit9", entity.pinit9);
         row.SetField("pinit10", entity.pinit10);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("armaillbl", entity.armaillbl);
         row.SetField("cmmaillbl", entity.cmmaillbl);
         row.SetField("prodlbl", entity.prodlbl);
         row.SetField("shiplbl", entity.shiplbl);
         row.SetField("binloclbl", entity.binloclbl);
         row.SetField("edilbl", entity.edilbl);
         row.SetField("picklbl", entity.picklbl);
         row.SetField("rxsprinter", entity.rxsprinter);
         row.SetField("transproc", entity.transproc);
         row.SetField("cono", entity.cono);
         row.SetField("cartonlbl", entity.cartonlbl);
         row.SetField("rcvlbl", entity.rcvlbl);
         row.SetField("rcvwtlbl", entity.rcvwtlbl);
         row.SetField("maxlabels", entity.maxlabels);
         row.SetField("user10", entity.user10);
         row.SetField("user11", entity.user11);
         row.SetField("user12", entity.user12);
         row.SetField("user13", entity.user13);
         row.SetField("user14", entity.user14);
         row.SetField("saspgroup", entity.saspgroup);
         row.SetField("altsizeprinter", entity.altsizeprinter);
         row.SetField("labelsize", entity.labelsize);
         row.SetField("saspRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, SaspBase entity)
      {
         row.SetField("printernm", entity.printernm);
         row.SetField("saspRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	