//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.AR
{
   /// <summary>
   /// Customer Master
   /// </summary>
   [EntityType("Customer Master","aric.detail","CustomerPartyMaster")]
   public partial class ArscBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [BodContext(BodPart.AcctEntity,""),BusContext(BusPart.AcctEntity),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      [BodID(1,RequiredId.True),DrillbackParam("pk",1),BusContext(BusPart.Name),Key,Order]
      public decimal custno { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [BusContext(BusPart.Descr),StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string zipcd { get; set; }

      /// <summary>
      /// Lookup Name
      /// </summary>
      [StringValidationAttribute]
      public string lookupnm { get; set; }

      /// <summary>
      /// Phone
      /// </summary>
      [StringValidationAttribute]
      public string phoneno { get; set; }

      /// <summary>
      /// Fax Phone
      /// </summary>
      [StringValidationAttribute]
      public string faxphoneno { get; set; }

      /// <summary>
      /// Agent Phone
      /// </summary>
      [StringValidationAttribute]
      public string pophoneno { get; set; }

      /// <summary>
      /// Purch Agnt
      /// </summary>
      [StringValidationAttribute]
      public string pocontctnm { get; set; }

      /// <summary>
      /// Comment
      /// </summary>
      [StringValidationAttribute]
      public string comment { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      public bool statustype { get; set; }

      /// <summary>
      /// NAICS Codes
      /// </summary>
      public int siccd1 { get; set; }
      public int siccd2 { get; set; }
      public int siccd3 { get; set; }

      /// <summary>
      /// Terms
      /// </summary>
      [StringValidationAttribute]
      public string termstype { get; set; }

      /// <summary>
      /// Service Chg
      /// </summary>
      public bool servchgfl { get; set; }

      /// <summary>
      /// Customer Type
      /// </summary>
      [StringValidationAttribute]
      public string custtype { get; set; }

      /// <summary>
      /// Dunning
      /// </summary>
      public bool dunningfl { get; set; }

      /// <summary>
      /// Unearn Disc
      /// </summary>
      public bool unearnedfl { get; set; }

      /// <summary>
      /// Territory
      /// </summary>
      [StringValidationAttribute]
      public string salesterr { get; set; }

      /// <summary>
      /// Customer Class
      /// </summary>
      public int @class { get; set; }

      /// <summary>
      /// Cycle
      /// </summary>
      [StringValidationAttribute]
      public string cyclecd { get; set; }

      /// <summary>
      /// Sales Manager
      /// </summary>
      public bool salesmgrfl { get; set; }

      /// <summary>
      /// Division #
      /// </summary>
      public int divno { get; set; }

      /// <summary>
      /// Bank #
      /// </summary>
      public int bankno { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Statements to Customer
      /// </summary>
      public decimal custno2 { get; set; }

      /// <summary>
      /// Acct Opened
      /// </summary>
      public DateTime? enterdt { get; set; }

      /// <summary>
      /// Minimum Order
      /// </summary>
      public decimal minord { get; set; }

      /// <summary>
      /// Maximum Order
      /// </summary>
      public decimal maxord { get; set; }

      /// <summary>
      /// Route/Day/Stop
      /// </summary>
      [StringValidationAttribute]
      public string route { get; set; }

      /// <summary>
      /// Unapplied Cash
      /// </summary>
      public decimal uncashbal { get; set; }

      /// <summary>
      /// Pick Priority
      /// </summary>
      public int pickprno { get; set; }

      /// <summary>
      /// Invoice Copies
      /// </summary>
      public int noinvcopy { get; set; }

      /// <summary>
      /// Rebate Type
      /// </summary>
      [StringValidationAttribute]
      public string rebatety { get; set; }

      /// <summary>
      /// B/O Ok
      /// </summary>
      public bool bofl { get; set; }

      /// <summary>
      /// Country
      /// </summary>
      [StringValidationAttribute]
      public string countrycd { get; set; }

      /// <summary>
      /// Subs Ok
      /// </summary>
      public bool subfl { get; set; }

      /// <summary>
      /// Change Reason Cd
      /// </summary>
      [StringValidationAttribute]
      public string edichgcd { get; set; }

      /// <summary>
      /// Tax Cert #
      /// </summary>
      [StringValidationAttribute]
      public string taxcert { get; set; }

      /// <summary>
      /// Order Status Cd
      /// </summary>
      [StringValidationAttribute]
      public string ediordcd { get; set; }

      /// <summary>
      /// Instructions
      /// </summary>
      [StringValidationAttribute]
      public string shipinstr { get; set; }

      /// <summary>
      /// Elec. Proposal Type
      /// </summary>
      [StringValidationAttribute]
      public string eproptype { get; set; }

      /// <summary>
      /// Ship Via
      /// </summary>
      [StringValidationAttribute]
      public string shipviaty { get; set; }

      /// <summary>
      /// Surcharge Method
      /// </summary>
      [StringValidationAttribute]
      public string ardatcty { get; set; }

      /// <summary>
      /// Default Whse
      /// </summary>
      [BusContext(BusPart.Location),StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// In
      /// </summary>
      [StringValidationAttribute]
      public string slsrepin { get; set; }

      /// <summary>
      /// Salesrep Out
      /// </summary>
      [StringValidationAttribute]
      public string slsrepout { get; set; }

      /// <summary>
      /// Require Ship To
      /// </summary>
      public bool shipreqfl { get; set; }

      /// <summary>
      /// Require PO #
      /// </summary>
      public bool poreqfl { get; set; }

      /// <summary>
      /// Disposition
      /// </summary>
      [StringValidationAttribute]
      public string orderdisp { get; set; }

      /// <summary>
      /// Sync To CRM
      /// </summary>
      public bool synccrmfl { get; set; }

      /// <summary>
      /// Price Type
      /// </summary>
      [StringValidationAttribute]
      public string pricetype { get; set; }

      /// <summary>
      /// Price Level
      /// </summary>
      public int pricecd { get; set; }

      /// <summary>
      /// Line Disc Level
      /// </summary>
      public int disccd { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// Order Disc Level
      /// </summary>
      public int wodisccd { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// Taxing State
      /// </summary>
      [StringValidationAttribute]
      public string statecd { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// Locality
      /// </summary>
      [StringValidationAttribute]
      public string taxauth { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// Taxable Type
      /// </summary>
      [StringValidationAttribute]
      public string taxablety { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Non Tax Reason
      /// </summary>
      [StringValidationAttribute]
      public string nontaxtype { get; set; }

      /// <summary>
      /// Freight In
      /// </summary>
      public bool inbndfrtfl { get; set; }

      /// <summary>
      /// Out
      /// </summary>
      public bool outbndfrtfl { get; set; }

      /// <summary>
      /// Credit Manager
      /// </summary>
      [StringValidationAttribute]
      public string creditmgr { get; set; }

      /// <summary>
      /// Credit Established
      /// </summary>
      public DateTime? crestdt { get; set; }

      /// <summary>
      /// Last Review
      /// </summary>
      public DateTime? lastrevdt { get; set; }

      /// <summary>
      /// Next Review
      /// </summary>
      public DateTime? nextrevdt { get; set; }

      /// <summary>
      /// Credit Limit
      /// </summary>
      public decimal credlim { get; set; }

      /// <summary>
      /// Hold Period
      /// </summary>
      public int holdpercd { get; set; }

      /// <summary>
      /// Sales Order Status
      /// </summary>
      [StringValidationAttribute]
      public string selltype { get; set; }

      /// <summary>
      /// Hold or Open Date
      /// </summary>
      public DateTime? statusdt { get; set; }

      /// <summary>
      /// Accts Payable Mgr
      /// </summary>
      [StringValidationAttribute]
      public string apmgr { get; set; }

      /// <summary>
      /// and Phone #
      /// </summary>
      [StringValidationAttribute]
      public string apphoneno { get; set; }

      /// <summary>
      /// Bank Name
      /// </summary>
      [StringValidationAttribute]
      public string banknm { get; set; }

      /// <summary>
      /// Bank Contact
      /// </summary>
      [StringValidationAttribute]
      public string bankmgr { get; set; }

      /// <summary>
      /// and Phone #
      /// </summary>
      [StringValidationAttribute]
      public string bankphoneno { get; set; }

      /// <summary>
      /// Bank Account #
      /// </summary>
      [StringValidationAttribute]
      public string bankacct { get; set; }

      /// <summary>
      /// Last Payment
      /// </summary>
      public decimal lastpayamt { get; set; }

      /// <summary>
      /// Last Payment
      /// </summary>
      public DateTime? lastpaydt { get; set; }

      /// <summary>
      /// Last Past Due
      /// </summary>
      public DateTime? pastduedt { get; set; }

      /// <summary>
      /// # Times Late
      /// </summary>
      public int nopastdue { get; set; }

      /// <summary>
      /// Avg Days to Pay
      /// </summary>
      public int avgpaydays { get; set; }

      /// <summary>
      /// # of Payments
      /// </summary>
      public int nopay { get; set; }

      /// <summary>
      /// # of Invoices
      /// </summary>
      public int noinv { get; set; }

      /// <summary>
      /// Duns #
      /// </summary>
      [StringValidationAttribute]
      public string dunsno { get; set; }

      /// <summary>
      /// Last Rating
      /// </summary>
      [StringValidationAttribute]
      public string lastrtg1 { get; set; }
      [StringValidationAttribute]
      public string lastrtg2 { get; set; }

      /// <summary>
      /// Last Rating
      /// </summary>
      public DateTime? lastrtgdt1 { get; set; }
      public DateTime? lastrtgdt2 { get; set; }

      /// <summary>
      /// Credit Service
      /// </summary>
      [StringValidationAttribute]
      public string crsname { get; set; }

      /// <summary>
      /// Reference
      /// </summary>
      [StringValidationAttribute]
      public string crref1 { get; set; }
      [StringValidationAttribute]
      public string crref2 { get; set; }

      /// <summary>
      /// Security Agreement
      /// </summary>
      public bool securfl { get; set; }

      /// <summary>
      /// Period Balance
      /// </summary>
      public decimal periodbal1 { get; set; }
      public decimal periodbal2 { get; set; }
      public decimal periodbal3 { get; set; }
      public decimal periodbal4 { get; set; }
      public decimal periodbal5 { get; set; }

      /// <summary>
      /// Service Charges
      /// </summary>
      public decimal servchgbal { get; set; }

      /// <summary>
      /// Future Invoices
      /// </summary>
      public decimal futinvbal { get; set; }

      /// <summary>
      /// Sales Ytd
      /// </summary>
      public decimal salesytd { get; set; }

      /// <summary>
      /// Cost Ytd
      /// </summary>
      public decimal costytd { get; set; }

      /// <summary>
      /// Returns Ytd
      /// </summary>
      public decimal returnsytd { get; set; }

      /// <summary>
      /// COD Balance
      /// </summary>
      public decimal codbal { get; set; }

      /// <summary>
      /// Future Order Balance
      /// </summary>
      public decimal futbal { get; set; }

      /// <summary>
      /// On Order Balance
      /// </summary>
      public decimal ordbal { get; set; }

      /// <summary>
      /// Last Stmt Balance
      /// </summary>
      public decimal laststmtbal { get; set; }

      /// <summary>
      /// Prior Stmt Balance
      /// </summary>
      public decimal prstmtbal { get; set; }

      /// <summary>
      /// Service Chg Ytd
      /// </summary>
      public decimal servchgytd { get; set; }

      /// <summary>
      /// Cash Disc Ytd
      /// </summary>
      public decimal discytd { get; set; }

      /// <summary>
      /// Unearned Disc Ytd
      /// </summary>
      public decimal unearnedytd { get; set; }

      /// <summary>
      /// Last Aged
      /// </summary>
      public DateTime? lastagedt { get; set; }

      /// <summary>
      /// Cust Prod
      /// </summary>
      public bool custprodfl { get; set; }

      /// <summary>
      /// Last Sale Dt
      /// </summary>
      public DateTime? lastsaledt { get; set; }

      /// <summary>
      /// Last Stmt Dt
      /// </summary>
      public DateTime? laststmtdt { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// cashrecfl
      /// </summary>
      public bool cashrecfl { get; set; }

      /// <summary>
      /// cashreqfl
      /// </summary>
      public bool cashreqfl { get; set; }

      /// <summary>
      /// Rebates Due
      /// </summary>
      public decimal rebatesdue { get; set; }

      /// <summary>
      /// Rebates Ytd
      /// </summary>
      public decimal rebatesytd { get; set; }

      /// <summary>
      /// Credit Card #
      /// </summary>
      [StringValidationAttribute]
      public string ccno { get; set; }

      /// <summary>
      /// Expiration
      /// </summary>
      [StringValidationAttribute]
      public string ccexp { get; set; }

      /// <summary>
      /// Paymt and Card #
      /// </summary>
      public int mediacd { get; set; }

      /// <summary>
      /// Ship To
      /// </summary>
      [StringValidationAttribute]
      public string shipto { get; set; }

      /// <summary>
      /// Unapplied Credit
      /// </summary>
      public decimal misccrbal { get; set; }

      /// <summary>
      /// Print Price
      /// </summary>
      public bool pickprtfl { get; set; }

      /// <summary>
      /// Down Payments
      /// </summary>
      public decimal downpayamt { get; set; }

      /// <summary>
      /// Addons
      /// </summary>
      public int addonno1 { get; set; }
      public int addonno2 { get; set; }
      public int addonno3 { get; set; }
      public int addonno4 { get; set; }

      /// <summary>
      /// Default PO#
      /// </summary>
      [StringValidationAttribute]
      public string custpo { get; set; }

      /// <summary>
      /// Elec. Acknowledgement Type
      /// </summary>
      [StringValidationAttribute]
      public string eacktype { get; set; }

      /// <summary>
      /// Elec. Invoice Type
      /// </summary>
      [StringValidationAttribute]
      public string einvtype { get; set; }

      /// <summary>
      /// Elec. Statement Type
      /// </summary>
      [StringValidationAttribute]
      public string estmttype { get; set; }

      /// <summary>
      /// Partner Name
      /// </summary>
      [StringValidationAttribute]
      public string edipartner { get; set; }

      /// <summary>
      /// Language Code
      /// </summary>
      [StringValidationAttribute]
      public string langcd { get; set; }

      /// <summary>
      /// Certificate #
      /// </summary>
      [StringValidationAttribute]
      public string gstcert { get; set; }

      /// <summary>
      /// Registration #
      /// </summary>
      [StringValidationAttribute]
      public string gstreg { get; set; }

      /// <summary>
      /// Stmt Type
      /// </summary>
      [StringValidationAttribute]
      public string statementty { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Group
      /// </summary>
      [StringValidationAttribute]
      public string easngrp { get; set; }

      /// <summary>
      /// Send To
      /// </summary>
      [StringValidationAttribute]
      public string easnto { get; set; }

      /// <summary>
      /// Partner Address
      /// </summary>
      [StringValidationAttribute]
      public string edipartaddr { get; set; }

      /// <summary>
      /// Your Address
      /// </summary>
      [StringValidationAttribute]
      public string ediyouraddr { get; set; }

      /// <summary>
      /// Control #
      /// </summary>
      public int edictrlno { get; set; }

      /// <summary>
      /// Envelope Tag
      /// </summary>
      [StringValidationAttribute]
      public string edienvtag1 { get; set; }
      [StringValidationAttribute]
      public string edienvtag2 { get; set; }

      /// <summary>
      /// Acknow. Version
      /// </summary>
      [StringValidationAttribute]
      public string ediackver { get; set; }

      /// <summary>
      /// Invoice Version
      /// </summary>
      [StringValidationAttribute]
      public string ediinvver { get; set; }

      /// <summary>
      /// Network
      /// </summary>
      [StringValidationAttribute]
      public string edinetwork { get; set; }

      /// <summary>
      /// Tax Cert Exp Date
      /// </summary>
      public DateTime? taxdt { get; set; }

      /// <summary>
      /// Invoice To
      /// </summary>
      public decimal fpcustno { get; set; }

      /// <summary>
      /// Finance Co
      /// </summary>
      public bool fpcustfl { get; set; }

      /// <summary>
      /// Geo Code
      /// </summary>
      public int geocd { get; set; }

      /// <summary>
      /// Tender By
      /// </summary>
      public bool tendqtyfl { get; set; }

      /// <summary>
      /// PST Registration #
      /// </summary>
      [StringValidationAttribute]
      public string taxreg { get; set; }

      /// <summary>
      /// High Balance
      /// </summary>
      public decimal highbal { get; set; }

      /// <summary>
      /// Currency
      /// </summary>
      [StringValidationAttribute]
      public string currencyty { get; set; }

      /// <summary>
      /// Last Sale Amt
      /// </summary>
      public decimal lastsaleamt { get; set; }

      /// <summary>
      /// High Sale Amt
      /// </summary>
      public decimal highsaleamt { get; set; }

      /// <summary>
      /// PM Cash Only
      /// </summary>
      public bool pmcashfl { get; set; }

      /// <summary>
      /// Surcharge Amount
      /// </summary>
      public decimal ardatccost { get; set; }

      /// <summary>
      /// County
      /// </summary>
      [StringValidationAttribute]
      public string countycd { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string citycd { get; set; }

      /// <summary>
      /// Other 1
      /// </summary>
      [StringValidationAttribute]
      public string other1cd { get; set; }

      /// <summary>
      /// Other 2
      /// </summary>
      [StringValidationAttribute]
      public string other2cd { get; set; }

      /// <summary>
      /// Shipping Label
      /// </summary>
      [StringValidationAttribute]
      public string shiplbl { get; set; }

      /// <summary>
      /// Ecommerce Whse
      /// </summary>
      [StringValidationAttribute]
      public string ecommwhse { get; set; }

      /// <summary>
      /// SPC Default
      /// </summary>
      [StringValidationAttribute]
      public string spcdefaultty { get; set; }

      /// <summary>
      /// External Web Page
      /// </summary>
      [StringValidationAttribute]
      public string webpageext { get; set; }

      /// <summary>
      /// WebPage
      /// </summary>
      [StringValidationAttribute]
      public string webpage { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Auth Group List
      /// </summary>
      [StringValidationAttribute]
      public string authGrpList { get; set; }

      /// <summary>
      /// Email Address
      /// </summary>
      [StringValidationAttribute]
      public string email { get; set; }

      /// <summary>
      /// PD Custno
      /// </summary>
      public decimal pdcustno { get; set; }

      /// <summary>
      /// Line Terms
      /// </summary>
      public bool linetermsfl { get; set; }

      /// <summary>
      /// Core Dealer
      /// </summary>
      [StringValidationAttribute]
      public string dealer { get; set; }

      /// <summary>
      /// Last Year Sales Ytd
      /// </summary>
      public decimal lastsalesytd { get; set; }

      /// <summary>
      /// Last Year Cost Ytd
      /// </summary>
      public decimal lastcostytd { get; set; }

      /// <summary>
      /// Last Year Returns Ytd
      /// </summary>
      public decimal lastreturnsytd { get; set; }

      /// <summary>
      /// Last Year Service Chg Ytd
      /// </summary>
      public decimal lastservchgytd { get; set; }

      /// <summary>
      /// Last Year Cash Disc Ytd
      /// </summary>
      public decimal lastdiscytd { get; set; }

      /// <summary>
      /// Last Year Unearned Disc Ytd
      /// </summary>
      public decimal lastunearnedytd { get; set; }

      /// <summary>
      /// Last Year Rebates Ytd
      /// </summary>
      public decimal lastrebatesytd { get; set; }

      /// <summary>
      /// Account Type
      /// </summary>
      [StringValidationAttribute]
      public string ptxtype { get; set; }

      /// <summary>
      /// EDI Cat Prod
      /// </summary>
      public bool edicatprodfl { get; set; }

      /// <summary>
      /// Addons
      /// </summary>
      public int addonnum1 { get; set; }
      public int addonnum2 { get; set; }
      public int addonnum3 { get; set; }
      public int addonnum4 { get; set; }
      public int addonnum5 { get; set; }
      public int addonnum6 { get; set; }
      public int addonnum7 { get; set; }
      public int addonnum8 { get; set; }

      /// <summary>
      /// AR Processing
      /// </summary>
      public bool ptxarfl { get; set; }

      /// <summary>
      /// EDI NS Prod
      /// </summary>
      public bool edinsprodfl { get; set; }

      /// <summary>
      /// AP Processing
      /// </summary>
      public bool ptxapfl { get; set; }

      /// <summary>
      /// EDI Print Notes
      /// </summary>
      public bool ediprintnotesfl { get; set; }

      /// <summary>
      /// Transaction Processing
      /// </summary>
      public bool ptxtransbillfl { get; set; }

      /// <summary>
      /// EDI JIT
      /// </summary>
      public bool edijitfl { get; set; }

      /// <summary>
      /// EDI Terms
      /// </summary>
      public bool editermsfl { get; set; }

      /// <summary>
      /// EDI Price
      /// </summary>
      public bool ediprcfl { get; set; }

      /// <summary>
      /// EDI 840's
      /// </summary>
      public bool edi840fl { get; set; }

      /// <summary>
      /// US/Metric
      /// </summary>
      [StringValidationAttribute]
      public string weightty { get; set; }

      /// <summary>
      /// LockBox Post Type
      /// </summary>
      [StringValidationAttribute]
      public string lbxpostty { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr3 { get; set; }

      /// <summary>
      /// Exclude SRO Charges
      /// </summary>
      public bool swexaddfl1 { get; set; }
      public bool swexaddfl2 { get; set; }
      public bool swexaddfl3 { get; set; }
      public bool swexaddfl4 { get; set; }

      /// <summary>
      /// Customer Period Balance
      /// </summary>
      public decimal custperiodbal1 { get; set; }
      public decimal custperiodbal2 { get; set; }
      public decimal custperiodbal3 { get; set; }
      public decimal custperiodbal4 { get; set; }
      public decimal custperiodbal5 { get; set; }

      /// <summary>
      /// Consolidated Invoice Type
      /// </summary>
      [StringValidationAttribute]
      public string consolinvty { get; set; }

      /// <summary>
      /// Customer COD Balance
      /// </summary>
      public decimal custcodbal { get; set; }

      /// <summary>
      /// Customer On Order Balance
      /// </summary>
      public decimal custordbal { get; set; }

      /// <summary>
      /// Customer Future Invoices
      /// </summary>
      public decimal custfutinvbal { get; set; }

      /// <summary>
      /// Customer Unapplied Credit
      /// </summary>
      public decimal custmisccrbal { get; set; }

      /// <summary>
      /// Customer Service Charges
      /// </summary>
      public decimal custservchgbal { get; set; }

      /// <summary>
      /// Customer Unapplied Cash
      /// </summary>
      public decimal custuncashbal { get; set; }

      /// <summary>
      /// Consolidated Invoice Terms
      /// </summary>
      [StringValidationAttribute]
      public string consolterms { get; set; }

      /// <summary>
      /// Consolidation Format
      /// </summary>
      [StringValidationAttribute]
      public string consolformat { get; set; }

      /// <summary>
      /// Consolidation Interval
      /// </summary>
      [StringValidationAttribute]
      public string consolinterval { get; set; }

      /// <summary>
      /// Next Consolidation Date
      /// </summary>
      public DateTime? nextconsoldt { get; set; }

      /// <summary>
      /// Last Consolidation Date
      /// </summary>
      public DateTime? lastconsoldt { get; set; }

      /// <summary>
      /// Synchronize to MDD
      /// </summary>
      public bool syncmddfl { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      public int mastercono { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      public decimal mastercustno { get; set; }

      /// <summary>
      /// User 10
      /// </summary>
      [StringValidationAttribute]
      public string user10 { get; set; }

      /// <summary>
      /// User 11
      /// </summary>
      [StringValidationAttribute]
      public string user11 { get; set; }

      /// <summary>
      /// User 12
      /// </summary>
      [StringValidationAttribute]
      public string user12 { get; set; }

      /// <summary>
      /// User 13
      /// </summary>
      [StringValidationAttribute]
      public string user13 { get; set; }

      /// <summary>
      /// User 14
      /// </summary>
      [StringValidationAttribute]
      public string user14 { get; set; }

      /// <summary>
      /// User 15
      /// </summary>
      [StringValidationAttribute]
      public string user15 { get; set; }

      /// <summary>
      /// User 16
      /// </summary>
      [StringValidationAttribute]
      public string user16 { get; set; }

      /// <summary>
      /// User 17
      /// </summary>
      [StringValidationAttribute]
      public string user17 { get; set; }

      /// <summary>
      /// User 18
      /// </summary>
      [StringValidationAttribute]
      public string user18 { get; set; }

      /// <summary>
      /// User 19
      /// </summary>
      [StringValidationAttribute]
      public string user19 { get; set; }

      /// <summary>
      /// User 20
      /// </summary>
      [StringValidationAttribute]
      public string user20 { get; set; }

      /// <summary>
      /// User 21
      /// </summary>
      [StringValidationAttribute]
      public string user21 { get; set; }

      /// <summary>
      /// User 22
      /// </summary>
      [StringValidationAttribute]
      public string user22 { get; set; }

      /// <summary>
      /// User 23
      /// </summary>
      [StringValidationAttribute]
      public string user23 { get; set; }

      /// <summary>
      /// User 24
      /// </summary>
      [StringValidationAttribute]
      public string user24 { get; set; }

      /// <summary>
      /// Basis Avg Days to Pay
      /// </summary>
      public int basisavgpaydays { get; set; }

      /// <summary>
      /// Basis # of Payments
      /// </summary>
      public int basisnopay { get; set; }

      /// <summary>
      /// Basis Beg Date
      /// </summary>
      public DateTime? basisbegdt { get; set; }

      /// <summary>
      /// Basis End Date
      /// </summary>
      public DateTime? basisenddt { get; set; }

      /// <summary>
      /// Allow Negative Overages
      /// </summary>
      public bool srallownegoverfl { get; set; }

      /// <summary>
      /// Group
      /// </summary>
      [StringValidationAttribute]
      public string groupid { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Intrastat Terms of Delivery
      /// </summary>
      public int intratodcd { get; set; }

      /// <summary>
      /// Outside City Limit
      /// </summary>
      public bool outofcityfl { get; set; }

      /// <summary>
      /// VAT Tax Type
      /// </summary>
      [StringValidationAttribute]
      public string vattype { get; set; }

      /// <summary>
      /// Use in Settltment Calc
      /// </summary>
      public bool usesettcalcfl { get; set; }

      /// <summary>
      /// Settlement Disc Tax Type
      /// </summary>
      [StringValidationAttribute]
      public string settdisctype { get; set; }

      /// <summary>
      /// VAT Variable Rated On Products
      /// </summary>
      public bool vatvariablefl { get; set; }

      /// <summary>
      /// Pick Label Size
      /// </summary>
      [StringValidationAttribute]
      public string picklabelsize { get; set; }

      /// <summary>
      /// Strategic Account Code
      /// </summary>
      [StringValidationAttribute]
      public string strategicacct { get; set; }

      /// <summary>
      /// Pick Label Prefix
      /// </summary>
      [StringValidationAttribute]
      public string picklabelprefix { get; set; }

      /// <summary>
      /// Balance Integration Date/Time
      /// </summary>
      [StringValidationAttribute]
      public string balintdatetm { get; set; }

      /// <summary>
      /// DNBi Requested Credit Limit
      /// </summary>
      public decimal dnbireqcredlim { get; set; }

      /// <summary>
      /// DNBi Score Card
      /// </summary>
      public decimal dnbiscorecard { get; set; }

      /// <summary>
      /// DNBi Risk Code
      /// </summary>
      [StringValidationAttribute]
      public string dnbiriskcode { get; set; }

      /// <summary>
      /// DNBi Application Status
      /// </summary>
      [StringValidationAttribute]
      public string dnbiapplstatus { get; set; }

      /// <summary>
      /// DNBi Parent Duns Number
      /// </summary>
      [StringValidationAttribute]
      public string dnbiparentdunsno { get; set; }

      /// <summary>
      /// DNBi Domestic Duns Number
      /// </summary>
      [StringValidationAttribute]
      public string dnbidomesticdunsno { get; set; }

      /// <summary>
      /// DNBi Global Duns Number
      /// </summary>
      [StringValidationAttribute]
      public string dnbiglobaldunsno { get; set; }

      /// <summary>
      /// DNBi Company Name
      /// </summary>
      [StringValidationAttribute]
      public string dnbiname { get; set; }

      /// <summary>
      /// DNBi Address
      /// </summary>
      [StringValidationAttribute]
      public string dnbiaddress { get; set; }

      /// <summary>
      /// DNBi City
      /// </summary>
      [StringValidationAttribute]
      public string dnbicity { get; set; }

      /// <summary>
      /// DNBi State
      /// </summary>
      [StringValidationAttribute]
      public string dnbistate { get; set; }

      /// <summary>
      /// DNBi Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string dnbizipcd { get; set; }

      /// <summary>
      /// DNBi Country
      /// </summary>
      [StringValidationAttribute]
      public string dnbicountry { get; set; }

      /// <summary>
      /// DNBi Phone Number
      /// </summary>
      [StringValidationAttribute]
      public string dnbiphoneno { get; set; }

      /// <summary>
      /// DNBi Expiration Date
      /// </summary>
      public DateTime? dnbiexpiredate { get; set; }

      /// <summary>
      /// DNBi Match / Response Type
      /// </summary>
      [StringValidationAttribute]
      public string dnbiresponse { get; set; }

      /// <summary>
      /// DNBi No Call Flag
      /// </summary>
      public bool dnbinocallfl { get; set; }

      /// <summary>
      /// DNBi Application ID
      /// </summary>
      [StringValidationAttribute]
      public string dnbiapplid { get; set; }

      /// <summary>
      /// Bill Direct PO Addon
      /// </summary>
      [StringValidationAttribute]
      public string billdirectaddon { get; set; }

      /// <summary>
      /// DNBi Recommended Credit Limit
      /// </summary>
      public decimal dnbirecomcredlim { get; set; }

      /// <summary>
      /// Freight Terms
      /// </summary>
      [StringValidationAttribute]
      public string frttermscd { get; set; }

      /// <summary>
      /// Transfer Location
      /// </summary>
      [StringValidationAttribute]
      public string transferloc { get; set; }

      /// <summary>
      /// Action Code
      /// </summary>
      [StringValidationAttribute]
      public string esbactioncode { get; set; }

      /// <summary>
      /// ESB Balance Integration Variation ID
      /// </summary>
      [StringValidationAttribute]
      public string esbbalintvarid { get; set; }

      /// <summary>
      /// Ext Shipping Instructions
      /// </summary>
      [StringValidationAttribute]
      public string extshipinstr { get; set; }

      /// <summary>
      /// Delivery Print Type
      /// </summary>
      [StringValidationAttribute]
      public string dlvprintty { get; set; }

      /// <summary>
      /// Block CC Create
      /// </summary>
      public bool ccblockfl { get; set; }

      /// <summary>
      /// Print GL Detail
      /// </summary>
      [StringValidationAttribute]
      public string glprtdetail { get; set; }

      /// <summary>
      /// Credit Check Min
      /// </summary>
      public decimal mincredchk { get; set; }

      /// <summary>
      /// Service Vendor #
      /// </summary>
      public decimal servicevendno { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }

      /// <summary>
      /// Allow OE Fulfillment
      /// </summary>
      [StringValidationAttribute]
      public string allowfulfillmentty { get; set; }

      /// <summary>
      /// National Program Claim Account
      /// </summary>
      public bool npclaimacctfl { get; set; }

      /// <summary>
      /// Claim# Prefix
      /// </summary>
      [StringValidationAttribute]
      public string npclaimnoprefix { get; set; }

      /// <summary>
      /// Claim# Begin
      /// </summary>
      public int npclaimnobegin { get; set; }

      /// <summary>
      /// Claim# End
      /// </summary>
      public int npclaimnoend { get; set; }

      /// <summary>
      /// Claim# Next
      /// </summary>
      public int npclaimnonext { get; set; }

      /// <summary>
      /// Return Claim# Prefix
      /// </summary>
      [StringValidationAttribute]
      public string npretclaimnoprefix { get; set; }

      /// <summary>
      /// Return Claim# Begin
      /// </summary>
      public int npretclaimnobegin { get; set; }

      /// <summary>
      /// Return Claim# End
      /// </summary>
      public int npretclaimnoend { get; set; }

      /// <summary>
      /// Return Claim# Next
      /// </summary>
      public int npretclaimnonext { get; set; }

      /// <summary>
      /// Require Customer Product
      /// </summary>
      public bool custprodreqfl { get; set; }

      /// <summary>
      /// Signature Require Type
      /// </summary>
      [StringValidationAttribute]
      public string sigreqtype { get; set; }

      /// <summary>
      /// Advance Shipping Notice Type
      /// </summary>
      [StringValidationAttribute]
      public string easntype { get; set; }

      /// <summary>
      /// Restrict Data Access
      /// </summary>
      public bool restricteditfl { get; set; }

      /// <summary>
      /// Created By
      /// </summary>
      [StringValidationAttribute]
      public string createdby { get; set; }

      /// <summary>
      /// Created Date
      /// </summary>
      public DateTime? createddt { get; set; }

      /// <summary>
      /// Created Time
      /// </summary>
      [StringValidationAttribute]
      public string createdtm { get; set; }

      /// <summary>
      /// Created Proc
      /// </summary>
      [StringValidationAttribute]
      public string createdproc { get; set; }

      /// <summary>
      /// Line Ship Complete
      /// </summary>
      public bool lnshipcompfl { get; set; }

      /// <summary>
      /// Back Order Limit
      /// </summary>
      public int bolimit { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.addr1 + "," + this.city + "," + this.state + "," + this.zipcd + "," + this.countrycd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildArscBaseFromRow<T>(DataRow row) where T:ArscBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.lookupnm = row.IsNull("lookupnm") ? string.Empty : row.Field<string>("lookupnm");
         entity.phoneno = row.IsNull("phoneno") ? string.Empty : row.Field<string>("phoneno");
         entity.faxphoneno = row.IsNull("faxphoneno") ? string.Empty : row.Field<string>("faxphoneno");
         entity.pophoneno = row.IsNull("pophoneno") ? string.Empty : row.Field<string>("pophoneno");
         entity.pocontctnm = row.IsNull("pocontctnm") ? string.Empty : row.Field<string>("pocontctnm");
         entity.comment = row.IsNull("comment") ? string.Empty : row.Field<string>("comment");
         entity.statustype = row.Field<bool>("statustype");
         entity.siccd1 = row.IsNull("siccd1") ? 0 : row.Field<int>("siccd1");
         entity.siccd2 = row.IsNull("siccd2") ? 0 : row.Field<int>("siccd2");
         entity.siccd3 = row.IsNull("siccd3") ? 0 : row.Field<int>("siccd3");
         entity.termstype = row.IsNull("termstype") ? string.Empty : row.Field<string>("termstype");
         entity.servchgfl = row.Field<bool>("servchgfl");
         entity.custtype = row.IsNull("custtype") ? string.Empty : row.Field<string>("custtype");
         entity.dunningfl = row.Field<bool>("dunningfl");
         entity.unearnedfl = row.Field<bool>("unearnedfl");
         entity.salesterr = row.IsNull("salesterr") ? string.Empty : row.Field<string>("salesterr");
         entity.@class = row.IsNull("class") ? 0 : row.Field<int>("class");
         entity.cyclecd = row.IsNull("cyclecd") ? string.Empty : row.Field<string>("cyclecd");
         entity.salesmgrfl = row.Field<bool>("salesmgrfl");
         entity.divno = row.IsNull("divno") ? 0 : row.Field<int>("divno");
         entity.bankno = row.IsNull("bankno") ? 0 : row.Field<int>("bankno");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.custno2 = row.IsNull("custno2") ? decimal.Zero : row.Field<decimal>("custno2");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.minord = row.IsNull("minord") ? decimal.Zero : row.Field<decimal>("minord");
         entity.maxord = row.IsNull("maxord") ? decimal.Zero : row.Field<decimal>("maxord");
         entity.route = row.IsNull("route") ? string.Empty : row.Field<string>("route");
         entity.uncashbal = row.IsNull("uncashbal") ? decimal.Zero : row.Field<decimal>("uncashbal");
         entity.pickprno = row.IsNull("pickprno") ? 0 : row.Field<int>("pickprno");
         entity.noinvcopy = row.IsNull("noinvcopy") ? 0 : row.Field<int>("noinvcopy");
         entity.rebatety = row.IsNull("rebatety") ? string.Empty : row.Field<string>("rebatety");
         entity.bofl = row.Field<bool>("bofl");
         entity.countrycd = row.IsNull("countrycd") ? string.Empty : row.Field<string>("countrycd");
         entity.subfl = row.Field<bool>("subfl");
         entity.edichgcd = row.IsNull("edichgcd") ? string.Empty : row.Field<string>("edichgcd");
         entity.taxcert = row.IsNull("taxcert") ? string.Empty : row.Field<string>("taxcert");
         entity.ediordcd = row.IsNull("ediordcd") ? string.Empty : row.Field<string>("ediordcd");
         entity.shipinstr = row.IsNull("shipinstr") ? string.Empty : row.Field<string>("shipinstr");
         entity.eproptype = row.IsNull("eproptype") ? string.Empty : row.Field<string>("eproptype");
         entity.shipviaty = row.IsNull("shipviaty") ? string.Empty : row.Field<string>("shipviaty");
         entity.ardatcty = row.IsNull("ardatcty") ? string.Empty : row.Field<string>("ardatcty");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.slsrepin = row.IsNull("slsrepin") ? string.Empty : row.Field<string>("slsrepin");
         entity.slsrepout = row.IsNull("slsrepout") ? string.Empty : row.Field<string>("slsrepout");
         entity.shipreqfl = row.Field<bool>("shipreqfl");
         entity.poreqfl = row.Field<bool>("poreqfl");
         entity.orderdisp = row.IsNull("orderdisp") ? string.Empty : row.Field<string>("orderdisp");
         entity.synccrmfl = row.Field<bool>("synccrmfl");
         entity.pricetype = row.IsNull("pricetype") ? string.Empty : row.Field<string>("pricetype");
         entity.pricecd = row.IsNull("pricecd") ? 0 : row.Field<int>("pricecd");
         entity.disccd = row.IsNull("disccd") ? 0 : row.Field<int>("disccd");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.wodisccd = row.IsNull("wodisccd") ? 0 : row.Field<int>("wodisccd");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.statecd = row.IsNull("statecd") ? string.Empty : row.Field<string>("statecd");
         entity.user6 = row.Field<decimal?>("user6");
         entity.taxauth = row.IsNull("taxauth") ? string.Empty : row.Field<string>("taxauth");
         entity.user7 = row.Field<decimal?>("user7");
         entity.taxablety = row.IsNull("taxablety") ? string.Empty : row.Field<string>("taxablety");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.nontaxtype = row.IsNull("nontaxtype") ? string.Empty : row.Field<string>("nontaxtype");
         entity.inbndfrtfl = row.Field<bool>("inbndfrtfl");
         entity.outbndfrtfl = row.Field<bool>("outbndfrtfl");
         entity.creditmgr = row.IsNull("creditmgr") ? string.Empty : row.Field<string>("creditmgr");
         entity.crestdt = row.Field<DateTime?>("crestdt");
         entity.lastrevdt = row.Field<DateTime?>("lastrevdt");
         entity.nextrevdt = row.Field<DateTime?>("nextrevdt");
         entity.credlim = row.IsNull("credlim") ? decimal.Zero : row.Field<decimal>("credlim");
         entity.holdpercd = row.IsNull("holdpercd") ? 0 : row.Field<int>("holdpercd");
         entity.selltype = row.IsNull("selltype") ? string.Empty : row.Field<string>("selltype");
         entity.statusdt = row.Field<DateTime?>("statusdt");
         entity.apmgr = row.IsNull("apmgr") ? string.Empty : row.Field<string>("apmgr");
         entity.apphoneno = row.IsNull("apphoneno") ? string.Empty : row.Field<string>("apphoneno");
         entity.banknm = row.IsNull("banknm") ? string.Empty : row.Field<string>("banknm");
         entity.bankmgr = row.IsNull("bankmgr") ? string.Empty : row.Field<string>("bankmgr");
         entity.bankphoneno = row.IsNull("bankphoneno") ? string.Empty : row.Field<string>("bankphoneno");
         entity.bankacct = row.IsNull("bankacct") ? string.Empty : row.Field<string>("bankacct");
         entity.lastpayamt = row.IsNull("lastpayamt") ? decimal.Zero : row.Field<decimal>("lastpayamt");
         entity.lastpaydt = row.Field<DateTime?>("lastpaydt");
         entity.pastduedt = row.Field<DateTime?>("pastduedt");
         entity.nopastdue = row.IsNull("nopastdue") ? 0 : row.Field<int>("nopastdue");
         entity.avgpaydays = row.IsNull("avgpaydays") ? 0 : row.Field<int>("avgpaydays");
         entity.nopay = row.IsNull("nopay") ? 0 : row.Field<int>("nopay");
         entity.noinv = row.IsNull("noinv") ? 0 : row.Field<int>("noinv");
         entity.dunsno = row.IsNull("dunsno") ? string.Empty : row.Field<string>("dunsno");
         entity.lastrtg1 = row.IsNull("lastrtg1") ? string.Empty : row.Field<string>("lastrtg1");
         entity.lastrtg2 = row.IsNull("lastrtg2") ? string.Empty : row.Field<string>("lastrtg2");
         entity.lastrtgdt1 = row.Field<DateTime?>("lastrtgdt1");
         entity.lastrtgdt2 = row.Field<DateTime?>("lastrtgdt2");
         entity.crsname = row.IsNull("crsname") ? string.Empty : row.Field<string>("crsname");
         entity.crref1 = row.IsNull("crref1") ? string.Empty : row.Field<string>("crref1");
         entity.crref2 = row.IsNull("crref2") ? string.Empty : row.Field<string>("crref2");
         entity.securfl = row.Field<bool>("securfl");
         entity.periodbal1 = row.IsNull("periodbal1") ? decimal.Zero : row.Field<decimal>("periodbal1");
         entity.periodbal2 = row.IsNull("periodbal2") ? decimal.Zero : row.Field<decimal>("periodbal2");
         entity.periodbal3 = row.IsNull("periodbal3") ? decimal.Zero : row.Field<decimal>("periodbal3");
         entity.periodbal4 = row.IsNull("periodbal4") ? decimal.Zero : row.Field<decimal>("periodbal4");
         entity.periodbal5 = row.IsNull("periodbal5") ? decimal.Zero : row.Field<decimal>("periodbal5");
         entity.servchgbal = row.IsNull("servchgbal") ? decimal.Zero : row.Field<decimal>("servchgbal");
         entity.futinvbal = row.IsNull("futinvbal") ? decimal.Zero : row.Field<decimal>("futinvbal");
         entity.salesytd = row.IsNull("salesytd") ? decimal.Zero : row.Field<decimal>("salesytd");
         entity.costytd = row.IsNull("costytd") ? decimal.Zero : row.Field<decimal>("costytd");
         entity.returnsytd = row.IsNull("returnsytd") ? decimal.Zero : row.Field<decimal>("returnsytd");
         entity.codbal = row.IsNull("codbal") ? decimal.Zero : row.Field<decimal>("codbal");
         entity.futbal = row.IsNull("futbal") ? decimal.Zero : row.Field<decimal>("futbal");
         entity.ordbal = row.IsNull("ordbal") ? decimal.Zero : row.Field<decimal>("ordbal");
         entity.laststmtbal = row.IsNull("laststmtbal") ? decimal.Zero : row.Field<decimal>("laststmtbal");
         entity.prstmtbal = row.IsNull("prstmtbal") ? decimal.Zero : row.Field<decimal>("prstmtbal");
         entity.servchgytd = row.IsNull("servchgytd") ? decimal.Zero : row.Field<decimal>("servchgytd");
         entity.discytd = row.IsNull("discytd") ? decimal.Zero : row.Field<decimal>("discytd");
         entity.unearnedytd = row.IsNull("unearnedytd") ? decimal.Zero : row.Field<decimal>("unearnedytd");
         entity.lastagedt = row.Field<DateTime?>("lastagedt");
         entity.custprodfl = row.Field<bool>("custprodfl");
         entity.lastsaledt = row.Field<DateTime?>("lastsaledt");
         entity.laststmtdt = row.Field<DateTime?>("laststmtdt");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.cashrecfl = row.Field<bool>("cashrecfl");
         entity.cashreqfl = row.Field<bool>("cashreqfl");
         entity.rebatesdue = row.IsNull("rebatesdue") ? decimal.Zero : row.Field<decimal>("rebatesdue");
         entity.rebatesytd = row.IsNull("rebatesytd") ? decimal.Zero : row.Field<decimal>("rebatesytd");
         entity.ccno = row.IsNull("ccno") ? string.Empty : row.Field<string>("ccno");
         entity.ccexp = row.IsNull("ccexp") ? string.Empty : row.Field<string>("ccexp");
         entity.mediacd = row.IsNull("mediacd") ? 0 : row.Field<int>("mediacd");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.misccrbal = row.IsNull("misccrbal") ? decimal.Zero : row.Field<decimal>("misccrbal");
         entity.pickprtfl = row.Field<bool>("pickprtfl");
         entity.downpayamt = row.IsNull("downpayamt") ? decimal.Zero : row.Field<decimal>("downpayamt");
         entity.addonno1 = row.IsNull("addonno1") ? 0 : row.Field<int>("addonno1");
         entity.addonno2 = row.IsNull("addonno2") ? 0 : row.Field<int>("addonno2");
         entity.addonno3 = row.IsNull("addonno3") ? 0 : row.Field<int>("addonno3");
         entity.addonno4 = row.IsNull("addonno4") ? 0 : row.Field<int>("addonno4");
         entity.custpo = row.IsNull("custpo") ? string.Empty : row.Field<string>("custpo");
         entity.eacktype = row.IsNull("eacktype") ? string.Empty : row.Field<string>("eacktype");
         entity.einvtype = row.IsNull("einvtype") ? string.Empty : row.Field<string>("einvtype");
         entity.estmttype = row.IsNull("estmttype") ? string.Empty : row.Field<string>("estmttype");
         entity.edipartner = row.IsNull("edipartner") ? string.Empty : row.Field<string>("edipartner");
         entity.langcd = row.IsNull("langcd") ? string.Empty : row.Field<string>("langcd");
         entity.gstcert = row.IsNull("gstcert") ? string.Empty : row.Field<string>("gstcert");
         entity.gstreg = row.IsNull("gstreg") ? string.Empty : row.Field<string>("gstreg");
         entity.statementty = row.IsNull("statementty") ? string.Empty : row.Field<string>("statementty");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.easngrp = row.IsNull("easngrp") ? string.Empty : row.Field<string>("easngrp");
         entity.easnto = row.IsNull("easnto") ? string.Empty : row.Field<string>("easnto");
         entity.edipartaddr = row.IsNull("edipartaddr") ? string.Empty : row.Field<string>("edipartaddr");
         entity.ediyouraddr = row.IsNull("ediyouraddr") ? string.Empty : row.Field<string>("ediyouraddr");
         entity.edictrlno = row.IsNull("edictrlno") ? 0 : row.Field<int>("edictrlno");
         entity.edienvtag1 = row.IsNull("edienvtag1") ? string.Empty : row.Field<string>("edienvtag1");
         entity.edienvtag2 = row.IsNull("edienvtag2") ? string.Empty : row.Field<string>("edienvtag2");
         entity.ediackver = row.IsNull("ediackver") ? string.Empty : row.Field<string>("ediackver");
         entity.ediinvver = row.IsNull("ediinvver") ? string.Empty : row.Field<string>("ediinvver");
         entity.edinetwork = row.IsNull("edinetwork") ? string.Empty : row.Field<string>("edinetwork");
         entity.taxdt = row.Field<DateTime?>("taxdt");
         entity.fpcustno = row.IsNull("fpcustno") ? decimal.Zero : row.Field<decimal>("fpcustno");
         entity.fpcustfl = row.Field<bool>("fpcustfl");
         entity.geocd = row.IsNull("geocd") ? 0 : row.Field<int>("geocd");
         entity.tendqtyfl = row.Field<bool>("tendqtyfl");
         entity.taxreg = row.IsNull("taxreg") ? string.Empty : row.Field<string>("taxreg");
         entity.highbal = row.IsNull("highbal") ? decimal.Zero : row.Field<decimal>("highbal");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.lastsaleamt = row.IsNull("lastsaleamt") ? decimal.Zero : row.Field<decimal>("lastsaleamt");
         entity.highsaleamt = row.IsNull("highsaleamt") ? decimal.Zero : row.Field<decimal>("highsaleamt");
         entity.pmcashfl = row.Field<bool>("pmcashfl");
         entity.ardatccost = row.IsNull("ardatccost") ? decimal.Zero : row.Field<decimal>("ardatccost");
         entity.countycd = row.IsNull("countycd") ? string.Empty : row.Field<string>("countycd");
         entity.citycd = row.IsNull("citycd") ? string.Empty : row.Field<string>("citycd");
         entity.other1cd = row.IsNull("other1cd") ? string.Empty : row.Field<string>("other1cd");
         entity.other2cd = row.IsNull("other2cd") ? string.Empty : row.Field<string>("other2cd");
         entity.shiplbl = row.IsNull("shiplbl") ? string.Empty : row.Field<string>("shiplbl");
         entity.ecommwhse = row.IsNull("ecommwhse") ? string.Empty : row.Field<string>("ecommwhse");
         entity.spcdefaultty = row.IsNull("spcdefaultty") ? string.Empty : row.Field<string>("spcdefaultty");
         entity.webpageext = row.IsNull("webpageext") ? string.Empty : row.Field<string>("webpageext");
         entity.webpage = row.IsNull("webpage") ? string.Empty : row.Field<string>("webpage");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.authGrpList = row.IsNull("AuthGrpList") ? string.Empty : row.Field<string>("AuthGrpList");
         entity.email = row.IsNull("email") ? string.Empty : row.Field<string>("email");
         entity.pdcustno = row.IsNull("pdcustno") ? decimal.Zero : row.Field<decimal>("pdcustno");
         entity.linetermsfl = row.Field<bool>("linetermsfl");
         entity.dealer = row.IsNull("dealer") ? string.Empty : row.Field<string>("dealer");
         entity.lastsalesytd = row.IsNull("lastsalesytd") ? decimal.Zero : row.Field<decimal>("lastsalesytd");
         entity.lastcostytd = row.IsNull("lastcostytd") ? decimal.Zero : row.Field<decimal>("lastcostytd");
         entity.lastreturnsytd = row.IsNull("lastreturnsytd") ? decimal.Zero : row.Field<decimal>("lastreturnsytd");
         entity.lastservchgytd = row.IsNull("lastservchgytd") ? decimal.Zero : row.Field<decimal>("lastservchgytd");
         entity.lastdiscytd = row.IsNull("lastdiscytd") ? decimal.Zero : row.Field<decimal>("lastdiscytd");
         entity.lastunearnedytd = row.IsNull("lastunearnedytd") ? decimal.Zero : row.Field<decimal>("lastunearnedytd");
         entity.lastrebatesytd = row.IsNull("lastrebatesytd") ? decimal.Zero : row.Field<decimal>("lastrebatesytd");
         entity.ptxtype = row.IsNull("ptxtype") ? string.Empty : row.Field<string>("ptxtype");
         entity.edicatprodfl = row.Field<bool>("edicatprodfl");
         entity.addonnum1 = row.IsNull("addonnum1") ? 0 : row.Field<int>("addonnum1");
         entity.addonnum2 = row.IsNull("addonnum2") ? 0 : row.Field<int>("addonnum2");
         entity.addonnum3 = row.IsNull("addonnum3") ? 0 : row.Field<int>("addonnum3");
         entity.addonnum4 = row.IsNull("addonnum4") ? 0 : row.Field<int>("addonnum4");
         entity.addonnum5 = row.IsNull("addonnum5") ? 0 : row.Field<int>("addonnum5");
         entity.addonnum6 = row.IsNull("addonnum6") ? 0 : row.Field<int>("addonnum6");
         entity.addonnum7 = row.IsNull("addonnum7") ? 0 : row.Field<int>("addonnum7");
         entity.addonnum8 = row.IsNull("addonnum8") ? 0 : row.Field<int>("addonnum8");
         entity.ptxarfl = row.Field<bool>("ptxarfl");
         entity.edinsprodfl = row.Field<bool>("edinsprodfl");
         entity.ptxapfl = row.Field<bool>("ptxapfl");
         entity.ediprintnotesfl = row.Field<bool>("ediprintnotesfl");
         entity.ptxtransbillfl = row.Field<bool>("ptxtransbillfl");
         entity.edijitfl = row.Field<bool>("edijitfl");
         entity.editermsfl = row.Field<bool>("editermsfl");
         entity.ediprcfl = row.Field<bool>("ediprcfl");
         entity.edi840fl = row.Field<bool>("edi840fl");
         entity.weightty = row.IsNull("weightty") ? string.Empty : row.Field<string>("weightty");
         entity.lbxpostty = row.IsNull("lbxpostty") ? string.Empty : row.Field<string>("lbxpostty");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.swexaddfl1 = row.Field<bool>("swexaddfl1");
         entity.swexaddfl2 = row.Field<bool>("swexaddfl2");
         entity.swexaddfl3 = row.Field<bool>("swexaddfl3");
         entity.swexaddfl4 = row.Field<bool>("swexaddfl4");
         entity.custperiodbal1 = row.IsNull("custperiodbal1") ? decimal.Zero : row.Field<decimal>("custperiodbal1");
         entity.custperiodbal2 = row.IsNull("custperiodbal2") ? decimal.Zero : row.Field<decimal>("custperiodbal2");
         entity.custperiodbal3 = row.IsNull("custperiodbal3") ? decimal.Zero : row.Field<decimal>("custperiodbal3");
         entity.custperiodbal4 = row.IsNull("custperiodbal4") ? decimal.Zero : row.Field<decimal>("custperiodbal4");
         entity.custperiodbal5 = row.IsNull("custperiodbal5") ? decimal.Zero : row.Field<decimal>("custperiodbal5");
         entity.consolinvty = row.IsNull("consolinvty") ? string.Empty : row.Field<string>("consolinvty");
         entity.custcodbal = row.IsNull("custcodbal") ? decimal.Zero : row.Field<decimal>("custcodbal");
         entity.custordbal = row.IsNull("custordbal") ? decimal.Zero : row.Field<decimal>("custordbal");
         entity.custfutinvbal = row.IsNull("custfutinvbal") ? decimal.Zero : row.Field<decimal>("custfutinvbal");
         entity.custmisccrbal = row.IsNull("custmisccrbal") ? decimal.Zero : row.Field<decimal>("custmisccrbal");
         entity.custservchgbal = row.IsNull("custservchgbal") ? decimal.Zero : row.Field<decimal>("custservchgbal");
         entity.custuncashbal = row.IsNull("custuncashbal") ? decimal.Zero : row.Field<decimal>("custuncashbal");
         entity.consolterms = row.IsNull("consolterms") ? string.Empty : row.Field<string>("consolterms");
         entity.consolformat = row.IsNull("consolformat") ? string.Empty : row.Field<string>("consolformat");
         entity.consolinterval = row.IsNull("consolinterval") ? string.Empty : row.Field<string>("consolinterval");
         entity.nextconsoldt = row.Field<DateTime?>("nextconsoldt");
         entity.lastconsoldt = row.Field<DateTime?>("lastconsoldt");
         entity.syncmddfl = row.Field<bool>("syncmddfl");
         entity.mastercono = row.IsNull("mastercono") ? 0 : row.Field<int>("mastercono");
         entity.mastercustno = row.IsNull("mastercustno") ? decimal.Zero : row.Field<decimal>("mastercustno");
         entity.user10 = row.IsNull("user10") ? string.Empty : row.Field<string>("user10");
         entity.user11 = row.IsNull("user11") ? string.Empty : row.Field<string>("user11");
         entity.user12 = row.IsNull("user12") ? string.Empty : row.Field<string>("user12");
         entity.user13 = row.IsNull("user13") ? string.Empty : row.Field<string>("user13");
         entity.user14 = row.IsNull("user14") ? string.Empty : row.Field<string>("user14");
         entity.user15 = row.IsNull("user15") ? string.Empty : row.Field<string>("user15");
         entity.user16 = row.IsNull("user16") ? string.Empty : row.Field<string>("user16");
         entity.user17 = row.IsNull("user17") ? string.Empty : row.Field<string>("user17");
         entity.user18 = row.IsNull("user18") ? string.Empty : row.Field<string>("user18");
         entity.user19 = row.IsNull("user19") ? string.Empty : row.Field<string>("user19");
         entity.user20 = row.IsNull("user20") ? string.Empty : row.Field<string>("user20");
         entity.user21 = row.IsNull("user21") ? string.Empty : row.Field<string>("user21");
         entity.user22 = row.IsNull("user22") ? string.Empty : row.Field<string>("user22");
         entity.user23 = row.IsNull("user23") ? string.Empty : row.Field<string>("user23");
         entity.user24 = row.IsNull("user24") ? string.Empty : row.Field<string>("user24");
         entity.basisavgpaydays = row.IsNull("basisavgpaydays") ? 0 : row.Field<int>("basisavgpaydays");
         entity.basisnopay = row.IsNull("basisnopay") ? 0 : row.Field<int>("basisnopay");
         entity.basisbegdt = row.Field<DateTime?>("basisbegdt");
         entity.basisenddt = row.Field<DateTime?>("basisenddt");
         entity.srallownegoverfl = row.Field<bool>("srallownegoverfl");
         entity.groupid = row.IsNull("groupid") ? string.Empty : row.Field<string>("groupid");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.intratodcd = row.IsNull("intratodcd") ? 0 : row.Field<int>("intratodcd");
         entity.outofcityfl = row.Field<bool>("outofcityfl");
         entity.vattype = row.IsNull("vattype") ? string.Empty : row.Field<string>("vattype");
         entity.usesettcalcfl = row.Field<bool>("usesettcalcfl");
         entity.settdisctype = row.IsNull("settdisctype") ? string.Empty : row.Field<string>("settdisctype");
         entity.vatvariablefl = row.Field<bool>("vatvariablefl");
         entity.picklabelsize = row.IsNull("picklabelsize") ? string.Empty : row.Field<string>("picklabelsize");
         entity.strategicacct = row.IsNull("strategicacct") ? string.Empty : row.Field<string>("strategicacct");
         entity.picklabelprefix = row.IsNull("picklabelprefix") ? string.Empty : row.Field<string>("picklabelprefix");
         entity.balintdatetm = row.IsNull("balintdatetm") ? string.Empty : row.Field<string>("balintdatetm");
         entity.dnbireqcredlim = row.IsNull("dnbireqcredlim") ? decimal.Zero : row.Field<decimal>("dnbireqcredlim");
         entity.dnbiscorecard = row.IsNull("dnbiscorecard") ? decimal.Zero : row.Field<decimal>("dnbiscorecard");
         entity.dnbiriskcode = row.IsNull("dnbiriskcode") ? string.Empty : row.Field<string>("dnbiriskcode");
         entity.dnbiapplstatus = row.IsNull("dnbiapplstatus") ? string.Empty : row.Field<string>("dnbiapplstatus");
         entity.dnbiparentdunsno = row.IsNull("dnbiparentdunsno") ? string.Empty : row.Field<string>("dnbiparentdunsno");
         entity.dnbidomesticdunsno = row.IsNull("dnbidomesticdunsno") ? string.Empty : row.Field<string>("dnbidomesticdunsno");
         entity.dnbiglobaldunsno = row.IsNull("dnbiglobaldunsno") ? string.Empty : row.Field<string>("dnbiglobaldunsno");
         entity.dnbiname = row.IsNull("dnbiname") ? string.Empty : row.Field<string>("dnbiname");
         entity.dnbiaddress = row.IsNull("dnbiaddress") ? string.Empty : row.Field<string>("dnbiaddress");
         entity.dnbicity = row.IsNull("dnbicity") ? string.Empty : row.Field<string>("dnbicity");
         entity.dnbistate = row.IsNull("dnbistate") ? string.Empty : row.Field<string>("dnbistate");
         entity.dnbizipcd = row.IsNull("dnbizipcd") ? string.Empty : row.Field<string>("dnbizipcd");
         entity.dnbicountry = row.IsNull("dnbicountry") ? string.Empty : row.Field<string>("dnbicountry");
         entity.dnbiphoneno = row.IsNull("dnbiphoneno") ? string.Empty : row.Field<string>("dnbiphoneno");
         entity.dnbiexpiredate = row.Field<DateTime?>("dnbiexpiredate");
         entity.dnbiresponse = row.IsNull("dnbiresponse") ? string.Empty : row.Field<string>("dnbiresponse");
         entity.dnbinocallfl = row.Field<bool>("dnbinocallfl");
         entity.dnbiapplid = row.IsNull("dnbiapplid") ? string.Empty : row.Field<string>("dnbiapplid");
         entity.billdirectaddon = row.IsNull("billdirectaddon") ? string.Empty : row.Field<string>("billdirectaddon");
         entity.dnbirecomcredlim = row.IsNull("dnbirecomcredlim") ? decimal.Zero : row.Field<decimal>("dnbirecomcredlim");
         entity.frttermscd = row.IsNull("frttermscd") ? string.Empty : row.Field<string>("frttermscd");
         entity.transferloc = row.IsNull("transferloc") ? string.Empty : row.Field<string>("transferloc");
         entity.esbactioncode = row.IsNull("esbactioncode") ? string.Empty : row.Field<string>("esbactioncode");
         entity.esbbalintvarid = row.IsNull("esbbalintvarid") ? string.Empty : row.Field<string>("esbbalintvarid");
         entity.extshipinstr = row.IsNull("extshipinstr") ? string.Empty : row.Field<string>("extshipinstr");
         entity.dlvprintty = row.IsNull("dlvprintty") ? string.Empty : row.Field<string>("dlvprintty");
         entity.ccblockfl = row.Field<bool>("ccblockfl");
         entity.glprtdetail = row.IsNull("glprtdetail") ? string.Empty : row.Field<string>("glprtdetail");
         entity.mincredchk = row.IsNull("mincredchk") ? decimal.Zero : row.Field<decimal>("mincredchk");
         entity.servicevendno = row.IsNull("servicevendno") ? decimal.Zero : row.Field<decimal>("servicevendno");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.allowfulfillmentty = row.IsNull("allowfulfillmentty") ? string.Empty : row.Field<string>("allowfulfillmentty");
         entity.npclaimacctfl = row.Field<bool>("npclaimacctfl");
         entity.npclaimnoprefix = row.IsNull("npclaimnoprefix") ? string.Empty : row.Field<string>("npclaimnoprefix");
         entity.npclaimnobegin = row.IsNull("npclaimnobegin") ? 0 : row.Field<int>("npclaimnobegin");
         entity.npclaimnoend = row.IsNull("npclaimnoend") ? 0 : row.Field<int>("npclaimnoend");
         entity.npclaimnonext = row.IsNull("npclaimnonext") ? 0 : row.Field<int>("npclaimnonext");
         entity.npretclaimnoprefix = row.IsNull("npretclaimnoprefix") ? string.Empty : row.Field<string>("npretclaimnoprefix");
         entity.npretclaimnobegin = row.IsNull("npretclaimnobegin") ? 0 : row.Field<int>("npretclaimnobegin");
         entity.npretclaimnoend = row.IsNull("npretclaimnoend") ? 0 : row.Field<int>("npretclaimnoend");
         entity.npretclaimnonext = row.IsNull("npretclaimnonext") ? 0 : row.Field<int>("npretclaimnonext");
         entity.custprodreqfl = row.Field<bool>("custprodreqfl");
         entity.sigreqtype = row.IsNull("sigreqtype") ? string.Empty : row.Field<string>("sigreqtype");
         entity.easntype = row.IsNull("easntype") ? string.Empty : row.Field<string>("easntype");
         entity.restricteditfl = row.Field<bool>("restricteditfl");
         entity.createdby = row.IsNull("createdby") ? string.Empty : row.Field<string>("createdby");
         entity.createddt = row.Field<DateTime?>("createddt");
         entity.createdtm = row.IsNull("createdtm") ? string.Empty : row.Field<string>("createdtm");
         entity.createdproc = row.IsNull("createdproc") ? string.Empty : row.Field<string>("createdproc");
         entity.lnshipcompfl = row.Field<bool>("lnshipcompfl");
         entity.bolimit = row.IsNull("bolimit") ? 0 : row.Field<int>("bolimit");
         entity.rowID = row.Field<byte[]>("arscRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromArscBase(ref DataRow row, ArscBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("custno", entity.custno);
         row.SetField("name", entity.name);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("lookupnm", entity.lookupnm);
         row.SetField("phoneno", entity.phoneno);
         row.SetField("faxphoneno", entity.faxphoneno);
         row.SetField("pophoneno", entity.pophoneno);
         row.SetField("pocontctnm", entity.pocontctnm);
         row.SetField("comment", entity.comment);
         row.SetField("statustype", entity.statustype);
         row.SetField("siccd1", entity.siccd1);
         row.SetField("siccd2", entity.siccd2);
         row.SetField("siccd3", entity.siccd3);
         row.SetField("termstype", entity.termstype);
         row.SetField("servchgfl", entity.servchgfl);
         row.SetField("custtype", entity.custtype);
         row.SetField("dunningfl", entity.dunningfl);
         row.SetField("unearnedfl", entity.unearnedfl);
         row.SetField("salesterr", entity.salesterr);
         row.SetField("class", entity.@class);
         row.SetField("cyclecd", entity.cyclecd);
         row.SetField("salesmgrfl", entity.salesmgrfl);
         row.SetField("divno", entity.divno);
         row.SetField("bankno", entity.bankno);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("custno2", entity.custno2);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("minord", entity.minord);
         row.SetField("maxord", entity.maxord);
         row.SetField("route", entity.route);
         row.SetField("uncashbal", entity.uncashbal);
         row.SetField("pickprno", entity.pickprno);
         row.SetField("noinvcopy", entity.noinvcopy);
         row.SetField("rebatety", entity.rebatety);
         row.SetField("bofl", entity.bofl);
         row.SetField("countrycd", entity.countrycd);
         row.SetField("subfl", entity.subfl);
         row.SetField("edichgcd", entity.edichgcd);
         row.SetField("taxcert", entity.taxcert);
         row.SetField("ediordcd", entity.ediordcd);
         row.SetField("shipinstr", entity.shipinstr);
         row.SetField("eproptype", entity.eproptype);
         row.SetField("shipviaty", entity.shipviaty);
         row.SetField("ardatcty", entity.ardatcty);
         row.SetField("whse", entity.whse);
         row.SetField("slsrepin", entity.slsrepin);
         row.SetField("slsrepout", entity.slsrepout);
         row.SetField("shipreqfl", entity.shipreqfl);
         row.SetField("poreqfl", entity.poreqfl);
         row.SetField("orderdisp", entity.orderdisp);
         row.SetField("synccrmfl", entity.synccrmfl);
         row.SetField("pricetype", entity.pricetype);
         row.SetField("pricecd", entity.pricecd);
         row.SetField("disccd", entity.disccd);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("wodisccd", entity.wodisccd);
         row.SetField("user5", entity.user5);
         row.SetField("statecd", entity.statecd);
         row.SetField("user6", entity.user6);
         row.SetField("taxauth", entity.taxauth);
         row.SetField("user7", entity.user7);
         row.SetField("taxablety", entity.taxablety);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("nontaxtype", entity.nontaxtype);
         row.SetField("inbndfrtfl", entity.inbndfrtfl);
         row.SetField("outbndfrtfl", entity.outbndfrtfl);
         row.SetField("creditmgr", entity.creditmgr);
         row.SetField("crestdt", entity.crestdt);
         row.SetField("lastrevdt", entity.lastrevdt);
         row.SetField("nextrevdt", entity.nextrevdt);
         row.SetField("credlim", entity.credlim);
         row.SetField("holdpercd", entity.holdpercd);
         row.SetField("selltype", entity.selltype);
         row.SetField("statusdt", entity.statusdt);
         row.SetField("apmgr", entity.apmgr);
         row.SetField("apphoneno", entity.apphoneno);
         row.SetField("banknm", entity.banknm);
         row.SetField("bankmgr", entity.bankmgr);
         row.SetField("bankphoneno", entity.bankphoneno);
         row.SetField("bankacct", entity.bankacct);
         row.SetField("lastpayamt", entity.lastpayamt);
         row.SetField("lastpaydt", entity.lastpaydt);
         row.SetField("pastduedt", entity.pastduedt);
         row.SetField("nopastdue", entity.nopastdue);
         row.SetField("avgpaydays", entity.avgpaydays);
         row.SetField("nopay", entity.nopay);
         row.SetField("noinv", entity.noinv);
         row.SetField("dunsno", entity.dunsno);
         row.SetField("lastrtg1", entity.lastrtg1);
         row.SetField("lastrtg2", entity.lastrtg2);
         row.SetField("lastrtgdt1", entity.lastrtgdt1);
         row.SetField("lastrtgdt2", entity.lastrtgdt2);
         row.SetField("crsname", entity.crsname);
         row.SetField("crref1", entity.crref1);
         row.SetField("crref2", entity.crref2);
         row.SetField("securfl", entity.securfl);
         row.SetField("periodbal1", entity.periodbal1);
         row.SetField("periodbal2", entity.periodbal2);
         row.SetField("periodbal3", entity.periodbal3);
         row.SetField("periodbal4", entity.periodbal4);
         row.SetField("periodbal5", entity.periodbal5);
         row.SetField("servchgbal", entity.servchgbal);
         row.SetField("futinvbal", entity.futinvbal);
         row.SetField("salesytd", entity.salesytd);
         row.SetField("costytd", entity.costytd);
         row.SetField("returnsytd", entity.returnsytd);
         row.SetField("codbal", entity.codbal);
         row.SetField("futbal", entity.futbal);
         row.SetField("ordbal", entity.ordbal);
         row.SetField("laststmtbal", entity.laststmtbal);
         row.SetField("prstmtbal", entity.prstmtbal);
         row.SetField("servchgytd", entity.servchgytd);
         row.SetField("discytd", entity.discytd);
         row.SetField("unearnedytd", entity.unearnedytd);
         row.SetField("lastagedt", entity.lastagedt);
         row.SetField("custprodfl", entity.custprodfl);
         row.SetField("lastsaledt", entity.lastsaledt);
         row.SetField("laststmtdt", entity.laststmtdt);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("cashrecfl", entity.cashrecfl);
         row.SetField("cashreqfl", entity.cashreqfl);
         row.SetField("rebatesdue", entity.rebatesdue);
         row.SetField("rebatesytd", entity.rebatesytd);
         row.SetField("ccno", entity.ccno);
         row.SetField("ccexp", entity.ccexp);
         row.SetField("mediacd", entity.mediacd);
         row.SetField("shipto", entity.shipto);
         row.SetField("misccrbal", entity.misccrbal);
         row.SetField("pickprtfl", entity.pickprtfl);
         row.SetField("downpayamt", entity.downpayamt);
         row.SetField("addonno1", entity.addonno1);
         row.SetField("addonno2", entity.addonno2);
         row.SetField("addonno3", entity.addonno3);
         row.SetField("addonno4", entity.addonno4);
         row.SetField("custpo", entity.custpo);
         row.SetField("eacktype", entity.eacktype);
         row.SetField("einvtype", entity.einvtype);
         row.SetField("estmttype", entity.estmttype);
         row.SetField("edipartner", entity.edipartner);
         row.SetField("langcd", entity.langcd);
         row.SetField("gstcert", entity.gstcert);
         row.SetField("gstreg", entity.gstreg);
         row.SetField("statementty", entity.statementty);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("easngrp", entity.easngrp);
         row.SetField("easnto", entity.easnto);
         row.SetField("edipartaddr", entity.edipartaddr);
         row.SetField("ediyouraddr", entity.ediyouraddr);
         row.SetField("edictrlno", entity.edictrlno);
         row.SetField("edienvtag1", entity.edienvtag1);
         row.SetField("edienvtag2", entity.edienvtag2);
         row.SetField("ediackver", entity.ediackver);
         row.SetField("ediinvver", entity.ediinvver);
         row.SetField("edinetwork", entity.edinetwork);
         row.SetField("taxdt", entity.taxdt);
         row.SetField("fpcustno", entity.fpcustno);
         row.SetField("fpcustfl", entity.fpcustfl);
         row.SetField("geocd", entity.geocd);
         row.SetField("tendqtyfl", entity.tendqtyfl);
         row.SetField("taxreg", entity.taxreg);
         row.SetField("highbal", entity.highbal);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("lastsaleamt", entity.lastsaleamt);
         row.SetField("highsaleamt", entity.highsaleamt);
         row.SetField("pmcashfl", entity.pmcashfl);
         row.SetField("ardatccost", entity.ardatccost);
         row.SetField("countycd", entity.countycd);
         row.SetField("citycd", entity.citycd);
         row.SetField("other1cd", entity.other1cd);
         row.SetField("other2cd", entity.other2cd);
         row.SetField("shiplbl", entity.shiplbl);
         row.SetField("ecommwhse", entity.ecommwhse);
         row.SetField("spcdefaultty", entity.spcdefaultty);
         row.SetField("webpageext", entity.webpageext);
         row.SetField("webpage", entity.webpage);
         row.SetField("transproc", entity.transproc);
         row.SetField("AuthGrpList", entity.authGrpList);
         row.SetField("email", entity.email);
         row.SetField("pdcustno", entity.pdcustno);
         row.SetField("linetermsfl", entity.linetermsfl);
         row.SetField("dealer", entity.dealer);
         row.SetField("lastsalesytd", entity.lastsalesytd);
         row.SetField("lastcostytd", entity.lastcostytd);
         row.SetField("lastreturnsytd", entity.lastreturnsytd);
         row.SetField("lastservchgytd", entity.lastservchgytd);
         row.SetField("lastdiscytd", entity.lastdiscytd);
         row.SetField("lastunearnedytd", entity.lastunearnedytd);
         row.SetField("lastrebatesytd", entity.lastrebatesytd);
         row.SetField("ptxtype", entity.ptxtype);
         row.SetField("edicatprodfl", entity.edicatprodfl);
         row.SetField("addonnum1", entity.addonnum1);
         row.SetField("addonnum2", entity.addonnum2);
         row.SetField("addonnum3", entity.addonnum3);
         row.SetField("addonnum4", entity.addonnum4);
         row.SetField("addonnum5", entity.addonnum5);
         row.SetField("addonnum6", entity.addonnum6);
         row.SetField("addonnum7", entity.addonnum7);
         row.SetField("addonnum8", entity.addonnum8);
         row.SetField("ptxarfl", entity.ptxarfl);
         row.SetField("edinsprodfl", entity.edinsprodfl);
         row.SetField("ptxapfl", entity.ptxapfl);
         row.SetField("ediprintnotesfl", entity.ediprintnotesfl);
         row.SetField("ptxtransbillfl", entity.ptxtransbillfl);
         row.SetField("edijitfl", entity.edijitfl);
         row.SetField("editermsfl", entity.editermsfl);
         row.SetField("ediprcfl", entity.ediprcfl);
         row.SetField("edi840fl", entity.edi840fl);
         row.SetField("weightty", entity.weightty);
         row.SetField("lbxpostty", entity.lbxpostty);
         row.SetField("addr3", entity.addr3);
         row.SetField("swexaddfl1", entity.swexaddfl1);
         row.SetField("swexaddfl2", entity.swexaddfl2);
         row.SetField("swexaddfl3", entity.swexaddfl3);
         row.SetField("swexaddfl4", entity.swexaddfl4);
         row.SetField("custperiodbal1", entity.custperiodbal1);
         row.SetField("custperiodbal2", entity.custperiodbal2);
         row.SetField("custperiodbal3", entity.custperiodbal3);
         row.SetField("custperiodbal4", entity.custperiodbal4);
         row.SetField("custperiodbal5", entity.custperiodbal5);
         row.SetField("consolinvty", entity.consolinvty);
         row.SetField("custcodbal", entity.custcodbal);
         row.SetField("custordbal", entity.custordbal);
         row.SetField("custfutinvbal", entity.custfutinvbal);
         row.SetField("custmisccrbal", entity.custmisccrbal);
         row.SetField("custservchgbal", entity.custservchgbal);
         row.SetField("custuncashbal", entity.custuncashbal);
         row.SetField("consolterms", entity.consolterms);
         row.SetField("consolformat", entity.consolformat);
         row.SetField("consolinterval", entity.consolinterval);
         row.SetField("nextconsoldt", entity.nextconsoldt);
         row.SetField("lastconsoldt", entity.lastconsoldt);
         row.SetField("syncmddfl", entity.syncmddfl);
         row.SetField("mastercono", entity.mastercono);
         row.SetField("mastercustno", entity.mastercustno);
         row.SetField("user10", entity.user10);
         row.SetField("user11", entity.user11);
         row.SetField("user12", entity.user12);
         row.SetField("user13", entity.user13);
         row.SetField("user14", entity.user14);
         row.SetField("user15", entity.user15);
         row.SetField("user16", entity.user16);
         row.SetField("user17", entity.user17);
         row.SetField("user18", entity.user18);
         row.SetField("user19", entity.user19);
         row.SetField("user20", entity.user20);
         row.SetField("user21", entity.user21);
         row.SetField("user22", entity.user22);
         row.SetField("user23", entity.user23);
         row.SetField("user24", entity.user24);
         row.SetField("basisavgpaydays", entity.basisavgpaydays);
         row.SetField("basisnopay", entity.basisnopay);
         row.SetField("basisbegdt", entity.basisbegdt);
         row.SetField("basisenddt", entity.basisenddt);
         row.SetField("srallownegoverfl", entity.srallownegoverfl);
         row.SetField("groupid", entity.groupid);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("intratodcd", entity.intratodcd);
         row.SetField("outofcityfl", entity.outofcityfl);
         row.SetField("vattype", entity.vattype);
         row.SetField("usesettcalcfl", entity.usesettcalcfl);
         row.SetField("settdisctype", entity.settdisctype);
         row.SetField("vatvariablefl", entity.vatvariablefl);
         row.SetField("picklabelsize", entity.picklabelsize);
         row.SetField("strategicacct", entity.strategicacct);
         row.SetField("picklabelprefix", entity.picklabelprefix);
         row.SetField("balintdatetm", entity.balintdatetm);
         row.SetField("dnbireqcredlim", entity.dnbireqcredlim);
         row.SetField("dnbiscorecard", entity.dnbiscorecard);
         row.SetField("dnbiriskcode", entity.dnbiriskcode);
         row.SetField("dnbiapplstatus", entity.dnbiapplstatus);
         row.SetField("dnbiparentdunsno", entity.dnbiparentdunsno);
         row.SetField("dnbidomesticdunsno", entity.dnbidomesticdunsno);
         row.SetField("dnbiglobaldunsno", entity.dnbiglobaldunsno);
         row.SetField("dnbiname", entity.dnbiname);
         row.SetField("dnbiaddress", entity.dnbiaddress);
         row.SetField("dnbicity", entity.dnbicity);
         row.SetField("dnbistate", entity.dnbistate);
         row.SetField("dnbizipcd", entity.dnbizipcd);
         row.SetField("dnbicountry", entity.dnbicountry);
         row.SetField("dnbiphoneno", entity.dnbiphoneno);
         row.SetField("dnbiexpiredate", entity.dnbiexpiredate);
         row.SetField("dnbiresponse", entity.dnbiresponse);
         row.SetField("dnbinocallfl", entity.dnbinocallfl);
         row.SetField("dnbiapplid", entity.dnbiapplid);
         row.SetField("billdirectaddon", entity.billdirectaddon);
         row.SetField("dnbirecomcredlim", entity.dnbirecomcredlim);
         row.SetField("frttermscd", entity.frttermscd);
         row.SetField("transferloc", entity.transferloc);
         row.SetField("esbactioncode", entity.esbactioncode);
         row.SetField("esbbalintvarid", entity.esbbalintvarid);
         row.SetField("extshipinstr", entity.extshipinstr);
         row.SetField("dlvprintty", entity.dlvprintty);
         row.SetField("ccblockfl", entity.ccblockfl);
         row.SetField("glprtdetail", entity.glprtdetail);
         row.SetField("mincredchk", entity.mincredchk);
         row.SetField("servicevendno", entity.servicevendno);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("allowfulfillmentty", entity.allowfulfillmentty);
         row.SetField("npclaimacctfl", entity.npclaimacctfl);
         row.SetField("npclaimnoprefix", entity.npclaimnoprefix);
         row.SetField("npclaimnobegin", entity.npclaimnobegin);
         row.SetField("npclaimnoend", entity.npclaimnoend);
         row.SetField("npclaimnonext", entity.npclaimnonext);
         row.SetField("npretclaimnoprefix", entity.npretclaimnoprefix);
         row.SetField("npretclaimnobegin", entity.npretclaimnobegin);
         row.SetField("npretclaimnoend", entity.npretclaimnoend);
         row.SetField("npretclaimnonext", entity.npretclaimnonext);
         row.SetField("custprodreqfl", entity.custprodreqfl);
         row.SetField("sigreqtype", entity.sigreqtype);
         row.SetField("easntype", entity.easntype);
         row.SetField("restricteditfl", entity.restricteditfl);
         row.SetField("createdby", entity.createdby);
         row.SetField("createddt", entity.createddt);
         row.SetField("createdtm", entity.createdtm);
         row.SetField("createdproc", entity.createdproc);
         row.SetField("lnshipcompfl", entity.lnshipcompfl);
         row.SetField("bolimit", entity.bolimit);
         row.SetField("arscRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ArscBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("custno", entity.custno);
         row.SetField("arscRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	