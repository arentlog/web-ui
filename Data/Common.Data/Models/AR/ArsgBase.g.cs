//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.AR
{
   /// <summary>
   /// AR Master Group
   /// </summary>
   
   public partial class ArsgBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// AR Master Group
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string groupid { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr3 { get; set; }

      /// <summary>
      /// Accts Payable Mgr
      /// </summary>
      [StringValidationAttribute]
      public string apmgr { get; set; }

      /// <summary>
      /// AP Mgr Phone #
      /// </summary>
      [StringValidationAttribute]
      public string apphoneno { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// Comment
      /// </summary>
      [StringValidationAttribute]
      public string comment { get; set; }

      /// <summary>
      /// Country
      /// </summary>
      [StringValidationAttribute]
      public string countrycd { get; set; }

      /// <summary>
      /// Credit Manager
      /// </summary>
      [StringValidationAttribute]
      public string creditmgr { get; set; }

      /// <summary>
      /// Credit Limit
      /// </summary>
      public decimal credlim { get; set; }

      /// <summary>
      /// Credit Limit Apply Type
      /// </summary>
      [StringValidationAttribute]
      public string credlimappty { get; set; }

      /// <summary>
      /// Credit Established
      /// </summary>
      public DateTime? crestdt { get; set; }

      /// <summary>
      /// Currency
      /// </summary>
      [StringValidationAttribute]
      public string currencyty { get; set; }

      /// <summary>
      /// Email Address
      /// </summary>
      [StringValidationAttribute]
      public string email { get; set; }

      /// <summary>
      /// Fax Phone
      /// </summary>
      [StringValidationAttribute]
      public string faxphoneno { get; set; }

      /// <summary>
      /// Geo Code
      /// </summary>
      public int geocd { get; set; }

      /// <summary>
      /// Hold Period
      /// </summary>
      [StringValidationAttribute]
      public string holdpercd { get; set; }

      /// <summary>
      /// Last Review
      /// </summary>
      public DateTime? lastrevdt { get; set; }

      /// <summary>
      /// Lookup Name
      /// </summary>
      [StringValidationAttribute]
      public string lookupnm { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Next Review
      /// </summary>
      public DateTime? nextrevdt { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Phone
      /// </summary>
      [StringValidationAttribute]
      public string phoneno { get; set; }

      /// <summary>
      /// Purch Agnt
      /// </summary>
      [StringValidationAttribute]
      public string pocontctnm { get; set; }

      /// <summary>
      /// Agent Phone
      /// </summary>
      [StringValidationAttribute]
      public string pophoneno { get; set; }

      /// <summary>
      /// Sales Order Status
      /// </summary>
      [StringValidationAttribute]
      public string selltype { get; set; }

      /// <summary>
      /// Service Chg
      /// </summary>
      [StringValidationAttribute]
      public string servchgty { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Hold or Open Date
      /// </summary>
      public DateTime? statusdt { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      public bool statustype { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Unearn Disc
      /// </summary>
      [StringValidationAttribute]
      public string unearnedty { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string zipcd { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Outside City Limit
      /// </summary>
      public bool outofcityfl { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.addr1 + "," + this.city + "," + this.state + "," + this.zipcd + "," + this.countrycd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildArsgBaseFromRow<T>(DataRow row) where T:ArsgBase, new()
      {
         T entity = new T();
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.apmgr = row.IsNull("apmgr") ? string.Empty : row.Field<string>("apmgr");
         entity.apphoneno = row.IsNull("apphoneno") ? string.Empty : row.Field<string>("apphoneno");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.comment = row.IsNull("comment") ? string.Empty : row.Field<string>("comment");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.countrycd = row.IsNull("countrycd") ? string.Empty : row.Field<string>("countrycd");
         entity.creditmgr = row.IsNull("creditmgr") ? string.Empty : row.Field<string>("creditmgr");
         entity.credlim = row.IsNull("credlim") ? decimal.Zero : row.Field<decimal>("credlim");
         entity.credlimappty = row.IsNull("credlimappty") ? string.Empty : row.Field<string>("credlimappty");
         entity.crestdt = row.Field<DateTime?>("crestdt");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.email = row.IsNull("email") ? string.Empty : row.Field<string>("email");
         entity.faxphoneno = row.IsNull("faxphoneno") ? string.Empty : row.Field<string>("faxphoneno");
         entity.geocd = row.IsNull("geocd") ? 0 : row.Field<int>("geocd");
         entity.groupid = row.IsNull("groupid") ? string.Empty : row.Field<string>("groupid");
         entity.holdpercd = row.IsNull("holdpercd") ? string.Empty : row.Field<string>("holdpercd");
         entity.lastrevdt = row.Field<DateTime?>("lastrevdt");
         entity.lookupnm = row.IsNull("lookupnm") ? string.Empty : row.Field<string>("lookupnm");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.nextrevdt = row.Field<DateTime?>("nextrevdt");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.phoneno = row.IsNull("phoneno") ? string.Empty : row.Field<string>("phoneno");
         entity.pocontctnm = row.IsNull("pocontctnm") ? string.Empty : row.Field<string>("pocontctnm");
         entity.pophoneno = row.IsNull("pophoneno") ? string.Empty : row.Field<string>("pophoneno");
         entity.selltype = row.IsNull("selltype") ? string.Empty : row.Field<string>("selltype");
         entity.servchgty = row.IsNull("servchgty") ? string.Empty : row.Field<string>("servchgty");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.statusdt = row.Field<DateTime?>("statusdt");
         entity.statustype = row.Field<bool>("statustype");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.unearnedty = row.IsNull("unearnedty") ? string.Empty : row.Field<string>("unearnedty");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.outofcityfl = row.Field<bool>("outofcityfl");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.rowID = row.Field<byte[]>("arsgRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromArsgBase(ref DataRow row, ArsgBase entity)
      {
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("addr3", entity.addr3);
         row.SetField("apmgr", entity.apmgr);
         row.SetField("apphoneno", entity.apphoneno);
         row.SetField("city", entity.city);
         row.SetField("comment", entity.comment);
         row.SetField("cono", entity.cono);
         row.SetField("countrycd", entity.countrycd);
         row.SetField("creditmgr", entity.creditmgr);
         row.SetField("credlim", entity.credlim);
         row.SetField("credlimappty", entity.credlimappty);
         row.SetField("crestdt", entity.crestdt);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("email", entity.email);
         row.SetField("faxphoneno", entity.faxphoneno);
         row.SetField("geocd", entity.geocd);
         row.SetField("groupid", entity.groupid);
         row.SetField("holdpercd", entity.holdpercd);
         row.SetField("lastrevdt", entity.lastrevdt);
         row.SetField("lookupnm", entity.lookupnm);
         row.SetField("name", entity.name);
         row.SetField("nextrevdt", entity.nextrevdt);
         row.SetField("operinit", entity.operinit);
         row.SetField("phoneno", entity.phoneno);
         row.SetField("pocontctnm", entity.pocontctnm);
         row.SetField("pophoneno", entity.pophoneno);
         row.SetField("selltype", entity.selltype);
         row.SetField("servchgty", entity.servchgty);
         row.SetField("state", entity.state);
         row.SetField("statusdt", entity.statusdt);
         row.SetField("statustype", entity.statustype);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("unearnedty", entity.unearnedty);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("outofcityfl", entity.outofcityfl);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("arsgRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ArsgBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("groupid", entity.groupid);
         row.SetField("arsgRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	