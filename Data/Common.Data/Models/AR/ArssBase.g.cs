//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.AR
{
   /// <summary>
   /// AR Ship To
   /// </summary>
   [EntityType("AR Ship To","arss.detail","ShipToPartyMaster")]
   public partial class ArssBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [BusContext(BusPart.AcctEntity),BodContext(BodPart.AcctEntity,""),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      [BodID(1,RequiredId.True),BusContext(BusPart.Name),DrillbackParam("pk",1),Key,Order]
      public decimal custno { get; set; }

      /// <summary>
      /// Ship To
      /// </summary>
      [BodID(2,RequiredId.True),DrillbackParam("pk2",2),Key,Order,StringValidationAttribute]
      public string shipto { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [BusContext(BusPart.Descr),StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string zipcd { get; set; }

      /// <summary>
      /// Phone
      /// </summary>
      [StringValidationAttribute]
      public string phoneno { get; set; }

      /// <summary>
      /// Fax Phone
      /// </summary>
      [StringValidationAttribute]
      public string faxphoneno { get; set; }

      /// <summary>
      /// Purch Agent
      /// </summary>
      [StringValidationAttribute]
      public string pocontctnm { get; set; }

      /// <summary>
      /// Agent Phone
      /// </summary>
      [StringValidationAttribute]
      public string pophoneno { get; set; }

      /// <summary>
      /// Ship Via
      /// </summary>
      [StringValidationAttribute]
      public string shipviaty { get; set; }

      /// <summary>
      /// Instructions
      /// </summary>
      [StringValidationAttribute]
      public string shipinstr { get; set; }

      /// <summary>
      /// In
      /// </summary>
      [StringValidationAttribute]
      public string slsrepin { get; set; }

      /// <summary>
      /// Salesrep Out
      /// </summary>
      [StringValidationAttribute]
      public string slsrepout { get; set; }

      /// <summary>
      /// Default Whse
      /// </summary>
      [BusContext(BusPart.Location),StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Rte/Day/Stop
      /// </summary>
      [StringValidationAttribute]
      public string route { get; set; }

      /// <summary>
      /// Price Type
      /// </summary>
      [StringValidationAttribute]
      public string pricetype { get; set; }

      /// <summary>
      /// Price Level
      /// </summary>
      public int pricecd { get; set; }

      /// <summary>
      /// Disc Level
      /// </summary>
      public int disccd { get; set; }

      /// <summary>
      /// Order Disc
      /// </summary>
      public int wodisccd { get; set; }

      /// <summary>
      /// Require PO #
      /// </summary>
      public bool poreqfl { get; set; }

      /// <summary>
      /// Disposition
      /// </summary>
      [StringValidationAttribute]
      public string orderdisp { get; set; }

      /// <summary>
      /// B/O Ok
      /// </summary>
      public bool bofl { get; set; }

      /// <summary>
      /// Subs Ok
      /// </summary>
      public bool subfl { get; set; }

      /// <summary>
      /// Taxable Type
      /// </summary>
      [StringValidationAttribute]
      public string taxablety { get; set; }

      /// <summary>
      /// Tax Cert. #
      /// </summary>
      [StringValidationAttribute]
      public string taxcert { get; set; }

      /// <summary>
      /// Non Tax Reason
      /// </summary>
      [StringValidationAttribute]
      public string nontaxtype { get; set; }

      /// <summary>
      /// Taxing State
      /// </summary>
      [StringValidationAttribute]
      public string statecd { get; set; }

      /// <summary>
      /// Locality
      /// </summary>
      [StringValidationAttribute]
      public string taxauth { get; set; }

      /// <summary>
      /// Pick Priority
      /// </summary>
      public int pickprno { get; set; }

      /// <summary>
      /// Inv Copies
      /// </summary>
      public int noinvcopy { get; set; }

      /// <summary>
      /// Last Sale Dt
      /// </summary>
      public DateTime? lastsaledt { get; set; }

      /// <summary>
      /// Credit Limit
      /// </summary>
      public decimal credlim { get; set; }

      /// <summary>
      /// Entered
      /// </summary>
      public DateTime? enterdt { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Country
      /// </summary>
      [StringValidationAttribute]
      public string countrycd { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Group Cd
      /// </summary>
      [StringValidationAttribute]
      public string shiptoeasncd { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Order Status Cd
      /// </summary>
      [StringValidationAttribute]
      public string ediordcd { get; set; }

      /// <summary>
      /// Change Reason Cd
      /// </summary>
      [StringValidationAttribute]
      public string edichgcd { get; set; }

      /// <summary>
      /// Freight In
      /// </summary>
      public bool inbndfrtfl { get; set; }

      /// <summary>
      /// Elec. Proposal Type
      /// </summary>
      [StringValidationAttribute]
      public string eproptype { get; set; }

      /// <summary>
      /// Out
      /// </summary>
      public bool outbndfrtfl { get; set; }

      /// <summary>
      /// Hold Period
      /// </summary>
      public int holdpercd { get; set; }

      /// <summary>
      /// Terr
      /// </summary>
      [StringValidationAttribute]
      public string salesterr { get; set; }

      /// <summary>
      /// Credit Card
      /// </summary>
      [StringValidationAttribute]
      public string ccno { get; set; }

      /// <summary>
      /// Expiration
      /// </summary>
      [StringValidationAttribute]
      public string ccexp { get; set; }

      /// <summary>
      /// Duns #
      /// </summary>
      [StringValidationAttribute]
      public string dunsno { get; set; }

      /// <summary>
      /// Sync To CRM
      /// </summary>
      public bool synccrmfl { get; set; }

      /// <summary>
      /// Paymt/Card #
      /// </summary>
      public int mediacd { get; set; }

      /// <summary>
      /// Elec. Proposals To
      /// </summary>
      public bool epropto { get; set; }

      /// <summary>
      /// Sales JTD
      /// </summary>
      public decimal salesamt { get; set; }

      /// <summary>
      /// Lien Limit
      /// </summary>
      public decimal slslimitamt { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// Descrip
      /// </summary>
      [StringValidationAttribute]
      public string jobdesc { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// Hold if Over
      /// </summary>
      public bool holdfl { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// Est. Completion
      /// </summary>
      public DateTime? estcompdt { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// Addons
      /// </summary>
      public int addonno1 { get; set; }
      public int addonno2 { get; set; }
      public int addonno3 { get; set; }
      public int addonno4 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// Default PO#
      /// </summary>
      [StringValidationAttribute]
      public string custpo { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// Elec. Acknowledgement Type
      /// </summary>
      [StringValidationAttribute]
      public string eacktype { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Elec. Acknowledgements To
      /// </summary>
      public bool eackto { get; set; }

      /// <summary>
      /// Elec. Invoices To
      /// </summary>
      public bool einvto { get; set; }

      /// <summary>
      /// Partner Name
      /// </summary>
      [StringValidationAttribute]
      public string edipartner { get; set; }

      /// <summary>
      /// Elec. Invoice Type
      /// </summary>
      [StringValidationAttribute]
      public string einvtype { get; set; }

      /// <summary>
      /// Language Code
      /// </summary>
      [StringValidationAttribute]
      public string langcd { get; set; }

      /// <summary>
      /// Terms
      /// </summary>
      [StringValidationAttribute]
      public string termstype { get; set; }

      /// <summary>
      /// Invoice To Shipto or Billto
      /// </summary>
      public bool invtofl { get; set; }

      /// <summary>
      /// Network
      /// </summary>
      [StringValidationAttribute]
      public string edinetwork { get; set; }

      /// <summary>
      /// Group
      /// </summary>
      [StringValidationAttribute]
      public string easngrp { get; set; }

      /// <summary>
      /// Send To
      /// </summary>
      [StringValidationAttribute]
      public string easnto { get; set; }

      /// <summary>
      /// Partner Address
      /// </summary>
      [StringValidationAttribute]
      public string edipartaddr { get; set; }

      /// <summary>
      /// Your Address
      /// </summary>
      [StringValidationAttribute]
      public string ediyouraddr { get; set; }

      /// <summary>
      /// Control #
      /// </summary>
      public int edictrlno { get; set; }

      /// <summary>
      /// Acknow. Version
      /// </summary>
      [StringValidationAttribute]
      public string ediackver { get; set; }

      /// <summary>
      /// Invoice Version
      /// </summary>
      [StringValidationAttribute]
      public string ediinvver { get; set; }

      /// <summary>
      /// Envelope Tag
      /// </summary>
      [StringValidationAttribute]
      public string edienvtag1 { get; set; }
      [StringValidationAttribute]
      public string edienvtag2 { get; set; }

      /// <summary>
      /// Job Close
      /// </summary>
      public DateTime? jobclosedt { get; set; }

      /// <summary>
      /// Lein Filed Date
      /// </summary>
      public DateTime? lienfiledt { get; set; }

      /// <summary>
      /// Lien Prelim Filed
      /// </summary>
      public DateTime? lienpredt { get; set; }

      /// <summary>
      /// Filed With
      /// </summary>
      [StringValidationAttribute]
      public string lienprewith { get; set; }

      /// <summary>
      /// Filed by
      /// </summary>
      [StringValidationAttribute]
      public string lienfileoper { get; set; }

      /// <summary>
      /// Lien Prelim Filed by
      /// </summary>
      [StringValidationAttribute]
      public string lienpreoper { get; set; }

      /// <summary>
      /// General
      /// </summary>
      [StringValidationAttribute]
      public string gennm { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string genaddr1 { get; set; }
      [StringValidationAttribute]
      public string genaddr2 { get; set; }

      /// <summary>
      /// genst
      /// </summary>
      [StringValidationAttribute]
      public string genst { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string gencity { get; set; }

      /// <summary>
      /// genzip
      /// </summary>
      [StringValidationAttribute]
      public string genzip { get; set; }

      /// <summary>
      /// Phone
      /// </summary>
      [StringValidationAttribute]
      public string genphoneno { get; set; }

      /// <summary>
      /// Start
      /// </summary>
      public DateTime? startdt { get; set; }

      /// <summary>
      /// Revised Est.
      /// </summary>
      public DateTime? revestdt { get; set; }

      /// <summary>
      /// Amount
      /// </summary>
      public decimal lienamt { get; set; }

      /// <summary>
      /// Amount
      /// </summary>
      public decimal lienpreamt { get; set; }

      /// <summary>
      /// Bonded
      /// </summary>
      public bool bondedfl { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Bond Number
      /// </summary>
      [StringValidationAttribute]
      public string bondno { get; set; }

      /// <summary>
      /// Owner Name
      /// </summary>
      [StringValidationAttribute]
      public string ownnm { get; set; }

      /// <summary>
      /// Owner Address
      /// </summary>
      [StringValidationAttribute]
      public string ownaddr1 { get; set; }
      [StringValidationAttribute]
      public string ownaddr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string owncity { get; set; }

      /// <summary>
      /// Owner State
      /// </summary>
      [StringValidationAttribute]
      public string ownst { get; set; }

      /// <summary>
      /// Owner Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string ownzip { get; set; }

      /// <summary>
      /// Lender Name
      /// </summary>
      [StringValidationAttribute]
      public string lennm { get; set; }

      /// <summary>
      /// Lender Address
      /// </summary>
      [StringValidationAttribute]
      public string lenaddr1 { get; set; }
      [StringValidationAttribute]
      public string lenaddr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string lencity { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string lenst { get; set; }

      /// <summary>
      /// Lender Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string lenzip { get; set; }

      /// <summary>
      /// Days
      /// </summary>
      public int holddays { get; set; }

      /// <summary>
      /// Invoice To
      /// </summary>
      public decimal fpcustno { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Service Chg
      /// </summary>
      public bool servchgfl { get; set; }

      /// <summary>
      /// Geo Code
      /// </summary>
      public int geocd { get; set; }

      /// <summary>
      /// Restricted
      /// </summary>
      public bool restrictfl { get; set; }

      /// <summary>
      /// Tax Cert Exp Date
      /// </summary>
      public DateTime? taxdt { get; set; }

      /// <summary>
      /// PST Registration #
      /// </summary>
      [StringValidationAttribute]
      public string taxreg { get; set; }

      /// <summary>
      /// County
      /// </summary>
      [StringValidationAttribute]
      public string countycd { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string citycd { get; set; }

      /// <summary>
      /// Other 1
      /// </summary>
      [StringValidationAttribute]
      public string other1cd { get; set; }

      /// <summary>
      /// Other 2
      /// </summary>
      [StringValidationAttribute]
      public string other2cd { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      public bool statustype { get; set; }

      /// <summary>
      /// Ecommerce Whse
      /// </summary>
      [StringValidationAttribute]
      public string ecommwhse { get; set; }

      /// <summary>
      /// Customer ShipTo
      /// </summary>
      [StringValidationAttribute]
      public string custshipto { get; set; }

      /// <summary>
      /// SPC Default
      /// </summary>
      [StringValidationAttribute]
      public string spcdefaultty { get; set; }

      /// <summary>
      /// WebPage
      /// </summary>
      [StringValidationAttribute]
      public string webpage { get; set; }

      /// <summary>
      /// Shipping Label
      /// </summary>
      [StringValidationAttribute]
      public string shiplbl { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Email Address
      /// </summary>
      [StringValidationAttribute]
      public string email { get; set; }

      /// <summary>
      /// xxc4
      /// </summary>
      [StringValidationAttribute]
      public string obsedi { get; set; }

      /// <summary>
      /// PD Custno
      /// </summary>
      public decimal pdcustno { get; set; }

      /// <summary>
      /// Line Terms
      /// </summary>
      public bool linetermsfl { get; set; }

      /// <summary>
      /// Account Type
      /// </summary>
      [StringValidationAttribute]
      public string ptxtype { get; set; }

      /// <summary>
      /// Addons
      /// </summary>
      public int addonnum1 { get; set; }
      public int addonnum2 { get; set; }
      public int addonnum3 { get; set; }
      public int addonnum4 { get; set; }
      public int addonnum5 { get; set; }
      public int addonnum6 { get; set; }
      public int addonnum7 { get; set; }
      public int addonnum8 { get; set; }

      /// <summary>
      /// AR Processing
      /// </summary>
      public bool ptxarfl { get; set; }

      /// <summary>
      /// AP Processing
      /// </summary>
      public bool ptxapfl { get; set; }

      /// <summary>
      /// Transaction Processing
      /// </summary>
      public bool ptxtransbillfl { get; set; }

      /// <summary>
      /// EDI Cat Prod
      /// </summary>
      public bool edicatprodfl { get; set; }

      /// <summary>
      /// EDI NS Prod
      /// </summary>
      public bool edinsprodfl { get; set; }

      /// <summary>
      /// EDI Print Notes
      /// </summary>
      public bool ediprintnotesfl { get; set; }

      /// <summary>
      /// EDI JIT
      /// </summary>
      public bool edijitfl { get; set; }

      /// <summary>
      /// EDI Terms
      /// </summary>
      public bool editermsfl { get; set; }

      /// <summary>
      /// EDI Price
      /// </summary>
      public bool ediprcfl { get; set; }

      /// <summary>
      /// EDI 840's
      /// </summary>
      public bool edi840fl { get; set; }

      /// <summary>
      /// Consolidated Invoice Type
      /// </summary>
      [StringValidationAttribute]
      public string consolinvty { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr3 { get; set; }

      /// <summary>
      /// Invoice To
      /// </summary>
      [StringValidationAttribute]
      public string invtotype { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string genaddr3 { get; set; }

      /// <summary>
      /// Lender Address
      /// </summary>
      [StringValidationAttribute]
      public string lenaddr3 { get; set; }

      /// <summary>
      /// Owner Address
      /// </summary>
      [StringValidationAttribute]
      public string ownaddr3 { get; set; }

      /// <summary>
      /// Job Period Balance
      /// </summary>
      public decimal jobperiodbal1 { get; set; }
      public decimal jobperiodbal2 { get; set; }
      public decimal jobperiodbal3 { get; set; }
      public decimal jobperiodbal4 { get; set; }
      public decimal jobperiodbal5 { get; set; }

      /// <summary>
      /// Job On Order Balance
      /// </summary>
      public decimal jobordbal { get; set; }

      /// <summary>
      /// Job COD Balance
      /// </summary>
      public decimal jobcodbal { get; set; }

      /// <summary>
      /// Job Future Invoices
      /// </summary>
      public decimal jobfutinvbal { get; set; }

      /// <summary>
      /// Job Unapplied Credit
      /// </summary>
      public decimal jobmisccrbal { get; set; }

      /// <summary>
      /// Job Service Charges
      /// </summary>
      public decimal jobservchgbal { get; set; }

      /// <summary>
      /// Job Unapplied Cash
      /// </summary>
      public decimal jobuncashbal { get; set; }

      /// <summary>
      /// Consolidated Invoice Terms
      /// </summary>
      [StringValidationAttribute]
      public string consolterms { get; set; }

      /// <summary>
      /// Consolidation Format
      /// </summary>
      [StringValidationAttribute]
      public string consolformat { get; set; }

      /// <summary>
      /// Consolidation Interval
      /// </summary>
      [StringValidationAttribute]
      public string consolinterval { get; set; }

      /// <summary>
      /// Next Consolidation Date
      /// </summary>
      public DateTime? nextconsoldt { get; set; }

      /// <summary>
      /// Last Consolidation Date
      /// </summary>
      public DateTime? lastconsoldt { get; set; }

      /// <summary>
      /// Synchronize to MDD
      /// </summary>
      public bool syncmddfl { get; set; }

      /// <summary>
      /// User 10
      /// </summary>
      [StringValidationAttribute]
      public string user10 { get; set; }

      /// <summary>
      /// User 11
      /// </summary>
      [StringValidationAttribute]
      public string user11 { get; set; }

      /// <summary>
      /// User 12
      /// </summary>
      [StringValidationAttribute]
      public string user12 { get; set; }

      /// <summary>
      /// User 13
      /// </summary>
      [StringValidationAttribute]
      public string user13 { get; set; }

      /// <summary>
      /// User 14
      /// </summary>
      [StringValidationAttribute]
      public string user14 { get; set; }

      /// <summary>
      /// User 15
      /// </summary>
      [StringValidationAttribute]
      public string user15 { get; set; }

      /// <summary>
      /// User 16
      /// </summary>
      [StringValidationAttribute]
      public string user16 { get; set; }

      /// <summary>
      /// User 17
      /// </summary>
      [StringValidationAttribute]
      public string user17 { get; set; }

      /// <summary>
      /// User 18
      /// </summary>
      [StringValidationAttribute]
      public string user18 { get; set; }

      /// <summary>
      /// User 19
      /// </summary>
      [StringValidationAttribute]
      public string user19 { get; set; }

      /// <summary>
      /// User 20
      /// </summary>
      [StringValidationAttribute]
      public string user20 { get; set; }

      /// <summary>
      /// User 21
      /// </summary>
      [StringValidationAttribute]
      public string user21 { get; set; }

      /// <summary>
      /// User 22
      /// </summary>
      [StringValidationAttribute]
      public string user22 { get; set; }

      /// <summary>
      /// User 23
      /// </summary>
      [StringValidationAttribute]
      public string user23 { get; set; }

      /// <summary>
      /// User 24
      /// </summary>
      [StringValidationAttribute]
      public string user24 { get; set; }

      /// <summary>
      /// Job Identifier
      /// </summary>
      [StringValidationAttribute]
      public string jmjobid { get; set; }

      /// <summary>
      /// Revision #
      /// </summary>
      public int jmjobrevno { get; set; }

      /// <summary>
      /// Rebate Type
      /// </summary>
      [StringValidationAttribute]
      public string rebatety { get; set; }

      /// <summary>
      /// Allow Negative Overages
      /// </summary>
      public bool srallownegoverfl { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Intrastat Terms of Delivery
      /// </summary>
      public int intratodcd { get; set; }

      /// <summary>
      /// Outside City Limit
      /// </summary>
      public bool outofcityfl { get; set; }

      /// <summary>
      /// VAT Tax Type
      /// </summary>
      [StringValidationAttribute]
      public string vattype { get; set; }

      /// <summary>
      /// Registration #
      /// </summary>
      [StringValidationAttribute]
      public string gstreg { get; set; }

      /// <summary>
      /// Pick Label Size
      /// </summary>
      [StringValidationAttribute]
      public string picklabelsize { get; set; }

      /// <summary>
      /// Strategic Account Code
      /// </summary>
      [StringValidationAttribute]
      public string strategicacct { get; set; }

      /// <summary>
      /// Pick Label Prefix
      /// </summary>
      [StringValidationAttribute]
      public string picklabelprefix { get; set; }

      /// <summary>
      /// NAICS Codes
      /// </summary>
      public int siccd1 { get; set; }
      public int siccd2 { get; set; }
      public int siccd3 { get; set; }

      /// <summary>
      /// Industry Type
      /// </summary>
      [StringValidationAttribute]
      public string industrytype { get; set; }

      /// <summary>
      /// Class Rating
      /// </summary>
      [StringValidationAttribute]
      public string classrating { get; set; }

      /// <summary>
      /// Balance Integration Date/Time
      /// </summary>
      [StringValidationAttribute]
      public string balintdatetm { get; set; }

      /// <summary>
      /// Bill Direct PO Addon
      /// </summary>
      [StringValidationAttribute]
      public string billdirectaddon { get; set; }

      /// <summary>
      /// Freight Terms
      /// </summary>
      [StringValidationAttribute]
      public string frttermscd { get; set; }

      /// <summary>
      /// Transfer Location
      /// </summary>
      [StringValidationAttribute]
      public string transferloc { get; set; }

      /// <summary>
      /// Action Code
      /// </summary>
      [StringValidationAttribute]
      public string esbactioncode { get; set; }

      /// <summary>
      /// Ext Shipping Instructions
      /// </summary>
      [StringValidationAttribute]
      public string extshipinstr { get; set; }

      /// <summary>
      /// Block CC Create
      /// </summary>
      public bool ccblockfl { get; set; }

      /// <summary>
      /// Shipto Group
      /// </summary>
      [StringValidationAttribute]
      public string shiptogrp { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }

      /// <summary>
      /// Allow OE Fulfillment
      /// </summary>
      [StringValidationAttribute]
      public string allowfulfillmentty { get; set; }

      /// <summary>
      /// Signature Require Type
      /// </summary>
      [StringValidationAttribute]
      public string sigreqtype { get; set; }

      /// <summary>
      /// Exclude From SXAPI
      /// </summary>
      public bool excsxapilstfl { get; set; }

      /// <summary>
      /// Bank #
      /// </summary>
      public int bankno { get; set; }

      /// <summary>
      /// Division #
      /// </summary>
      public int divno { get; set; }

      /// <summary>
      /// Advance Shipping Notice Type
      /// </summary>
      [StringValidationAttribute]
      public string easntype { get; set; }

      /// <summary>
      /// Restrict Data Access
      /// </summary>
      public bool restricteditfl { get; set; }

      /// <summary>
      /// Alternate ID
      /// </summary>
      [StringValidationAttribute]
      public string alternateid { get; set; }

      /// <summary>
      /// Created By
      /// </summary>
      [StringValidationAttribute]
      public string createdby { get; set; }

      /// <summary>
      /// Created Date
      /// </summary>
      public DateTime? createddt { get; set; }

      /// <summary>
      /// Created Time
      /// </summary>
      [StringValidationAttribute]
      public string createdtm { get; set; }

      /// <summary>
      /// Created Proc
      /// </summary>
      [StringValidationAttribute]
      public string createdproc { get; set; }

      /// <summary>
      /// Line Ship Complete
      /// </summary>
      public bool lnshipcompfl { get; set; }

      /// <summary>
      /// Back Order Limit
      /// </summary>
      public int bolimit { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.addr1 + "," + this.city + "," + this.state + "," + this.zipcd + "," + this.countrycd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildArssBaseFromRow<T>(DataRow row) where T:ArssBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.phoneno = row.IsNull("phoneno") ? string.Empty : row.Field<string>("phoneno");
         entity.faxphoneno = row.IsNull("faxphoneno") ? string.Empty : row.Field<string>("faxphoneno");
         entity.pocontctnm = row.IsNull("pocontctnm") ? string.Empty : row.Field<string>("pocontctnm");
         entity.pophoneno = row.IsNull("pophoneno") ? string.Empty : row.Field<string>("pophoneno");
         entity.shipviaty = row.IsNull("shipviaty") ? string.Empty : row.Field<string>("shipviaty");
         entity.shipinstr = row.IsNull("shipinstr") ? string.Empty : row.Field<string>("shipinstr");
         entity.slsrepin = row.IsNull("slsrepin") ? string.Empty : row.Field<string>("slsrepin");
         entity.slsrepout = row.IsNull("slsrepout") ? string.Empty : row.Field<string>("slsrepout");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.route = row.IsNull("route") ? string.Empty : row.Field<string>("route");
         entity.pricetype = row.IsNull("pricetype") ? string.Empty : row.Field<string>("pricetype");
         entity.pricecd = row.IsNull("pricecd") ? 0 : row.Field<int>("pricecd");
         entity.disccd = row.IsNull("disccd") ? 0 : row.Field<int>("disccd");
         entity.wodisccd = row.IsNull("wodisccd") ? 0 : row.Field<int>("wodisccd");
         entity.poreqfl = row.Field<bool>("poreqfl");
         entity.orderdisp = row.IsNull("orderdisp") ? string.Empty : row.Field<string>("orderdisp");
         entity.bofl = row.Field<bool>("bofl");
         entity.subfl = row.Field<bool>("subfl");
         entity.taxablety = row.IsNull("taxablety") ? string.Empty : row.Field<string>("taxablety");
         entity.taxcert = row.IsNull("taxcert") ? string.Empty : row.Field<string>("taxcert");
         entity.nontaxtype = row.IsNull("nontaxtype") ? string.Empty : row.Field<string>("nontaxtype");
         entity.statecd = row.IsNull("statecd") ? string.Empty : row.Field<string>("statecd");
         entity.taxauth = row.IsNull("taxauth") ? string.Empty : row.Field<string>("taxauth");
         entity.pickprno = row.IsNull("pickprno") ? 0 : row.Field<int>("pickprno");
         entity.noinvcopy = row.IsNull("noinvcopy") ? 0 : row.Field<int>("noinvcopy");
         entity.lastsaledt = row.Field<DateTime?>("lastsaledt");
         entity.credlim = row.IsNull("credlim") ? decimal.Zero : row.Field<decimal>("credlim");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.countrycd = row.IsNull("countrycd") ? string.Empty : row.Field<string>("countrycd");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.shiptoeasncd = row.IsNull("shiptoeasncd") ? string.Empty : row.Field<string>("shiptoeasncd");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.ediordcd = row.IsNull("ediordcd") ? string.Empty : row.Field<string>("ediordcd");
         entity.edichgcd = row.IsNull("edichgcd") ? string.Empty : row.Field<string>("edichgcd");
         entity.inbndfrtfl = row.Field<bool>("inbndfrtfl");
         entity.eproptype = row.IsNull("eproptype") ? string.Empty : row.Field<string>("eproptype");
         entity.outbndfrtfl = row.Field<bool>("outbndfrtfl");
         entity.holdpercd = row.IsNull("holdpercd") ? 0 : row.Field<int>("holdpercd");
         entity.salesterr = row.IsNull("salesterr") ? string.Empty : row.Field<string>("salesterr");
         entity.ccno = row.IsNull("ccno") ? string.Empty : row.Field<string>("ccno");
         entity.ccexp = row.IsNull("ccexp") ? string.Empty : row.Field<string>("ccexp");
         entity.dunsno = row.IsNull("dunsno") ? string.Empty : row.Field<string>("dunsno");
         entity.synccrmfl = row.Field<bool>("synccrmfl");
         entity.mediacd = row.IsNull("mediacd") ? 0 : row.Field<int>("mediacd");
         entity.epropto = row.Field<bool>("epropto");
         entity.salesamt = row.IsNull("salesamt") ? decimal.Zero : row.Field<decimal>("salesamt");
         entity.slslimitamt = row.IsNull("slslimitamt") ? decimal.Zero : row.Field<decimal>("slslimitamt");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.jobdesc = row.IsNull("jobdesc") ? string.Empty : row.Field<string>("jobdesc");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.holdfl = row.Field<bool>("holdfl");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.estcompdt = row.Field<DateTime?>("estcompdt");
         entity.user6 = row.Field<decimal?>("user6");
         entity.addonno1 = row.IsNull("addonno1") ? 0 : row.Field<int>("addonno1");
         entity.addonno2 = row.IsNull("addonno2") ? 0 : row.Field<int>("addonno2");
         entity.addonno3 = row.IsNull("addonno3") ? 0 : row.Field<int>("addonno3");
         entity.addonno4 = row.IsNull("addonno4") ? 0 : row.Field<int>("addonno4");
         entity.user7 = row.Field<decimal?>("user7");
         entity.custpo = row.IsNull("custpo") ? string.Empty : row.Field<string>("custpo");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.eacktype = row.IsNull("eacktype") ? string.Empty : row.Field<string>("eacktype");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.eackto = row.Field<bool>("eackto");
         entity.einvto = row.Field<bool>("einvto");
         entity.edipartner = row.IsNull("edipartner") ? string.Empty : row.Field<string>("edipartner");
         entity.einvtype = row.IsNull("einvtype") ? string.Empty : row.Field<string>("einvtype");
         entity.langcd = row.IsNull("langcd") ? string.Empty : row.Field<string>("langcd");
         entity.termstype = row.IsNull("termstype") ? string.Empty : row.Field<string>("termstype");
         entity.invtofl = row.Field<bool>("invtofl");
         entity.edinetwork = row.IsNull("edinetwork") ? string.Empty : row.Field<string>("edinetwork");
         entity.easngrp = row.IsNull("easngrp") ? string.Empty : row.Field<string>("easngrp");
         entity.easnto = row.IsNull("easnto") ? string.Empty : row.Field<string>("easnto");
         entity.edipartaddr = row.IsNull("edipartaddr") ? string.Empty : row.Field<string>("edipartaddr");
         entity.ediyouraddr = row.IsNull("ediyouraddr") ? string.Empty : row.Field<string>("ediyouraddr");
         entity.edictrlno = row.IsNull("edictrlno") ? 0 : row.Field<int>("edictrlno");
         entity.ediackver = row.IsNull("ediackver") ? string.Empty : row.Field<string>("ediackver");
         entity.ediinvver = row.IsNull("ediinvver") ? string.Empty : row.Field<string>("ediinvver");
         entity.edienvtag1 = row.IsNull("edienvtag1") ? string.Empty : row.Field<string>("edienvtag1");
         entity.edienvtag2 = row.IsNull("edienvtag2") ? string.Empty : row.Field<string>("edienvtag2");
         entity.jobclosedt = row.Field<DateTime?>("jobclosedt");
         entity.lienfiledt = row.Field<DateTime?>("lienfiledt");
         entity.lienpredt = row.Field<DateTime?>("lienpredt");
         entity.lienprewith = row.IsNull("lienprewith") ? string.Empty : row.Field<string>("lienprewith");
         entity.lienfileoper = row.IsNull("lienfileoper") ? string.Empty : row.Field<string>("lienfileoper");
         entity.lienpreoper = row.IsNull("lienpreoper") ? string.Empty : row.Field<string>("lienpreoper");
         entity.gennm = row.IsNull("gennm") ? string.Empty : row.Field<string>("gennm");
         entity.genaddr1 = row.IsNull("genaddr1") ? string.Empty : row.Field<string>("genaddr1");
         entity.genaddr2 = row.IsNull("genaddr2") ? string.Empty : row.Field<string>("genaddr2");
         entity.genst = row.IsNull("genst") ? string.Empty : row.Field<string>("genst");
         entity.gencity = row.IsNull("gencity") ? string.Empty : row.Field<string>("gencity");
         entity.genzip = row.IsNull("genzip") ? string.Empty : row.Field<string>("genzip");
         entity.genphoneno = row.IsNull("genphoneno") ? string.Empty : row.Field<string>("genphoneno");
         entity.startdt = row.Field<DateTime?>("startdt");
         entity.revestdt = row.Field<DateTime?>("revestdt");
         entity.lienamt = row.IsNull("lienamt") ? decimal.Zero : row.Field<decimal>("lienamt");
         entity.lienpreamt = row.IsNull("lienpreamt") ? decimal.Zero : row.Field<decimal>("lienpreamt");
         entity.bondedfl = row.Field<bool>("bondedfl");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.bondno = row.IsNull("bondno") ? string.Empty : row.Field<string>("bondno");
         entity.ownnm = row.IsNull("ownnm") ? string.Empty : row.Field<string>("ownnm");
         entity.ownaddr1 = row.IsNull("ownaddr1") ? string.Empty : row.Field<string>("ownaddr1");
         entity.ownaddr2 = row.IsNull("ownaddr2") ? string.Empty : row.Field<string>("ownaddr2");
         entity.owncity = row.IsNull("owncity") ? string.Empty : row.Field<string>("owncity");
         entity.ownst = row.IsNull("ownst") ? string.Empty : row.Field<string>("ownst");
         entity.ownzip = row.IsNull("ownzip") ? string.Empty : row.Field<string>("ownzip");
         entity.lennm = row.IsNull("lennm") ? string.Empty : row.Field<string>("lennm");
         entity.lenaddr1 = row.IsNull("lenaddr1") ? string.Empty : row.Field<string>("lenaddr1");
         entity.lenaddr2 = row.IsNull("lenaddr2") ? string.Empty : row.Field<string>("lenaddr2");
         entity.lencity = row.IsNull("lencity") ? string.Empty : row.Field<string>("lencity");
         entity.lenst = row.IsNull("lenst") ? string.Empty : row.Field<string>("lenst");
         entity.lenzip = row.IsNull("lenzip") ? string.Empty : row.Field<string>("lenzip");
         entity.holddays = row.IsNull("holddays") ? 0 : row.Field<int>("holddays");
         entity.fpcustno = row.IsNull("fpcustno") ? decimal.Zero : row.Field<decimal>("fpcustno");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.servchgfl = row.Field<bool>("servchgfl");
         entity.geocd = row.IsNull("geocd") ? 0 : row.Field<int>("geocd");
         entity.restrictfl = row.Field<bool>("restrictfl");
         entity.taxdt = row.Field<DateTime?>("taxdt");
         entity.taxreg = row.IsNull("taxreg") ? string.Empty : row.Field<string>("taxreg");
         entity.countycd = row.IsNull("countycd") ? string.Empty : row.Field<string>("countycd");
         entity.citycd = row.IsNull("citycd") ? string.Empty : row.Field<string>("citycd");
         entity.other1cd = row.IsNull("other1cd") ? string.Empty : row.Field<string>("other1cd");
         entity.other2cd = row.IsNull("other2cd") ? string.Empty : row.Field<string>("other2cd");
         entity.statustype = row.Field<bool>("statustype");
         entity.ecommwhse = row.IsNull("ecommwhse") ? string.Empty : row.Field<string>("ecommwhse");
         entity.custshipto = row.IsNull("custshipto") ? string.Empty : row.Field<string>("custshipto");
         entity.spcdefaultty = row.IsNull("spcdefaultty") ? string.Empty : row.Field<string>("spcdefaultty");
         entity.webpage = row.IsNull("webpage") ? string.Empty : row.Field<string>("webpage");
         entity.shiplbl = row.IsNull("shiplbl") ? string.Empty : row.Field<string>("shiplbl");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.email = row.IsNull("email") ? string.Empty : row.Field<string>("email");
         entity.obsedi = row.IsNull("obsedi") ? string.Empty : row.Field<string>("obsedi");
         entity.pdcustno = row.IsNull("pdcustno") ? decimal.Zero : row.Field<decimal>("pdcustno");
         entity.linetermsfl = row.Field<bool>("linetermsfl");
         entity.ptxtype = row.IsNull("ptxtype") ? string.Empty : row.Field<string>("ptxtype");
         entity.addonnum1 = row.IsNull("addonnum1") ? 0 : row.Field<int>("addonnum1");
         entity.addonnum2 = row.IsNull("addonnum2") ? 0 : row.Field<int>("addonnum2");
         entity.addonnum3 = row.IsNull("addonnum3") ? 0 : row.Field<int>("addonnum3");
         entity.addonnum4 = row.IsNull("addonnum4") ? 0 : row.Field<int>("addonnum4");
         entity.addonnum5 = row.IsNull("addonnum5") ? 0 : row.Field<int>("addonnum5");
         entity.addonnum6 = row.IsNull("addonnum6") ? 0 : row.Field<int>("addonnum6");
         entity.addonnum7 = row.IsNull("addonnum7") ? 0 : row.Field<int>("addonnum7");
         entity.addonnum8 = row.IsNull("addonnum8") ? 0 : row.Field<int>("addonnum8");
         entity.ptxarfl = row.Field<bool>("ptxarfl");
         entity.ptxapfl = row.Field<bool>("ptxapfl");
         entity.ptxtransbillfl = row.Field<bool>("ptxtransbillfl");
         entity.edicatprodfl = row.Field<bool>("edicatprodfl");
         entity.edinsprodfl = row.Field<bool>("edinsprodfl");
         entity.ediprintnotesfl = row.Field<bool>("ediprintnotesfl");
         entity.edijitfl = row.Field<bool>("edijitfl");
         entity.editermsfl = row.Field<bool>("editermsfl");
         entity.ediprcfl = row.Field<bool>("ediprcfl");
         entity.edi840fl = row.Field<bool>("edi840fl");
         entity.consolinvty = row.IsNull("consolinvty") ? string.Empty : row.Field<string>("consolinvty");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.invtotype = row.IsNull("invtotype") ? string.Empty : row.Field<string>("invtotype");
         entity.genaddr3 = row.IsNull("genaddr3") ? string.Empty : row.Field<string>("genaddr3");
         entity.lenaddr3 = row.IsNull("lenaddr3") ? string.Empty : row.Field<string>("lenaddr3");
         entity.ownaddr3 = row.IsNull("ownaddr3") ? string.Empty : row.Field<string>("ownaddr3");
         entity.jobperiodbal1 = row.IsNull("jobperiodbal1") ? decimal.Zero : row.Field<decimal>("jobperiodbal1");
         entity.jobperiodbal2 = row.IsNull("jobperiodbal2") ? decimal.Zero : row.Field<decimal>("jobperiodbal2");
         entity.jobperiodbal3 = row.IsNull("jobperiodbal3") ? decimal.Zero : row.Field<decimal>("jobperiodbal3");
         entity.jobperiodbal4 = row.IsNull("jobperiodbal4") ? decimal.Zero : row.Field<decimal>("jobperiodbal4");
         entity.jobperiodbal5 = row.IsNull("jobperiodbal5") ? decimal.Zero : row.Field<decimal>("jobperiodbal5");
         entity.jobordbal = row.IsNull("jobordbal") ? decimal.Zero : row.Field<decimal>("jobordbal");
         entity.jobcodbal = row.IsNull("jobcodbal") ? decimal.Zero : row.Field<decimal>("jobcodbal");
         entity.jobfutinvbal = row.IsNull("jobfutinvbal") ? decimal.Zero : row.Field<decimal>("jobfutinvbal");
         entity.jobmisccrbal = row.IsNull("jobmisccrbal") ? decimal.Zero : row.Field<decimal>("jobmisccrbal");
         entity.jobservchgbal = row.IsNull("jobservchgbal") ? decimal.Zero : row.Field<decimal>("jobservchgbal");
         entity.jobuncashbal = row.IsNull("jobuncashbal") ? decimal.Zero : row.Field<decimal>("jobuncashbal");
         entity.consolterms = row.IsNull("consolterms") ? string.Empty : row.Field<string>("consolterms");
         entity.consolformat = row.IsNull("consolformat") ? string.Empty : row.Field<string>("consolformat");
         entity.consolinterval = row.IsNull("consolinterval") ? string.Empty : row.Field<string>("consolinterval");
         entity.nextconsoldt = row.Field<DateTime?>("nextconsoldt");
         entity.lastconsoldt = row.Field<DateTime?>("lastconsoldt");
         entity.syncmddfl = row.Field<bool>("syncmddfl");
         entity.user10 = row.IsNull("user10") ? string.Empty : row.Field<string>("user10");
         entity.user11 = row.IsNull("user11") ? string.Empty : row.Field<string>("user11");
         entity.user12 = row.IsNull("user12") ? string.Empty : row.Field<string>("user12");
         entity.user13 = row.IsNull("user13") ? string.Empty : row.Field<string>("user13");
         entity.user14 = row.IsNull("user14") ? string.Empty : row.Field<string>("user14");
         entity.user15 = row.IsNull("user15") ? string.Empty : row.Field<string>("user15");
         entity.user16 = row.IsNull("user16") ? string.Empty : row.Field<string>("user16");
         entity.user17 = row.IsNull("user17") ? string.Empty : row.Field<string>("user17");
         entity.user18 = row.IsNull("user18") ? string.Empty : row.Field<string>("user18");
         entity.user19 = row.IsNull("user19") ? string.Empty : row.Field<string>("user19");
         entity.user20 = row.IsNull("user20") ? string.Empty : row.Field<string>("user20");
         entity.user21 = row.IsNull("user21") ? string.Empty : row.Field<string>("user21");
         entity.user22 = row.IsNull("user22") ? string.Empty : row.Field<string>("user22");
         entity.user23 = row.IsNull("user23") ? string.Empty : row.Field<string>("user23");
         entity.user24 = row.IsNull("user24") ? string.Empty : row.Field<string>("user24");
         entity.jmjobid = row.IsNull("jmjobid") ? string.Empty : row.Field<string>("jmjobid");
         entity.jmjobrevno = row.IsNull("jmjobrevno") ? 0 : row.Field<int>("jmjobrevno");
         entity.rebatety = row.IsNull("rebatety") ? string.Empty : row.Field<string>("rebatety");
         entity.srallownegoverfl = row.Field<bool>("srallownegoverfl");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.intratodcd = row.IsNull("intratodcd") ? 0 : row.Field<int>("intratodcd");
         entity.outofcityfl = row.Field<bool>("outofcityfl");
         entity.vattype = row.IsNull("vattype") ? string.Empty : row.Field<string>("vattype");
         entity.gstreg = row.IsNull("gstreg") ? string.Empty : row.Field<string>("gstreg");
         entity.picklabelsize = row.IsNull("picklabelsize") ? string.Empty : row.Field<string>("picklabelsize");
         entity.strategicacct = row.IsNull("strategicacct") ? string.Empty : row.Field<string>("strategicacct");
         entity.picklabelprefix = row.IsNull("picklabelprefix") ? string.Empty : row.Field<string>("picklabelprefix");
         entity.siccd1 = row.IsNull("siccd1") ? 0 : row.Field<int>("siccd1");
         entity.siccd2 = row.IsNull("siccd2") ? 0 : row.Field<int>("siccd2");
         entity.siccd3 = row.IsNull("siccd3") ? 0 : row.Field<int>("siccd3");
         entity.industrytype = row.IsNull("industrytype") ? string.Empty : row.Field<string>("industrytype");
         entity.classrating = row.IsNull("classrating") ? string.Empty : row.Field<string>("classrating");
         entity.balintdatetm = row.IsNull("balintdatetm") ? string.Empty : row.Field<string>("balintdatetm");
         entity.billdirectaddon = row.IsNull("billdirectaddon") ? string.Empty : row.Field<string>("billdirectaddon");
         entity.frttermscd = row.IsNull("frttermscd") ? string.Empty : row.Field<string>("frttermscd");
         entity.transferloc = row.IsNull("transferloc") ? string.Empty : row.Field<string>("transferloc");
         entity.esbactioncode = row.IsNull("esbactioncode") ? string.Empty : row.Field<string>("esbactioncode");
         entity.extshipinstr = row.IsNull("extshipinstr") ? string.Empty : row.Field<string>("extshipinstr");
         entity.ccblockfl = row.Field<bool>("ccblockfl");
         entity.shiptogrp = row.IsNull("shiptogrp") ? string.Empty : row.Field<string>("shiptogrp");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.allowfulfillmentty = row.IsNull("allowfulfillmentty") ? string.Empty : row.Field<string>("allowfulfillmentty");
         entity.sigreqtype = row.IsNull("sigreqtype") ? string.Empty : row.Field<string>("sigreqtype");
         entity.excsxapilstfl = row.Field<bool>("excsxapilstfl");
         entity.bankno = row.IsNull("bankno") ? 0 : row.Field<int>("bankno");
         entity.divno = row.IsNull("divno") ? 0 : row.Field<int>("divno");
         entity.easntype = row.IsNull("easntype") ? string.Empty : row.Field<string>("easntype");
         entity.restricteditfl = row.Field<bool>("restricteditfl");
         entity.alternateid = row.IsNull("alternateid") ? string.Empty : row.Field<string>("alternateid");
         entity.createdby = row.IsNull("createdby") ? string.Empty : row.Field<string>("createdby");
         entity.createddt = row.Field<DateTime?>("createddt");
         entity.createdtm = row.IsNull("createdtm") ? string.Empty : row.Field<string>("createdtm");
         entity.createdproc = row.IsNull("createdproc") ? string.Empty : row.Field<string>("createdproc");
         entity.lnshipcompfl = row.Field<bool>("lnshipcompfl");
         entity.bolimit = row.IsNull("bolimit") ? 0 : row.Field<int>("bolimit");
         entity.rowID = row.Field<byte[]>("arssRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromArssBase(ref DataRow row, ArssBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("custno", entity.custno);
         row.SetField("shipto", entity.shipto);
         row.SetField("name", entity.name);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("phoneno", entity.phoneno);
         row.SetField("faxphoneno", entity.faxphoneno);
         row.SetField("pocontctnm", entity.pocontctnm);
         row.SetField("pophoneno", entity.pophoneno);
         row.SetField("shipviaty", entity.shipviaty);
         row.SetField("shipinstr", entity.shipinstr);
         row.SetField("slsrepin", entity.slsrepin);
         row.SetField("slsrepout", entity.slsrepout);
         row.SetField("whse", entity.whse);
         row.SetField("route", entity.route);
         row.SetField("pricetype", entity.pricetype);
         row.SetField("pricecd", entity.pricecd);
         row.SetField("disccd", entity.disccd);
         row.SetField("wodisccd", entity.wodisccd);
         row.SetField("poreqfl", entity.poreqfl);
         row.SetField("orderdisp", entity.orderdisp);
         row.SetField("bofl", entity.bofl);
         row.SetField("subfl", entity.subfl);
         row.SetField("taxablety", entity.taxablety);
         row.SetField("taxcert", entity.taxcert);
         row.SetField("nontaxtype", entity.nontaxtype);
         row.SetField("statecd", entity.statecd);
         row.SetField("taxauth", entity.taxauth);
         row.SetField("pickprno", entity.pickprno);
         row.SetField("noinvcopy", entity.noinvcopy);
         row.SetField("lastsaledt", entity.lastsaledt);
         row.SetField("credlim", entity.credlim);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("transdt", entity.transdt);
         row.SetField("countrycd", entity.countrycd);
         row.SetField("transtm", entity.transtm);
         row.SetField("shiptoeasncd", entity.shiptoeasncd);
         row.SetField("operinit", entity.operinit);
         row.SetField("ediordcd", entity.ediordcd);
         row.SetField("edichgcd", entity.edichgcd);
         row.SetField("inbndfrtfl", entity.inbndfrtfl);
         row.SetField("eproptype", entity.eproptype);
         row.SetField("outbndfrtfl", entity.outbndfrtfl);
         row.SetField("holdpercd", entity.holdpercd);
         row.SetField("salesterr", entity.salesterr);
         row.SetField("ccno", entity.ccno);
         row.SetField("ccexp", entity.ccexp);
         row.SetField("dunsno", entity.dunsno);
         row.SetField("synccrmfl", entity.synccrmfl);
         row.SetField("mediacd", entity.mediacd);
         row.SetField("epropto", entity.epropto);
         row.SetField("salesamt", entity.salesamt);
         row.SetField("slslimitamt", entity.slslimitamt);
         row.SetField("user3", entity.user3);
         row.SetField("jobdesc", entity.jobdesc);
         row.SetField("user4", entity.user4);
         row.SetField("holdfl", entity.holdfl);
         row.SetField("user5", entity.user5);
         row.SetField("estcompdt", entity.estcompdt);
         row.SetField("user6", entity.user6);
         row.SetField("addonno1", entity.addonno1);
         row.SetField("addonno2", entity.addonno2);
         row.SetField("addonno3", entity.addonno3);
         row.SetField("addonno4", entity.addonno4);
         row.SetField("user7", entity.user7);
         row.SetField("custpo", entity.custpo);
         row.SetField("user8", entity.user8);
         row.SetField("eacktype", entity.eacktype);
         row.SetField("user9", entity.user9);
         row.SetField("eackto", entity.eackto);
         row.SetField("einvto", entity.einvto);
         row.SetField("edipartner", entity.edipartner);
         row.SetField("einvtype", entity.einvtype);
         row.SetField("langcd", entity.langcd);
         row.SetField("termstype", entity.termstype);
         row.SetField("invtofl", entity.invtofl);
         row.SetField("edinetwork", entity.edinetwork);
         row.SetField("easngrp", entity.easngrp);
         row.SetField("easnto", entity.easnto);
         row.SetField("edipartaddr", entity.edipartaddr);
         row.SetField("ediyouraddr", entity.ediyouraddr);
         row.SetField("edictrlno", entity.edictrlno);
         row.SetField("ediackver", entity.ediackver);
         row.SetField("ediinvver", entity.ediinvver);
         row.SetField("edienvtag1", entity.edienvtag1);
         row.SetField("edienvtag2", entity.edienvtag2);
         row.SetField("jobclosedt", entity.jobclosedt);
         row.SetField("lienfiledt", entity.lienfiledt);
         row.SetField("lienpredt", entity.lienpredt);
         row.SetField("lienprewith", entity.lienprewith);
         row.SetField("lienfileoper", entity.lienfileoper);
         row.SetField("lienpreoper", entity.lienpreoper);
         row.SetField("gennm", entity.gennm);
         row.SetField("genaddr1", entity.genaddr1);
         row.SetField("genaddr2", entity.genaddr2);
         row.SetField("genst", entity.genst);
         row.SetField("gencity", entity.gencity);
         row.SetField("genzip", entity.genzip);
         row.SetField("genphoneno", entity.genphoneno);
         row.SetField("startdt", entity.startdt);
         row.SetField("revestdt", entity.revestdt);
         row.SetField("lienamt", entity.lienamt);
         row.SetField("lienpreamt", entity.lienpreamt);
         row.SetField("bondedfl", entity.bondedfl);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("bondno", entity.bondno);
         row.SetField("ownnm", entity.ownnm);
         row.SetField("ownaddr1", entity.ownaddr1);
         row.SetField("ownaddr2", entity.ownaddr2);
         row.SetField("owncity", entity.owncity);
         row.SetField("ownst", entity.ownst);
         row.SetField("ownzip", entity.ownzip);
         row.SetField("lennm", entity.lennm);
         row.SetField("lenaddr1", entity.lenaddr1);
         row.SetField("lenaddr2", entity.lenaddr2);
         row.SetField("lencity", entity.lencity);
         row.SetField("lenst", entity.lenst);
         row.SetField("lenzip", entity.lenzip);
         row.SetField("holddays", entity.holddays);
         row.SetField("fpcustno", entity.fpcustno);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("servchgfl", entity.servchgfl);
         row.SetField("geocd", entity.geocd);
         row.SetField("restrictfl", entity.restrictfl);
         row.SetField("taxdt", entity.taxdt);
         row.SetField("taxreg", entity.taxreg);
         row.SetField("countycd", entity.countycd);
         row.SetField("citycd", entity.citycd);
         row.SetField("other1cd", entity.other1cd);
         row.SetField("other2cd", entity.other2cd);
         row.SetField("statustype", entity.statustype);
         row.SetField("ecommwhse", entity.ecommwhse);
         row.SetField("custshipto", entity.custshipto);
         row.SetField("spcdefaultty", entity.spcdefaultty);
         row.SetField("webpage", entity.webpage);
         row.SetField("shiplbl", entity.shiplbl);
         row.SetField("transproc", entity.transproc);
         row.SetField("email", entity.email);
         row.SetField("obsedi", entity.obsedi);
         row.SetField("pdcustno", entity.pdcustno);
         row.SetField("linetermsfl", entity.linetermsfl);
         row.SetField("ptxtype", entity.ptxtype);
         row.SetField("addonnum1", entity.addonnum1);
         row.SetField("addonnum2", entity.addonnum2);
         row.SetField("addonnum3", entity.addonnum3);
         row.SetField("addonnum4", entity.addonnum4);
         row.SetField("addonnum5", entity.addonnum5);
         row.SetField("addonnum6", entity.addonnum6);
         row.SetField("addonnum7", entity.addonnum7);
         row.SetField("addonnum8", entity.addonnum8);
         row.SetField("ptxarfl", entity.ptxarfl);
         row.SetField("ptxapfl", entity.ptxapfl);
         row.SetField("ptxtransbillfl", entity.ptxtransbillfl);
         row.SetField("edicatprodfl", entity.edicatprodfl);
         row.SetField("edinsprodfl", entity.edinsprodfl);
         row.SetField("ediprintnotesfl", entity.ediprintnotesfl);
         row.SetField("edijitfl", entity.edijitfl);
         row.SetField("editermsfl", entity.editermsfl);
         row.SetField("ediprcfl", entity.ediprcfl);
         row.SetField("edi840fl", entity.edi840fl);
         row.SetField("consolinvty", entity.consolinvty);
         row.SetField("addr3", entity.addr3);
         row.SetField("invtotype", entity.invtotype);
         row.SetField("genaddr3", entity.genaddr3);
         row.SetField("lenaddr3", entity.lenaddr3);
         row.SetField("ownaddr3", entity.ownaddr3);
         row.SetField("jobperiodbal1", entity.jobperiodbal1);
         row.SetField("jobperiodbal2", entity.jobperiodbal2);
         row.SetField("jobperiodbal3", entity.jobperiodbal3);
         row.SetField("jobperiodbal4", entity.jobperiodbal4);
         row.SetField("jobperiodbal5", entity.jobperiodbal5);
         row.SetField("jobordbal", entity.jobordbal);
         row.SetField("jobcodbal", entity.jobcodbal);
         row.SetField("jobfutinvbal", entity.jobfutinvbal);
         row.SetField("jobmisccrbal", entity.jobmisccrbal);
         row.SetField("jobservchgbal", entity.jobservchgbal);
         row.SetField("jobuncashbal", entity.jobuncashbal);
         row.SetField("consolterms", entity.consolterms);
         row.SetField("consolformat", entity.consolformat);
         row.SetField("consolinterval", entity.consolinterval);
         row.SetField("nextconsoldt", entity.nextconsoldt);
         row.SetField("lastconsoldt", entity.lastconsoldt);
         row.SetField("syncmddfl", entity.syncmddfl);
         row.SetField("user10", entity.user10);
         row.SetField("user11", entity.user11);
         row.SetField("user12", entity.user12);
         row.SetField("user13", entity.user13);
         row.SetField("user14", entity.user14);
         row.SetField("user15", entity.user15);
         row.SetField("user16", entity.user16);
         row.SetField("user17", entity.user17);
         row.SetField("user18", entity.user18);
         row.SetField("user19", entity.user19);
         row.SetField("user20", entity.user20);
         row.SetField("user21", entity.user21);
         row.SetField("user22", entity.user22);
         row.SetField("user23", entity.user23);
         row.SetField("user24", entity.user24);
         row.SetField("jmjobid", entity.jmjobid);
         row.SetField("jmjobrevno", entity.jmjobrevno);
         row.SetField("rebatety", entity.rebatety);
         row.SetField("srallownegoverfl", entity.srallownegoverfl);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("intratodcd", entity.intratodcd);
         row.SetField("outofcityfl", entity.outofcityfl);
         row.SetField("vattype", entity.vattype);
         row.SetField("gstreg", entity.gstreg);
         row.SetField("picklabelsize", entity.picklabelsize);
         row.SetField("strategicacct", entity.strategicacct);
         row.SetField("picklabelprefix", entity.picklabelprefix);
         row.SetField("siccd1", entity.siccd1);
         row.SetField("siccd2", entity.siccd2);
         row.SetField("siccd3", entity.siccd3);
         row.SetField("industrytype", entity.industrytype);
         row.SetField("classrating", entity.classrating);
         row.SetField("balintdatetm", entity.balintdatetm);
         row.SetField("billdirectaddon", entity.billdirectaddon);
         row.SetField("frttermscd", entity.frttermscd);
         row.SetField("transferloc", entity.transferloc);
         row.SetField("esbactioncode", entity.esbactioncode);
         row.SetField("extshipinstr", entity.extshipinstr);
         row.SetField("ccblockfl", entity.ccblockfl);
         row.SetField("shiptogrp", entity.shiptogrp);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("allowfulfillmentty", entity.allowfulfillmentty);
         row.SetField("sigreqtype", entity.sigreqtype);
         row.SetField("excsxapilstfl", entity.excsxapilstfl);
         row.SetField("bankno", entity.bankno);
         row.SetField("divno", entity.divno);
         row.SetField("easntype", entity.easntype);
         row.SetField("restricteditfl", entity.restricteditfl);
         row.SetField("alternateid", entity.alternateid);
         row.SetField("createdby", entity.createdby);
         row.SetField("createddt", entity.createddt);
         row.SetField("createdtm", entity.createdtm);
         row.SetField("createdproc", entity.createdproc);
         row.SetField("lnshipcompfl", entity.lnshipcompfl);
         row.SetField("bolimit", entity.bolimit);
         row.SetField("arssRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ArssBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("custno", entity.custno);
         row.SetField("shipto", entity.shipto);
         row.SetField("arssRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	