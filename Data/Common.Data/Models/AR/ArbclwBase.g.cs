//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.AR
{
   /// <summary>
   /// Lock Box Write Off File
   /// </summary>
   
   public partial class ArbclwBase: ModelBase, IUserFields
   {

      /// <summary>
      /// CO#
      /// </summary>
      public int cono { get; set; }

      /// <summary>
      /// Batch
      /// </summary>
      [StringValidationAttribute]
      public string batch { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      public decimal custno { get; set; }

      /// <summary>
      /// Check #
      /// </summary>
      public int checkno { get; set; }

      /// <summary>
      /// Invoice #
      /// </summary>
      public int invno { get; set; }

      /// <summary>
      /// Suf
      /// </summary>
      public int invsuf { get; set; }

      /// <summary>
      /// Seq#
      /// </summary>
      public int seqno { get; set; }

      /// <summary>
      /// Amount
      /// </summary>
      public decimal amt { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Lookup Name
      /// </summary>
      [StringValidationAttribute]
      public string lookupnm { get; set; }

      /// <summary>
      /// ARET Recid
      /// </summary>
      public long arettid { get; set; }

      /// <summary>
      /// Report Recid
      /// </summary>
      public long rid { get; set; }

      /// <summary>
      /// Tax #
      /// </summary>
      public int taxno { get; set; }

      /// <summary>
      /// Additional Data 1
      /// </summary>
      [StringValidationAttribute]
      public string adddata1 { get; set; }

      /// <summary>
      /// Additional Data 2
      /// </summary>
      [StringValidationAttribute]
      public string adddata2 { get; set; }

      /// <summary>
      /// Additional Data 3
      /// </summary>
      [StringValidationAttribute]
      public string adddata3 { get; set; }

      /// <summary>
      /// Additional Data 4
      /// </summary>
      [StringValidationAttribute]
      public string adddata4 { get; set; }

      /// <summary>
      /// Additional Data 5
      /// </summary>
      [StringValidationAttribute]
      public string adddata5 { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Div#
      /// </summary>
      public int gldivno { get; set; }

      /// <summary>
      /// Dept#
      /// </summary>
      public int gldeptno { get; set; }

      /// <summary>
      /// Acct#
      /// </summary>
      public int glacctno { get; set; }

      /// <summary>
      /// Sub#
      /// </summary>
      public int glsubno { get; set; }

      /// <summary>
      /// Original Amount
      /// </summary>
      public decimal origamt { get; set; }

      /// <summary>
      /// Original Tax Amount
      /// </summary>
      public decimal origtaxamt { get; set; }

      /// <summary>
      /// Adj Base Amount
      /// </summary>
      public decimal adjbaseamt { get; set; }

      /// <summary>
      /// Tax Exempt Amount
      /// </summary>
      public decimal taxexemptamt { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildArbclwBaseFromRow<T>(DataRow row) where T:ArbclwBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.batch = row.IsNull("batch") ? string.Empty : row.Field<string>("batch");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.checkno = row.IsNull("checkno") ? 0 : row.Field<int>("checkno");
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.amt = row.IsNull("amt") ? decimal.Zero : row.Field<decimal>("amt");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.lookupnm = row.IsNull("lookupnm") ? string.Empty : row.Field<string>("lookupnm");
         entity.arettid = row.IsNull("arettid") ? 0 : row.Field<long>("arettid");
         entity.rid = row.IsNull("rid") ? 0 : row.Field<long>("rid");
         entity.taxno = row.IsNull("taxno") ? 0 : row.Field<int>("taxno");
         entity.adddata1 = row.IsNull("adddata1") ? string.Empty : row.Field<string>("adddata1");
         entity.adddata2 = row.IsNull("adddata2") ? string.Empty : row.Field<string>("adddata2");
         entity.adddata3 = row.IsNull("adddata3") ? string.Empty : row.Field<string>("adddata3");
         entity.adddata4 = row.IsNull("adddata4") ? string.Empty : row.Field<string>("adddata4");
         entity.adddata5 = row.IsNull("adddata5") ? string.Empty : row.Field<string>("adddata5");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.origamt = row.IsNull("origamt") ? decimal.Zero : row.Field<decimal>("origamt");
         entity.origtaxamt = row.IsNull("origtaxamt") ? decimal.Zero : row.Field<decimal>("origtaxamt");
         entity.adjbaseamt = row.IsNull("adjbaseamt") ? decimal.Zero : row.Field<decimal>("adjbaseamt");
         entity.taxexemptamt = row.IsNull("taxexemptamt") ? decimal.Zero : row.Field<decimal>("taxexemptamt");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.rowID = row.Field<byte[]>("arbclwRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromArbclwBase(ref DataRow row, ArbclwBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("batch", entity.batch);
         row.SetField("custno", entity.custno);
         row.SetField("checkno", entity.checkno);
         row.SetField("invno", entity.invno);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("seqno", entity.seqno);
         row.SetField("amt", entity.amt);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("lookupnm", entity.lookupnm);
         row.SetField("arettid", entity.arettid);
         row.SetField("rid", entity.rid);
         row.SetField("taxno", entity.taxno);
         row.SetField("adddata1", entity.adddata1);
         row.SetField("adddata2", entity.adddata2);
         row.SetField("adddata3", entity.adddata3);
         row.SetField("adddata4", entity.adddata4);
         row.SetField("adddata5", entity.adddata5);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("operinit", entity.operinit);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("origamt", entity.origamt);
         row.SetField("origtaxamt", entity.origtaxamt);
         row.SetField("adjbaseamt", entity.adjbaseamt);
         row.SetField("taxexemptamt", entity.taxexemptamt);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("arbclwRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ArbclwBase entity)
      {
         row.SetField("arbclwRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	