//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.AR
{
   /// <summary>
   /// Lockbox Detail
   /// </summary>
   [EntityType("Lockbox Details","TBD","")]
   public partial class ArbclBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [BusContext(BusPart.AcctEntity),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Batch
      /// </summary>
      [BusContext(BusPart.Descr),Key,Order,StringValidationAttribute]
      public string batch { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      [Key,Order]
      public decimal custno { get; set; }

      /// <summary>
      /// Check #
      /// </summary>
      [BusContext(BusPart.Name),Key,Order]
      public int checkno { get; set; }

      /// <summary>
      /// Invoice #
      /// </summary>
      [Key,Order]
      public int invno { get; set; }

      /// <summary>
      /// Suf
      /// </summary>
      [Key,Order]
      public int invsuf { get; set; }

      /// <summary>
      /// Seq #
      /// </summary>
      [Key,Order]
      public int seqno { get; set; }

      /// <summary>
      /// LBX Invno
      /// </summary>
      [StringValidationAttribute]
      public string lbxinvno { get; set; }

      /// <summary>
      /// LBX Amt
      /// </summary>
      public decimal lbxamt { get; set; }

      /// <summary>
      /// aretid
      /// </summary>
      public long aretid { get; set; }

      /// <summary>
      /// Amount
      /// </summary>
      public decimal invamt { get; set; }

      /// <summary>
      /// Due Dt
      /// </summary>
      public DateTime? duedt { get; set; }

      /// <summary>
      /// TC
      /// </summary>
      [StringValidationAttribute]
      public string trancd { get; set; }

      /// <summary>
      /// PIF
      /// </summary>
      public bool piffl { get; set; }

      /// <summary>
      /// Apply Amt
      /// </summary>
      public decimal applyamt { get; set; }

      /// <summary>
      /// Disc Amt
      /// </summary>
      public decimal discamt { get; set; }

      /// <summary>
      /// Inv Cust #
      /// </summary>
      public decimal invcustno { get; set; }

      /// <summary>
      /// ARETnf?
      /// </summary>
      public bool aretnffl { get; set; }

      /// <summary>
      /// Stat
      /// </summary>
      public bool statfl { get; set; }

      /// <summary>
      /// Ref
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Pref
      /// </summary>
      public int prefix { get; set; }

      /// <summary>
      /// C-B Inv#
      /// </summary>
      public int cbinvno { get; set; }

      /// <summary>
      /// Additional Data 1
      /// </summary>
      [StringValidationAttribute]
      public string adddata1 { get; set; }

      /// <summary>
      /// Additional Data 2
      /// </summary>
      [StringValidationAttribute]
      public string adddata2 { get; set; }

      /// <summary>
      /// Additional Data 3
      /// </summary>
      [StringValidationAttribute]
      public string adddata3 { get; set; }

      /// <summary>
      /// Additional Data 4
      /// </summary>
      [StringValidationAttribute]
      public string adddata4 { get; set; }

      /// <summary>
      /// Additional Data 5
      /// </summary>
      [StringValidationAttribute]
      public string adddata5 { get; set; }

      /// <summary>
      /// Additional Data 6
      /// </summary>
      [StringValidationAttribute]
      public string adddata6 { get; set; }

      /// <summary>
      /// Additional Data 7
      /// </summary>
      [StringValidationAttribute]
      public string adddata7 { get; set; }

      /// <summary>
      /// Additional Data 8
      /// </summary>
      [StringValidationAttribute]
      public string adddata8 { get; set; }

      /// <summary>
      /// Additional Data 9
      /// </summary>
      [StringValidationAttribute]
      public string adddata9 { get; set; }

      /// <summary>
      /// Additional Data 10
      /// </summary>
      [StringValidationAttribute]
      public string adddata10 { get; set; }

      /// <summary>
      /// Operator
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Auto Posted?
      /// </summary>
      public bool autopostfl { get; set; }

      /// <summary>
      /// Transaction Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Transaction Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// transproc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildArbclBaseFromRow<T>(DataRow row) where T:ArbclBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.batch = row.IsNull("batch") ? string.Empty : row.Field<string>("batch");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.checkno = row.IsNull("checkno") ? 0 : row.Field<int>("checkno");
         entity.lbxinvno = row.IsNull("lbxinvno") ? string.Empty : row.Field<string>("lbxinvno");
         entity.lbxamt = row.IsNull("lbxamt") ? decimal.Zero : row.Field<decimal>("lbxamt");
         entity.aretid = row.IsNull("aretid") ? 0 : row.Field<long>("aretid");
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.invamt = row.IsNull("invamt") ? decimal.Zero : row.Field<decimal>("invamt");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.trancd = row.IsNull("trancd") ? string.Empty : row.Field<string>("trancd");
         entity.piffl = row.Field<bool>("piffl");
         entity.applyamt = row.IsNull("applyamt") ? decimal.Zero : row.Field<decimal>("applyamt");
         entity.discamt = row.IsNull("discamt") ? decimal.Zero : row.Field<decimal>("discamt");
         entity.invcustno = row.IsNull("invcustno") ? decimal.Zero : row.Field<decimal>("invcustno");
         entity.aretnffl = row.Field<bool>("aretnffl");
         entity.statfl = row.Field<bool>("statfl");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.prefix = row.IsNull("prefix") ? 0 : row.Field<int>("prefix");
         entity.cbinvno = row.IsNull("cbinvno") ? 0 : row.Field<int>("cbinvno");
         entity.adddata1 = row.IsNull("adddata1") ? string.Empty : row.Field<string>("adddata1");
         entity.adddata2 = row.IsNull("adddata2") ? string.Empty : row.Field<string>("adddata2");
         entity.adddata3 = row.IsNull("adddata3") ? string.Empty : row.Field<string>("adddata3");
         entity.adddata4 = row.IsNull("adddata4") ? string.Empty : row.Field<string>("adddata4");
         entity.adddata5 = row.IsNull("adddata5") ? string.Empty : row.Field<string>("adddata5");
         entity.adddata6 = row.IsNull("adddata6") ? string.Empty : row.Field<string>("adddata6");
         entity.adddata7 = row.IsNull("adddata7") ? string.Empty : row.Field<string>("adddata7");
         entity.adddata8 = row.IsNull("adddata8") ? string.Empty : row.Field<string>("adddata8");
         entity.adddata9 = row.IsNull("adddata9") ? string.Empty : row.Field<string>("adddata9");
         entity.adddata10 = row.IsNull("adddata10") ? string.Empty : row.Field<string>("adddata10");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.autopostfl = row.Field<bool>("autopostfl");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.rowID = row.Field<byte[]>("arbclRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromArbclBase(ref DataRow row, ArbclBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("batch", entity.batch);
         row.SetField("custno", entity.custno);
         row.SetField("checkno", entity.checkno);
         row.SetField("lbxinvno", entity.lbxinvno);
         row.SetField("lbxamt", entity.lbxamt);
         row.SetField("aretid", entity.aretid);
         row.SetField("invno", entity.invno);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("seqno", entity.seqno);
         row.SetField("invamt", entity.invamt);
         row.SetField("duedt", entity.duedt);
         row.SetField("trancd", entity.trancd);
         row.SetField("piffl", entity.piffl);
         row.SetField("applyamt", entity.applyamt);
         row.SetField("discamt", entity.discamt);
         row.SetField("invcustno", entity.invcustno);
         row.SetField("aretnffl", entity.aretnffl);
         row.SetField("statfl", entity.statfl);
         row.SetField("refer", entity.refer);
         row.SetField("prefix", entity.prefix);
         row.SetField("cbinvno", entity.cbinvno);
         row.SetField("adddata1", entity.adddata1);
         row.SetField("adddata2", entity.adddata2);
         row.SetField("adddata3", entity.adddata3);
         row.SetField("adddata4", entity.adddata4);
         row.SetField("adddata5", entity.adddata5);
         row.SetField("adddata6", entity.adddata6);
         row.SetField("adddata7", entity.adddata7);
         row.SetField("adddata8", entity.adddata8);
         row.SetField("adddata9", entity.adddata9);
         row.SetField("adddata10", entity.adddata10);
         row.SetField("operinit", entity.operinit);
         row.SetField("autopostfl", entity.autopostfl);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("arbclRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ArbclBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("batch", entity.batch);
         row.SetField("custno", entity.custno);
         row.SetField("checkno", entity.checkno);
         row.SetField("invno", entity.invno);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("seqno", entity.seqno);
         row.SetField("arbclRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	