//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.WT
{
   /// <summary>
   /// WT Alternate Order #s
   /// </summary>
   
   public partial class WteloBase: ModelBase, IUserFields
   {

      /// <summary>
      /// WT #
      /// </summary>
      [Key,Order]
      public int wtno { get; set; }

      /// <summary>
      /// Line#
      /// </summary>
      [Key,Order]
      public int lineno { get; set; }

      /// <summary>
      /// Seq#
      /// </summary>
      [Key,Order]
      public int seqno { get; set; }

      /// <summary>
      /// WT Suffix
      /// </summary>
      [Key,Order]
      public int wtsuf { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      public int cono { get; set; }

      /// <summary>
      /// Order Type
      /// </summary>
      [StringValidationAttribute]
      public string ordertype { get; set; }

      /// <summary>
      /// Related Order #
      /// </summary>
      public int orderaltno { get; set; }

      /// <summary>
      /// Related Order Suffix
      /// </summary>
      public int orderaltsuf { get; set; }

      /// <summary>
      /// Line # Alternate
      /// </summary>
      public int linealtno { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Old Order Type
      /// </summary>
      [StringValidationAttribute]
      public string oordertype { get; set; }

      /// <summary>
      /// Old OrderAltNo
      /// </summary>
      public int oorderaltno { get; set; }

      /// <summary>
      /// Old Orderaltsuf
      /// </summary>
      public int oorderaltsuf { get; set; }

      /// <summary>
      /// Old Line Alt No
      /// </summary>
      public int olinealtno { get; set; }

      /// <summary>
      /// Old Alt Seq#
      /// </summary>
      public decimal oseqaltno { get; set; }

      /// <summary>
      /// WT Company
      /// </summary>
      public int wtcono { get; set; }

      /// <summary>
      /// WT Company
      /// </summary>
      public int owtcono { get; set; }

      /// <summary>
      /// Alt Seq #
      /// </summary>
      public int seqaltno { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildWteloBaseFromRow<T>(DataRow row) where T:WteloBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.wtno = row.IsNull("wtno") ? 0 : row.Field<int>("wtno");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.ordertype = row.IsNull("ordertype") ? string.Empty : row.Field<string>("ordertype");
         entity.orderaltno = row.IsNull("orderaltno") ? 0 : row.Field<int>("orderaltno");
         entity.orderaltsuf = row.IsNull("orderaltsuf") ? 0 : row.Field<int>("orderaltsuf");
         entity.linealtno = row.IsNull("linealtno") ? 0 : row.Field<int>("linealtno");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.oordertype = row.IsNull("oordertype") ? string.Empty : row.Field<string>("oordertype");
         entity.oorderaltno = row.IsNull("oorderaltno") ? 0 : row.Field<int>("oorderaltno");
         entity.oorderaltsuf = row.IsNull("oorderaltsuf") ? 0 : row.Field<int>("oorderaltsuf");
         entity.olinealtno = row.IsNull("olinealtno") ? 0 : row.Field<int>("olinealtno");
         entity.oseqaltno = row.IsNull("oseqaltno") ? decimal.Zero : row.Field<decimal>("oseqaltno");
         entity.wtcono = row.IsNull("wtcono") ? 0 : row.Field<int>("wtcono");
         entity.owtcono = row.IsNull("owtcono") ? 0 : row.Field<int>("owtcono");
         entity.seqaltno = row.IsNull("seqaltno") ? 0 : row.Field<int>("seqaltno");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.wtsuf = row.IsNull("wtsuf") ? 0 : row.Field<int>("wtsuf");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("wteloRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromWteloBase(ref DataRow row, WteloBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("wtno", entity.wtno);
         row.SetField("lineno", entity.lineno);
         row.SetField("ordertype", entity.ordertype);
         row.SetField("orderaltno", entity.orderaltno);
         row.SetField("orderaltsuf", entity.orderaltsuf);
         row.SetField("linealtno", entity.linealtno);
         row.SetField("seqno", entity.seqno);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("oordertype", entity.oordertype);
         row.SetField("oorderaltno", entity.oorderaltno);
         row.SetField("oorderaltsuf", entity.oorderaltsuf);
         row.SetField("olinealtno", entity.olinealtno);
         row.SetField("oseqaltno", entity.oseqaltno);
         row.SetField("wtcono", entity.wtcono);
         row.SetField("owtcono", entity.owtcono);
         row.SetField("seqaltno", entity.seqaltno);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("wtsuf", entity.wtsuf);
         row.SetField("transproc", entity.transproc);
         row.SetField("wteloRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, WteloBase entity)
      {
         row.SetField("wtno", entity.wtno);
         row.SetField("lineno", entity.lineno);
         row.SetField("seqno", entity.seqno);
         row.SetField("wtsuf", entity.wtsuf);
         row.SetField("wteloRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	