//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.WT
{
   /// <summary>
   /// Warehouse Transfer Header
   /// </summary>
   [EntityType("Warehouse Transfer Header","wtit.detail","AdvanceShipNotice")]
   public partial class WtehBase: ModelBase, IUserFields
   {

      /// <summary>
      /// WT #
      /// </summary>
      [DrillbackParam("pk",1),BodID(1,RequiredId.True),Key,Order]
      public int wtno { get; set; }

      /// <summary>
      /// 
      /// </summary>
      [BodID(2,RequiredId.True),DrillbackParam("pk2",2),Key,Order]
      public int wtsuf { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      [BusContext(BusPart.AcctEntity),BodContext(BodPart.AcctEntity,""),ID(3)]
      public int cono { get; set; }

      /// <summary>
      /// Stg
      /// </summary>
      [ID(4)]
      public int stagecd { get; set; }

      /// <summary>
      /// Ship To:
      /// </summary>
      [StringValidationAttribute]
      public string shiptonm { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Related Order #
      /// </summary>
      public int orderaltno { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [ID(5),StringValidationAttribute]
      public string transtype { get; set; }

      /// <summary>
      /// shiptost
      /// </summary>
      [StringValidationAttribute]
      public string shiptost { get; set; }

      /// <summary>
      /// shiptozip
      /// </summary>
      [StringValidationAttribute]
      public string shiptozip { get; set; }

      /// <summary>
      /// From Whse
      /// </summary>
      [ID(6),BusContext(BusPart.Location),BodContext(BodPart.Location,""),StringValidationAttribute]
      public string shipfmwhse { get; set; }

      /// <summary>
      /// Instructions
      /// </summary>
      [StringValidationAttribute]
      public string shipinstr { get; set; }

      /// <summary>
      /// Ref
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Ship
      /// </summary>
      [StringValidationAttribute]
      public string shipviaty { get; set; }

      /// <summary>
      /// Ship
      /// </summary>
      public DateTime? shipdt { get; set; }

      /// <summary>
      /// Immediate WT
      /// </summary>
      public bool immedwtfl { get; set; }

      /// <summary>
      /// Division to Company Rate
      /// </summary>
      public decimal fminvexrate { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// orderdt
      /// </summary>
      public DateTime? orderdt { get; set; }

      /// <summary>
      /// Printed
      /// </summary>
      public DateTime? printeddt { get; set; }

      /// <summary>
      /// Entered
      /// </summary>
      public DateTime? enterdt { get; set; }

      /// <summary>
      /// Receipt
      /// </summary>
      public DateTime? receiptdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Old Stk Qty Shipped
      /// </summary>
      public decimal ototqtyshp { get; set; }

      /// <summary>
      /// Ship
      /// </summary>
      [StringValidationAttribute]
      public string shiptoaddr1 { get; set; }
      [StringValidationAttribute]
      public string shiptoaddr2 { get; set; }

      /// <summary>
      /// Actual Shipped
      /// </summary>
      public decimal totqtyact { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string shiptocity { get; set; }

      /// <summary>
      /// # of Lines
      /// </summary>
      public int nolineitem { get; set; }

      /// <summary>
      /// Direct Route Delivery Time
      /// </summary>
      [StringValidationAttribute]
      public string drdeltm { get; set; }

      /// <summary>
      /// Created By
      /// </summary>
      [StringValidationAttribute]
      public string createdby { get; set; }

      /// <summary>
      /// Order
      /// </summary>
      public decimal totlineamt { get; set; }

      /// <summary>
      /// WLET Set#
      /// </summary>
      [StringValidationAttribute]
      public string wletsetno { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal totweight { get; set; }

      /// <summary>
      /// BO Stage
      /// </summary>
      public int bostage { get; set; }

      /// <summary>
      /// Cube
      /// </summary>
      public decimal totcubes { get; set; }

      /// <summary>
      /// Qty Shipped
      /// </summary>
      public decimal totqtyshp { get; set; }

      /// <summary>
      /// Direct Route Delivery Date
      /// </summary>
      public DateTime? drdeldt { get; set; }

      /// <summary>
      /// BO Flag
      /// </summary>
      public bool borelfl { get; set; }

      /// <summary>
      /// BO Exists
      /// </summary>
      public bool boexistsfl { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// Staging Area
      /// </summary>
      [StringValidationAttribute]
      public string stagearea { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Jrnl #
      /// </summary>
      public int jrnlno { get; set; }

      /// <summary>
      /// # SN/Lots In
      /// </summary>
      public decimal nosnlotsi { get; set; }

      /// <summary>
      /// # Times Chg
      /// </summary>
      public int notimeschg { get; set; }

      /// <summary>
      /// Next Line #
      /// </summary>
      public int nextlineno { get; set; }

      /// <summary>
      /// Lines Altered
      /// </summary>
      public bool linefl { get; set; }

      /// <summary>
      /// Printed
      /// </summary>
      public bool printfl { get; set; }

      /// <summary>
      /// Ignore Lead Time
      /// </summary>
      public bool ignoreltfl { get; set; }

      /// <summary>
      /// Co # To
      /// </summary>
      public int cono2 { get; set; }

      /// <summary>
      /// Qty Ordered
      /// </summary>
      public decimal totqtyord { get; set; }

      /// <summary>
      /// Quantity Received
      /// </summary>
      public decimal totqtyrcv { get; set; }

      /// <summary>
      /// Ship To Whse
      /// </summary>
      [ID(7),StringValidationAttribute]
      public string shiptowhse { get; set; }

      /// <summary>
      /// Ship Amount
      /// </summary>
      public decimal totshipamt { get; set; }

      /// <summary>
      /// Order Amount
      /// </summary>
      public decimal totordamt { get; set; }

      /// <summary>
      /// Receive Amount
      /// </summary>
      public decimal totrcvamt { get; set; }

      /// <summary>
      /// Due
      /// </summary>
      public DateTime? duedt { get; set; }

      /// <summary>
      /// # SN/Lots Out
      /// </summary>
      public decimal nosnlotso { get; set; }

      /// <summary>
      /// Due Dt Override
      /// </summary>
      public bool dueoverfl { get; set; }

      /// <summary>
      /// Open Initials
      /// </summary>
      [StringValidationAttribute]
      public string openinit { get; set; }

      /// <summary>
      /// Receiving Jrnl
      /// </summary>
      public int jrnlno2 { get; set; }

      /// <summary>
      /// # Unapproved
      /// </summary>
      public int nounappr { get; set; }

      /// <summary>
      /// Picked By
      /// </summary>
      [StringValidationAttribute]
      public string pickedby { get; set; }

      /// <summary>
      /// Package ID
      /// </summary>
      [StringValidationAttribute]
      public string pkgid { get; set; }

      /// <summary>
      /// Authorization
      /// </summary>
      public int wtauth { get; set; }

      /// <summary>
      /// Addon Amt
      /// </summary>
      public decimal addonamt1 { get; set; }
      public decimal addonamt2 { get; set; }

      /// <summary>
      /// Addon Type
      /// </summary>
      [StringValidationAttribute]
      public string addontype1 { get; set; }
      [StringValidationAttribute]
      public string addontype2 { get; set; }

      /// <summary>
      /// Rcv Init
      /// </summary>
      [StringValidationAttribute]
      public string rcvoperinit { get; set; }

      /// <summary>
      /// Rcv Incompl Jrnl
      /// </summary>
      public int jrnlno3 { get; set; }

      /// <summary>
      /// Req Ship
      /// </summary>
      public DateTime? reqshipdt { get; set; }

      /// <summary>
      /// Related Suffix
      /// </summary>
      public int orderaltsuf { get; set; }

      /// <summary>
      /// # Cat Wt In
      /// </summary>
      public int nocatwghti { get; set; }

      /// <summary>
      /// # Cat Wt Out
      /// </summary>
      public int nocatwghto { get; set; }

      /// <summary>
      /// Last Stage
      /// </summary>
      public int laststagecd { get; set; }

      /// <summary>
      /// No of Errors
      /// </summary>
      public int noerrs { get; set; }

      /// <summary>
      /// # Pick Tickets Printed
      /// </summary>
      public int pickcnt { get; set; }

      /// <summary>
      /// Net Addon Amount
      /// </summary>
      public decimal addonnet1 { get; set; }
      public decimal addonnet2 { get; set; }

      /// <summary>
      /// Language Code
      /// </summary>
      [StringValidationAttribute]
      public string langcd { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// # Packages
      /// </summary>
      public int nopackages { get; set; }

      /// <summary>
      /// Addon Distributed
      /// </summary>
      public decimal addondist1 { get; set; }
      public decimal addondist2 { get; set; }

      /// <summary>
      /// Actual Freight Amount
      /// </summary>
      public decimal actfreight { get; set; }

      /// <summary>
      /// Shipping Point
      /// </summary>
      [StringValidationAttribute]
      public string shippingpt { get; set; }

      /// <summary>
      /// Zone
      /// </summary>
      [StringValidationAttribute]
      public string zone { get; set; }

      /// <summary>
      /// Division #
      /// </summary>
      public int divno { get; set; }

      /// <summary>
      /// Rush
      /// </summary>
      public bool rushfl { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Direct Route Export Flag
      /// </summary>
      public bool drexpfl { get; set; }

      /// <summary>
      /// From Currency
      /// </summary>
      [StringValidationAttribute]
      public string fmcurrencyty { get; set; }

      /// <summary>
      /// To Currency
      /// </summary>
      [StringValidationAttribute]
      public string tocurrencyty { get; set; }

      /// <summary>
      /// Company to Division Rate
      /// </summary>
      public decimal toinvexrate { get; set; }

      /// <summary>
      /// From Expense Addon Exchange Rate
      /// </summary>
      public decimal fmexpexrate { get; set; }

      /// <summary>
      /// To Expense Addon Exchange Rate
      /// </summary>
      public decimal toexpexrate { get; set; }

      /// <summary>
      /// From Cap Addon Exchange Rate
      /// </summary>
      public decimal fmcapexrate { get; set; }

      /// <summary>
      /// To Cap Addon Exchange Rate
      /// </summary>
      public decimal tocapexrate { get; set; }

      /// <summary>
      /// Ship
      /// </summary>
      [StringValidationAttribute]
      public string shiptoaddr3 { get; set; }

      /// <summary>
      /// User 10
      /// </summary>
      [StringValidationAttribute]
      public string user10 { get; set; }

      /// <summary>
      /// User 11
      /// </summary>
      [StringValidationAttribute]
      public string user11 { get; set; }

      /// <summary>
      /// User 12
      /// </summary>
      [StringValidationAttribute]
      public string user12 { get; set; }

      /// <summary>
      /// User 13
      /// </summary>
      [StringValidationAttribute]
      public string user13 { get; set; }

      /// <summary>
      /// User 14
      /// </summary>
      [StringValidationAttribute]
      public string user14 { get; set; }

      /// <summary>
      /// User 15
      /// </summary>
      [StringValidationAttribute]
      public string user15 { get; set; }

      /// <summary>
      /// User 16
      /// </summary>
      [StringValidationAttribute]
      public string user16 { get; set; }

      /// <summary>
      /// User 17
      /// </summary>
      [StringValidationAttribute]
      public string user17 { get; set; }

      /// <summary>
      /// User 18
      /// </summary>
      [StringValidationAttribute]
      public string user18 { get; set; }

      /// <summary>
      /// User 19
      /// </summary>
      [StringValidationAttribute]
      public string user19 { get; set; }

      /// <summary>
      /// User 20
      /// </summary>
      [StringValidationAttribute]
      public string user20 { get; set; }

      /// <summary>
      /// User 21
      /// </summary>
      [StringValidationAttribute]
      public string user21 { get; set; }

      /// <summary>
      /// User 22
      /// </summary>
      [StringValidationAttribute]
      public string user22 { get; set; }

      /// <summary>
      /// User 23
      /// </summary>
      [StringValidationAttribute]
      public string user23 { get; set; }

      /// <summary>
      /// User 24
      /// </summary>
      [StringValidationAttribute]
      public string user24 { get; set; }

      /// <summary>
      /// ESB Shipment Flag
      /// </summary>
      public bool esbshipmentfl { get; set; }

      /// <summary>
      /// ESB Advance Ship Notice Flag
      /// </summary>
      public bool esbasnfl { get; set; }

      /// <summary>
      /// WT Billed Status
      /// </summary>
      [StringValidationAttribute]
      public string autoaltwhsecd { get; set; }

      /// <summary>
      /// Billed OE#
      /// </summary>
      public int autoaltordno { get; set; }

      /// <summary>
      /// Billed OE Suf
      /// </summary>
      public int autoaltordsuf { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Country
      /// </summary>
      [StringValidationAttribute]
      public string countrycd { get; set; }

      /// <summary>
      /// Ext Shipping Instructions
      /// </summary>
      [StringValidationAttribute]
      public string extshipinstr { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }

      /// <summary>
      /// Markup Addons
      /// </summary>
      public bool markupaddonfl { get; set; }

      /// <summary>
      /// Reason Code
      /// </summary>
      [StringValidationAttribute]
      public string reasoncode { get; set; }

      /// <summary>
      /// LSP Invoice Registration Status
      /// </summary>
      [StringValidationAttribute]
      public string lspinvregstatus { get; set; }

      /// <summary>
      /// LSP UUID
      /// </summary>
      [StringValidationAttribute]
      public string lspuuid { get; set; }

      /// <summary>
      /// LSP Invoice Registration Status Date
      /// </summary>
      public DateTime? lspinvregstatdttmz { get; set; }

      /// <summary>
      /// LSP Identifier 1
      /// </summary>
      [StringValidationAttribute]
      public string lspidentifier1 { get; set; }

      /// <summary>
      /// LSP Identifier 2
      /// </summary>
      [StringValidationAttribute]
      public string lspidentifier2 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.shiptoaddr1 + "," + this.shiptocity + "," + this.shiptost + "," + this.shiptozip; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildWtehBaseFromRow<T>(DataRow row) where T:WtehBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.wtno = row.IsNull("wtno") ? 0 : row.Field<int>("wtno");
         entity.wtsuf = row.IsNull("wtsuf") ? 0 : row.Field<int>("wtsuf");
         entity.stagecd = row.IsNull("stagecd") ? 0 : row.Field<int>("stagecd");
         entity.shiptonm = row.IsNull("shiptonm") ? string.Empty : row.Field<string>("shiptonm");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.orderaltno = row.IsNull("orderaltno") ? 0 : row.Field<int>("orderaltno");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.shiptost = row.IsNull("shiptost") ? string.Empty : row.Field<string>("shiptost");
         entity.shiptozip = row.IsNull("shiptozip") ? string.Empty : row.Field<string>("shiptozip");
         entity.shipfmwhse = row.IsNull("shipfmwhse") ? string.Empty : row.Field<string>("shipfmwhse");
         entity.shipinstr = row.IsNull("shipinstr") ? string.Empty : row.Field<string>("shipinstr");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.shipviaty = row.IsNull("shipviaty") ? string.Empty : row.Field<string>("shipviaty");
         entity.shipdt = row.Field<DateTime?>("shipdt");
         entity.immedwtfl = row.Field<bool>("immedwtfl");
         entity.fminvexrate = row.IsNull("fminvexrate") ? decimal.Zero : row.Field<decimal>("fminvexrate");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.orderdt = row.Field<DateTime?>("orderdt");
         entity.printeddt = row.Field<DateTime?>("printeddt");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.receiptdt = row.Field<DateTime?>("receiptdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.ototqtyshp = row.IsNull("ototqtyshp") ? decimal.Zero : row.Field<decimal>("ototqtyshp");
         entity.shiptoaddr1 = row.IsNull("shiptoaddr1") ? string.Empty : row.Field<string>("shiptoaddr1");
         entity.shiptoaddr2 = row.IsNull("shiptoaddr2") ? string.Empty : row.Field<string>("shiptoaddr2");
         entity.totqtyact = row.IsNull("totqtyact") ? decimal.Zero : row.Field<decimal>("totqtyact");
         entity.shiptocity = row.IsNull("shiptocity") ? string.Empty : row.Field<string>("shiptocity");
         entity.nolineitem = row.IsNull("nolineitem") ? 0 : row.Field<int>("nolineitem");
         entity.drdeltm = row.IsNull("drdeltm") ? string.Empty : row.Field<string>("drdeltm");
         entity.createdby = row.IsNull("createdby") ? string.Empty : row.Field<string>("createdby");
         entity.totlineamt = row.IsNull("totlineamt") ? decimal.Zero : row.Field<decimal>("totlineamt");
         entity.wletsetno = row.IsNull("wletsetno") ? string.Empty : row.Field<string>("wletsetno");
         entity.totweight = row.IsNull("totweight") ? decimal.Zero : row.Field<decimal>("totweight");
         entity.bostage = row.IsNull("bostage") ? 0 : row.Field<int>("bostage");
         entity.totcubes = row.IsNull("totcubes") ? decimal.Zero : row.Field<decimal>("totcubes");
         entity.totqtyshp = row.IsNull("totqtyshp") ? decimal.Zero : row.Field<decimal>("totqtyshp");
         entity.drdeldt = row.Field<DateTime?>("drdeldt");
         entity.borelfl = row.Field<bool>("borelfl");
         entity.boexistsfl = row.Field<bool>("boexistsfl");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.stagearea = row.IsNull("stagearea") ? string.Empty : row.Field<string>("stagearea");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.nosnlotsi = row.IsNull("nosnlotsi") ? decimal.Zero : row.Field<decimal>("nosnlotsi");
         entity.notimeschg = row.IsNull("notimeschg") ? 0 : row.Field<int>("notimeschg");
         entity.nextlineno = row.IsNull("nextlineno") ? 0 : row.Field<int>("nextlineno");
         entity.linefl = row.Field<bool>("linefl");
         entity.printfl = row.Field<bool>("printfl");
         entity.ignoreltfl = row.Field<bool>("ignoreltfl");
         entity.cono2 = row.IsNull("cono2") ? 0 : row.Field<int>("cono2");
         entity.totqtyord = row.IsNull("totqtyord") ? decimal.Zero : row.Field<decimal>("totqtyord");
         entity.totqtyrcv = row.IsNull("totqtyrcv") ? decimal.Zero : row.Field<decimal>("totqtyrcv");
         entity.shiptowhse = row.IsNull("shiptowhse") ? string.Empty : row.Field<string>("shiptowhse");
         entity.totshipamt = row.IsNull("totshipamt") ? decimal.Zero : row.Field<decimal>("totshipamt");
         entity.totordamt = row.IsNull("totordamt") ? decimal.Zero : row.Field<decimal>("totordamt");
         entity.totrcvamt = row.IsNull("totrcvamt") ? decimal.Zero : row.Field<decimal>("totrcvamt");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.nosnlotso = row.IsNull("nosnlotso") ? decimal.Zero : row.Field<decimal>("nosnlotso");
         entity.dueoverfl = row.Field<bool>("dueoverfl");
         entity.openinit = row.IsNull("openinit") ? string.Empty : row.Field<string>("openinit");
         entity.jrnlno2 = row.IsNull("jrnlno2") ? 0 : row.Field<int>("jrnlno2");
         entity.nounappr = row.IsNull("nounappr") ? 0 : row.Field<int>("nounappr");
         entity.pickedby = row.IsNull("pickedby") ? string.Empty : row.Field<string>("pickedby");
         entity.pkgid = row.IsNull("pkgid") ? string.Empty : row.Field<string>("pkgid");
         entity.wtauth = row.IsNull("wtauth") ? 0 : row.Field<int>("wtauth");
         entity.addonamt1 = row.IsNull("addonamt1") ? decimal.Zero : row.Field<decimal>("addonamt1");
         entity.addonamt2 = row.IsNull("addonamt2") ? decimal.Zero : row.Field<decimal>("addonamt2");
         entity.addontype1 = row.IsNull("addontype1") ? string.Empty : row.Field<string>("addontype1");
         entity.addontype2 = row.IsNull("addontype2") ? string.Empty : row.Field<string>("addontype2");
         entity.rcvoperinit = row.IsNull("rcvoperinit") ? string.Empty : row.Field<string>("rcvoperinit");
         entity.jrnlno3 = row.IsNull("jrnlno3") ? 0 : row.Field<int>("jrnlno3");
         entity.reqshipdt = row.Field<DateTime?>("reqshipdt");
         entity.orderaltsuf = row.IsNull("orderaltsuf") ? 0 : row.Field<int>("orderaltsuf");
         entity.nocatwghti = row.IsNull("nocatwghti") ? 0 : row.Field<int>("nocatwghti");
         entity.nocatwghto = row.IsNull("nocatwghto") ? 0 : row.Field<int>("nocatwghto");
         entity.laststagecd = row.IsNull("laststagecd") ? 0 : row.Field<int>("laststagecd");
         entity.noerrs = row.IsNull("noerrs") ? 0 : row.Field<int>("noerrs");
         entity.pickcnt = row.IsNull("pickcnt") ? 0 : row.Field<int>("pickcnt");
         entity.addonnet1 = row.IsNull("addonnet1") ? decimal.Zero : row.Field<decimal>("addonnet1");
         entity.addonnet2 = row.IsNull("addonnet2") ? decimal.Zero : row.Field<decimal>("addonnet2");
         entity.langcd = row.IsNull("langcd") ? string.Empty : row.Field<string>("langcd");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.nopackages = row.IsNull("nopackages") ? 0 : row.Field<int>("nopackages");
         entity.addondist1 = row.IsNull("addondist1") ? decimal.Zero : row.Field<decimal>("addondist1");
         entity.addondist2 = row.IsNull("addondist2") ? decimal.Zero : row.Field<decimal>("addondist2");
         entity.actfreight = row.IsNull("actfreight") ? decimal.Zero : row.Field<decimal>("actfreight");
         entity.shippingpt = row.IsNull("shippingpt") ? string.Empty : row.Field<string>("shippingpt");
         entity.zone = row.IsNull("zone") ? string.Empty : row.Field<string>("zone");
         entity.divno = row.IsNull("divno") ? 0 : row.Field<int>("divno");
         entity.rushfl = row.Field<bool>("rushfl");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.drexpfl = row.Field<bool>("drexpfl");
         entity.fmcurrencyty = row.IsNull("fmcurrencyty") ? string.Empty : row.Field<string>("fmcurrencyty");
         entity.tocurrencyty = row.IsNull("tocurrencyty") ? string.Empty : row.Field<string>("tocurrencyty");
         entity.toinvexrate = row.IsNull("toinvexrate") ? decimal.Zero : row.Field<decimal>("toinvexrate");
         entity.fmexpexrate = row.IsNull("fmexpexrate") ? decimal.Zero : row.Field<decimal>("fmexpexrate");
         entity.toexpexrate = row.IsNull("toexpexrate") ? decimal.Zero : row.Field<decimal>("toexpexrate");
         entity.fmcapexrate = row.IsNull("fmcapexrate") ? decimal.Zero : row.Field<decimal>("fmcapexrate");
         entity.tocapexrate = row.IsNull("tocapexrate") ? decimal.Zero : row.Field<decimal>("tocapexrate");
         entity.shiptoaddr3 = row.IsNull("shiptoaddr3") ? string.Empty : row.Field<string>("shiptoaddr3");
         entity.user10 = row.IsNull("user10") ? string.Empty : row.Field<string>("user10");
         entity.user11 = row.IsNull("user11") ? string.Empty : row.Field<string>("user11");
         entity.user12 = row.IsNull("user12") ? string.Empty : row.Field<string>("user12");
         entity.user13 = row.IsNull("user13") ? string.Empty : row.Field<string>("user13");
         entity.user14 = row.IsNull("user14") ? string.Empty : row.Field<string>("user14");
         entity.user15 = row.IsNull("user15") ? string.Empty : row.Field<string>("user15");
         entity.user16 = row.IsNull("user16") ? string.Empty : row.Field<string>("user16");
         entity.user17 = row.IsNull("user17") ? string.Empty : row.Field<string>("user17");
         entity.user18 = row.IsNull("user18") ? string.Empty : row.Field<string>("user18");
         entity.user19 = row.IsNull("user19") ? string.Empty : row.Field<string>("user19");
         entity.user20 = row.IsNull("user20") ? string.Empty : row.Field<string>("user20");
         entity.user21 = row.IsNull("user21") ? string.Empty : row.Field<string>("user21");
         entity.user22 = row.IsNull("user22") ? string.Empty : row.Field<string>("user22");
         entity.user23 = row.IsNull("user23") ? string.Empty : row.Field<string>("user23");
         entity.user24 = row.IsNull("user24") ? string.Empty : row.Field<string>("user24");
         entity.esbshipmentfl = row.Field<bool>("esbshipmentfl");
         entity.esbasnfl = row.Field<bool>("esbasnfl");
         entity.autoaltwhsecd = row.IsNull("autoaltwhsecd") ? string.Empty : row.Field<string>("autoaltwhsecd");
         entity.autoaltordno = row.IsNull("autoaltordno") ? 0 : row.Field<int>("autoaltordno");
         entity.autoaltordsuf = row.IsNull("autoaltordsuf") ? 0 : row.Field<int>("autoaltordsuf");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.countrycd = row.IsNull("countrycd") ? string.Empty : row.Field<string>("countrycd");
         entity.extshipinstr = row.IsNull("extshipinstr") ? string.Empty : row.Field<string>("extshipinstr");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.markupaddonfl = row.Field<bool>("markupaddonfl");
         entity.reasoncode = row.IsNull("reasoncode") ? string.Empty : row.Field<string>("reasoncode");
         entity.lspinvregstatus = row.IsNull("lspinvregstatus") ? string.Empty : row.Field<string>("lspinvregstatus");
         entity.lspuuid = row.IsNull("lspuuid") ? string.Empty : row.Field<string>("lspuuid");
         entity.lspinvregstatdttmz = row.Field<DateTime?>("lspinvregstatdttmz");
         entity.lspidentifier1 = row.IsNull("lspidentifier1") ? string.Empty : row.Field<string>("lspidentifier1");
         entity.lspidentifier2 = row.IsNull("lspidentifier2") ? string.Empty : row.Field<string>("lspidentifier2");
         entity.rowID = row.Field<byte[]>("wtehRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromWtehBase(ref DataRow row, WtehBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("wtno", entity.wtno);
         row.SetField("wtsuf", entity.wtsuf);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("shiptonm", entity.shiptonm);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("orderaltno", entity.orderaltno);
         row.SetField("transtype", entity.transtype);
         row.SetField("shiptost", entity.shiptost);
         row.SetField("shiptozip", entity.shiptozip);
         row.SetField("shipfmwhse", entity.shipfmwhse);
         row.SetField("shipinstr", entity.shipinstr);
         row.SetField("refer", entity.refer);
         row.SetField("shipviaty", entity.shipviaty);
         row.SetField("shipdt", entity.shipdt);
         row.SetField("immedwtfl", entity.immedwtfl);
         row.SetField("fminvexrate", entity.fminvexrate);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("orderdt", entity.orderdt);
         row.SetField("printeddt", entity.printeddt);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("receiptdt", entity.receiptdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("ototqtyshp", entity.ototqtyshp);
         row.SetField("shiptoaddr1", entity.shiptoaddr1);
         row.SetField("shiptoaddr2", entity.shiptoaddr2);
         row.SetField("totqtyact", entity.totqtyact);
         row.SetField("shiptocity", entity.shiptocity);
         row.SetField("nolineitem", entity.nolineitem);
         row.SetField("drdeltm", entity.drdeltm);
         row.SetField("createdby", entity.createdby);
         row.SetField("totlineamt", entity.totlineamt);
         row.SetField("wletsetno", entity.wletsetno);
         row.SetField("totweight", entity.totweight);
         row.SetField("bostage", entity.bostage);
         row.SetField("totcubes", entity.totcubes);
         row.SetField("totqtyshp", entity.totqtyshp);
         row.SetField("drdeldt", entity.drdeldt);
         row.SetField("borelfl", entity.borelfl);
         row.SetField("boexistsfl", entity.boexistsfl);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("stagearea", entity.stagearea);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("nosnlotsi", entity.nosnlotsi);
         row.SetField("notimeschg", entity.notimeschg);
         row.SetField("nextlineno", entity.nextlineno);
         row.SetField("linefl", entity.linefl);
         row.SetField("printfl", entity.printfl);
         row.SetField("ignoreltfl", entity.ignoreltfl);
         row.SetField("cono2", entity.cono2);
         row.SetField("totqtyord", entity.totqtyord);
         row.SetField("totqtyrcv", entity.totqtyrcv);
         row.SetField("shiptowhse", entity.shiptowhse);
         row.SetField("totshipamt", entity.totshipamt);
         row.SetField("totordamt", entity.totordamt);
         row.SetField("totrcvamt", entity.totrcvamt);
         row.SetField("duedt", entity.duedt);
         row.SetField("nosnlotso", entity.nosnlotso);
         row.SetField("dueoverfl", entity.dueoverfl);
         row.SetField("openinit", entity.openinit);
         row.SetField("jrnlno2", entity.jrnlno2);
         row.SetField("nounappr", entity.nounappr);
         row.SetField("pickedby", entity.pickedby);
         row.SetField("pkgid", entity.pkgid);
         row.SetField("wtauth", entity.wtauth);
         row.SetField("addonamt1", entity.addonamt1);
         row.SetField("addonamt2", entity.addonamt2);
         row.SetField("addontype1", entity.addontype1);
         row.SetField("addontype2", entity.addontype2);
         row.SetField("rcvoperinit", entity.rcvoperinit);
         row.SetField("jrnlno3", entity.jrnlno3);
         row.SetField("reqshipdt", entity.reqshipdt);
         row.SetField("orderaltsuf", entity.orderaltsuf);
         row.SetField("nocatwghti", entity.nocatwghti);
         row.SetField("nocatwghto", entity.nocatwghto);
         row.SetField("laststagecd", entity.laststagecd);
         row.SetField("noerrs", entity.noerrs);
         row.SetField("pickcnt", entity.pickcnt);
         row.SetField("addonnet1", entity.addonnet1);
         row.SetField("addonnet2", entity.addonnet2);
         row.SetField("langcd", entity.langcd);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("nopackages", entity.nopackages);
         row.SetField("addondist1", entity.addondist1);
         row.SetField("addondist2", entity.addondist2);
         row.SetField("actfreight", entity.actfreight);
         row.SetField("shippingpt", entity.shippingpt);
         row.SetField("zone", entity.zone);
         row.SetField("divno", entity.divno);
         row.SetField("rushfl", entity.rushfl);
         row.SetField("transproc", entity.transproc);
         row.SetField("drexpfl", entity.drexpfl);
         row.SetField("fmcurrencyty", entity.fmcurrencyty);
         row.SetField("tocurrencyty", entity.tocurrencyty);
         row.SetField("toinvexrate", entity.toinvexrate);
         row.SetField("fmexpexrate", entity.fmexpexrate);
         row.SetField("toexpexrate", entity.toexpexrate);
         row.SetField("fmcapexrate", entity.fmcapexrate);
         row.SetField("tocapexrate", entity.tocapexrate);
         row.SetField("shiptoaddr3", entity.shiptoaddr3);
         row.SetField("user10", entity.user10);
         row.SetField("user11", entity.user11);
         row.SetField("user12", entity.user12);
         row.SetField("user13", entity.user13);
         row.SetField("user14", entity.user14);
         row.SetField("user15", entity.user15);
         row.SetField("user16", entity.user16);
         row.SetField("user17", entity.user17);
         row.SetField("user18", entity.user18);
         row.SetField("user19", entity.user19);
         row.SetField("user20", entity.user20);
         row.SetField("user21", entity.user21);
         row.SetField("user22", entity.user22);
         row.SetField("user23", entity.user23);
         row.SetField("user24", entity.user24);
         row.SetField("esbshipmentfl", entity.esbshipmentfl);
         row.SetField("esbasnfl", entity.esbasnfl);
         row.SetField("autoaltwhsecd", entity.autoaltwhsecd);
         row.SetField("autoaltordno", entity.autoaltordno);
         row.SetField("autoaltordsuf", entity.autoaltordsuf);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("countrycd", entity.countrycd);
         row.SetField("extshipinstr", entity.extshipinstr);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("markupaddonfl", entity.markupaddonfl);
         row.SetField("reasoncode", entity.reasoncode);
         row.SetField("lspinvregstatus", entity.lspinvregstatus);
         row.SetField("lspuuid", entity.lspuuid);
         row.SetField("lspinvregstatdttmz", entity.lspinvregstatdttmz);
         row.SetField("lspidentifier1", entity.lspidentifier1);
         row.SetField("lspidentifier2", entity.lspidentifier2);
         row.SetField("wtehRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, WtehBase entity)
      {
         row.SetField("wtno", entity.wtno);
         row.SetField("wtsuf", entity.wtsuf);
         row.SetField("wtehRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	