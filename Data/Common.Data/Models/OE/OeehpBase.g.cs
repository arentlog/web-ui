//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.OE
{
   /// <summary>
   /// This table contains information about shipped packages
   /// </summary>
   
   public partial class OeehpBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      public int cono { get; set; }

      /// <summary>
      /// Order #
      /// </summary>
      public int orderno { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      public int ordersuf { get; set; }

      /// <summary>
      /// Order Type
      /// </summary>
      [StringValidationAttribute]
      public string orderty { get; set; }

      /// <summary>
      /// Package Status
      /// </summary>
      [StringValidationAttribute]
      public string statusty { get; set; }

      /// <summary>
      /// Transaction Type
      /// </summary>
      [StringValidationAttribute]
      public string transty { get; set; }

      /// <summary>
      /// Package #
      /// </summary>
      public int pkgno { get; set; }

      /// <summary>
      /// Tracker #
      /// </summary>
      [StringValidationAttribute]
      public string trackerno { get; set; }

      /// <summary>
      /// Addon Amt
      /// </summary>
      public decimal addonamt { get; set; }

      /// <summary>
      /// Freight Amt
      /// </summary>
      public decimal freightamt { get; set; }

      /// <summary>
      /// Ship Via
      /// </summary>
      [StringValidationAttribute]
      public string shipviaty { get; set; }

      /// <summary>
      /// Printer Name
      /// </summary>
      [StringValidationAttribute]
      public string printernm { get; set; }

      /// <summary>
      /// Last Changed By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// TWL Cartons
      /// </summary>
      [StringValidationAttribute]
      public string cartonlist { get; set; }

      /// <summary>
      /// Order Weight
      /// </summary>
      public decimal actweight { get; set; }

      /// <summary>
      /// Original COD Amount
      /// </summary>
      public decimal orgcodamt { get; set; }

      /// <summary>
      /// COD Charge
      /// </summary>
      public decimal codaddchg { get; set; }

      /// <summary>
      /// COD Amount
      /// </summary>
      public decimal actcodamt { get; set; }

      /// <summary>
      /// Charge Freight
      /// </summary>
      public bool chgfrghtfl { get; set; }

      /// <summary>
      /// Shipped
      /// </summary>
      public bool shippedfl { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Result Message
      /// </summary>
      [StringValidationAttribute]
      public string resultmsg { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Carrier URL
      /// </summary>
      [StringValidationAttribute]
      public string carrierurl { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildOeehpBaseFromRow<T>(DataRow row) where T:OeehpBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.orderty = row.IsNull("orderty") ? string.Empty : row.Field<string>("orderty");
         entity.statusty = row.IsNull("statusty") ? string.Empty : row.Field<string>("statusty");
         entity.transty = row.IsNull("transty") ? string.Empty : row.Field<string>("transty");
         entity.pkgno = row.IsNull("pkgno") ? 0 : row.Field<int>("pkgno");
         entity.trackerno = row.IsNull("trackerno") ? string.Empty : row.Field<string>("trackerno");
         entity.addonamt = row.IsNull("addonamt") ? decimal.Zero : row.Field<decimal>("addonamt");
         entity.freightamt = row.IsNull("freightamt") ? decimal.Zero : row.Field<decimal>("freightamt");
         entity.shipviaty = row.IsNull("shipviaty") ? string.Empty : row.Field<string>("shipviaty");
         entity.printernm = row.IsNull("printernm") ? string.Empty : row.Field<string>("printernm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.cartonlist = row.IsNull("cartonlist") ? string.Empty : row.Field<string>("cartonlist");
         entity.actweight = row.IsNull("actweight") ? decimal.Zero : row.Field<decimal>("actweight");
         entity.orgcodamt = row.IsNull("orgcodamt") ? decimal.Zero : row.Field<decimal>("orgcodamt");
         entity.codaddchg = row.IsNull("codaddchg") ? decimal.Zero : row.Field<decimal>("codaddchg");
         entity.actcodamt = row.IsNull("actcodamt") ? decimal.Zero : row.Field<decimal>("actcodamt");
         entity.chgfrghtfl = row.Field<bool>("chgfrghtfl");
         entity.shippedfl = row.Field<bool>("shippedfl");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.resultmsg = row.IsNull("resultmsg") ? string.Empty : row.Field<string>("resultmsg");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.carrierurl = row.IsNull("carrierurl") ? string.Empty : row.Field<string>("carrierurl");
         entity.rowID = row.Field<byte[]>("oeehpRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOeehpBase(ref DataRow row, OeehpBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("orderty", entity.orderty);
         row.SetField("statusty", entity.statusty);
         row.SetField("transty", entity.transty);
         row.SetField("pkgno", entity.pkgno);
         row.SetField("trackerno", entity.trackerno);
         row.SetField("addonamt", entity.addonamt);
         row.SetField("freightamt", entity.freightamt);
         row.SetField("shipviaty", entity.shipviaty);
         row.SetField("printernm", entity.printernm);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("cartonlist", entity.cartonlist);
         row.SetField("actweight", entity.actweight);
         row.SetField("orgcodamt", entity.orgcodamt);
         row.SetField("codaddchg", entity.codaddchg);
         row.SetField("actcodamt", entity.actcodamt);
         row.SetField("chgfrghtfl", entity.chgfrghtfl);
         row.SetField("shippedfl", entity.shippedfl);
         row.SetField("transproc", entity.transproc);
         row.SetField("resultmsg", entity.resultmsg);
         row.SetField("whse", entity.whse);
         row.SetField("carrierurl", entity.carrierurl);
         row.SetField("oeehpRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, OeehpBase entity)
      {
         row.SetField("oeehpRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	