//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.OE
{
   /// <summary>
   /// Order Entry Header - Special Pricing
   /// </summary>
   
   public partial class OeehsBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Order #
      /// </summary>
      [Key,Order]
      public int orderno { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      [Key,Order]
      public int ordersuf { get; set; }

      /// <summary>
      /// Price Type
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string pricetype { get; set; }

      /// <summary>
      /// Net Amt
      /// </summary>
      public decimal netamt { get; set; }

      /// <summary>
      /// # of Lines
      /// </summary>
      public int nolineitem { get; set; }

      /// <summary>
      /// Other Discount
      /// </summary>
      public decimal specdiscamt { get; set; }

      /// <summary>
      /// Orig Disc
      /// </summary>
      public decimal origdiscamt { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Discount %
      /// </summary>
      public decimal discpct { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Next level
      /// </summary>
      public decimal nextnet { get; set; }

      /// <summary>
      /// Next Discount %
      /// </summary>
      public decimal nextpct { get; set; }

      /// <summary>
      /// Discount Type
      /// </summary>
      public bool disctype { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildOeehsBaseFromRow<T>(DataRow row) where T:OeehsBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.pricetype = row.IsNull("pricetype") ? string.Empty : row.Field<string>("pricetype");
         entity.netamt = row.IsNull("netamt") ? decimal.Zero : row.Field<decimal>("netamt");
         entity.nolineitem = row.IsNull("nolineitem") ? 0 : row.Field<int>("nolineitem");
         entity.specdiscamt = row.IsNull("specdiscamt") ? decimal.Zero : row.Field<decimal>("specdiscamt");
         entity.origdiscamt = row.IsNull("origdiscamt") ? decimal.Zero : row.Field<decimal>("origdiscamt");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.discpct = row.IsNull("discpct") ? decimal.Zero : row.Field<decimal>("discpct");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.nextnet = row.IsNull("nextnet") ? decimal.Zero : row.Field<decimal>("nextnet");
         entity.nextpct = row.IsNull("nextpct") ? decimal.Zero : row.Field<decimal>("nextpct");
         entity.disctype = row.Field<bool>("disctype");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("oeehsRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOeehsBase(ref DataRow row, OeehsBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("pricetype", entity.pricetype);
         row.SetField("netamt", entity.netamt);
         row.SetField("nolineitem", entity.nolineitem);
         row.SetField("specdiscamt", entity.specdiscamt);
         row.SetField("origdiscamt", entity.origdiscamt);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("discpct", entity.discpct);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("nextnet", entity.nextnet);
         row.SetField("nextpct", entity.nextpct);
         row.SetField("disctype", entity.disctype);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("oeehsRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, OeehsBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("pricetype", entity.pricetype);
         row.SetField("oeehsRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	