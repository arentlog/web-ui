//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.OE
{
   /// <summary>
   /// Operator Inquiries
   /// </summary>
   
   public partial class OeaiBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Operator
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string oper2 { get; set; }

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Procedure
      /// </summary>
      [StringValidationAttribute]
      public string currproc1 { get; set; }
      [StringValidationAttribute]
      public string currproc2 { get; set; }
      [StringValidationAttribute]
      public string currproc3 { get; set; }
      [StringValidationAttribute]
      public string currproc4 { get; set; }
      [StringValidationAttribute]
      public string currproc5 { get; set; }
      [StringValidationAttribute]
      public string currproc6 { get; set; }
      [StringValidationAttribute]
      public string currproc7 { get; set; }
      [StringValidationAttribute]
      public string currproc8 { get; set; }
      [StringValidationAttribute]
      public string currproc9 { get; set; }
      [StringValidationAttribute]
      public string currproc10 { get; set; }
      [StringValidationAttribute]
      public string currproc11 { get; set; }
      [StringValidationAttribute]
      public string currproc12 { get; set; }
      [StringValidationAttribute]
      public string currproc13 { get; set; }
      [StringValidationAttribute]
      public string currproc14 { get; set; }
      [StringValidationAttribute]
      public string currproc15 { get; set; }
      [StringValidationAttribute]
      public string currproc16 { get; set; }
      [StringValidationAttribute]
      public string currproc17 { get; set; }
      [StringValidationAttribute]
      public string currproc18 { get; set; }
      [StringValidationAttribute]
      public string currproc19 { get; set; }
      [StringValidationAttribute]
      public string currproc20 { get; set; }

      /// <summary>
      /// Trans Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Trans Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Operator Initials
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildOeaiBaseFromRow<T>(DataRow row) where T:OeaiBase, new()
      {
         T entity = new T();
         entity.oper2 = row.IsNull("oper2") ? string.Empty : row.Field<string>("oper2");
         entity.currproc1 = row.IsNull("currproc1") ? string.Empty : row.Field<string>("currproc1");
         entity.currproc2 = row.IsNull("currproc2") ? string.Empty : row.Field<string>("currproc2");
         entity.currproc3 = row.IsNull("currproc3") ? string.Empty : row.Field<string>("currproc3");
         entity.currproc4 = row.IsNull("currproc4") ? string.Empty : row.Field<string>("currproc4");
         entity.currproc5 = row.IsNull("currproc5") ? string.Empty : row.Field<string>("currproc5");
         entity.currproc6 = row.IsNull("currproc6") ? string.Empty : row.Field<string>("currproc6");
         entity.currproc7 = row.IsNull("currproc7") ? string.Empty : row.Field<string>("currproc7");
         entity.currproc8 = row.IsNull("currproc8") ? string.Empty : row.Field<string>("currproc8");
         entity.currproc9 = row.IsNull("currproc9") ? string.Empty : row.Field<string>("currproc9");
         entity.currproc10 = row.IsNull("currproc10") ? string.Empty : row.Field<string>("currproc10");
         entity.currproc11 = row.IsNull("currproc11") ? string.Empty : row.Field<string>("currproc11");
         entity.currproc12 = row.IsNull("currproc12") ? string.Empty : row.Field<string>("currproc12");
         entity.currproc13 = row.IsNull("currproc13") ? string.Empty : row.Field<string>("currproc13");
         entity.currproc14 = row.IsNull("currproc14") ? string.Empty : row.Field<string>("currproc14");
         entity.currproc15 = row.IsNull("currproc15") ? string.Empty : row.Field<string>("currproc15");
         entity.currproc16 = row.IsNull("currproc16") ? string.Empty : row.Field<string>("currproc16");
         entity.currproc17 = row.IsNull("currproc17") ? string.Empty : row.Field<string>("currproc17");
         entity.currproc18 = row.IsNull("currproc18") ? string.Empty : row.Field<string>("currproc18");
         entity.currproc19 = row.IsNull("currproc19") ? string.Empty : row.Field<string>("currproc19");
         entity.currproc20 = row.IsNull("currproc20") ? string.Empty : row.Field<string>("currproc20");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("oeaiRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOeaiBase(ref DataRow row, OeaiBase entity)
      {
         row.SetField("oper2", entity.oper2);
         row.SetField("currproc1", entity.currproc1);
         row.SetField("currproc2", entity.currproc2);
         row.SetField("currproc3", entity.currproc3);
         row.SetField("currproc4", entity.currproc4);
         row.SetField("currproc5", entity.currproc5);
         row.SetField("currproc6", entity.currproc6);
         row.SetField("currproc7", entity.currproc7);
         row.SetField("currproc8", entity.currproc8);
         row.SetField("currproc9", entity.currproc9);
         row.SetField("currproc10", entity.currproc10);
         row.SetField("currproc11", entity.currproc11);
         row.SetField("currproc12", entity.currproc12);
         row.SetField("currproc13", entity.currproc13);
         row.SetField("currproc14", entity.currproc14);
         row.SetField("currproc15", entity.currproc15);
         row.SetField("currproc16", entity.currproc16);
         row.SetField("currproc17", entity.currproc17);
         row.SetField("currproc18", entity.currproc18);
         row.SetField("currproc19", entity.currproc19);
         row.SetField("currproc20", entity.currproc20);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("cono", entity.cono);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("oeaiRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, OeaiBase entity)
      {
         row.SetField("oper2", entity.oper2);
         row.SetField("cono", entity.cono);
         row.SetField("oeaiRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	