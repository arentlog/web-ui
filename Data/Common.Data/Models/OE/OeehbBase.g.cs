//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.OE
{
   /// <summary>
   /// OE Batch Header
   /// </summary>
   
   public partial class OeehbBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Batch
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string batchnm { get; set; }

      /// <summary>
      /// Seq #
      /// </summary>
      [Key,Order]
      public int seqno { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [StringValidationAttribute]
      public string transtype { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      public decimal custno { get; set; }

      /// <summary>
      /// Ship To
      /// </summary>
      [StringValidationAttribute]
      public string shipto { get; set; }

      /// <summary>
      /// PO
      /// </summary>
      [StringValidationAttribute]
      public string custpo { get; set; }

      /// <summary>
      /// Ship To:
      /// </summary>
      [StringValidationAttribute]
      public string shiptonm { get; set; }

      /// <summary>
      /// shiptost
      /// </summary>
      [StringValidationAttribute]
      public string shiptost { get; set; }

      /// <summary>
      /// shiptozip
      /// </summary>
      [StringValidationAttribute]
      public string shiptozip { get; set; }

      /// <summary>
      /// Default Whse
      /// </summary>
      [StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Instructions
      /// </summary>
      [StringValidationAttribute]
      public string shipinstr { get; set; }

      /// <summary>
      /// Ref
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Ship
      /// </summary>
      [StringValidationAttribute]
      public string shipviaty { get; set; }

      /// <summary>
      /// Placed By
      /// </summary>
      [StringValidationAttribute]
      public string placedby { get; set; }

      /// <summary>
      /// Req Ship
      /// </summary>
      public DateTime? reqshipdt { get; set; }

      /// <summary>
      /// Taken By
      /// </summary>
      [StringValidationAttribute]
      public string takenby { get; set; }

      /// <summary>
      /// Disposition
      /// </summary>
      [StringValidationAttribute]
      public string orderdisp { get; set; }

      /// <summary>
      /// B/O
      /// </summary>
      public bool bofl { get; set; }

      /// <summary>
      /// Subs
      /// </summary>
      public bool subfl { get; set; }

      /// <summary>
      /// Invoice#
      /// </summary>
      public int invno { get; set; }

      /// <summary>
      /// invsuf
      /// </summary>
      public int invsuf { get; set; }

      /// <summary>
      /// Stg
      /// </summary>
      public int stagecd { get; set; }

      /// <summary>
      /// Appr
      /// </summary>
      [StringValidationAttribute]
      public string approvty { get; set; }

      /// <summary>
      /// Freight Out
      /// </summary>
      public bool outbndfrtfl { get; set; }

      /// <summary>
      /// Freight In
      /// </summary>
      public bool inbndfrtfl { get; set; }

      /// <summary>
      /// Terms
      /// </summary>
      [StringValidationAttribute]
      public string termstype { get; set; }

      /// <summary>
      /// Cancel
      /// </summary>
      public DateTime? canceldt { get; set; }

      /// <summary>
      /// Bill
      /// </summary>
      public DateTime? billdt { get; set; }

      /// <summary>
      /// Taxing State
      /// </summary>
      [StringValidationAttribute]
      public string statecd { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Entered
      /// </summary>
      public DateTime? enterdt { get; set; }

      /// <summary>
      /// BP Quote #
      /// </summary>
      [StringValidationAttribute]
      public string bpquoteno { get; set; }

      /// <summary>
      /// Restrict Changes
      /// </summary>
      [StringValidationAttribute]
      public string restrictty { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// sourcepros
      /// </summary>
      [StringValidationAttribute]
      public string sourcepros { get; set; }

      /// <summary>
      /// Country
      /// </summary>
      [StringValidationAttribute]
      public string countrycd { get; set; }

      /// <summary>
      /// Ship
      /// </summary>
      [StringValidationAttribute]
      public string shiptoaddr1 { get; set; }
      [StringValidationAttribute]
      public string shiptoaddr2 { get; set; }

      /// <summary>
      /// Tax Override
      /// </summary>
      [StringValidationAttribute]
      public string taxovercd { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string shiptocity { get; set; }

      /// <summary>
      /// Non Tax Reason
      /// </summary>
      [StringValidationAttribute]
      public string nontaxtype { get; set; }

      /// <summary>
      /// Addon Amt
      /// </summary>
      public decimal addonamt1 { get; set; }
      public decimal addonamt2 { get; set; }
      public decimal addonamt3 { get; set; }
      public decimal addonamt4 { get; set; }

      /// <summary>
      /// Addon Type
      /// </summary>
      public bool addontype1 { get; set; }
      public bool addontype2 { get; set; }
      public bool addontype3 { get; set; }
      public bool addontype4 { get; set; }

      /// <summary>
      /// Po Issue Dt
      /// </summary>
      public DateTime? poissdt { get; set; }

      /// <summary>
      /// Addons
      /// </summary>
      public int addonno1 { get; set; }
      public int addonno2 { get; set; }
      public int addonno3 { get; set; }
      public int addonno4 { get; set; }

      /// <summary>
      /// Use STEP
      /// </summary>
      public bool usestepfl { get; set; }

      /// <summary>
      /// Order
      /// </summary>
      public decimal totinvamt { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// Line Items
      /// </summary>
      public decimal totlineamt { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Order Discount
      /// </summary>
      public decimal wodiscamt { get; set; }

      /// <summary>
      /// Order Disc Type
      /// </summary>
      public bool wodisctype { get; set; }

      /// <summary>
      /// Inside Salesrep
      /// </summary>
      [StringValidationAttribute]
      public string slsrepin { get; set; }

      /// <summary>
      /// Outside Salesrep
      /// </summary>
      [StringValidationAttribute]
      public string slsrepout { get; set; }

      /// <summary>
      /// Locality
      /// </summary>
      [StringValidationAttribute]
      public string taxauth { get; set; }

      /// <summary>
      /// Downpayment
      /// </summary>
      public decimal dwnpmtamt { get; set; }

      /// <summary>
      /// Pay Amount
      /// </summary>
      public decimal payamt1 { get; set; }
      public decimal payamt2 { get; set; }
      public decimal payamt3 { get; set; }

      /// <summary>
      /// WO Disc Override
      /// </summary>
      public bool wodiscoverfl { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Down Payment Type
      /// </summary>
      public bool dwnpmttype { get; set; }

      /// <summary>
      /// Tax Sale Amount
      /// </summary>
      public decimal taxsaleamt1 { get; set; }
      public decimal taxsaleamt2 { get; set; }
      public decimal taxsaleamt3 { get; set; }
      public decimal taxsaleamt4 { get; set; }
      public decimal taxsaleamt5 { get; set; }

      /// <summary>
      /// Taxable
      /// </summary>
      public bool taxablefl { get; set; }

      /// <summary>
      /// COD
      /// </summary>
      public bool codfl { get; set; }

      /// <summary>
      /// Credit Memo Reason
      /// </summary>
      [StringValidationAttribute]
      public string crreasonty { get; set; }

      /// <summary>
      /// WO Disc%
      /// </summary>
      public decimal wodiscpct { get; set; }

      /// <summary>
      /// DATC
      /// </summary>
      public bool datcoverfl { get; set; }

      /// <summary>
      /// Other Discount
      /// </summary>
      public decimal specdiscamt { get; set; }

      /// <summary>
      /// Credit Override
      /// </summary>
      public bool credoverfl { get; set; }

      /// <summary>
      /// Job #
      /// </summary>
      [StringValidationAttribute]
      public string jobno { get; set; }

      /// <summary>
      /// Price Level
      /// </summary>
      public int pricecd { get; set; }

      /// <summary>
      /// Tax Amt
      /// </summary>
      public decimal taxamt1 { get; set; }
      public decimal taxamt2 { get; set; }
      public decimal taxamt3 { get; set; }
      public decimal taxamt4 { get; set; }

      /// <summary>
      /// Division #
      /// </summary>
      public int divno { get; set; }

      /// <summary>
      /// Addon Override
      /// </summary>
      public bool addoverfl1 { get; set; }
      public bool addoverfl2 { get; set; }
      public bool addoverfl3 { get; set; }
      public bool addoverfl4 { get; set; }

      /// <summary>
      /// Tax Group
      /// </summary>
      public int addtaxgroup1 { get; set; }
      public int addtaxgroup2 { get; set; }
      public int addtaxgroup3 { get; set; }
      public int addtaxgroup4 { get; set; }

      /// <summary>
      /// Language Code
      /// </summary>
      [StringValidationAttribute]
      public string langcd { get; set; }

      /// <summary>
      /// GST Taxable Amount
      /// </summary>
      public decimal gsttaxable { get; set; }

      /// <summary>
      /// G.S.T. Type
      /// </summary>
      [StringValidationAttribute]
      public string gsttype { get; set; }

      /// <summary>
      /// Tax Override
      /// </summary>
      public bool taxoverfl { get; set; }

      /// <summary>
      /// Route/Day/Stop
      /// </summary>
      [StringValidationAttribute]
      public string route { get; set; }

      /// <summary>
      /// Enter Time
      /// </summary>
      [StringValidationAttribute]
      public string entertm { get; set; }

      /// <summary>
      /// Shipped
      /// </summary>
      public DateTime? shipdt { get; set; }

      /// <summary>
      /// Ship Time
      /// </summary>
      [StringValidationAttribute]
      public string shiptm { get; set; }

      /// <summary>
      /// Promised
      /// </summary>
      public DateTime? promisedt { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Hold Order
      /// </summary>
      public bool holdfl { get; set; }

      /// <summary>
      /// Dex Flag
      /// </summary>
      public bool dexfl { get; set; }

      /// <summary>
      /// Order #
      /// </summary>
      public int orderno { get; set; }

      /// <summary>
      /// P.S.T. License
      /// </summary>
      [StringValidationAttribute]
      public string pstlicenseno { get; set; }

      /// <summary>
      /// Total DATC Cost
      /// </summary>
      public decimal totdatccost { get; set; }

      /// <summary>
      /// Core Charge
      /// </summary>
      public decimal totcorechg { get; set; }

      /// <summary>
      /// Total Return for CS
      /// </summary>
      public decimal totlineret { get; set; }

      /// <summary>
      /// Restock Charge
      /// </summary>
      public decimal totrestkamt { get; set; }

      /// <summary>
      /// In Process
      /// </summary>
      public bool inprocessfl { get; set; }

      /// <summary>
      /// Geo Code
      /// </summary>
      public int geocd { get; set; }

      /// <summary>
      /// Check #
      /// </summary>
      public decimal checkno { get; set; }

      /// <summary>
      /// Tax Default
      /// </summary>
      [StringValidationAttribute]
      public string taxdefltty { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Authorization
      /// </summary>
      public int mediaauth1 { get; set; }
      public int mediaauth2 { get; set; }
      public int mediaauth3 { get; set; }

      /// <summary>
      /// Payment Number
      /// </summary>
      [StringValidationAttribute]
      public string media1 { get; set; }
      [StringValidationAttribute]
      public string media2 { get; set; }
      [StringValidationAttribute]
      public string media3 { get; set; }

      /// <summary>
      /// Payment Type
      /// </summary>
      public int mediacd1 { get; set; }
      public int mediacd2 { get; set; }
      public int mediacd3 { get; set; }

      /// <summary>
      /// Bank #
      /// </summary>
      public int bankno { get; set; }

      /// <summary>
      /// PreAuthorization
      /// </summary>
      [StringValidationAttribute]
      public string charpreauth { get; set; }

      /// <summary>
      /// Authorization
      /// </summary>
      [StringValidationAttribute]
      public string charmediaauth { get; set; }

      /// <summary>
      /// PreAuthorization #
      /// </summary>
      public int preauthno1 { get; set; }
      public int preauthno2 { get; set; }
      public int preauthno3 { get; set; }

      /// <summary>
      /// Address Verification
      /// </summary>
      [StringValidationAttribute]
      public string avadd1 { get; set; }
      [StringValidationAttribute]
      public string avadd2 { get; set; }
      [StringValidationAttribute]
      public string avadd3 { get; set; }

      /// <summary>
      /// Address Verification Zip
      /// </summary>
      [StringValidationAttribute]
      public string avzip1 { get; set; }
      [StringValidationAttribute]
      public string avzip2 { get; set; }
      [StringValidationAttribute]
      public string avzip3 { get; set; }

      /// <summary>
      /// CPC Destination Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string destzip1 { get; set; }
      [StringValidationAttribute]
      public string destzip2 { get; set; }
      [StringValidationAttribute]
      public string destzip3 { get; set; }

      /// <summary>
      /// CPC Card ID
      /// </summary>
      public int cardid1 { get; set; }
      public int cardid2 { get; set; }
      public int cardid3 { get; set; }

      /// <summary>
      /// ICVerify CMC
      /// </summary>
      [StringValidationAttribute]
      public string cmc1 { get; set; }
      [StringValidationAttribute]
      public string cmc2 { get; set; }
      [StringValidationAttribute]
      public string cmc3 { get; set; }

      /// <summary>
      /// ICVerify CMM
      /// </summary>
      [StringValidationAttribute]
      public string cmm1 { get; set; }
      [StringValidationAttribute]
      public string cmm2 { get; set; }
      [StringValidationAttribute]
      public string cmm3 { get; set; }

      /// <summary>
      /// Expiration Date
      /// </summary>
      [StringValidationAttribute]
      public string expdt1 { get; set; }
      [StringValidationAttribute]
      public string expdt2 { get; set; }
      [StringValidationAttribute]
      public string expdt3 { get; set; }

      /// <summary>
      /// Ship
      /// </summary>
      [StringValidationAttribute]
      public string shiptoaddr3 { get; set; }

      /// <summary>
      /// User 10
      /// </summary>
      [StringValidationAttribute]
      public string user10 { get; set; }

      /// <summary>
      /// User 11
      /// </summary>
      [StringValidationAttribute]
      public string user11 { get; set; }

      /// <summary>
      /// User 12
      /// </summary>
      [StringValidationAttribute]
      public string user12 { get; set; }

      /// <summary>
      /// User 13
      /// </summary>
      [StringValidationAttribute]
      public string user13 { get; set; }

      /// <summary>
      /// User 14
      /// </summary>
      [StringValidationAttribute]
      public string user14 { get; set; }

      /// <summary>
      /// User 15
      /// </summary>
      [StringValidationAttribute]
      public string user15 { get; set; }

      /// <summary>
      /// User 16
      /// </summary>
      [StringValidationAttribute]
      public string user16 { get; set; }

      /// <summary>
      /// User 17
      /// </summary>
      [StringValidationAttribute]
      public string user17 { get; set; }

      /// <summary>
      /// User 18
      /// </summary>
      [StringValidationAttribute]
      public string user18 { get; set; }

      /// <summary>
      /// User 19
      /// </summary>
      [StringValidationAttribute]
      public string user19 { get; set; }

      /// <summary>
      /// User 20
      /// </summary>
      [StringValidationAttribute]
      public string user20 { get; set; }

      /// <summary>
      /// User 21
      /// </summary>
      [StringValidationAttribute]
      public string user21 { get; set; }

      /// <summary>
      /// User 22
      /// </summary>
      [StringValidationAttribute]
      public string user22 { get; set; }

      /// <summary>
      /// User 23
      /// </summary>
      [StringValidationAttribute]
      public string user23 { get; set; }

      /// <summary>
      /// User 24
      /// </summary>
      [StringValidationAttribute]
      public string user24 { get; set; }

      /// <summary>
      /// Order Origin Code
      /// </summary>
      [StringValidationAttribute]
      public string origincd { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.shiptoaddr1 + "," + this.shiptocity + "," + this.shiptost + "," + this.shiptozip + "," + this.countrycd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildOeehbBaseFromRow<T>(DataRow row) where T:OeehbBase, new()
      {
         T entity = new T();
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.custpo = row.IsNull("custpo") ? string.Empty : row.Field<string>("custpo");
         entity.shiptonm = row.IsNull("shiptonm") ? string.Empty : row.Field<string>("shiptonm");
         entity.shiptost = row.IsNull("shiptost") ? string.Empty : row.Field<string>("shiptost");
         entity.shiptozip = row.IsNull("shiptozip") ? string.Empty : row.Field<string>("shiptozip");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.shipinstr = row.IsNull("shipinstr") ? string.Empty : row.Field<string>("shipinstr");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.shipviaty = row.IsNull("shipviaty") ? string.Empty : row.Field<string>("shipviaty");
         entity.placedby = row.IsNull("placedby") ? string.Empty : row.Field<string>("placedby");
         entity.reqshipdt = row.Field<DateTime?>("reqshipdt");
         entity.takenby = row.IsNull("takenby") ? string.Empty : row.Field<string>("takenby");
         entity.orderdisp = row.IsNull("orderdisp") ? string.Empty : row.Field<string>("orderdisp");
         entity.bofl = row.Field<bool>("bofl");
         entity.subfl = row.Field<bool>("subfl");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.stagecd = row.IsNull("stagecd") ? 0 : row.Field<int>("stagecd");
         entity.approvty = row.IsNull("approvty") ? string.Empty : row.Field<string>("approvty");
         entity.outbndfrtfl = row.Field<bool>("outbndfrtfl");
         entity.inbndfrtfl = row.Field<bool>("inbndfrtfl");
         entity.termstype = row.IsNull("termstype") ? string.Empty : row.Field<string>("termstype");
         entity.canceldt = row.Field<DateTime?>("canceldt");
         entity.billdt = row.Field<DateTime?>("billdt");
         entity.statecd = row.IsNull("statecd") ? string.Empty : row.Field<string>("statecd");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.bpquoteno = row.IsNull("bpquoteno") ? string.Empty : row.Field<string>("bpquoteno");
         entity.restrictty = row.IsNull("restrictty") ? string.Empty : row.Field<string>("restrictty");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.sourcepros = row.IsNull("sourcepros") ? string.Empty : row.Field<string>("sourcepros");
         entity.countrycd = row.IsNull("countrycd") ? string.Empty : row.Field<string>("countrycd");
         entity.shiptoaddr1 = row.IsNull("shiptoaddr1") ? string.Empty : row.Field<string>("shiptoaddr1");
         entity.shiptoaddr2 = row.IsNull("shiptoaddr2") ? string.Empty : row.Field<string>("shiptoaddr2");
         entity.taxovercd = row.IsNull("taxovercd") ? string.Empty : row.Field<string>("taxovercd");
         entity.shiptocity = row.IsNull("shiptocity") ? string.Empty : row.Field<string>("shiptocity");
         entity.nontaxtype = row.IsNull("nontaxtype") ? string.Empty : row.Field<string>("nontaxtype");
         entity.addonamt1 = row.IsNull("addonamt1") ? decimal.Zero : row.Field<decimal>("addonamt1");
         entity.addonamt2 = row.IsNull("addonamt2") ? decimal.Zero : row.Field<decimal>("addonamt2");
         entity.addonamt3 = row.IsNull("addonamt3") ? decimal.Zero : row.Field<decimal>("addonamt3");
         entity.addonamt4 = row.IsNull("addonamt4") ? decimal.Zero : row.Field<decimal>("addonamt4");
         entity.addontype1 = row.Field<bool>("addontype1");
         entity.addontype2 = row.Field<bool>("addontype2");
         entity.addontype3 = row.Field<bool>("addontype3");
         entity.addontype4 = row.Field<bool>("addontype4");
         entity.poissdt = row.Field<DateTime?>("poissdt");
         entity.addonno1 = row.IsNull("addonno1") ? 0 : row.Field<int>("addonno1");
         entity.addonno2 = row.IsNull("addonno2") ? 0 : row.Field<int>("addonno2");
         entity.addonno3 = row.IsNull("addonno3") ? 0 : row.Field<int>("addonno3");
         entity.addonno4 = row.IsNull("addonno4") ? 0 : row.Field<int>("addonno4");
         entity.usestepfl = row.Field<bool>("usestepfl");
         entity.totinvamt = row.IsNull("totinvamt") ? decimal.Zero : row.Field<decimal>("totinvamt");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.totlineamt = row.IsNull("totlineamt") ? decimal.Zero : row.Field<decimal>("totlineamt");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.wodiscamt = row.IsNull("wodiscamt") ? decimal.Zero : row.Field<decimal>("wodiscamt");
         entity.wodisctype = row.Field<bool>("wodisctype");
         entity.slsrepin = row.IsNull("slsrepin") ? string.Empty : row.Field<string>("slsrepin");
         entity.slsrepout = row.IsNull("slsrepout") ? string.Empty : row.Field<string>("slsrepout");
         entity.taxauth = row.IsNull("taxauth") ? string.Empty : row.Field<string>("taxauth");
         entity.dwnpmtamt = row.IsNull("dwnpmtamt") ? decimal.Zero : row.Field<decimal>("dwnpmtamt");
         entity.payamt1 = row.IsNull("payamt1") ? decimal.Zero : row.Field<decimal>("payamt1");
         entity.payamt2 = row.IsNull("payamt2") ? decimal.Zero : row.Field<decimal>("payamt2");
         entity.payamt3 = row.IsNull("payamt3") ? decimal.Zero : row.Field<decimal>("payamt3");
         entity.wodiscoverfl = row.Field<bool>("wodiscoverfl");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.dwnpmttype = row.Field<bool>("dwnpmttype");
         entity.taxsaleamt1 = row.IsNull("taxsaleamt1") ? decimal.Zero : row.Field<decimal>("taxsaleamt1");
         entity.taxsaleamt2 = row.IsNull("taxsaleamt2") ? decimal.Zero : row.Field<decimal>("taxsaleamt2");
         entity.taxsaleamt3 = row.IsNull("taxsaleamt3") ? decimal.Zero : row.Field<decimal>("taxsaleamt3");
         entity.taxsaleamt4 = row.IsNull("taxsaleamt4") ? decimal.Zero : row.Field<decimal>("taxsaleamt4");
         entity.taxsaleamt5 = row.IsNull("taxsaleamt5") ? decimal.Zero : row.Field<decimal>("taxsaleamt5");
         entity.taxablefl = row.Field<bool>("taxablefl");
         entity.codfl = row.Field<bool>("codfl");
         entity.crreasonty = row.IsNull("crreasonty") ? string.Empty : row.Field<string>("crreasonty");
         entity.wodiscpct = row.IsNull("wodiscpct") ? decimal.Zero : row.Field<decimal>("wodiscpct");
         entity.datcoverfl = row.Field<bool>("datcoverfl");
         entity.specdiscamt = row.IsNull("specdiscamt") ? decimal.Zero : row.Field<decimal>("specdiscamt");
         entity.credoverfl = row.Field<bool>("credoverfl");
         entity.jobno = row.IsNull("jobno") ? string.Empty : row.Field<string>("jobno");
         entity.pricecd = row.IsNull("pricecd") ? 0 : row.Field<int>("pricecd");
         entity.taxamt1 = row.IsNull("taxamt1") ? decimal.Zero : row.Field<decimal>("taxamt1");
         entity.taxamt2 = row.IsNull("taxamt2") ? decimal.Zero : row.Field<decimal>("taxamt2");
         entity.taxamt3 = row.IsNull("taxamt3") ? decimal.Zero : row.Field<decimal>("taxamt3");
         entity.taxamt4 = row.IsNull("taxamt4") ? decimal.Zero : row.Field<decimal>("taxamt4");
         entity.divno = row.IsNull("divno") ? 0 : row.Field<int>("divno");
         entity.addoverfl1 = row.Field<bool>("addoverfl1");
         entity.addoverfl2 = row.Field<bool>("addoverfl2");
         entity.addoverfl3 = row.Field<bool>("addoverfl3");
         entity.addoverfl4 = row.Field<bool>("addoverfl4");
         entity.addtaxgroup1 = row.IsNull("addtaxgroup1") ? 0 : row.Field<int>("addtaxgroup1");
         entity.addtaxgroup2 = row.IsNull("addtaxgroup2") ? 0 : row.Field<int>("addtaxgroup2");
         entity.addtaxgroup3 = row.IsNull("addtaxgroup3") ? 0 : row.Field<int>("addtaxgroup3");
         entity.addtaxgroup4 = row.IsNull("addtaxgroup4") ? 0 : row.Field<int>("addtaxgroup4");
         entity.langcd = row.IsNull("langcd") ? string.Empty : row.Field<string>("langcd");
         entity.gsttaxable = row.IsNull("gsttaxable") ? decimal.Zero : row.Field<decimal>("gsttaxable");
         entity.gsttype = row.IsNull("gsttype") ? string.Empty : row.Field<string>("gsttype");
         entity.batchnm = row.IsNull("batchnm") ? string.Empty : row.Field<string>("batchnm");
         entity.taxoverfl = row.Field<bool>("taxoverfl");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.route = row.IsNull("route") ? string.Empty : row.Field<string>("route");
         entity.entertm = row.IsNull("entertm") ? string.Empty : row.Field<string>("entertm");
         entity.shipdt = row.Field<DateTime?>("shipdt");
         entity.shiptm = row.IsNull("shiptm") ? string.Empty : row.Field<string>("shiptm");
         entity.promisedt = row.Field<DateTime?>("promisedt");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.holdfl = row.Field<bool>("holdfl");
         entity.dexfl = row.Field<bool>("dexfl");
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.pstlicenseno = row.IsNull("pstlicenseno") ? string.Empty : row.Field<string>("pstlicenseno");
         entity.totdatccost = row.IsNull("totdatccost") ? decimal.Zero : row.Field<decimal>("totdatccost");
         entity.totcorechg = row.IsNull("totcorechg") ? decimal.Zero : row.Field<decimal>("totcorechg");
         entity.totlineret = row.IsNull("totlineret") ? decimal.Zero : row.Field<decimal>("totlineret");
         entity.totrestkamt = row.IsNull("totrestkamt") ? decimal.Zero : row.Field<decimal>("totrestkamt");
         entity.inprocessfl = row.Field<bool>("inprocessfl");
         entity.geocd = row.IsNull("geocd") ? 0 : row.Field<int>("geocd");
         entity.checkno = row.IsNull("checkno") ? decimal.Zero : row.Field<decimal>("checkno");
         entity.taxdefltty = row.IsNull("taxdefltty") ? string.Empty : row.Field<string>("taxdefltty");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.mediaauth1 = row.IsNull("mediaauth1") ? 0 : row.Field<int>("mediaauth1");
         entity.mediaauth2 = row.IsNull("mediaauth2") ? 0 : row.Field<int>("mediaauth2");
         entity.mediaauth3 = row.IsNull("mediaauth3") ? 0 : row.Field<int>("mediaauth3");
         entity.media1 = row.IsNull("media1") ? string.Empty : row.Field<string>("media1");
         entity.media2 = row.IsNull("media2") ? string.Empty : row.Field<string>("media2");
         entity.media3 = row.IsNull("media3") ? string.Empty : row.Field<string>("media3");
         entity.mediacd1 = row.IsNull("mediacd1") ? 0 : row.Field<int>("mediacd1");
         entity.mediacd2 = row.IsNull("mediacd2") ? 0 : row.Field<int>("mediacd2");
         entity.mediacd3 = row.IsNull("mediacd3") ? 0 : row.Field<int>("mediacd3");
         entity.bankno = row.IsNull("bankno") ? 0 : row.Field<int>("bankno");
         entity.charpreauth = row.IsNull("charpreauth") ? string.Empty : row.Field<string>("charpreauth");
         entity.charmediaauth = row.IsNull("charmediaauth") ? string.Empty : row.Field<string>("charmediaauth");
         entity.preauthno1 = row.IsNull("preauthno1") ? 0 : row.Field<int>("preauthno1");
         entity.preauthno2 = row.IsNull("preauthno2") ? 0 : row.Field<int>("preauthno2");
         entity.preauthno3 = row.IsNull("preauthno3") ? 0 : row.Field<int>("preauthno3");
         entity.avadd1 = row.IsNull("avadd1") ? string.Empty : row.Field<string>("avadd1");
         entity.avadd2 = row.IsNull("avadd2") ? string.Empty : row.Field<string>("avadd2");
         entity.avadd3 = row.IsNull("avadd3") ? string.Empty : row.Field<string>("avadd3");
         entity.avzip1 = row.IsNull("avzip1") ? string.Empty : row.Field<string>("avzip1");
         entity.avzip2 = row.IsNull("avzip2") ? string.Empty : row.Field<string>("avzip2");
         entity.avzip3 = row.IsNull("avzip3") ? string.Empty : row.Field<string>("avzip3");
         entity.destzip1 = row.IsNull("destzip1") ? string.Empty : row.Field<string>("destzip1");
         entity.destzip2 = row.IsNull("destzip2") ? string.Empty : row.Field<string>("destzip2");
         entity.destzip3 = row.IsNull("destzip3") ? string.Empty : row.Field<string>("destzip3");
         entity.cardid1 = row.IsNull("cardid1") ? 0 : row.Field<int>("cardid1");
         entity.cardid2 = row.IsNull("cardid2") ? 0 : row.Field<int>("cardid2");
         entity.cardid3 = row.IsNull("cardid3") ? 0 : row.Field<int>("cardid3");
         entity.cmc1 = row.IsNull("cmc1") ? string.Empty : row.Field<string>("cmc1");
         entity.cmc2 = row.IsNull("cmc2") ? string.Empty : row.Field<string>("cmc2");
         entity.cmc3 = row.IsNull("cmc3") ? string.Empty : row.Field<string>("cmc3");
         entity.cmm1 = row.IsNull("cmm1") ? string.Empty : row.Field<string>("cmm1");
         entity.cmm2 = row.IsNull("cmm2") ? string.Empty : row.Field<string>("cmm2");
         entity.cmm3 = row.IsNull("cmm3") ? string.Empty : row.Field<string>("cmm3");
         entity.expdt1 = row.IsNull("expdt1") ? string.Empty : row.Field<string>("expdt1");
         entity.expdt2 = row.IsNull("expdt2") ? string.Empty : row.Field<string>("expdt2");
         entity.expdt3 = row.IsNull("expdt3") ? string.Empty : row.Field<string>("expdt3");
         entity.shiptoaddr3 = row.IsNull("shiptoaddr3") ? string.Empty : row.Field<string>("shiptoaddr3");
         entity.user10 = row.IsNull("user10") ? string.Empty : row.Field<string>("user10");
         entity.user11 = row.IsNull("user11") ? string.Empty : row.Field<string>("user11");
         entity.user12 = row.IsNull("user12") ? string.Empty : row.Field<string>("user12");
         entity.user13 = row.IsNull("user13") ? string.Empty : row.Field<string>("user13");
         entity.user14 = row.IsNull("user14") ? string.Empty : row.Field<string>("user14");
         entity.user15 = row.IsNull("user15") ? string.Empty : row.Field<string>("user15");
         entity.user16 = row.IsNull("user16") ? string.Empty : row.Field<string>("user16");
         entity.user17 = row.IsNull("user17") ? string.Empty : row.Field<string>("user17");
         entity.user18 = row.IsNull("user18") ? string.Empty : row.Field<string>("user18");
         entity.user19 = row.IsNull("user19") ? string.Empty : row.Field<string>("user19");
         entity.user20 = row.IsNull("user20") ? string.Empty : row.Field<string>("user20");
         entity.user21 = row.IsNull("user21") ? string.Empty : row.Field<string>("user21");
         entity.user22 = row.IsNull("user22") ? string.Empty : row.Field<string>("user22");
         entity.user23 = row.IsNull("user23") ? string.Empty : row.Field<string>("user23");
         entity.user24 = row.IsNull("user24") ? string.Empty : row.Field<string>("user24");
         entity.origincd = row.IsNull("origincd") ? string.Empty : row.Field<string>("origincd");
         entity.rowID = row.Field<byte[]>("oeehbRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOeehbBase(ref DataRow row, OeehbBase entity)
      {
         row.SetField("transtype", entity.transtype);
         row.SetField("custno", entity.custno);
         row.SetField("shipto", entity.shipto);
         row.SetField("custpo", entity.custpo);
         row.SetField("shiptonm", entity.shiptonm);
         row.SetField("shiptost", entity.shiptost);
         row.SetField("shiptozip", entity.shiptozip);
         row.SetField("whse", entity.whse);
         row.SetField("shipinstr", entity.shipinstr);
         row.SetField("refer", entity.refer);
         row.SetField("shipviaty", entity.shipviaty);
         row.SetField("placedby", entity.placedby);
         row.SetField("reqshipdt", entity.reqshipdt);
         row.SetField("takenby", entity.takenby);
         row.SetField("orderdisp", entity.orderdisp);
         row.SetField("bofl", entity.bofl);
         row.SetField("subfl", entity.subfl);
         row.SetField("cono", entity.cono);
         row.SetField("invno", entity.invno);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("approvty", entity.approvty);
         row.SetField("outbndfrtfl", entity.outbndfrtfl);
         row.SetField("inbndfrtfl", entity.inbndfrtfl);
         row.SetField("termstype", entity.termstype);
         row.SetField("canceldt", entity.canceldt);
         row.SetField("billdt", entity.billdt);
         row.SetField("statecd", entity.statecd);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("bpquoteno", entity.bpquoteno);
         row.SetField("restrictty", entity.restrictty);
         row.SetField("transtm", entity.transtm);
         row.SetField("sourcepros", entity.sourcepros);
         row.SetField("countrycd", entity.countrycd);
         row.SetField("shiptoaddr1", entity.shiptoaddr1);
         row.SetField("shiptoaddr2", entity.shiptoaddr2);
         row.SetField("taxovercd", entity.taxovercd);
         row.SetField("shiptocity", entity.shiptocity);
         row.SetField("nontaxtype", entity.nontaxtype);
         row.SetField("addonamt1", entity.addonamt1);
         row.SetField("addonamt2", entity.addonamt2);
         row.SetField("addonamt3", entity.addonamt3);
         row.SetField("addonamt4", entity.addonamt4);
         row.SetField("addontype1", entity.addontype1);
         row.SetField("addontype2", entity.addontype2);
         row.SetField("addontype3", entity.addontype3);
         row.SetField("addontype4", entity.addontype4);
         row.SetField("poissdt", entity.poissdt);
         row.SetField("addonno1", entity.addonno1);
         row.SetField("addonno2", entity.addonno2);
         row.SetField("addonno3", entity.addonno3);
         row.SetField("addonno4", entity.addonno4);
         row.SetField("usestepfl", entity.usestepfl);
         row.SetField("totinvamt", entity.totinvamt);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("totlineamt", entity.totlineamt);
         row.SetField("user9", entity.user9);
         row.SetField("wodiscamt", entity.wodiscamt);
         row.SetField("wodisctype", entity.wodisctype);
         row.SetField("slsrepin", entity.slsrepin);
         row.SetField("slsrepout", entity.slsrepout);
         row.SetField("taxauth", entity.taxauth);
         row.SetField("dwnpmtamt", entity.dwnpmtamt);
         row.SetField("payamt1", entity.payamt1);
         row.SetField("payamt2", entity.payamt2);
         row.SetField("payamt3", entity.payamt3);
         row.SetField("wodiscoverfl", entity.wodiscoverfl);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("dwnpmttype", entity.dwnpmttype);
         row.SetField("taxsaleamt1", entity.taxsaleamt1);
         row.SetField("taxsaleamt2", entity.taxsaleamt2);
         row.SetField("taxsaleamt3", entity.taxsaleamt3);
         row.SetField("taxsaleamt4", entity.taxsaleamt4);
         row.SetField("taxsaleamt5", entity.taxsaleamt5);
         row.SetField("taxablefl", entity.taxablefl);
         row.SetField("codfl", entity.codfl);
         row.SetField("crreasonty", entity.crreasonty);
         row.SetField("wodiscpct", entity.wodiscpct);
         row.SetField("datcoverfl", entity.datcoverfl);
         row.SetField("specdiscamt", entity.specdiscamt);
         row.SetField("credoverfl", entity.credoverfl);
         row.SetField("jobno", entity.jobno);
         row.SetField("pricecd", entity.pricecd);
         row.SetField("taxamt1", entity.taxamt1);
         row.SetField("taxamt2", entity.taxamt2);
         row.SetField("taxamt3", entity.taxamt3);
         row.SetField("taxamt4", entity.taxamt4);
         row.SetField("divno", entity.divno);
         row.SetField("addoverfl1", entity.addoverfl1);
         row.SetField("addoverfl2", entity.addoverfl2);
         row.SetField("addoverfl3", entity.addoverfl3);
         row.SetField("addoverfl4", entity.addoverfl4);
         row.SetField("addtaxgroup1", entity.addtaxgroup1);
         row.SetField("addtaxgroup2", entity.addtaxgroup2);
         row.SetField("addtaxgroup3", entity.addtaxgroup3);
         row.SetField("addtaxgroup4", entity.addtaxgroup4);
         row.SetField("langcd", entity.langcd);
         row.SetField("gsttaxable", entity.gsttaxable);
         row.SetField("gsttype", entity.gsttype);
         row.SetField("batchnm", entity.batchnm);
         row.SetField("taxoverfl", entity.taxoverfl);
         row.SetField("seqno", entity.seqno);
         row.SetField("route", entity.route);
         row.SetField("entertm", entity.entertm);
         row.SetField("shipdt", entity.shipdt);
         row.SetField("shiptm", entity.shiptm);
         row.SetField("promisedt", entity.promisedt);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("holdfl", entity.holdfl);
         row.SetField("dexfl", entity.dexfl);
         row.SetField("orderno", entity.orderno);
         row.SetField("pstlicenseno", entity.pstlicenseno);
         row.SetField("totdatccost", entity.totdatccost);
         row.SetField("totcorechg", entity.totcorechg);
         row.SetField("totlineret", entity.totlineret);
         row.SetField("totrestkamt", entity.totrestkamt);
         row.SetField("inprocessfl", entity.inprocessfl);
         row.SetField("geocd", entity.geocd);
         row.SetField("checkno", entity.checkno);
         row.SetField("taxdefltty", entity.taxdefltty);
         row.SetField("transproc", entity.transproc);
         row.SetField("mediaauth1", entity.mediaauth1);
         row.SetField("mediaauth2", entity.mediaauth2);
         row.SetField("mediaauth3", entity.mediaauth3);
         row.SetField("media1", entity.media1);
         row.SetField("media2", entity.media2);
         row.SetField("media3", entity.media3);
         row.SetField("mediacd1", entity.mediacd1);
         row.SetField("mediacd2", entity.mediacd2);
         row.SetField("mediacd3", entity.mediacd3);
         row.SetField("bankno", entity.bankno);
         row.SetField("charpreauth", entity.charpreauth);
         row.SetField("charmediaauth", entity.charmediaauth);
         row.SetField("preauthno1", entity.preauthno1);
         row.SetField("preauthno2", entity.preauthno2);
         row.SetField("preauthno3", entity.preauthno3);
         row.SetField("avadd1", entity.avadd1);
         row.SetField("avadd2", entity.avadd2);
         row.SetField("avadd3", entity.avadd3);
         row.SetField("avzip1", entity.avzip1);
         row.SetField("avzip2", entity.avzip2);
         row.SetField("avzip3", entity.avzip3);
         row.SetField("destzip1", entity.destzip1);
         row.SetField("destzip2", entity.destzip2);
         row.SetField("destzip3", entity.destzip3);
         row.SetField("cardid1", entity.cardid1);
         row.SetField("cardid2", entity.cardid2);
         row.SetField("cardid3", entity.cardid3);
         row.SetField("cmc1", entity.cmc1);
         row.SetField("cmc2", entity.cmc2);
         row.SetField("cmc3", entity.cmc3);
         row.SetField("cmm1", entity.cmm1);
         row.SetField("cmm2", entity.cmm2);
         row.SetField("cmm3", entity.cmm3);
         row.SetField("expdt1", entity.expdt1);
         row.SetField("expdt2", entity.expdt2);
         row.SetField("expdt3", entity.expdt3);
         row.SetField("shiptoaddr3", entity.shiptoaddr3);
         row.SetField("user10", entity.user10);
         row.SetField("user11", entity.user11);
         row.SetField("user12", entity.user12);
         row.SetField("user13", entity.user13);
         row.SetField("user14", entity.user14);
         row.SetField("user15", entity.user15);
         row.SetField("user16", entity.user16);
         row.SetField("user17", entity.user17);
         row.SetField("user18", entity.user18);
         row.SetField("user19", entity.user19);
         row.SetField("user20", entity.user20);
         row.SetField("user21", entity.user21);
         row.SetField("user22", entity.user22);
         row.SetField("user23", entity.user23);
         row.SetField("user24", entity.user24);
         row.SetField("origincd", entity.origincd);
         row.SetField("oeehbRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, OeehbBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("batchnm", entity.batchnm);
         row.SetField("seqno", entity.seqno);
         row.SetField("oeehbRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	