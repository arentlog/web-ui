//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.OE
{
   /// <summary>
   /// Order Entry Header
   /// </summary>
   [EntityType("Order Entry Header","oeio.detail","SalesOrder")]
   public partial class OeehBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Order #
      /// </summary>
      [BodID(1,RequiredId.True),DrillbackParam("pk",1),Key,Order]
      public int orderno { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      [BodID(2,RequiredId.True),DrillbackParam("pk2",1),Key,Order]
      public int ordersuf { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      [BodContext(BodPart.AcctEntity,""),BusContext(BusPart.AcctEntity),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [BusContext(BusPart.Descr),StringValidationAttribute]
      public string transtype { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      [ID(6)]
      public decimal custno { get; set; }

      /// <summary>
      /// Ship To
      /// </summary>
      [ID(7),StringValidationAttribute]
      public string shipto { get; set; }

      /// <summary>
      /// PO
      /// </summary>
      [ID(8),StringValidationAttribute]
      public string custpo { get; set; }

      /// <summary>
      /// Ship To:
      /// </summary>
      [StringValidationAttribute]
      public string shiptonm { get; set; }

      /// <summary>
      /// shiptost
      /// </summary>
      [StringValidationAttribute]
      public string shiptost { get; set; }

      /// <summary>
      /// shiptozip
      /// </summary>
      [StringValidationAttribute]
      public string shiptozip { get; set; }

      /// <summary>
      /// Default Whse
      /// </summary>
      [BusContext(BusPart.Location),BodContext(BodPart.Location,""),ID(5),StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Instructions
      /// </summary>
      [StringValidationAttribute]
      public string shipinstr { get; set; }

      /// <summary>
      /// Ref
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Ship
      /// </summary>
      [StringValidationAttribute]
      public string shipviaty { get; set; }

      /// <summary>
      /// Placed By
      /// </summary>
      [StringValidationAttribute]
      public string placedby { get; set; }

      /// <summary>
      /// Req Ship
      /// </summary>
      public DateTime? reqshipdt { get; set; }

      /// <summary>
      /// Taken By
      /// </summary>
      [ID(11),StringValidationAttribute]
      public string takenby { get; set; }

      /// <summary>
      /// Disposition
      /// </summary>
      [StringValidationAttribute]
      public string orderdisp { get; set; }

      /// <summary>
      /// B/O
      /// </summary>
      public bool bofl { get; set; }

      /// <summary>
      /// Subs
      /// </summary>
      public bool subfl { get; set; }

      /// <summary>
      /// Invoice#
      /// </summary>
      public int invno { get; set; }

      /// <summary>
      /// invsuf
      /// </summary>
      public int invsuf { get; set; }

      /// <summary>
      /// Stg
      /// </summary>
      [ID(4)]
      public int stagecd { get; set; }

      /// <summary>
      /// Appr
      /// </summary>
      [StringValidationAttribute]
      public string approvty { get; set; }

      /// <summary>
      /// Freight Out
      /// </summary>
      public bool outbndfrtfl { get; set; }

      /// <summary>
      /// Freight In
      /// </summary>
      public bool inbndfrtfl { get; set; }

      /// <summary>
      /// Terms
      /// </summary>
      [StringValidationAttribute]
      public string termstype { get; set; }

      /// <summary>
      /// Cancel
      /// </summary>
      public DateTime? canceldt { get; set; }

      /// <summary>
      /// Bill
      /// </summary>
      public DateTime? billdt { get; set; }

      /// <summary>
      /// Standing Order Days
      /// </summary>
      public int storddays { get; set; }

      /// <summary>
      /// Taxing State
      /// </summary>
      [StringValidationAttribute]
      public string statecd { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Invoice
      /// </summary>
      public DateTime? invoicedt { get; set; }

      /// <summary>
      /// Paid
      /// </summary>
      public DateTime? paiddt { get; set; }

      /// <summary>
      /// Vend Rebate Ordered
      /// </summary>
      public decimal vendrebord { get; set; }

      /// <summary>
      /// Vend Rebate Amount
      /// </summary>
      public decimal vendrebamt { get; set; }

      /// <summary>
      /// Picked
      /// </summary>
      public DateTime? pickeddt { get; set; }

      /// <summary>
      /// Total Comm Cost
      /// </summary>
      public decimal totcommcost { get; set; }

      /// <summary>
      /// Entered
      /// </summary>
      public DateTime? enterdt { get; set; }

      /// <summary>
      /// Set # 2
      /// </summary>
      public decimal setno2 { get; set; }

      /// <summary>
      /// Direct Route Delivery Time
      /// </summary>
      [StringValidationAttribute]
      public string drdeltm { get; set; }

      /// <summary>
      /// Country
      /// </summary>
      [StringValidationAttribute]
      public string countrycd { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// WLET Set#
      /// </summary>
      [StringValidationAttribute]
      public string wletsetno { get; set; }

      /// <summary>
      /// Tax Override
      /// </summary>
      [StringValidationAttribute]
      public string taxovercd { get; set; }

      /// <summary>
      /// Ship
      /// </summary>
      [StringValidationAttribute]
      public string shiptoaddr1 { get; set; }
      [StringValidationAttribute]
      public string shiptoaddr2 { get; set; }

      /// <summary>
      /// Non Tax Reason
      /// </summary>
      [StringValidationAttribute]
      public string nontaxtype { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string shiptocity { get; set; }

      /// <summary>
      /// BP Quote #
      /// </summary>
      [StringValidationAttribute]
      public string bpquoteno { get; set; }

      /// <summary>
      /// # Rush Ln
      /// </summary>
      public int norushln { get; set; }

      /// <summary>
      /// Advanced Ship Notice Date
      /// </summary>
      public DateTime? asndt { get; set; }

      /// <summary>
      /// # of Lines
      /// </summary>
      public int nolineitem { get; set; }

      /// <summary>
      /// Acknowledge Date
      /// </summary>
      public DateTime? ackdt { get; set; }

      /// <summary>
      /// Addon Amt
      /// </summary>
      public decimal addonamt1 { get; set; }
      public decimal addonamt2 { get; set; }
      public decimal addonamt3 { get; set; }
      public decimal addonamt4 { get; set; }

      /// <summary>
      /// P/O Issue Dt
      /// </summary>
      public DateTime? poissdt { get; set; }

      /// <summary>
      /// addontype1
      /// </summary>
      public bool addontype1 { get; set; }
      public bool addontype2 { get; set; }
      public bool addontype3 { get; set; }
      public bool addontype4 { get; set; }

      /// <summary>
      /// Created Date
      /// </summary>
      public DateTime? createdt { get; set; }

      /// <summary>
      /// Addons
      /// </summary>
      public int addonno1 { get; set; }
      public int addonno2 { get; set; }
      public int addonno3 { get; set; }
      public int addonno4 { get; set; }

      /// <summary>
      /// Use STEP
      /// </summary>
      public bool usestepfl { get; set; }

      /// <summary>
      /// Direct Route Export Flag
      /// </summary>
      public bool drexpfl { get; set; }

      /// <summary>
      /// Order
      /// </summary>
      public decimal totinvamt { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal totweight { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// Cube
      /// </summary>
      public decimal totcubes { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// Qty Shipped
      /// </summary>
      public decimal totqtyshp { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// Qty Ordered
      /// </summary>
      public decimal totqtyord { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// Line Items
      /// </summary>
      public decimal totlineamt { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Order Discount
      /// </summary>
      public decimal wodiscamt { get; set; }

      /// <summary>
      /// Order Disc Type
      /// </summary>
      public bool wodisctype { get; set; }

      /// <summary>
      /// Total Cost
      /// </summary>
      public decimal totcost { get; set; }

      /// <summary>
      /// Inside Salesrep
      /// </summary>
      [ID(9),StringValidationAttribute]
      public string slsrepin { get; set; }

      /// <summary>
      /// Outside Salesrep
      /// </summary>
      [ID(10),StringValidationAttribute]
      public string slsrepout { get; set; }

      /// <summary>
      /// Locality
      /// </summary>
      [StringValidationAttribute]
      public string taxauth { get; set; }

      /// <summary>
      /// Staging Area
      /// </summary>
      [StringValidationAttribute]
      public string stagearea { get; set; }

      /// <summary>
      /// Inside Commission
      /// </summary>
      public decimal totcommin { get; set; }

      /// <summary>
      /// Terms Discount
      /// </summary>
      public decimal termsdiscamt { get; set; }

      /// <summary>
      /// Downpayment
      /// </summary>
      public decimal dwnpmtamt { get; set; }

      /// <summary>
      /// Pay Amount
      /// </summary>
      public decimal payamt1 { get; set; }
      public decimal payamt2 { get; set; }
      public decimal payamt3 { get; set; }

      /// <summary>
      /// Approval Init
      /// </summary>
      [StringValidationAttribute]
      public string apprinit { get; set; }

      /// <summary>
      /// Terms Disc Pct
      /// </summary>
      public decimal termspct { get; set; }

      /// <summary>
      /// Jrnl #
      /// </summary>
      [ID(12)]
      public int jrnlno { get; set; }

      /// <summary>
      /// # SN/Lots
      /// </summary>
      public decimal nosnlots { get; set; }

      /// <summary>
      /// # Times Chg
      /// </summary>
      public int notimeschg { get; set; }

      /// <summary>
      /// Pick Priority
      /// </summary>
      public int pickprno { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      [ID(13)]
      public int setno { get; set; }

      /// <summary>
      /// Standing Order Type
      /// </summary>
      public bool stordty { get; set; }

      /// <summary>
      /// WO Disc Override
      /// </summary>
      public bool wodiscoverfl { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Next Line #
      /// </summary>
      public int nextlineno { get; set; }

      /// <summary>
      /// Down Payment Type
      /// </summary>
      public bool dwnpmttype { get; set; }

      /// <summary>
      /// Lines Altered
      /// </summary>
      public bool linefl { get; set; }

      /// <summary>
      /// Tax Sale Amount
      /// </summary>
      public decimal taxsaleamt1 { get; set; }
      public decimal taxsaleamt3 { get; set; }
      public decimal taxsaleamt4 { get; set; }
      public decimal taxsaleamt5 { get; set; }

      /// <summary>
      /// Taxable
      /// </summary>
      public bool taxablefl { get; set; }

      /// <summary>
      /// COD
      /// </summary>
      public bool codfl { get; set; }

      /// <summary>
      /// Credit Memo Reason
      /// </summary>
      [StringValidationAttribute]
      public string crreasonty { get; set; }

      /// <summary>
      /// Original Order #
      /// </summary>
      public int origorderno { get; set; }

      /// <summary>
      /// Outside Commission
      /// </summary>
      public decimal totcommout { get; set; }

      /// <summary>
      /// Lump Sum Bill
      /// </summary>
      public bool lumpbillfl { get; set; }

      /// <summary>
      /// Lump Bill Amount
      /// </summary>
      public decimal lumpbillamt { get; set; }

      /// <summary>
      /// BO
      /// </summary>
      public bool borelfl { get; set; }

      /// <summary>
      /// Back Order of Release #
      /// </summary>
      public int borelno { get; set; }

      /// <summary>
      /// Lock Prices
      /// </summary>
      public bool lockfl { get; set; }

      /// <summary>
      /// Shipped
      /// </summary>
      public DateTime? shipdt { get; set; }

      /// <summary>
      /// Core Charge
      /// </summary>
      public decimal totcorechg { get; set; }

      /// <summary>
      /// Order Amount
      /// </summary>
      public decimal totordamt { get; set; }

      /// <summary>
      /// Reprint Pick Ticket
      /// </summary>
      public bool printpckfl { get; set; }

      /// <summary>
      /// WO Disc Type
      /// </summary>
      [StringValidationAttribute]
      public string wodeftype { get; set; }

      /// <summary>
      /// WO Disc%
      /// </summary>
      public decimal wodiscpct { get; set; }

      /// <summary>
      /// Lead Time
      /// </summary>
      public int longltdays { get; set; }

      /// <summary>
      /// Arp Vendor #
      /// </summary>
      public decimal arpvendno { get; set; }

      /// <summary>
      /// ARP Whse
      /// </summary>
      [StringValidationAttribute]
      public string arpwhse { get; set; }

      /// <summary>
      /// Total DATC Cost
      /// </summary>
      public decimal totdatccost { get; set; }

      /// <summary>
      /// DATC
      /// </summary>
      public bool datcoverfl { get; set; }

      /// <summary>
      /// BO's Need Totalling
      /// </summary>
      public bool bolinefl { get; set; }

      /// <summary>
      /// Order Qty Total
      /// </summary>
      public decimal totlineord { get; set; }

      /// <summary>
      /// Tot Cost Ord
      /// </summary>
      public decimal totcostord { get; set; }

      /// <summary>
      /// Other Discount
      /// </summary>
      public decimal specdiscamt { get; set; }

      /// <summary>
      /// Total Price
      /// </summary>
      public decimal totprice { get; set; }

      /// <summary>
      /// Credit Override
      /// </summary>
      public bool credoverfl { get; set; }

      /// <summary>
      /// Line Refer
      /// </summary>
      [StringValidationAttribute]
      public string jobno { get; set; }

      /// <summary>
      /// Inv Proc Jrnl
      /// </summary>
      public int jrnlno2 { get; set; }

      /// <summary>
      /// Prospect #
      /// </summary>
      public decimal prosno { get; set; }

      /// <summary>
      /// Proposal #
      /// </summary>
      public decimal proposalno { get; set; }

      /// <summary>
      /// Lost Business Reason
      /// </summary>
      [StringValidationAttribute]
      public string lostbusty { get; set; }

      /// <summary>
      /// Price Level
      /// </summary>
      public int pricecd { get; set; }

      /// <summary>
      /// Total Return for CS
      /// </summary>
      public decimal totlineret { get; set; }

      /// <summary>
      /// Tax Amt
      /// </summary>
      public decimal taxamt1 { get; set; }
      public decimal taxamt2 { get; set; }
      public decimal taxamt3 { get; set; }
      public decimal taxamt4 { get; set; }

      /// <summary>
      /// Update Type
      /// </summary>
      [StringValidationAttribute]
      public string updtype { get; set; }

      /// <summary>
      /// Print Price
      /// </summary>
      public bool pickprtfl { get; set; }

      /// <summary>
      /// Print Lump Prices
      /// </summary>
      public bool lumppricefl { get; set; }

      /// <summary>
      /// BO Exists
      /// </summary>
      public bool boexistsfl { get; set; }

      /// <summary>
      /// Disc Dt
      /// </summary>
      public DateTime? discdt { get; set; }

      /// <summary>
      /// Division #
      /// </summary>
      public int divno { get; set; }

      /// <summary>
      /// Total Qty Returned
      /// </summary>
      public decimal totqtyret { get; set; }

      /// <summary>
      /// Pick Init
      /// </summary>
      [StringValidationAttribute]
      public string pickinit { get; set; }

      /// <summary>
      /// Package ID
      /// </summary>
      [StringValidationAttribute]
      public string pkgid { get; set; }

      /// <summary>
      /// Open Initials
      /// </summary>
      [StringValidationAttribute]
      public string openinit { get; set; }

      /// <summary>
      /// # Cat Wt
      /// </summary>
      public int nocatwght { get; set; }

      /// <summary>
      /// Authorization
      /// </summary>
      public int wtauth { get; set; }

      /// <summary>
      /// # Pick Tickets Printed
      /// </summary>
      public int pickcnt { get; set; }

      /// <summary>
      /// Addon Override
      /// </summary>
      public bool addoverfl1 { get; set; }
      public bool addoverfl2 { get; set; }
      public bool addoverfl3 { get; set; }
      public bool addoverfl4 { get; set; }

      /// <summary>
      /// Net Addon Amount
      /// </summary>
      public decimal addonnet1 { get; set; }
      public decimal addonnet2 { get; set; }
      public decimal addonnet3 { get; set; }
      public decimal addonnet4 { get; set; }

      /// <summary>
      /// Tax Group
      /// </summary>
      public int addtaxgroup1 { get; set; }
      public int addtaxgroup2 { get; set; }
      public int addtaxgroup3 { get; set; }
      public int addtaxgroup4 { get; set; }

      /// <summary>
      /// Terms on Line Item
      /// </summary>
      public bool termslinefl { get; set; }

      /// <summary>
      /// Terms Disc - Line
      /// </summary>
      public decimal termsdiscln { get; set; }

      /// <summary>
      /// Language
      /// </summary>
      [StringValidationAttribute]
      public string langcd { get; set; }

      /// <summary>
      /// # of Invoices Printed
      /// </summary>
      public int invcnt { get; set; }

      /// <summary>
      /// # Lines Not BO
      /// </summary>
      public int nolnnotbo { get; set; }

      /// <summary>
      /// # Packages
      /// </summary>
      public int nopackages { get; set; }

      /// <summary>
      /// P.S.T. License
      /// </summary>
      [StringValidationAttribute]
      public string pstlicenseno { get; set; }

      /// <summary>
      /// Ordered Inv Total
      /// </summary>
      public decimal totinvord { get; set; }

      /// <summary>
      /// G.S.T. Type
      /// </summary>
      [StringValidationAttribute]
      public string gsttype { get; set; }

      /// <summary>
      /// Original Canceled
      /// </summary>
      public bool origcanfl { get; set; }

      /// <summary>
      /// PST Tax
      /// </summary>
      public decimal psttaxamt { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Picked Time
      /// </summary>
      [StringValidationAttribute]
      public string pickedtm { get; set; }

      /// <summary>
      /// Ship Time
      /// </summary>
      [StringValidationAttribute]
      public string shiptm { get; set; }

      /// <summary>
      /// Tax Override
      /// </summary>
      public bool taxoverfl { get; set; }

      /// <summary>
      /// Route/Day/Stop
      /// </summary>
      [StringValidationAttribute]
      public string route { get; set; }

      /// <summary>
      /// Enter Time
      /// </summary>
      [StringValidationAttribute]
      public string entertm { get; set; }

      /// <summary>
      /// Manual Zone Flag
      /// </summary>
      public bool manzonefl { get; set; }

      /// <summary>
      /// Shipping Point
      /// </summary>
      [StringValidationAttribute]
      public string shippingpt { get; set; }

      /// <summary>
      /// Package Label
      /// </summary>
      [StringValidationAttribute]
      public string pkglabel { get; set; }

      /// <summary>
      /// Actual Freight Amount
      /// </summary>
      public decimal actfreight { get; set; }

      /// <summary>
      /// Promised
      /// </summary>
      public DateTime? promisedt { get; set; }

      /// <summary>
      /// Invoice To
      /// </summary>
      public decimal fpcustno { get; set; }

      /// <summary>
      /// Dex Flag
      /// </summary>
      public bool dexfl { get; set; }

      /// <summary>
      /// Tax Type
      /// </summary>
      [StringValidationAttribute]
      public string taxtypeau { get; set; }

      /// <summary>
      /// COD Collected
      /// </summary>
      public decimal codcollamt { get; set; }

      /// <summary>
      /// Zone
      /// </summary>
      [StringValidationAttribute]
      public string zone { get; set; }

      /// <summary>
      /// Restock Charge
      /// </summary>
      public decimal totrestkamt { get; set; }

      /// <summary>
      /// Update From Clippership
      /// </summary>
      public bool pmfl { get; set; }

      /// <summary>
      /// BO Stage
      /// </summary>
      public int bostage { get; set; }

      /// <summary>
      /// Partial Shp
      /// </summary>
      public decimal totqtyshpp { get; set; }

      /// <summary>
      /// Original Addonamt
      /// </summary>
      public decimal prevaddamt { get; set; }

      /// <summary>
      /// Original Addon Type
      /// </summary>
      public bool prevaddtype { get; set; }

      /// <summary>
      /// Geo Code
      /// </summary>
      public int geocd { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      public int arpcono { get; set; }

      /// <summary>
      /// Total Tender Amount
      /// </summary>
      public decimal tottendamt { get; set; }

      /// <summary>
      /// Total Write-Off Amt
      /// </summary>
      public decimal writeoffamt { get; set; }

      /// <summary>
      /// Total Paid Amount
      /// </summary>
      public decimal tendamt { get; set; }

      /// <summary>
      /// Source
      /// </summary>
      [StringValidationAttribute]
      public string sourcepros { get; set; }

      /// <summary>
      /// Ship From
      /// </summary>
      public int arpshipfmno { get; set; }

      /// <summary>
      /// # DO Lines
      /// </summary>
      public int nodolines { get; set; }

      /// <summary>
      /// Tax Sale Amt 2
      /// </summary>
      public decimal taxsaleamt21 { get; set; }
      public decimal taxsaleamt22 { get; set; }
      public decimal taxsaleamt23 { get; set; }
      public decimal taxsaleamt24 { get; set; }
      public decimal taxsaleamt25 { get; set; }

      /// <summary>
      /// Tax Default
      /// </summary>
      [StringValidationAttribute]
      public string taxdefltty { get; set; }

      /// <summary>
      /// Total DATC 2
      /// </summary>
      public decimal totdatccost2 { get; set; }

      /// <summary>
      /// Total Core Chrg 2
      /// </summary>
      public decimal totcorechg2 { get; set; }

      /// <summary>
      /// Restrict Changes
      /// </summary>
      [StringValidationAttribute]
      public string restrictty { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Currency
      /// </summary>
      [StringValidationAttribute]
      public string currencyty { get; set; }

      /// <summary>
      /// Job ID
      /// </summary>
      [StringValidationAttribute]
      public string jmjobid { get; set; }

      /// <summary>
      /// Direct Route Hold Flag
      /// </summary>
      public bool drholdfl { get; set; }

      /// <summary>
      /// Sales Exchange Rate
      /// </summary>
      public decimal salesexrate { get; set; }

      /// <summary>
      /// Extracted
      /// </summary>
      public decimal extracted { get; set; }

      /// <summary>
      /// Direct Route Delivery Date
      /// </summary>
      public DateTime? drdeldt { get; set; }

      /// <summary>
      /// Repair Order #
      /// </summary>
      public int repairordno { get; set; }

      /// <summary>
      /// Repair Order Suffix
      /// </summary>
      public int repairordsuf { get; set; }

      /// <summary>
      /// Revision #
      /// </summary>
      public int jmjobrevno { get; set; }

      /// <summary>
      /// Contact ID
      /// </summary>
      public decimal contactid { get; set; }

      /// <summary>
      /// PrintPrice
      /// </summary>
      public bool printpricefl { get; set; }

      /// <summary>
      /// Consolidated Invoice Date
      /// </summary>
      public DateTime? consolinvdt { get; set; }

      /// <summary>
      /// Ship
      /// </summary>
      [StringValidationAttribute]
      public string shiptoaddr3 { get; set; }

      /// <summary>
      /// Terms Discount On PST
      /// </summary>
      public decimal termsdisconpst { get; set; }

      /// <summary>
      /// User 10
      /// </summary>
      [StringValidationAttribute]
      public string user10 { get; set; }

      /// <summary>
      /// User 11
      /// </summary>
      [StringValidationAttribute]
      public string user11 { get; set; }

      /// <summary>
      /// User 12
      /// </summary>
      [StringValidationAttribute]
      public string user12 { get; set; }

      /// <summary>
      /// User 13
      /// </summary>
      [StringValidationAttribute]
      public string user13 { get; set; }

      /// <summary>
      /// User 14
      /// </summary>
      [StringValidationAttribute]
      public string user14 { get; set; }

      /// <summary>
      /// User 15
      /// </summary>
      [StringValidationAttribute]
      public string user15 { get; set; }

      /// <summary>
      /// User 16
      /// </summary>
      [StringValidationAttribute]
      public string user16 { get; set; }

      /// <summary>
      /// User 17
      /// </summary>
      [StringValidationAttribute]
      public string user17 { get; set; }

      /// <summary>
      /// User 18
      /// </summary>
      [StringValidationAttribute]
      public string user18 { get; set; }

      /// <summary>
      /// User 19
      /// </summary>
      [StringValidationAttribute]
      public string user19 { get; set; }

      /// <summary>
      /// User 20
      /// </summary>
      [StringValidationAttribute]
      public string user20 { get; set; }

      /// <summary>
      /// User 21
      /// </summary>
      [StringValidationAttribute]
      public string user21 { get; set; }

      /// <summary>
      /// User 22
      /// </summary>
      [StringValidationAttribute]
      public string user22 { get; set; }

      /// <summary>
      /// User 23
      /// </summary>
      [StringValidationAttribute]
      public string user23 { get; set; }

      /// <summary>
      /// User 24
      /// </summary>
      [StringValidationAttribute]
      public string user24 { get; set; }

      /// <summary>
      /// Consolidated Order Number
      /// </summary>
      public int consolorderno { get; set; }

      /// <summary>
      /// Email Address
      /// </summary>
      [StringValidationAttribute]
      public string email { get; set; }

      /// <summary>
      /// Contact Name
      /// </summary>
      [StringValidationAttribute]
      public string contactnm { get; set; }

      /// <summary>
      /// ESB Shipment Flag
      /// </summary>
      public bool esbshipmentfl { get; set; }

      /// <summary>
      /// ESB Invoice Flag
      /// </summary>
      public bool esbinvoicefl { get; set; }

      /// <summary>
      /// ESB Sales Order Flag
      /// </summary>
      public bool esbsalesorderfl { get; set; }

      /// <summary>
      /// Non Refundable Down Payment
      /// </summary>
      public bool ccnonrefundfl { get; set; }

      /// <summary>
      /// Shipping Journal
      /// </summary>
      public int jrnlno3 { get; set; }

      /// <summary>
      /// ESB Quote Flag
      /// </summary>
      public bool esbquotefl { get; set; }

      /// <summary>
      /// Recovery Order
      /// </summary>
      public bool recoveryfl { get; set; }

      /// <summary>
      /// Bill on Receipt
      /// </summary>
      public bool billonrcptfl { get; set; }

      /// <summary>
      /// Auto Alternate Whse
      /// </summary>
      public bool autoaltwhsefl { get; set; }

      /// <summary>
      /// Domestic Tax Amt 1
      /// </summary>
      public decimal domtaxamt1 { get; set; }

      /// <summary>
      /// Domestic Tax Amt 2
      /// </summary>
      public decimal domtaxamt2 { get; set; }

      /// <summary>
      /// Domestic Tax Amt 3
      /// </summary>
      public decimal domtaxamt3 { get; set; }

      /// <summary>
      /// Domestic Tax Amt 4
      /// </summary>
      public decimal domtaxamt4 { get; set; }

      /// <summary>
      /// Sales Whse
      /// </summary>
      [StringValidationAttribute]
      public string saleswhse { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// VAT Amount
      /// </summary>
      public decimal vatamt1 { get; set; }
      public decimal vatamt2 { get; set; }
      public decimal vatamt3 { get; set; }
      public decimal vatamt4 { get; set; }
      public decimal vatamt5 { get; set; }

      /// <summary>
      /// Outside City Limit
      /// </summary>
      public bool outofcityfl { get; set; }

      /// <summary>
      /// Settlement Discount
      /// </summary>
      public decimal settdiscamt1 { get; set; }
      public decimal settdiscamt2 { get; set; }
      public decimal settdiscamt3 { get; set; }
      public decimal settdiscamt4 { get; set; }
      public decimal settdiscamt5 { get; set; }

      /// <summary>
      /// Spec Tax Code
      /// </summary>
      [StringValidationAttribute]
      public string spectaxcd { get; set; }

      /// <summary>
      /// BT Print
      /// </summary>
      public bool btprintfl { get; set; }

      /// <summary>
      /// Bill Direct PO Addon
      /// </summary>
      [StringValidationAttribute]
      public string billdirectaddon { get; set; }

      /// <summary>
      /// Freight Terms
      /// </summary>
      [StringValidationAttribute]
      public string frttermscd { get; set; }

      /// <summary>
      /// Transfer Location
      /// </summary>
      [StringValidationAttribute]
      public string transferloc { get; set; }

      /// <summary>
      /// Original Promised
      /// </summary>
      public DateTime? origpromisedt { get; set; }

      /// <summary>
      /// Orig Promised Locked
      /// </summary>
      public bool origpromisedtlockedfl { get; set; }

      /// <summary>
      /// Ext Shipping Instructions
      /// </summary>
      [StringValidationAttribute]
      public string extshipinstr { get; set; }

      /// <summary>
      /// Frt Bill Account
      /// </summary>
      [StringValidationAttribute]
      public string frtbillacct { get; set; }

      /// <summary>
      /// Auto-Apply Credit Invoice
      /// </summary>
      public bool autoapplycreditfl { get; set; }

      /// <summary>
      /// Frt Bill Name
      /// </summary>
      [StringValidationAttribute]
      public string frtbillnm { get; set; }

      /// <summary>
      /// Frt Bill State
      /// </summary>
      [StringValidationAttribute]
      public string frtbillst { get; set; }

      /// <summary>
      /// Frt Bill Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string frtbillzip { get; set; }

      /// <summary>
      /// Frt Bill Addr
      /// </summary>
      [StringValidationAttribute]
      public string frtbilladdr1 { get; set; }
      [StringValidationAttribute]
      public string frtbilladdr2 { get; set; }

      /// <summary>
      /// Frt Bill City
      /// </summary>
      [StringValidationAttribute]
      public string frtbillcity { get; set; }

      /// <summary>
      /// Frt Bill Addr
      /// </summary>
      [StringValidationAttribute]
      public string frtbilladdr3 { get; set; }

      /// <summary>
      /// Frt Bill Country
      /// </summary>
      [StringValidationAttribute]
      public string frtbillcountrycd { get; set; }

      /// <summary>
      /// Frt Bill Code
      /// </summary>
      [StringValidationAttribute]
      public string frtbillcd { get; set; }

      /// <summary>
      /// Order Origin Code
      /// </summary>
      [StringValidationAttribute]
      public string origincd { get; set; }

      /// <summary>
      /// Delivery Print Type
      /// </summary>
      [StringValidationAttribute]
      public string dlvprintty { get; set; }

      /// <summary>
      /// Origin Copy Type
      /// </summary>
      [StringValidationAttribute]
      public string origincopyty { get; set; }

      /// <summary>
      /// # Delivery Printed
      /// </summary>
      public int dlvcnt { get; set; }

      /// <summary>
      /// Origin Order Number
      /// </summary>
      public int originorderno { get; set; }

      /// <summary>
      /// Origin Order Suffix
      /// </summary>
      public int originordersuf { get; set; }

      /// <summary>
      /// International Approve Type
      /// </summary>
      [StringValidationAttribute]
      public string approvintlty { get; set; }

      /// <summary>
      /// StoreFront User
      /// </summary>
      [StringValidationAttribute]
      public string sfuser { get; set; }

      /// <summary>
      /// Allow For Our Records Only Invoice
      /// </summary>
      public bool noinvoicefl { get; set; }

      /// <summary>
      /// Shipment Notice
      /// </summary>
      [StringValidationAttribute]
      public string shipmentnotice { get; set; }

      /// <summary>
      /// Service Order #
      /// </summary>
      [StringValidationAttribute]
      public string servicekey { get; set; }

      /// <summary>
      /// Vendor Return Auth
      /// </summary>
      [StringValidationAttribute]
      public string vendretauth { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }

      /// <summary>
      /// Fulfillment Order
      /// </summary>
      public bool fulfillmentordfl { get; set; }

      /// <summary>
      /// Tied Fulfillment Order
      /// </summary>
      public bool fulfillmenttiedfl { get; set; }

      /// <summary>
      /// Fulfillment Stage
      /// </summary>
      [StringValidationAttribute]
      public string fulfillmentstgcd { get; set; }

      /// <summary>
      /// Fulfillment Billing Code
      /// </summary>
      [StringValidationAttribute]
      public string fulfillmentbillcd { get; set; }

      /// <summary>
      /// Order Source
      /// </summary>
      [StringValidationAttribute]
      public string ordersource { get; set; }

      /// <summary>
      /// Related Document
      /// </summary>
      [StringValidationAttribute]
      public string relateddocument { get; set; }

      /// <summary>
      /// LSP Invoice Registration Status
      /// </summary>
      [StringValidationAttribute]
      public string lspinvregstatus { get; set; }

      /// <summary>
      /// LSP UUID
      /// </summary>
      [StringValidationAttribute]
      public string lspuuid { get; set; }

      /// <summary>
      /// LSP Invoice Registration Status Date
      /// </summary>
      public DateTime? lspinvregstatdttmz { get; set; }

      /// <summary>
      /// LSP Identifier 1
      /// </summary>
      [StringValidationAttribute]
      public string lspidentifier1 { get; set; }

      /// <summary>
      /// LSP Identifier 2
      /// </summary>
      [StringValidationAttribute]
      public string lspidentifier2 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.shiptoaddr1 + "," + this.shiptocity + "," + this.shiptost + "," + this.shiptozip + "," + this.countrycd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildOeehBaseFromRow<T>(DataRow row) where T:OeehBase, new()
      {
         T entity = new T();
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.custpo = row.IsNull("custpo") ? string.Empty : row.Field<string>("custpo");
         entity.shiptonm = row.IsNull("shiptonm") ? string.Empty : row.Field<string>("shiptonm");
         entity.shiptost = row.IsNull("shiptost") ? string.Empty : row.Field<string>("shiptost");
         entity.shiptozip = row.IsNull("shiptozip") ? string.Empty : row.Field<string>("shiptozip");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.shipinstr = row.IsNull("shipinstr") ? string.Empty : row.Field<string>("shipinstr");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.shipviaty = row.IsNull("shipviaty") ? string.Empty : row.Field<string>("shipviaty");
         entity.placedby = row.IsNull("placedby") ? string.Empty : row.Field<string>("placedby");
         entity.reqshipdt = row.Field<DateTime?>("reqshipdt");
         entity.takenby = row.IsNull("takenby") ? string.Empty : row.Field<string>("takenby");
         entity.orderdisp = row.IsNull("orderdisp") ? string.Empty : row.Field<string>("orderdisp");
         entity.bofl = row.Field<bool>("bofl");
         entity.subfl = row.Field<bool>("subfl");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.stagecd = row.IsNull("stagecd") ? 0 : row.Field<int>("stagecd");
         entity.approvty = row.IsNull("approvty") ? string.Empty : row.Field<string>("approvty");
         entity.outbndfrtfl = row.Field<bool>("outbndfrtfl");
         entity.inbndfrtfl = row.Field<bool>("inbndfrtfl");
         entity.termstype = row.IsNull("termstype") ? string.Empty : row.Field<string>("termstype");
         entity.canceldt = row.Field<DateTime?>("canceldt");
         entity.billdt = row.Field<DateTime?>("billdt");
         entity.storddays = row.IsNull("storddays") ? 0 : row.Field<int>("storddays");
         entity.statecd = row.IsNull("statecd") ? string.Empty : row.Field<string>("statecd");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.invoicedt = row.Field<DateTime?>("invoicedt");
         entity.paiddt = row.Field<DateTime?>("paiddt");
         entity.vendrebord = row.IsNull("vendrebord") ? decimal.Zero : row.Field<decimal>("vendrebord");
         entity.vendrebamt = row.IsNull("vendrebamt") ? decimal.Zero : row.Field<decimal>("vendrebamt");
         entity.pickeddt = row.Field<DateTime?>("pickeddt");
         entity.totcommcost = row.IsNull("totcommcost") ? decimal.Zero : row.Field<decimal>("totcommcost");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.setno2 = row.IsNull("setno2") ? decimal.Zero : row.Field<decimal>("setno2");
         entity.drdeltm = row.IsNull("drdeltm") ? string.Empty : row.Field<string>("drdeltm");
         entity.countrycd = row.IsNull("countrycd") ? string.Empty : row.Field<string>("countrycd");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.wletsetno = row.IsNull("wletsetno") ? string.Empty : row.Field<string>("wletsetno");
         entity.taxovercd = row.IsNull("taxovercd") ? string.Empty : row.Field<string>("taxovercd");
         entity.shiptoaddr1 = row.IsNull("shiptoaddr1") ? string.Empty : row.Field<string>("shiptoaddr1");
         entity.shiptoaddr2 = row.IsNull("shiptoaddr2") ? string.Empty : row.Field<string>("shiptoaddr2");
         entity.nontaxtype = row.IsNull("nontaxtype") ? string.Empty : row.Field<string>("nontaxtype");
         entity.shiptocity = row.IsNull("shiptocity") ? string.Empty : row.Field<string>("shiptocity");
         entity.bpquoteno = row.IsNull("bpquoteno") ? string.Empty : row.Field<string>("bpquoteno");
         entity.norushln = row.IsNull("norushln") ? 0 : row.Field<int>("norushln");
         entity.asndt = row.Field<DateTime?>("asndt");
         entity.nolineitem = row.IsNull("nolineitem") ? 0 : row.Field<int>("nolineitem");
         entity.ackdt = row.Field<DateTime?>("ackdt");
         entity.addonamt1 = row.IsNull("addonamt1") ? decimal.Zero : row.Field<decimal>("addonamt1");
         entity.addonamt2 = row.IsNull("addonamt2") ? decimal.Zero : row.Field<decimal>("addonamt2");
         entity.addonamt3 = row.IsNull("addonamt3") ? decimal.Zero : row.Field<decimal>("addonamt3");
         entity.addonamt4 = row.IsNull("addonamt4") ? decimal.Zero : row.Field<decimal>("addonamt4");
         entity.poissdt = row.Field<DateTime?>("poissdt");
         entity.addontype1 = row.Field<bool>("addontype1");
         entity.addontype2 = row.Field<bool>("addontype2");
         entity.addontype3 = row.Field<bool>("addontype3");
         entity.addontype4 = row.Field<bool>("addontype4");
         entity.createdt = row.Field<DateTime?>("createdt");
         entity.addonno1 = row.IsNull("addonno1") ? 0 : row.Field<int>("addonno1");
         entity.addonno2 = row.IsNull("addonno2") ? 0 : row.Field<int>("addonno2");
         entity.addonno3 = row.IsNull("addonno3") ? 0 : row.Field<int>("addonno3");
         entity.addonno4 = row.IsNull("addonno4") ? 0 : row.Field<int>("addonno4");
         entity.usestepfl = row.Field<bool>("usestepfl");
         entity.drexpfl = row.Field<bool>("drexpfl");
         entity.totinvamt = row.IsNull("totinvamt") ? decimal.Zero : row.Field<decimal>("totinvamt");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.totweight = row.IsNull("totweight") ? decimal.Zero : row.Field<decimal>("totweight");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.totcubes = row.IsNull("totcubes") ? decimal.Zero : row.Field<decimal>("totcubes");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.totqtyshp = row.IsNull("totqtyshp") ? decimal.Zero : row.Field<decimal>("totqtyshp");
         entity.user6 = row.Field<decimal?>("user6");
         entity.totqtyord = row.IsNull("totqtyord") ? decimal.Zero : row.Field<decimal>("totqtyord");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.totlineamt = row.IsNull("totlineamt") ? decimal.Zero : row.Field<decimal>("totlineamt");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.wodiscamt = row.IsNull("wodiscamt") ? decimal.Zero : row.Field<decimal>("wodiscamt");
         entity.wodisctype = row.Field<bool>("wodisctype");
         entity.totcost = row.IsNull("totcost") ? decimal.Zero : row.Field<decimal>("totcost");
         entity.slsrepin = row.IsNull("slsrepin") ? string.Empty : row.Field<string>("slsrepin");
         entity.slsrepout = row.IsNull("slsrepout") ? string.Empty : row.Field<string>("slsrepout");
         entity.taxauth = row.IsNull("taxauth") ? string.Empty : row.Field<string>("taxauth");
         entity.stagearea = row.IsNull("stagearea") ? string.Empty : row.Field<string>("stagearea");
         entity.totcommin = row.IsNull("totcommin") ? decimal.Zero : row.Field<decimal>("totcommin");
         entity.termsdiscamt = row.IsNull("termsdiscamt") ? decimal.Zero : row.Field<decimal>("termsdiscamt");
         entity.dwnpmtamt = row.IsNull("dwnpmtamt") ? decimal.Zero : row.Field<decimal>("dwnpmtamt");
         entity.payamt1 = row.IsNull("payamt1") ? decimal.Zero : row.Field<decimal>("payamt1");
         entity.payamt2 = row.IsNull("payamt2") ? decimal.Zero : row.Field<decimal>("payamt2");
         entity.payamt3 = row.IsNull("payamt3") ? decimal.Zero : row.Field<decimal>("payamt3");
         entity.apprinit = row.IsNull("apprinit") ? string.Empty : row.Field<string>("apprinit");
         entity.termspct = row.IsNull("termspct") ? decimal.Zero : row.Field<decimal>("termspct");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.nosnlots = row.IsNull("nosnlots") ? decimal.Zero : row.Field<decimal>("nosnlots");
         entity.notimeschg = row.IsNull("notimeschg") ? 0 : row.Field<int>("notimeschg");
         entity.pickprno = row.IsNull("pickprno") ? 0 : row.Field<int>("pickprno");
         entity.setno = row.IsNull("setno") ? 0 : row.Field<int>("setno");
         entity.stordty = row.Field<bool>("stordty");
         entity.wodiscoverfl = row.Field<bool>("wodiscoverfl");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.nextlineno = row.IsNull("nextlineno") ? 0 : row.Field<int>("nextlineno");
         entity.dwnpmttype = row.Field<bool>("dwnpmttype");
         entity.linefl = row.Field<bool>("linefl");
         entity.taxsaleamt1 = row.IsNull("taxsaleamt1") ? decimal.Zero : row.Field<decimal>("taxsaleamt1");
         entity.taxsaleamt3 = row.IsNull("taxsaleamt3") ? decimal.Zero : row.Field<decimal>("taxsaleamt3");
         entity.taxsaleamt4 = row.IsNull("taxsaleamt4") ? decimal.Zero : row.Field<decimal>("taxsaleamt4");
         entity.taxsaleamt5 = row.IsNull("taxsaleamt5") ? decimal.Zero : row.Field<decimal>("taxsaleamt5");
         entity.taxablefl = row.Field<bool>("taxablefl");
         entity.codfl = row.Field<bool>("codfl");
         entity.crreasonty = row.IsNull("crreasonty") ? string.Empty : row.Field<string>("crreasonty");
         entity.origorderno = row.IsNull("origorderno") ? 0 : row.Field<int>("origorderno");
         entity.totcommout = row.IsNull("totcommout") ? decimal.Zero : row.Field<decimal>("totcommout");
         entity.lumpbillfl = row.Field<bool>("lumpbillfl");
         entity.lumpbillamt = row.IsNull("lumpbillamt") ? decimal.Zero : row.Field<decimal>("lumpbillamt");
         entity.borelfl = row.Field<bool>("borelfl");
         entity.borelno = row.IsNull("borelno") ? 0 : row.Field<int>("borelno");
         entity.lockfl = row.Field<bool>("lockfl");
         entity.shipdt = row.Field<DateTime?>("shipdt");
         entity.totcorechg = row.IsNull("totcorechg") ? decimal.Zero : row.Field<decimal>("totcorechg");
         entity.totordamt = row.IsNull("totordamt") ? decimal.Zero : row.Field<decimal>("totordamt");
         entity.printpckfl = row.Field<bool>("printpckfl");
         entity.wodeftype = row.IsNull("wodeftype") ? string.Empty : row.Field<string>("wodeftype");
         entity.wodiscpct = row.IsNull("wodiscpct") ? decimal.Zero : row.Field<decimal>("wodiscpct");
         entity.longltdays = row.IsNull("longltdays") ? 0 : row.Field<int>("longltdays");
         entity.arpvendno = row.IsNull("arpvendno") ? decimal.Zero : row.Field<decimal>("arpvendno");
         entity.arpwhse = row.IsNull("arpwhse") ? string.Empty : row.Field<string>("arpwhse");
         entity.totdatccost = row.IsNull("totdatccost") ? decimal.Zero : row.Field<decimal>("totdatccost");
         entity.datcoverfl = row.Field<bool>("datcoverfl");
         entity.bolinefl = row.Field<bool>("bolinefl");
         entity.totlineord = row.IsNull("totlineord") ? decimal.Zero : row.Field<decimal>("totlineord");
         entity.totcostord = row.IsNull("totcostord") ? decimal.Zero : row.Field<decimal>("totcostord");
         entity.specdiscamt = row.IsNull("specdiscamt") ? decimal.Zero : row.Field<decimal>("specdiscamt");
         entity.totprice = row.IsNull("totprice") ? decimal.Zero : row.Field<decimal>("totprice");
         entity.credoverfl = row.Field<bool>("credoverfl");
         entity.jobno = row.IsNull("jobno") ? string.Empty : row.Field<string>("jobno");
         entity.jrnlno2 = row.IsNull("jrnlno2") ? 0 : row.Field<int>("jrnlno2");
         entity.prosno = row.IsNull("prosno") ? decimal.Zero : row.Field<decimal>("prosno");
         entity.proposalno = row.IsNull("proposalno") ? decimal.Zero : row.Field<decimal>("proposalno");
         entity.lostbusty = row.IsNull("lostbusty") ? string.Empty : row.Field<string>("lostbusty");
         entity.pricecd = row.IsNull("pricecd") ? 0 : row.Field<int>("pricecd");
         entity.totlineret = row.IsNull("totlineret") ? decimal.Zero : row.Field<decimal>("totlineret");
         entity.taxamt1 = row.IsNull("taxamt1") ? decimal.Zero : row.Field<decimal>("taxamt1");
         entity.taxamt2 = row.IsNull("taxamt2") ? decimal.Zero : row.Field<decimal>("taxamt2");
         entity.taxamt3 = row.IsNull("taxamt3") ? decimal.Zero : row.Field<decimal>("taxamt3");
         entity.taxamt4 = row.IsNull("taxamt4") ? decimal.Zero : row.Field<decimal>("taxamt4");
         entity.updtype = row.IsNull("updtype") ? string.Empty : row.Field<string>("updtype");
         entity.pickprtfl = row.Field<bool>("pickprtfl");
         entity.lumppricefl = row.Field<bool>("lumppricefl");
         entity.boexistsfl = row.Field<bool>("boexistsfl");
         entity.discdt = row.Field<DateTime?>("discdt");
         entity.divno = row.IsNull("divno") ? 0 : row.Field<int>("divno");
         entity.totqtyret = row.IsNull("totqtyret") ? decimal.Zero : row.Field<decimal>("totqtyret");
         entity.pickinit = row.IsNull("pickinit") ? string.Empty : row.Field<string>("pickinit");
         entity.pkgid = row.IsNull("pkgid") ? string.Empty : row.Field<string>("pkgid");
         entity.openinit = row.IsNull("openinit") ? string.Empty : row.Field<string>("openinit");
         entity.nocatwght = row.IsNull("nocatwght") ? 0 : row.Field<int>("nocatwght");
         entity.wtauth = row.IsNull("wtauth") ? 0 : row.Field<int>("wtauth");
         entity.pickcnt = row.IsNull("pickcnt") ? 0 : row.Field<int>("pickcnt");
         entity.addoverfl1 = row.Field<bool>("addoverfl1");
         entity.addoverfl2 = row.Field<bool>("addoverfl2");
         entity.addoverfl3 = row.Field<bool>("addoverfl3");
         entity.addoverfl4 = row.Field<bool>("addoverfl4");
         entity.addonnet1 = row.IsNull("addonnet1") ? decimal.Zero : row.Field<decimal>("addonnet1");
         entity.addonnet2 = row.IsNull("addonnet2") ? decimal.Zero : row.Field<decimal>("addonnet2");
         entity.addonnet3 = row.IsNull("addonnet3") ? decimal.Zero : row.Field<decimal>("addonnet3");
         entity.addonnet4 = row.IsNull("addonnet4") ? decimal.Zero : row.Field<decimal>("addonnet4");
         entity.addtaxgroup1 = row.IsNull("addtaxgroup1") ? 0 : row.Field<int>("addtaxgroup1");
         entity.addtaxgroup2 = row.IsNull("addtaxgroup2") ? 0 : row.Field<int>("addtaxgroup2");
         entity.addtaxgroup3 = row.IsNull("addtaxgroup3") ? 0 : row.Field<int>("addtaxgroup3");
         entity.addtaxgroup4 = row.IsNull("addtaxgroup4") ? 0 : row.Field<int>("addtaxgroup4");
         entity.termslinefl = row.Field<bool>("termslinefl");
         entity.termsdiscln = row.IsNull("termsdiscln") ? decimal.Zero : row.Field<decimal>("termsdiscln");
         entity.langcd = row.IsNull("langcd") ? string.Empty : row.Field<string>("langcd");
         entity.invcnt = row.IsNull("invcnt") ? 0 : row.Field<int>("invcnt");
         entity.nolnnotbo = row.IsNull("nolnnotbo") ? 0 : row.Field<int>("nolnnotbo");
         entity.nopackages = row.IsNull("nopackages") ? 0 : row.Field<int>("nopackages");
         entity.pstlicenseno = row.IsNull("pstlicenseno") ? string.Empty : row.Field<string>("pstlicenseno");
         entity.totinvord = row.IsNull("totinvord") ? decimal.Zero : row.Field<decimal>("totinvord");
         entity.gsttype = row.IsNull("gsttype") ? string.Empty : row.Field<string>("gsttype");
         entity.origcanfl = row.Field<bool>("origcanfl");
         entity.psttaxamt = row.IsNull("psttaxamt") ? decimal.Zero : row.Field<decimal>("psttaxamt");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.pickedtm = row.IsNull("pickedtm") ? string.Empty : row.Field<string>("pickedtm");
         entity.shiptm = row.IsNull("shiptm") ? string.Empty : row.Field<string>("shiptm");
         entity.taxoverfl = row.Field<bool>("taxoverfl");
         entity.route = row.IsNull("route") ? string.Empty : row.Field<string>("route");
         entity.entertm = row.IsNull("entertm") ? string.Empty : row.Field<string>("entertm");
         entity.manzonefl = row.Field<bool>("manzonefl");
         entity.shippingpt = row.IsNull("shippingpt") ? string.Empty : row.Field<string>("shippingpt");
         entity.pkglabel = row.IsNull("pkglabel") ? string.Empty : row.Field<string>("pkglabel");
         entity.actfreight = row.IsNull("actfreight") ? decimal.Zero : row.Field<decimal>("actfreight");
         entity.promisedt = row.Field<DateTime?>("promisedt");
         entity.fpcustno = row.IsNull("fpcustno") ? decimal.Zero : row.Field<decimal>("fpcustno");
         entity.dexfl = row.Field<bool>("dexfl");
         entity.taxtypeau = row.IsNull("taxtypeau") ? string.Empty : row.Field<string>("taxtypeau");
         entity.codcollamt = row.IsNull("codcollamt") ? decimal.Zero : row.Field<decimal>("codcollamt");
         entity.zone = row.IsNull("zone") ? string.Empty : row.Field<string>("zone");
         entity.totrestkamt = row.IsNull("totrestkamt") ? decimal.Zero : row.Field<decimal>("totrestkamt");
         entity.pmfl = row.Field<bool>("pmfl");
         entity.bostage = row.IsNull("bostage") ? 0 : row.Field<int>("bostage");
         entity.totqtyshpp = row.IsNull("totqtyshpp") ? decimal.Zero : row.Field<decimal>("totqtyshpp");
         entity.prevaddamt = row.IsNull("prevaddamt") ? decimal.Zero : row.Field<decimal>("prevaddamt");
         entity.prevaddtype = row.Field<bool>("prevaddtype");
         entity.geocd = row.IsNull("geocd") ? 0 : row.Field<int>("geocd");
         entity.arpcono = row.IsNull("arpcono") ? 0 : row.Field<int>("arpcono");
         entity.tottendamt = row.IsNull("tottendamt") ? decimal.Zero : row.Field<decimal>("tottendamt");
         entity.writeoffamt = row.IsNull("writeoffamt") ? decimal.Zero : row.Field<decimal>("writeoffamt");
         entity.tendamt = row.IsNull("tendamt") ? decimal.Zero : row.Field<decimal>("tendamt");
         entity.sourcepros = row.IsNull("sourcepros") ? string.Empty : row.Field<string>("sourcepros");
         entity.arpshipfmno = row.IsNull("arpshipfmno") ? 0 : row.Field<int>("arpshipfmno");
         entity.nodolines = row.IsNull("nodolines") ? 0 : row.Field<int>("nodolines");
         entity.taxsaleamt21 = row.IsNull("taxsaleamt21") ? decimal.Zero : row.Field<decimal>("taxsaleamt21");
         entity.taxsaleamt22 = row.IsNull("taxsaleamt22") ? decimal.Zero : row.Field<decimal>("taxsaleamt22");
         entity.taxsaleamt23 = row.IsNull("taxsaleamt23") ? decimal.Zero : row.Field<decimal>("taxsaleamt23");
         entity.taxsaleamt24 = row.IsNull("taxsaleamt24") ? decimal.Zero : row.Field<decimal>("taxsaleamt24");
         entity.taxsaleamt25 = row.IsNull("taxsaleamt25") ? decimal.Zero : row.Field<decimal>("taxsaleamt25");
         entity.taxdefltty = row.IsNull("taxdefltty") ? string.Empty : row.Field<string>("taxdefltty");
         entity.totdatccost2 = row.IsNull("totdatccost2") ? decimal.Zero : row.Field<decimal>("totdatccost2");
         entity.totcorechg2 = row.IsNull("totcorechg2") ? decimal.Zero : row.Field<decimal>("totcorechg2");
         entity.restrictty = row.IsNull("restrictty") ? string.Empty : row.Field<string>("restrictty");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.jmjobid = row.IsNull("jmjobid") ? string.Empty : row.Field<string>("jmjobid");
         entity.drholdfl = row.Field<bool>("drholdfl");
         entity.salesexrate = row.IsNull("salesexrate") ? decimal.Zero : row.Field<decimal>("salesexrate");
         entity.extracted = row.IsNull("extracted") ? decimal.Zero : row.Field<decimal>("extracted");
         entity.drdeldt = row.Field<DateTime?>("drdeldt");
         entity.repairordno = row.IsNull("repairordno") ? 0 : row.Field<int>("repairordno");
         entity.repairordsuf = row.IsNull("repairordsuf") ? 0 : row.Field<int>("repairordsuf");
         entity.jmjobrevno = row.IsNull("jmjobrevno") ? 0 : row.Field<int>("jmjobrevno");
         entity.contactid = row.IsNull("contactid") ? decimal.Zero : row.Field<decimal>("contactid");
         entity.printpricefl = row.Field<bool>("printpricefl");
         entity.consolinvdt = row.Field<DateTime?>("consolinvdt");
         entity.shiptoaddr3 = row.IsNull("shiptoaddr3") ? string.Empty : row.Field<string>("shiptoaddr3");
         entity.termsdisconpst = row.IsNull("termsdisconpst") ? decimal.Zero : row.Field<decimal>("termsdisconpst");
         entity.user10 = row.IsNull("user10") ? string.Empty : row.Field<string>("user10");
         entity.user11 = row.IsNull("user11") ? string.Empty : row.Field<string>("user11");
         entity.user12 = row.IsNull("user12") ? string.Empty : row.Field<string>("user12");
         entity.user13 = row.IsNull("user13") ? string.Empty : row.Field<string>("user13");
         entity.user14 = row.IsNull("user14") ? string.Empty : row.Field<string>("user14");
         entity.user15 = row.IsNull("user15") ? string.Empty : row.Field<string>("user15");
         entity.user16 = row.IsNull("user16") ? string.Empty : row.Field<string>("user16");
         entity.user17 = row.IsNull("user17") ? string.Empty : row.Field<string>("user17");
         entity.user18 = row.IsNull("user18") ? string.Empty : row.Field<string>("user18");
         entity.user19 = row.IsNull("user19") ? string.Empty : row.Field<string>("user19");
         entity.user20 = row.IsNull("user20") ? string.Empty : row.Field<string>("user20");
         entity.user21 = row.IsNull("user21") ? string.Empty : row.Field<string>("user21");
         entity.user22 = row.IsNull("user22") ? string.Empty : row.Field<string>("user22");
         entity.user23 = row.IsNull("user23") ? string.Empty : row.Field<string>("user23");
         entity.user24 = row.IsNull("user24") ? string.Empty : row.Field<string>("user24");
         entity.consolorderno = row.IsNull("consolorderno") ? 0 : row.Field<int>("consolorderno");
         entity.email = row.IsNull("email") ? string.Empty : row.Field<string>("email");
         entity.contactnm = row.IsNull("contactnm") ? string.Empty : row.Field<string>("contactnm");
         entity.esbshipmentfl = row.Field<bool>("esbshipmentfl");
         entity.esbinvoicefl = row.Field<bool>("esbinvoicefl");
         entity.esbsalesorderfl = row.Field<bool>("esbsalesorderfl");
         entity.ccnonrefundfl = row.Field<bool>("ccnonrefundfl");
         entity.jrnlno3 = row.IsNull("jrnlno3") ? 0 : row.Field<int>("jrnlno3");
         entity.esbquotefl = row.Field<bool>("esbquotefl");
         entity.recoveryfl = row.Field<bool>("recoveryfl");
         entity.billonrcptfl = row.Field<bool>("billonrcptfl");
         entity.autoaltwhsefl = row.Field<bool>("autoaltwhsefl");
         entity.domtaxamt1 = row.IsNull("domtaxamt1") ? decimal.Zero : row.Field<decimal>("domtaxamt1");
         entity.domtaxamt2 = row.IsNull("domtaxamt2") ? decimal.Zero : row.Field<decimal>("domtaxamt2");
         entity.domtaxamt3 = row.IsNull("domtaxamt3") ? decimal.Zero : row.Field<decimal>("domtaxamt3");
         entity.domtaxamt4 = row.IsNull("domtaxamt4") ? decimal.Zero : row.Field<decimal>("domtaxamt4");
         entity.saleswhse = row.IsNull("saleswhse") ? string.Empty : row.Field<string>("saleswhse");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.vatamt1 = row.IsNull("vatamt1") ? decimal.Zero : row.Field<decimal>("vatamt1");
         entity.vatamt2 = row.IsNull("vatamt2") ? decimal.Zero : row.Field<decimal>("vatamt2");
         entity.vatamt3 = row.IsNull("vatamt3") ? decimal.Zero : row.Field<decimal>("vatamt3");
         entity.vatamt4 = row.IsNull("vatamt4") ? decimal.Zero : row.Field<decimal>("vatamt4");
         entity.vatamt5 = row.IsNull("vatamt5") ? decimal.Zero : row.Field<decimal>("vatamt5");
         entity.outofcityfl = row.Field<bool>("outofcityfl");
         entity.settdiscamt1 = row.IsNull("settdiscamt1") ? decimal.Zero : row.Field<decimal>("settdiscamt1");
         entity.settdiscamt2 = row.IsNull("settdiscamt2") ? decimal.Zero : row.Field<decimal>("settdiscamt2");
         entity.settdiscamt3 = row.IsNull("settdiscamt3") ? decimal.Zero : row.Field<decimal>("settdiscamt3");
         entity.settdiscamt4 = row.IsNull("settdiscamt4") ? decimal.Zero : row.Field<decimal>("settdiscamt4");
         entity.settdiscamt5 = row.IsNull("settdiscamt5") ? decimal.Zero : row.Field<decimal>("settdiscamt5");
         entity.spectaxcd = row.IsNull("spectaxcd") ? string.Empty : row.Field<string>("spectaxcd");
         entity.btprintfl = row.Field<bool>("btprintfl");
         entity.billdirectaddon = row.IsNull("billdirectaddon") ? string.Empty : row.Field<string>("billdirectaddon");
         entity.frttermscd = row.IsNull("frttermscd") ? string.Empty : row.Field<string>("frttermscd");
         entity.transferloc = row.IsNull("transferloc") ? string.Empty : row.Field<string>("transferloc");
         entity.origpromisedt = row.Field<DateTime?>("origpromisedt");
         entity.origpromisedtlockedfl = row.Field<bool>("origpromisedtlockedfl");
         entity.extshipinstr = row.IsNull("extshipinstr") ? string.Empty : row.Field<string>("extshipinstr");
         entity.frtbillacct = row.IsNull("frtbillacct") ? string.Empty : row.Field<string>("frtbillacct");
         entity.autoapplycreditfl = row.Field<bool>("autoapplycreditfl");
         entity.frtbillnm = row.IsNull("frtbillnm") ? string.Empty : row.Field<string>("frtbillnm");
         entity.frtbillst = row.IsNull("frtbillst") ? string.Empty : row.Field<string>("frtbillst");
         entity.frtbillzip = row.IsNull("frtbillzip") ? string.Empty : row.Field<string>("frtbillzip");
         entity.frtbilladdr1 = row.IsNull("frtbilladdr1") ? string.Empty : row.Field<string>("frtbilladdr1");
         entity.frtbilladdr2 = row.IsNull("frtbilladdr2") ? string.Empty : row.Field<string>("frtbilladdr2");
         entity.frtbillcity = row.IsNull("frtbillcity") ? string.Empty : row.Field<string>("frtbillcity");
         entity.frtbilladdr3 = row.IsNull("frtbilladdr3") ? string.Empty : row.Field<string>("frtbilladdr3");
         entity.frtbillcountrycd = row.IsNull("frtbillcountrycd") ? string.Empty : row.Field<string>("frtbillcountrycd");
         entity.frtbillcd = row.IsNull("frtbillcd") ? string.Empty : row.Field<string>("frtbillcd");
         entity.origincd = row.IsNull("origincd") ? string.Empty : row.Field<string>("origincd");
         entity.dlvprintty = row.IsNull("dlvprintty") ? string.Empty : row.Field<string>("dlvprintty");
         entity.origincopyty = row.IsNull("origincopyty") ? string.Empty : row.Field<string>("origincopyty");
         entity.dlvcnt = row.IsNull("dlvcnt") ? 0 : row.Field<int>("dlvcnt");
         entity.originorderno = row.IsNull("originorderno") ? 0 : row.Field<int>("originorderno");
         entity.originordersuf = row.IsNull("originordersuf") ? 0 : row.Field<int>("originordersuf");
         entity.approvintlty = row.IsNull("approvintlty") ? string.Empty : row.Field<string>("approvintlty");
         entity.sfuser = row.IsNull("sfuser") ? string.Empty : row.Field<string>("sfuser");
         entity.noinvoicefl = row.Field<bool>("noinvoicefl");
         entity.shipmentnotice = row.IsNull("shipmentnotice") ? string.Empty : row.Field<string>("shipmentnotice");
         entity.servicekey = row.IsNull("servicekey") ? string.Empty : row.Field<string>("servicekey");
         entity.vendretauth = row.IsNull("vendretauth") ? string.Empty : row.Field<string>("vendretauth");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.fulfillmentordfl = row.Field<bool>("fulfillmentordfl");
         entity.fulfillmenttiedfl = row.Field<bool>("fulfillmenttiedfl");
         entity.fulfillmentstgcd = row.IsNull("fulfillmentstgcd") ? string.Empty : row.Field<string>("fulfillmentstgcd");
         entity.fulfillmentbillcd = row.IsNull("fulfillmentbillcd") ? string.Empty : row.Field<string>("fulfillmentbillcd");
         entity.ordersource = row.IsNull("ordersource") ? string.Empty : row.Field<string>("ordersource");
         entity.relateddocument = row.IsNull("relateddocument") ? string.Empty : row.Field<string>("relateddocument");
         entity.lspinvregstatus = row.IsNull("lspinvregstatus") ? string.Empty : row.Field<string>("lspinvregstatus");
         entity.lspuuid = row.IsNull("lspuuid") ? string.Empty : row.Field<string>("lspuuid");
         entity.lspinvregstatdttmz = row.Field<DateTime?>("lspinvregstatdttmz");
         entity.lspidentifier1 = row.IsNull("lspidentifier1") ? string.Empty : row.Field<string>("lspidentifier1");
         entity.lspidentifier2 = row.IsNull("lspidentifier2") ? string.Empty : row.Field<string>("lspidentifier2");
         entity.rowID = row.Field<byte[]>("oeehRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOeehBase(ref DataRow row, OeehBase entity)
      {
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("transtype", entity.transtype);
         row.SetField("custno", entity.custno);
         row.SetField("shipto", entity.shipto);
         row.SetField("custpo", entity.custpo);
         row.SetField("shiptonm", entity.shiptonm);
         row.SetField("shiptost", entity.shiptost);
         row.SetField("shiptozip", entity.shiptozip);
         row.SetField("whse", entity.whse);
         row.SetField("shipinstr", entity.shipinstr);
         row.SetField("refer", entity.refer);
         row.SetField("shipviaty", entity.shipviaty);
         row.SetField("placedby", entity.placedby);
         row.SetField("reqshipdt", entity.reqshipdt);
         row.SetField("takenby", entity.takenby);
         row.SetField("orderdisp", entity.orderdisp);
         row.SetField("bofl", entity.bofl);
         row.SetField("subfl", entity.subfl);
         row.SetField("cono", entity.cono);
         row.SetField("invno", entity.invno);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("approvty", entity.approvty);
         row.SetField("outbndfrtfl", entity.outbndfrtfl);
         row.SetField("inbndfrtfl", entity.inbndfrtfl);
         row.SetField("termstype", entity.termstype);
         row.SetField("canceldt", entity.canceldt);
         row.SetField("billdt", entity.billdt);
         row.SetField("storddays", entity.storddays);
         row.SetField("statecd", entity.statecd);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("invoicedt", entity.invoicedt);
         row.SetField("paiddt", entity.paiddt);
         row.SetField("vendrebord", entity.vendrebord);
         row.SetField("vendrebamt", entity.vendrebamt);
         row.SetField("pickeddt", entity.pickeddt);
         row.SetField("totcommcost", entity.totcommcost);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("setno2", entity.setno2);
         row.SetField("drdeltm", entity.drdeltm);
         row.SetField("countrycd", entity.countrycd);
         row.SetField("transtm", entity.transtm);
         row.SetField("wletsetno", entity.wletsetno);
         row.SetField("taxovercd", entity.taxovercd);
         row.SetField("shiptoaddr1", entity.shiptoaddr1);
         row.SetField("shiptoaddr2", entity.shiptoaddr2);
         row.SetField("nontaxtype", entity.nontaxtype);
         row.SetField("shiptocity", entity.shiptocity);
         row.SetField("bpquoteno", entity.bpquoteno);
         row.SetField("norushln", entity.norushln);
         row.SetField("asndt", entity.asndt);
         row.SetField("nolineitem", entity.nolineitem);
         row.SetField("ackdt", entity.ackdt);
         row.SetField("addonamt1", entity.addonamt1);
         row.SetField("addonamt2", entity.addonamt2);
         row.SetField("addonamt3", entity.addonamt3);
         row.SetField("addonamt4", entity.addonamt4);
         row.SetField("poissdt", entity.poissdt);
         row.SetField("addontype1", entity.addontype1);
         row.SetField("addontype2", entity.addontype2);
         row.SetField("addontype3", entity.addontype3);
         row.SetField("addontype4", entity.addontype4);
         row.SetField("createdt", entity.createdt);
         row.SetField("addonno1", entity.addonno1);
         row.SetField("addonno2", entity.addonno2);
         row.SetField("addonno3", entity.addonno3);
         row.SetField("addonno4", entity.addonno4);
         row.SetField("usestepfl", entity.usestepfl);
         row.SetField("drexpfl", entity.drexpfl);
         row.SetField("totinvamt", entity.totinvamt);
         row.SetField("user3", entity.user3);
         row.SetField("totweight", entity.totweight);
         row.SetField("user4", entity.user4);
         row.SetField("totcubes", entity.totcubes);
         row.SetField("user5", entity.user5);
         row.SetField("totqtyshp", entity.totqtyshp);
         row.SetField("user6", entity.user6);
         row.SetField("totqtyord", entity.totqtyord);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("totlineamt", entity.totlineamt);
         row.SetField("user9", entity.user9);
         row.SetField("wodiscamt", entity.wodiscamt);
         row.SetField("wodisctype", entity.wodisctype);
         row.SetField("totcost", entity.totcost);
         row.SetField("slsrepin", entity.slsrepin);
         row.SetField("slsrepout", entity.slsrepout);
         row.SetField("taxauth", entity.taxauth);
         row.SetField("stagearea", entity.stagearea);
         row.SetField("totcommin", entity.totcommin);
         row.SetField("termsdiscamt", entity.termsdiscamt);
         row.SetField("dwnpmtamt", entity.dwnpmtamt);
         row.SetField("payamt1", entity.payamt1);
         row.SetField("payamt2", entity.payamt2);
         row.SetField("payamt3", entity.payamt3);
         row.SetField("apprinit", entity.apprinit);
         row.SetField("termspct", entity.termspct);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("nosnlots", entity.nosnlots);
         row.SetField("notimeschg", entity.notimeschg);
         row.SetField("pickprno", entity.pickprno);
         row.SetField("setno", entity.setno);
         row.SetField("stordty", entity.stordty);
         row.SetField("wodiscoverfl", entity.wodiscoverfl);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("nextlineno", entity.nextlineno);
         row.SetField("dwnpmttype", entity.dwnpmttype);
         row.SetField("linefl", entity.linefl);
         row.SetField("taxsaleamt1", entity.taxsaleamt1);
         row.SetField("taxsaleamt3", entity.taxsaleamt3);
         row.SetField("taxsaleamt4", entity.taxsaleamt4);
         row.SetField("taxsaleamt5", entity.taxsaleamt5);
         row.SetField("taxablefl", entity.taxablefl);
         row.SetField("codfl", entity.codfl);
         row.SetField("crreasonty", entity.crreasonty);
         row.SetField("origorderno", entity.origorderno);
         row.SetField("totcommout", entity.totcommout);
         row.SetField("lumpbillfl", entity.lumpbillfl);
         row.SetField("lumpbillamt", entity.lumpbillamt);
         row.SetField("borelfl", entity.borelfl);
         row.SetField("borelno", entity.borelno);
         row.SetField("lockfl", entity.lockfl);
         row.SetField("shipdt", entity.shipdt);
         row.SetField("totcorechg", entity.totcorechg);
         row.SetField("totordamt", entity.totordamt);
         row.SetField("printpckfl", entity.printpckfl);
         row.SetField("wodeftype", entity.wodeftype);
         row.SetField("wodiscpct", entity.wodiscpct);
         row.SetField("longltdays", entity.longltdays);
         row.SetField("arpvendno", entity.arpvendno);
         row.SetField("arpwhse", entity.arpwhse);
         row.SetField("totdatccost", entity.totdatccost);
         row.SetField("datcoverfl", entity.datcoverfl);
         row.SetField("bolinefl", entity.bolinefl);
         row.SetField("totlineord", entity.totlineord);
         row.SetField("totcostord", entity.totcostord);
         row.SetField("specdiscamt", entity.specdiscamt);
         row.SetField("totprice", entity.totprice);
         row.SetField("credoverfl", entity.credoverfl);
         row.SetField("jobno", entity.jobno);
         row.SetField("jrnlno2", entity.jrnlno2);
         row.SetField("prosno", entity.prosno);
         row.SetField("proposalno", entity.proposalno);
         row.SetField("lostbusty", entity.lostbusty);
         row.SetField("pricecd", entity.pricecd);
         row.SetField("totlineret", entity.totlineret);
         row.SetField("taxamt1", entity.taxamt1);
         row.SetField("taxamt2", entity.taxamt2);
         row.SetField("taxamt3", entity.taxamt3);
         row.SetField("taxamt4", entity.taxamt4);
         row.SetField("updtype", entity.updtype);
         row.SetField("pickprtfl", entity.pickprtfl);
         row.SetField("lumppricefl", entity.lumppricefl);
         row.SetField("boexistsfl", entity.boexistsfl);
         row.SetField("discdt", entity.discdt);
         row.SetField("divno", entity.divno);
         row.SetField("totqtyret", entity.totqtyret);
         row.SetField("pickinit", entity.pickinit);
         row.SetField("pkgid", entity.pkgid);
         row.SetField("openinit", entity.openinit);
         row.SetField("nocatwght", entity.nocatwght);
         row.SetField("wtauth", entity.wtauth);
         row.SetField("pickcnt", entity.pickcnt);
         row.SetField("addoverfl1", entity.addoverfl1);
         row.SetField("addoverfl2", entity.addoverfl2);
         row.SetField("addoverfl3", entity.addoverfl3);
         row.SetField("addoverfl4", entity.addoverfl4);
         row.SetField("addonnet1", entity.addonnet1);
         row.SetField("addonnet2", entity.addonnet2);
         row.SetField("addonnet3", entity.addonnet3);
         row.SetField("addonnet4", entity.addonnet4);
         row.SetField("addtaxgroup1", entity.addtaxgroup1);
         row.SetField("addtaxgroup2", entity.addtaxgroup2);
         row.SetField("addtaxgroup3", entity.addtaxgroup3);
         row.SetField("addtaxgroup4", entity.addtaxgroup4);
         row.SetField("termslinefl", entity.termslinefl);
         row.SetField("termsdiscln", entity.termsdiscln);
         row.SetField("langcd", entity.langcd);
         row.SetField("invcnt", entity.invcnt);
         row.SetField("nolnnotbo", entity.nolnnotbo);
         row.SetField("nopackages", entity.nopackages);
         row.SetField("pstlicenseno", entity.pstlicenseno);
         row.SetField("totinvord", entity.totinvord);
         row.SetField("gsttype", entity.gsttype);
         row.SetField("origcanfl", entity.origcanfl);
         row.SetField("psttaxamt", entity.psttaxamt);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("pickedtm", entity.pickedtm);
         row.SetField("shiptm", entity.shiptm);
         row.SetField("taxoverfl", entity.taxoverfl);
         row.SetField("route", entity.route);
         row.SetField("entertm", entity.entertm);
         row.SetField("manzonefl", entity.manzonefl);
         row.SetField("shippingpt", entity.shippingpt);
         row.SetField("pkglabel", entity.pkglabel);
         row.SetField("actfreight", entity.actfreight);
         row.SetField("promisedt", entity.promisedt);
         row.SetField("fpcustno", entity.fpcustno);
         row.SetField("dexfl", entity.dexfl);
         row.SetField("taxtypeau", entity.taxtypeau);
         row.SetField("codcollamt", entity.codcollamt);
         row.SetField("zone", entity.zone);
         row.SetField("totrestkamt", entity.totrestkamt);
         row.SetField("pmfl", entity.pmfl);
         row.SetField("bostage", entity.bostage);
         row.SetField("totqtyshpp", entity.totqtyshpp);
         row.SetField("prevaddamt", entity.prevaddamt);
         row.SetField("prevaddtype", entity.prevaddtype);
         row.SetField("geocd", entity.geocd);
         row.SetField("arpcono", entity.arpcono);
         row.SetField("tottendamt", entity.tottendamt);
         row.SetField("writeoffamt", entity.writeoffamt);
         row.SetField("tendamt", entity.tendamt);
         row.SetField("sourcepros", entity.sourcepros);
         row.SetField("arpshipfmno", entity.arpshipfmno);
         row.SetField("nodolines", entity.nodolines);
         row.SetField("taxsaleamt21", entity.taxsaleamt21);
         row.SetField("taxsaleamt22", entity.taxsaleamt22);
         row.SetField("taxsaleamt23", entity.taxsaleamt23);
         row.SetField("taxsaleamt24", entity.taxsaleamt24);
         row.SetField("taxsaleamt25", entity.taxsaleamt25);
         row.SetField("taxdefltty", entity.taxdefltty);
         row.SetField("totdatccost2", entity.totdatccost2);
         row.SetField("totcorechg2", entity.totcorechg2);
         row.SetField("restrictty", entity.restrictty);
         row.SetField("transproc", entity.transproc);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("jmjobid", entity.jmjobid);
         row.SetField("drholdfl", entity.drholdfl);
         row.SetField("salesexrate", entity.salesexrate);
         row.SetField("extracted", entity.extracted);
         row.SetField("drdeldt", entity.drdeldt);
         row.SetField("repairordno", entity.repairordno);
         row.SetField("repairordsuf", entity.repairordsuf);
         row.SetField("jmjobrevno", entity.jmjobrevno);
         row.SetField("contactid", entity.contactid);
         row.SetField("printpricefl", entity.printpricefl);
         row.SetField("consolinvdt", entity.consolinvdt);
         row.SetField("shiptoaddr3", entity.shiptoaddr3);
         row.SetField("termsdisconpst", entity.termsdisconpst);
         row.SetField("user10", entity.user10);
         row.SetField("user11", entity.user11);
         row.SetField("user12", entity.user12);
         row.SetField("user13", entity.user13);
         row.SetField("user14", entity.user14);
         row.SetField("user15", entity.user15);
         row.SetField("user16", entity.user16);
         row.SetField("user17", entity.user17);
         row.SetField("user18", entity.user18);
         row.SetField("user19", entity.user19);
         row.SetField("user20", entity.user20);
         row.SetField("user21", entity.user21);
         row.SetField("user22", entity.user22);
         row.SetField("user23", entity.user23);
         row.SetField("user24", entity.user24);
         row.SetField("consolorderno", entity.consolorderno);
         row.SetField("email", entity.email);
         row.SetField("contactnm", entity.contactnm);
         row.SetField("esbshipmentfl", entity.esbshipmentfl);
         row.SetField("esbinvoicefl", entity.esbinvoicefl);
         row.SetField("esbsalesorderfl", entity.esbsalesorderfl);
         row.SetField("ccnonrefundfl", entity.ccnonrefundfl);
         row.SetField("jrnlno3", entity.jrnlno3);
         row.SetField("esbquotefl", entity.esbquotefl);
         row.SetField("recoveryfl", entity.recoveryfl);
         row.SetField("billonrcptfl", entity.billonrcptfl);
         row.SetField("autoaltwhsefl", entity.autoaltwhsefl);
         row.SetField("domtaxamt1", entity.domtaxamt1);
         row.SetField("domtaxamt2", entity.domtaxamt2);
         row.SetField("domtaxamt3", entity.domtaxamt3);
         row.SetField("domtaxamt4", entity.domtaxamt4);
         row.SetField("saleswhse", entity.saleswhse);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("vatamt1", entity.vatamt1);
         row.SetField("vatamt2", entity.vatamt2);
         row.SetField("vatamt3", entity.vatamt3);
         row.SetField("vatamt4", entity.vatamt4);
         row.SetField("vatamt5", entity.vatamt5);
         row.SetField("outofcityfl", entity.outofcityfl);
         row.SetField("settdiscamt1", entity.settdiscamt1);
         row.SetField("settdiscamt2", entity.settdiscamt2);
         row.SetField("settdiscamt3", entity.settdiscamt3);
         row.SetField("settdiscamt4", entity.settdiscamt4);
         row.SetField("settdiscamt5", entity.settdiscamt5);
         row.SetField("spectaxcd", entity.spectaxcd);
         row.SetField("btprintfl", entity.btprintfl);
         row.SetField("billdirectaddon", entity.billdirectaddon);
         row.SetField("frttermscd", entity.frttermscd);
         row.SetField("transferloc", entity.transferloc);
         row.SetField("origpromisedt", entity.origpromisedt);
         row.SetField("origpromisedtlockedfl", entity.origpromisedtlockedfl);
         row.SetField("extshipinstr", entity.extshipinstr);
         row.SetField("frtbillacct", entity.frtbillacct);
         row.SetField("autoapplycreditfl", entity.autoapplycreditfl);
         row.SetField("frtbillnm", entity.frtbillnm);
         row.SetField("frtbillst", entity.frtbillst);
         row.SetField("frtbillzip", entity.frtbillzip);
         row.SetField("frtbilladdr1", entity.frtbilladdr1);
         row.SetField("frtbilladdr2", entity.frtbilladdr2);
         row.SetField("frtbillcity", entity.frtbillcity);
         row.SetField("frtbilladdr3", entity.frtbilladdr3);
         row.SetField("frtbillcountrycd", entity.frtbillcountrycd);
         row.SetField("frtbillcd", entity.frtbillcd);
         row.SetField("origincd", entity.origincd);
         row.SetField("dlvprintty", entity.dlvprintty);
         row.SetField("origincopyty", entity.origincopyty);
         row.SetField("dlvcnt", entity.dlvcnt);
         row.SetField("originorderno", entity.originorderno);
         row.SetField("originordersuf", entity.originordersuf);
         row.SetField("approvintlty", entity.approvintlty);
         row.SetField("sfuser", entity.sfuser);
         row.SetField("noinvoicefl", entity.noinvoicefl);
         row.SetField("shipmentnotice", entity.shipmentnotice);
         row.SetField("servicekey", entity.servicekey);
         row.SetField("vendretauth", entity.vendretauth);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("fulfillmentordfl", entity.fulfillmentordfl);
         row.SetField("fulfillmenttiedfl", entity.fulfillmenttiedfl);
         row.SetField("fulfillmentstgcd", entity.fulfillmentstgcd);
         row.SetField("fulfillmentbillcd", entity.fulfillmentbillcd);
         row.SetField("ordersource", entity.ordersource);
         row.SetField("relateddocument", entity.relateddocument);
         row.SetField("lspinvregstatus", entity.lspinvregstatus);
         row.SetField("lspuuid", entity.lspuuid);
         row.SetField("lspinvregstatdttmz", entity.lspinvregstatdttmz);
         row.SetField("lspidentifier1", entity.lspidentifier1);
         row.SetField("lspidentifier2", entity.lspidentifier2);
         row.SetField("oeehRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, OeehBase entity)
      {
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("cono", entity.cono);
         row.SetField("oeehRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	