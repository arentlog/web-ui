//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.OE
{
   /// <summary>
   /// Order Entry Line Items
   /// </summary>
   [EntityType("Order Entry Line Items","TBD","SalesOrderLine")]
   public partial class OeelBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Order #
      /// </summary>
      [BodID(1,RequiredId.True),Key,Order]
      public int orderno { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      [BodID(2,RequiredId.True),Key,Order]
      public int ordersuf { get; set; }

      /// <summary>
      /// Line#
      /// </summary>
      [BusContext(BusPart.Descr),Key,Order]
      public int lineno { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      [BusContext(BusPart.AcctEntity),BodContext(BodPart.AcctEntity,""),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [ID(10),BodContext(BodPart.Location,""),BusContext(BusPart.Location),StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [ID(4),StringValidationAttribute]
      public string transtype { get; set; }

      /// <summary>
      /// Ship To
      /// </summary>
      [StringValidationAttribute]
      public string shipto { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      public decimal custno { get; set; }

      /// <summary>
      /// Ordered
      /// </summary>
      public decimal qtyord { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [ID(6),StringValidationAttribute]
      public string proddesc { get; set; }

      /// <summary>
      /// Units
      /// </summary>
      [StringValidationAttribute]
      public string unit { get; set; }

      /// <summary>
      /// Price
      /// </summary>
      public decimal price { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Entered
      /// </summary>
      public DateTime? enterdt { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Requested
      /// </summary>
      public DateTime? reqshipdt { get; set; }

      /// <summary>
      /// Discount
      /// </summary>
      public decimal discamt { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [ID(5),StringValidationAttribute]
      public string shipprod { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Ship Qty
      /// </summary>
      public decimal stkqtyship { get; set; }

      /// <summary>
      /// In
      /// </summary>
      public decimal commamtin { get; set; }

      /// <summary>
      /// Cost
      /// </summary>
      public decimal prodcost { get; set; }

      /// <summary>
      /// Category
      /// </summary>
      [StringValidationAttribute]
      public string prodcat { get; set; }

      /// <summary>
      /// ARP Line
      /// </summary>
      [StringValidationAttribute]
      public string arpprodline { get; set; }

      /// <summary>
      /// ARP Vendor #
      /// </summary>
      [ID(7)]
      public decimal arpvendno { get; set; }

      /// <summary>
      /// Usage
      /// </summary>
      public bool usagefl { get; set; }

      /// <summary>
      /// Related Order #
      /// </summary>
      public int orderaltno { get; set; }

      /// <summary>
      /// PO/WT #
      /// </summary>
      [StringValidationAttribute]
      public string ordertype { get; set; }

      /// <summary>
      /// B/O
      /// </summary>
      [StringValidationAttribute]
      public string botype { get; set; }

      /// <summary>
      /// Net Amt
      /// </summary>
      public decimal netamt { get; set; }

      /// <summary>
      /// Core Charge
      /// </summary>
      [StringValidationAttribute]
      public string corechgty { get; set; }

      /// <summary>
      /// Spec/NS
      /// </summary>
      [StringValidationAttribute]
      public string specnstype { get; set; }

      /// <summary>
      /// commrate
      /// </summary>
      public decimal commrate { get; set; }

      /// <summary>
      /// Lead Time
      /// </summary>
      public int leadtm { get; set; }

      /// <summary>
      /// commratein
      /// </summary>
      public decimal commratein { get; set; }

      /// <summary>
      /// Requested Prod
      /// </summary>
      [StringValidationAttribute]
      public string reqprod { get; set; }

      /// <summary>
      /// GL Cost
      /// </summary>
      public decimal glcost { get; set; }

      /// <summary>
      /// Cross Ref Type
      /// </summary>
      [StringValidationAttribute]
      public string xrefprodty { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// WL Pick Type
      /// </summary>
      [StringValidationAttribute]
      public string wlpicktype { get; set; }

      /// <summary>
      /// Advertising Code
      /// </summary>
      [StringValidationAttribute]
      public string advertisingcode { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal weight { get; set; }

      /// <summary>
      /// FTC Notification
      /// </summary>
      [StringValidationAttribute]
      public string ftcnote { get; set; }

      /// <summary>
      /// Cube
      /// </summary>
      public decimal cubes { get; set; }

      /// <summary>
      /// Cost Type
      /// </summary>
      [StringValidationAttribute]
      public string costtype { get; set; }

      /// <summary>
      /// Price Over
      /// </summary>
      public bool priceoverfl { get; set; }

      /// <summary>
      /// Disc Over
      /// </summary>
      public bool discoverfl { get; set; }

      /// <summary>
      /// Line
      /// </summary>
      [StringValidationAttribute]
      public string prodline { get; set; }

      /// <summary>
      /// Ship Qty Over
      /// </summary>
      public bool shpqtyoverfl { get; set; }

      /// <summary>
      /// Spec Rec Link
      /// </summary>
      public int icspecrecno { get; set; }

      /// <summary>
      /// Tally Kit
      /// </summary>
      public bool tallyfl { get; set; }

      /// <summary>
      /// # Times Chg
      /// </summary>
      public int notimeschg { get; set; }

      /// <summary>
      /// SX Extract Dt
      /// </summary>
      public DateTime? sxextractdt { get; set; }

      /// <summary>
      /// Stat
      /// </summary>
      [StringValidationAttribute]
      public string statustype { get; set; }

      /// <summary>
      /// Delay Reservation
      /// </summary>
      public bool delayresrvfl { get; set; }

      /// <summary>
      /// PD Rec #
      /// </summary>
      public int pdrecno { get; set; }

      /// <summary>
      /// Ptl Kit
      /// </summary>
      public bool ptlkitbofl { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// Pick Tck Print
      /// </summary>
      public bool printpckfl { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// Charge Qty
      /// </summary>
      public decimal chrgqty { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// BO #
      /// </summary>
      public int bono { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Comm Cost
      /// </summary>
      public decimal commcost { get; set; }

      /// <summary>
      /// Qty From Receivers
      /// </summary>
      public decimal qtyfmrcvs { get; set; }

      /// <summary>
      /// Territory
      /// </summary>
      [StringValidationAttribute]
      public string salesterr { get; set; }

      /// <summary>
      /// # SN/Lots
      /// </summary>
      public decimal nosnlots { get; set; }

      /// <summary>
      /// Return
      /// </summary>
      public bool returnfl { get; set; }

      /// <summary>
      /// Prev Qty Shp
      /// </summary>
      public decimal prevqtyshp { get; set; }

      /// <summary>
      /// Comment
      /// </summary>
      public bool commentfl { get; set; }

      /// <summary>
      /// Catch Wt
      /// </summary>
      public bool catwtfl { get; set; }

      /// <summary>
      /// Discount %
      /// </summary>
      public decimal discpct { get; set; }

      /// <summary>
      /// Qty Ship
      /// </summary>
      public decimal qtyship { get; set; }

      /// <summary>
      /// Taxable
      /// </summary>
      public bool taxablefl { get; set; }

      /// <summary>
      /// Line # Alternate
      /// </summary>
      public int linealtno { get; set; }

      /// <summary>
      /// Promotional
      /// </summary>
      public bool promofl { get; set; }

      /// <summary>
      /// Line Disc Level
      /// </summary>
      public int disccd { get; set; }

      /// <summary>
      /// Price Type
      /// </summary>
      [StringValidationAttribute]
      public string pricetype { get; set; }

      /// <summary>
      /// Lost Business Reason
      /// </summary>
      [StringValidationAttribute]
      public string lostbusty { get; set; }

      /// <summary>
      /// Price Calc
      /// </summary>
      [StringValidationAttribute]
      public string priceclty { get; set; }

      /// <summary>
      /// Price Level/C+ %
      /// </summary>
      public decimal pricecd { get; set; }

      /// <summary>
      /// Salesrep Commission - Out
      /// </summary>
      public decimal commamtout { get; set; }

      /// <summary>
      /// Discount Type
      /// </summary>
      public bool disctype { get; set; }

      /// <summary>
      /// WT Company
      /// </summary>
      public int wtcono { get; set; }

      /// <summary>
      /// Alt Whse
      /// </summary>
      [StringValidationAttribute]
      public string altwhse { get; set; }

      /// <summary>
      /// Core Charge
      /// </summary>
      public decimal corecharge { get; set; }

      /// <summary>
      /// # Sn/Lots-Kits
      /// </summary>
      public decimal nosnlotsk { get; set; }

      /// <summary>
      /// Reason
      /// </summary>
      [StringValidationAttribute]
      public string reasunavty { get; set; }

      /// <summary>
      /// Qty Released
      /// </summary>
      public decimal qtyrel { get; set; }

      /// <summary>
      /// DATC
      /// </summary>
      public decimal datccost { get; set; }

      /// <summary>
      /// Net Ord
      /// </summary>
      public decimal netord { get; set; }

      /// <summary>
      /// Stk Qty Ord
      /// </summary>
      public decimal stkqtyord { get; set; }

      /// <summary>
      /// Bin Loc
      /// </summary>
      [StringValidationAttribute]
      public string binloc { get; set; }

      /// <summary>
      /// Salesrep In
      /// </summary>
      [ID(8),StringValidationAttribute]
      public string slsrepin { get; set; }

      /// <summary>
      /// Out
      /// </summary>
      [ID(9),StringValidationAttribute]
      public string slsrepout { get; set; }

      /// <summary>
      /// Kit
      /// </summary>
      public bool kitfl { get; set; }

      /// <summary>
      /// Qty Unavailable
      /// </summary>
      public decimal qtyunavail { get; set; }

      /// <summary>
      /// Refer
      /// </summary>
      [StringValidationAttribute]
      public string jobno { get; set; }

      /// <summary>
      /// Other Disc
      /// </summary>
      public decimal discamtoth { get; set; }

      /// <summary>
      /// Description 2
      /// </summary>
      [StringValidationAttribute]
      public string proddesc2 { get; set; }

      /// <summary>
      /// Priceing Cost Type
      /// </summary>
      [StringValidationAttribute]
      public string pricecostty { get; set; }

      /// <summary>
      /// Commission
      /// </summary>
      [StringValidationAttribute]
      public string commtype { get; set; }

      /// <summary>
      /// Comm Paid
      /// </summary>
      public bool commpaidfl { get; set; }

      /// <summary>
      /// OE Kit Rollup
      /// </summary>
      [StringValidationAttribute]
      public string kitrollty { get; set; }

      /// <summary>
      /// Print Invoice Price
      /// </summary>
      public bool printpricefl { get; set; }

      /// <summary>
      /// Print Subtotal
      /// </summary>
      public bool subtotalfl { get; set; }

      /// <summary>
      /// Cost Over
      /// </summary>
      public bool costoverfl { get; set; }

      /// <summary>
      /// WO Disc
      /// </summary>
      public decimal wodiscamt { get; set; }

      /// <summary>
      /// Invoice
      /// </summary>
      public DateTime? invoicedt { get; set; }

      /// <summary>
      /// Credit Memo Reason
      /// </summary>
      [StringValidationAttribute]
      public string crreasonty { get; set; }

      /// <summary>
      /// Manual Commission
      /// </summary>
      public bool commmanfl { get; set; }

      /// <summary>
      /// Group
      /// </summary>
      public int taxgroup { get; set; }

      /// <summary>
      /// Non Tax Reason
      /// </summary>
      [StringValidationAttribute]
      public string nontaxtype { get; set; }

      /// <summary>
      /// Terms Discount %
      /// </summary>
      public decimal termspct { get; set; }

      /// <summary>
      /// G.S.T. Status
      /// </summary>
      public bool gststatus { get; set; }

      /// <summary>
      /// HS Code
      /// </summary>
      [StringValidationAttribute]
      public string tariffcd { get; set; }

      /// <summary>
      /// Comm Paid
      /// </summary>
      public bool commpaidinfl { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Whse Mgr Qty Ship
      /// </summary>
      public decimal wmqtyship { get; set; }

      /// <summary>
      /// Taxable Type
      /// </summary>
      [StringValidationAttribute]
      public string taxablety { get; set; }

      /// <summary>
      /// Tax Amount
      /// </summary>
      public decimal taxamount1 { get; set; }
      public decimal taxamount2 { get; set; }
      public decimal taxamount3 { get; set; }
      public decimal taxamount4 { get; set; }

      /// <summary>
      /// Warranty Tag #
      /// </summary>
      [StringValidationAttribute]
      public string warrtag { get; set; }

      /// <summary>
      /// Warranty Stage
      /// </summary>
      public int warrstagecd { get; set; }

      /// <summary>
      /// Restock Charge
      /// </summary>
      public decimal restockamt { get; set; }

      /// <summary>
      /// Restock Type
      /// </summary>
      public bool restockfl { get; set; }

      /// <summary>
      /// Return Type
      /// </summary>
      [StringValidationAttribute]
      public string returnty { get; set; }

      /// <summary>
      /// Qty Returned
      /// </summary>
      public decimal qtyreturn { get; set; }

      /// <summary>
      /// Return Order #
      /// </summary>
      public int retorderno { get; set; }

      /// <summary>
      /// retordersuf
      /// </summary>
      public int retordersuf { get; set; }

      /// <summary>
      /// Return Line #
      /// </summary>
      public int retlineno { get; set; }

      /// <summary>
      /// Old Stk Qty
      /// </summary>
      public decimal ostkqtyship { get; set; }

      /// <summary>
      /// Warranty Exchange
      /// </summary>
      public bool warrexchgfl { get; set; }

      /// <summary>
      /// Promised
      /// </summary>
      public DateTime? promisedt { get; set; }

      /// <summary>
      /// JIT Picked
      /// </summary>
      public bool jitpickfl { get; set; }

      /// <summary>
      /// Added From Catalog
      /// </summary>
      public bool cataddfl { get; set; }

      /// <summary>
      /// PO/WT BO Status
      /// </summary>
      [StringValidationAttribute]
      public string dobotype { get; set; }

      /// <summary>
      /// Ship From
      /// </summary>
      public int shipfmno { get; set; }

      /// <summary>
      /// # Stk Units
      /// </summary>
      public decimal unitconv { get; set; }

      /// <summary>
      /// Restrict Changes
      /// </summary>
      [StringValidationAttribute]
      public string restrictty { get; set; }

      /// <summary>
      /// Rush
      /// </summary>
      public bool rushfl { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Cancelled Date
      /// </summary>
      public DateTime? canceldt { get; set; }

      /// <summary>
      /// ChgtoLn
      /// </summary>
      public int chgtolineno { get; set; }

      /// <summary>
      /// Restock Tax Group
      /// </summary>
      public int restktaxgrp { get; set; }

      /// <summary>
      /// SubTotal Description
      /// </summary>
      [StringValidationAttribute]
      public string subtotaldesc { get; set; }

      /// <summary>
      /// Kit Split Amt
      /// </summary>
      public decimal kitsplitamt { get; set; }

      /// <summary>
      /// PC
      /// </summary>
      [StringValidationAttribute]
      public string priceorigcd { get; set; }

      /// <summary>
      /// Ptl BO #
      /// </summary>
      public int bonoptl { get; set; }

      /// <summary>
      /// Core Rtn Ty
      /// </summary>
      [StringValidationAttribute]
      public string corertnty { get; set; }

      /// <summary>
      /// Certified Nbr
      /// </summary>
      [StringValidationAttribute]
      public string certifiednbr { get; set; }

      /// <summary>
      /// Certified Organization
      /// </summary>
      [StringValidationAttribute]
      public string certifiedorg { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [StringValidationAttribute]
      public string certifiedname { get; set; }

      /// <summary>
      /// ChgQty
      /// </summary>
      public bool chgqtyfl { get; set; }

      /// <summary>
      /// Orig Core
      /// </summary>
      [StringValidationAttribute]
      public string origcore { get; set; }

      /// <summary>
      /// OrigLine#
      /// </summary>
      public int origlineno { get; set; }

      /// <summary>
      /// esRqstId
      /// </summary>
      [StringValidationAttribute]
      public string esrqstid { get; set; }

      /// <summary>
      /// User 10
      /// </summary>
      [StringValidationAttribute]
      public string user10 { get; set; }

      /// <summary>
      /// User 11
      /// </summary>
      [StringValidationAttribute]
      public string user11 { get; set; }

      /// <summary>
      /// User 12
      /// </summary>
      [StringValidationAttribute]
      public string user12 { get; set; }

      /// <summary>
      /// User 13
      /// </summary>
      [StringValidationAttribute]
      public string user13 { get; set; }

      /// <summary>
      /// User 14
      /// </summary>
      [StringValidationAttribute]
      public string user14 { get; set; }

      /// <summary>
      /// User 15
      /// </summary>
      [StringValidationAttribute]
      public string user15 { get; set; }

      /// <summary>
      /// User 16
      /// </summary>
      [StringValidationAttribute]
      public string user16 { get; set; }

      /// <summary>
      /// User 17
      /// </summary>
      [StringValidationAttribute]
      public string user17 { get; set; }

      /// <summary>
      /// User 18
      /// </summary>
      [StringValidationAttribute]
      public string user18 { get; set; }

      /// <summary>
      /// User 19
      /// </summary>
      [StringValidationAttribute]
      public string user19 { get; set; }

      /// <summary>
      /// User 20
      /// </summary>
      [StringValidationAttribute]
      public string user20 { get; set; }

      /// <summary>
      /// User 21
      /// </summary>
      [StringValidationAttribute]
      public string user21 { get; set; }

      /// <summary>
      /// User 22
      /// </summary>
      [StringValidationAttribute]
      public string user22 { get; set; }

      /// <summary>
      /// User 23
      /// </summary>
      [StringValidationAttribute]
      public string user23 { get; set; }

      /// <summary>
      /// User 24
      /// </summary>
      [StringValidationAttribute]
      public string user24 { get; set; }

      /// <summary>
      /// Review Inv For NS
      /// </summary>
      public bool nonstkrevfl { get; set; }

      /// <summary>
      /// Added From Non Stock
      /// </summary>
      public bool nonstkaddfl { get; set; }

      /// <summary>
      /// Inventory Type
      /// </summary>
      [StringValidationAttribute]
      public string inventoryty { get; set; }

      /// <summary>
      /// Customer Cost
      /// </summary>
      public decimal custcost { get; set; }

      /// <summary>
      /// Configure Kit
      /// </summary>
      public bool cfgkitfl { get; set; }

      /// <summary>
      /// Hard Price
      /// </summary>
      public bool hardpricefl { get; set; }

      /// <summary>
      /// Cut?
      /// </summary>
      public bool cutfl { get; set; }

      /// <summary>
      /// Cut Loss Amount
      /// </summary>
      public decimal cutlossamt { get; set; }

      /// <summary>
      /// Scrap Loss Amount
      /// </summary>
      public decimal scraplossamt { get; set; }

      /// <summary>
      /// CR Invoice #
      /// </summary>
      public int crinvno { get; set; }

      /// <summary>
      /// CR Invoice Suffix
      /// </summary>
      public int crinvsuf { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Tax Adjustment
      /// </summary>
      public bool taxadjfl { get; set; }

      /// <summary>
      /// Contract Number
      /// </summary>
      [StringValidationAttribute]
      public string contractno { get; set; }

      /// <summary>
      /// Contract Start Date
      /// </summary>
      public DateTime? contrstartdt { get; set; }

      /// <summary>
      /// Contract End Date
      /// </summary>
      public DateTime? contrenddt { get; set; }

      /// <summary>
      /// Vendor Quote
      /// </summary>
      [StringValidationAttribute]
      public string vendquote { get; set; }

      /// <summary>
      /// Replacement Cost
      /// </summary>
      public decimal replcost { get; set; }

      /// <summary>
      /// Base Assembly
      /// </summary>
      [StringValidationAttribute]
      public string vabaseassembly { get; set; }

      /// <summary>
      /// Assembly Length
      /// </summary>
      public decimal vaassemlgth { get; set; }

      /// <summary>
      /// ShipVia
      /// </summary>
      [StringValidationAttribute]
      public string quoteshipviaty { get; set; }

      /// <summary>
      /// NCNR
      /// </summary>
      [StringValidationAttribute]
      public string ncnr { get; set; }

      /// <summary>
      /// Version #
      /// </summary>
      public int verno { get; set; }

      /// <summary>
      /// ECCN
      /// </summary>
      [StringValidationAttribute]
      public string eccnclasscd { get; set; }

      /// <summary>
      /// Country of Origin
      /// </summary>
      [StringValidationAttribute]
      public string countryoforigin { get; set; }

      /// <summary>
      /// Original Promised
      /// </summary>
      public DateTime? origpromisedt { get; set; }

      /// <summary>
      /// System PD Rec#
      /// </summary>
      public int systempdscrecid { get; set; }

      /// <summary>
      /// System Price
      /// </summary>
      public decimal systemprice { get; set; }

      /// <summary>
      /// System Price Reference
      /// </summary>
      [StringValidationAttribute]
      public string systemrefer { get; set; }

      /// <summary>
      /// System Contract Number
      /// </summary>
      [StringValidationAttribute]
      public string systemcontractno { get; set; }

      /// <summary>
      /// System Price Sheet
      /// </summary>
      [StringValidationAttribute]
      public string systempricesheet { get; set; }

      /// <summary>
      /// System Price Effective Date
      /// </summary>
      public DateTime? systemeffectivedate { get; set; }

      /// <summary>
      /// System Based On Type
      /// </summary>
      [StringValidationAttribute]
      public string systempriceonty { get; set; }

      /// <summary>
      /// System Based On Amount
      /// </summary>
      public decimal systempriceonamount { get; set; }

      /// <summary>
      /// System Pricing Cost Amt
      /// </summary>
      public decimal systempdcostamt { get; set; }

      /// <summary>
      /// System Mark Up From Type
      /// </summary>
      [StringValidationAttribute]
      public string systempdcostty { get; set; }

      /// <summary>
      /// Highest Price Order Number
      /// </summary>
      public int hiprcorderno { get; set; }

      /// <summary>
      /// Highest Price Order Suffix
      /// </summary>
      public int hiprcordersuf { get; set; }

      /// <summary>
      /// Highest Price Line#
      /// </summary>
      public int hiprclineno { get; set; }

      /// <summary>
      /// Override Type
      /// </summary>
      [StringValidationAttribute]
      public string overridetype { get; set; }

      /// <summary>
      /// High Tolerance Price
      /// </summary>
      public decimal hightolprice { get; set; }

      /// <summary>
      /// Low Tolerance Price
      /// </summary>
      public decimal lowtolprice { get; set; }

      /// <summary>
      /// EHF Amount
      /// </summary>
      public decimal ehfamt { get; set; }

      /// <summary>
      /// EHF Exempt Amount
      /// </summary>
      public decimal ehfexemptamt { get; set; }

      /// <summary>
      /// EHF Net Amount
      /// </summary>
      public decimal ehfnetamt { get; set; }

      /// <summary>
      /// EHF Addon
      /// </summary>
      public int ehfaddonno { get; set; }

      /// <summary>
      /// Alternate Product Group
      /// </summary>
      [StringValidationAttribute]
      public string altprodgrp { get; set; }

      /// <summary>
      /// Vendor Return Auth
      /// </summary>
      [StringValidationAttribute]
      public string vendretauth { get; set; }

      /// <summary>
      /// Taxation Weight
      /// </summary>
      public decimal taxweight { get; set; }

      /// <summary>
      /// UPC Identifier
      /// </summary>
      [StringValidationAttribute]
      public string upcid { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }

      /// <summary>
      /// Line Ship Complete
      /// </summary>
      public bool shipcompfl { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildOeelBaseFromRow<T>(DataRow row) where T:OeelBase, new()
      {
         T entity = new T();
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.qtyord = row.IsNull("qtyord") ? decimal.Zero : row.Field<decimal>("qtyord");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.proddesc = row.IsNull("proddesc") ? string.Empty : row.Field<string>("proddesc");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.price = row.IsNull("price") ? decimal.Zero : row.Field<decimal>("price");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.reqshipdt = row.Field<DateTime?>("reqshipdt");
         entity.discamt = row.IsNull("discamt") ? decimal.Zero : row.Field<decimal>("discamt");
         entity.shipprod = row.IsNull("shipprod") ? string.Empty : row.Field<string>("shipprod");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.stkqtyship = row.IsNull("stkqtyship") ? decimal.Zero : row.Field<decimal>("stkqtyship");
         entity.commamtin = row.IsNull("commamtin") ? decimal.Zero : row.Field<decimal>("commamtin");
         entity.prodcost = row.IsNull("prodcost") ? decimal.Zero : row.Field<decimal>("prodcost");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.arpprodline = row.IsNull("arpprodline") ? string.Empty : row.Field<string>("arpprodline");
         entity.arpvendno = row.IsNull("arpvendno") ? decimal.Zero : row.Field<decimal>("arpvendno");
         entity.usagefl = row.Field<bool>("usagefl");
         entity.orderaltno = row.IsNull("orderaltno") ? 0 : row.Field<int>("orderaltno");
         entity.ordertype = row.IsNull("ordertype") ? string.Empty : row.Field<string>("ordertype");
         entity.botype = row.IsNull("botype") ? string.Empty : row.Field<string>("botype");
         entity.netamt = row.IsNull("netamt") ? decimal.Zero : row.Field<decimal>("netamt");
         entity.corechgty = row.IsNull("corechgty") ? string.Empty : row.Field<string>("corechgty");
         entity.specnstype = row.IsNull("specnstype") ? string.Empty : row.Field<string>("specnstype");
         entity.commrate = row.IsNull("commrate") ? decimal.Zero : row.Field<decimal>("commrate");
         entity.leadtm = row.IsNull("leadtm") ? 0 : row.Field<int>("leadtm");
         entity.commratein = row.IsNull("commratein") ? decimal.Zero : row.Field<decimal>("commratein");
         entity.reqprod = row.IsNull("reqprod") ? string.Empty : row.Field<string>("reqprod");
         entity.glcost = row.IsNull("glcost") ? decimal.Zero : row.Field<decimal>("glcost");
         entity.xrefprodty = row.IsNull("xrefprodty") ? string.Empty : row.Field<string>("xrefprodty");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.wlpicktype = row.IsNull("wlpicktype") ? string.Empty : row.Field<string>("wlpicktype");
         entity.advertisingcode = row.IsNull("advertisingcode") ? string.Empty : row.Field<string>("advertisingcode");
         entity.weight = row.IsNull("weight") ? decimal.Zero : row.Field<decimal>("weight");
         entity.ftcnote = row.IsNull("ftcnote") ? string.Empty : row.Field<string>("ftcnote");
         entity.cubes = row.IsNull("cubes") ? decimal.Zero : row.Field<decimal>("cubes");
         entity.costtype = row.IsNull("costtype") ? string.Empty : row.Field<string>("costtype");
         entity.priceoverfl = row.Field<bool>("priceoverfl");
         entity.discoverfl = row.Field<bool>("discoverfl");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.shpqtyoverfl = row.Field<bool>("shpqtyoverfl");
         entity.icspecrecno = row.IsNull("icspecrecno") ? 0 : row.Field<int>("icspecrecno");
         entity.tallyfl = row.Field<bool>("tallyfl");
         entity.notimeschg = row.IsNull("notimeschg") ? 0 : row.Field<int>("notimeschg");
         entity.sxextractdt = row.Field<DateTime?>("sxextractdt");
         entity.statustype = row.IsNull("statustype") ? string.Empty : row.Field<string>("statustype");
         entity.delayresrvfl = row.Field<bool>("delayresrvfl");
         entity.pdrecno = row.IsNull("pdrecno") ? 0 : row.Field<int>("pdrecno");
         entity.ptlkitbofl = row.Field<bool>("ptlkitbofl");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.printpckfl = row.Field<bool>("printpckfl");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.chrgqty = row.IsNull("chrgqty") ? decimal.Zero : row.Field<decimal>("chrgqty");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.bono = row.IsNull("bono") ? 0 : row.Field<int>("bono");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.commcost = row.IsNull("commcost") ? decimal.Zero : row.Field<decimal>("commcost");
         entity.qtyfmrcvs = row.IsNull("qtyfmrcvs") ? decimal.Zero : row.Field<decimal>("qtyfmrcvs");
         entity.salesterr = row.IsNull("salesterr") ? string.Empty : row.Field<string>("salesterr");
         entity.nosnlots = row.IsNull("nosnlots") ? decimal.Zero : row.Field<decimal>("nosnlots");
         entity.returnfl = row.Field<bool>("returnfl");
         entity.prevqtyshp = row.IsNull("prevqtyshp") ? decimal.Zero : row.Field<decimal>("prevqtyshp");
         entity.commentfl = row.Field<bool>("commentfl");
         entity.catwtfl = row.Field<bool>("catwtfl");
         entity.discpct = row.IsNull("discpct") ? decimal.Zero : row.Field<decimal>("discpct");
         entity.qtyship = row.IsNull("qtyship") ? decimal.Zero : row.Field<decimal>("qtyship");
         entity.taxablefl = row.Field<bool>("taxablefl");
         entity.linealtno = row.IsNull("linealtno") ? 0 : row.Field<int>("linealtno");
         entity.promofl = row.Field<bool>("promofl");
         entity.disccd = row.IsNull("disccd") ? 0 : row.Field<int>("disccd");
         entity.pricetype = row.IsNull("pricetype") ? string.Empty : row.Field<string>("pricetype");
         entity.lostbusty = row.IsNull("lostbusty") ? string.Empty : row.Field<string>("lostbusty");
         entity.priceclty = row.IsNull("priceclty") ? string.Empty : row.Field<string>("priceclty");
         entity.pricecd = row.IsNull("pricecd") ? decimal.Zero : row.Field<decimal>("pricecd");
         entity.commamtout = row.IsNull("commamtout") ? decimal.Zero : row.Field<decimal>("commamtout");
         entity.disctype = row.Field<bool>("disctype");
         entity.wtcono = row.IsNull("wtcono") ? 0 : row.Field<int>("wtcono");
         entity.altwhse = row.IsNull("altwhse") ? string.Empty : row.Field<string>("altwhse");
         entity.corecharge = row.IsNull("corecharge") ? decimal.Zero : row.Field<decimal>("corecharge");
         entity.nosnlotsk = row.IsNull("nosnlotsk") ? decimal.Zero : row.Field<decimal>("nosnlotsk");
         entity.reasunavty = row.IsNull("reasunavty") ? string.Empty : row.Field<string>("reasunavty");
         entity.qtyrel = row.IsNull("qtyrel") ? decimal.Zero : row.Field<decimal>("qtyrel");
         entity.datccost = row.IsNull("datccost") ? decimal.Zero : row.Field<decimal>("datccost");
         entity.netord = row.IsNull("netord") ? decimal.Zero : row.Field<decimal>("netord");
         entity.stkqtyord = row.IsNull("stkqtyord") ? decimal.Zero : row.Field<decimal>("stkqtyord");
         entity.binloc = row.IsNull("binloc") ? string.Empty : row.Field<string>("binloc");
         entity.slsrepin = row.IsNull("slsrepin") ? string.Empty : row.Field<string>("slsrepin");
         entity.slsrepout = row.IsNull("slsrepout") ? string.Empty : row.Field<string>("slsrepout");
         entity.kitfl = row.Field<bool>("kitfl");
         entity.qtyunavail = row.IsNull("qtyunavail") ? decimal.Zero : row.Field<decimal>("qtyunavail");
         entity.jobno = row.IsNull("jobno") ? string.Empty : row.Field<string>("jobno");
         entity.discamtoth = row.IsNull("discamtoth") ? decimal.Zero : row.Field<decimal>("discamtoth");
         entity.proddesc2 = row.IsNull("proddesc2") ? string.Empty : row.Field<string>("proddesc2");
         entity.pricecostty = row.IsNull("pricecostty") ? string.Empty : row.Field<string>("pricecostty");
         entity.commtype = row.IsNull("commtype") ? string.Empty : row.Field<string>("commtype");
         entity.commpaidfl = row.Field<bool>("commpaidfl");
         entity.kitrollty = row.IsNull("kitrollty") ? string.Empty : row.Field<string>("kitrollty");
         entity.printpricefl = row.Field<bool>("printpricefl");
         entity.subtotalfl = row.Field<bool>("subtotalfl");
         entity.costoverfl = row.Field<bool>("costoverfl");
         entity.wodiscamt = row.IsNull("wodiscamt") ? decimal.Zero : row.Field<decimal>("wodiscamt");
         entity.invoicedt = row.Field<DateTime?>("invoicedt");
         entity.crreasonty = row.IsNull("crreasonty") ? string.Empty : row.Field<string>("crreasonty");
         entity.commmanfl = row.Field<bool>("commmanfl");
         entity.taxgroup = row.IsNull("taxgroup") ? 0 : row.Field<int>("taxgroup");
         entity.nontaxtype = row.IsNull("nontaxtype") ? string.Empty : row.Field<string>("nontaxtype");
         entity.termspct = row.IsNull("termspct") ? decimal.Zero : row.Field<decimal>("termspct");
         entity.gststatus = row.Field<bool>("gststatus");
         entity.tariffcd = row.IsNull("tariffcd") ? string.Empty : row.Field<string>("tariffcd");
         entity.commpaidinfl = row.Field<bool>("commpaidinfl");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.wmqtyship = row.IsNull("wmqtyship") ? decimal.Zero : row.Field<decimal>("wmqtyship");
         entity.taxablety = row.IsNull("taxablety") ? string.Empty : row.Field<string>("taxablety");
         entity.taxamount1 = row.IsNull("taxamount1") ? decimal.Zero : row.Field<decimal>("taxamount1");
         entity.taxamount2 = row.IsNull("taxamount2") ? decimal.Zero : row.Field<decimal>("taxamount2");
         entity.taxamount3 = row.IsNull("taxamount3") ? decimal.Zero : row.Field<decimal>("taxamount3");
         entity.taxamount4 = row.IsNull("taxamount4") ? decimal.Zero : row.Field<decimal>("taxamount4");
         entity.warrtag = row.IsNull("warrtag") ? string.Empty : row.Field<string>("warrtag");
         entity.warrstagecd = row.IsNull("warrstagecd") ? 0 : row.Field<int>("warrstagecd");
         entity.restockamt = row.IsNull("restockamt") ? decimal.Zero : row.Field<decimal>("restockamt");
         entity.restockfl = row.Field<bool>("restockfl");
         entity.returnty = row.IsNull("returnty") ? string.Empty : row.Field<string>("returnty");
         entity.qtyreturn = row.IsNull("qtyreturn") ? decimal.Zero : row.Field<decimal>("qtyreturn");
         entity.retorderno = row.IsNull("retorderno") ? 0 : row.Field<int>("retorderno");
         entity.retordersuf = row.IsNull("retordersuf") ? 0 : row.Field<int>("retordersuf");
         entity.retlineno = row.IsNull("retlineno") ? 0 : row.Field<int>("retlineno");
         entity.ostkqtyship = row.IsNull("ostkqtyship") ? decimal.Zero : row.Field<decimal>("ostkqtyship");
         entity.warrexchgfl = row.Field<bool>("warrexchgfl");
         entity.promisedt = row.Field<DateTime?>("promisedt");
         entity.jitpickfl = row.Field<bool>("jitpickfl");
         entity.cataddfl = row.Field<bool>("cataddfl");
         entity.dobotype = row.IsNull("dobotype") ? string.Empty : row.Field<string>("dobotype");
         entity.shipfmno = row.IsNull("shipfmno") ? 0 : row.Field<int>("shipfmno");
         entity.unitconv = row.IsNull("unitconv") ? decimal.Zero : row.Field<decimal>("unitconv");
         entity.restrictty = row.IsNull("restrictty") ? string.Empty : row.Field<string>("restrictty");
         entity.rushfl = row.Field<bool>("rushfl");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.canceldt = row.Field<DateTime?>("canceldt");
         entity.chgtolineno = row.IsNull("chgtolineno") ? 0 : row.Field<int>("chgtolineno");
         entity.restktaxgrp = row.IsNull("restktaxgrp") ? 0 : row.Field<int>("restktaxgrp");
         entity.subtotaldesc = row.IsNull("subtotaldesc") ? string.Empty : row.Field<string>("subtotaldesc");
         entity.kitsplitamt = row.IsNull("kitsplitamt") ? decimal.Zero : row.Field<decimal>("kitsplitamt");
         entity.priceorigcd = row.IsNull("priceorigcd") ? string.Empty : row.Field<string>("priceorigcd");
         entity.bonoptl = row.IsNull("bonoptl") ? 0 : row.Field<int>("bonoptl");
         entity.corertnty = row.IsNull("corertnty") ? string.Empty : row.Field<string>("corertnty");
         entity.certifiednbr = row.IsNull("certifiednbr") ? string.Empty : row.Field<string>("certifiednbr");
         entity.certifiedorg = row.IsNull("certifiedorg") ? string.Empty : row.Field<string>("certifiedorg");
         entity.certifiedname = row.IsNull("certifiedname") ? string.Empty : row.Field<string>("certifiedname");
         entity.chgqtyfl = row.Field<bool>("chgqtyfl");
         entity.origcore = row.IsNull("origcore") ? string.Empty : row.Field<string>("origcore");
         entity.origlineno = row.IsNull("origlineno") ? 0 : row.Field<int>("origlineno");
         entity.esrqstid = row.IsNull("esrqstid") ? string.Empty : row.Field<string>("esrqstid");
         entity.user10 = row.IsNull("user10") ? string.Empty : row.Field<string>("user10");
         entity.user11 = row.IsNull("user11") ? string.Empty : row.Field<string>("user11");
         entity.user12 = row.IsNull("user12") ? string.Empty : row.Field<string>("user12");
         entity.user13 = row.IsNull("user13") ? string.Empty : row.Field<string>("user13");
         entity.user14 = row.IsNull("user14") ? string.Empty : row.Field<string>("user14");
         entity.user15 = row.IsNull("user15") ? string.Empty : row.Field<string>("user15");
         entity.user16 = row.IsNull("user16") ? string.Empty : row.Field<string>("user16");
         entity.user17 = row.IsNull("user17") ? string.Empty : row.Field<string>("user17");
         entity.user18 = row.IsNull("user18") ? string.Empty : row.Field<string>("user18");
         entity.user19 = row.IsNull("user19") ? string.Empty : row.Field<string>("user19");
         entity.user20 = row.IsNull("user20") ? string.Empty : row.Field<string>("user20");
         entity.user21 = row.IsNull("user21") ? string.Empty : row.Field<string>("user21");
         entity.user22 = row.IsNull("user22") ? string.Empty : row.Field<string>("user22");
         entity.user23 = row.IsNull("user23") ? string.Empty : row.Field<string>("user23");
         entity.user24 = row.IsNull("user24") ? string.Empty : row.Field<string>("user24");
         entity.nonstkrevfl = row.Field<bool>("nonstkrevfl");
         entity.nonstkaddfl = row.Field<bool>("nonstkaddfl");
         entity.inventoryty = row.IsNull("inventoryty") ? string.Empty : row.Field<string>("inventoryty");
         entity.custcost = row.IsNull("custcost") ? decimal.Zero : row.Field<decimal>("custcost");
         entity.cfgkitfl = row.Field<bool>("cfgkitfl");
         entity.hardpricefl = row.Field<bool>("hardpricefl");
         entity.cutfl = row.Field<bool>("cutfl");
         entity.cutlossamt = row.IsNull("cutlossamt") ? decimal.Zero : row.Field<decimal>("cutlossamt");
         entity.scraplossamt = row.IsNull("scraplossamt") ? decimal.Zero : row.Field<decimal>("scraplossamt");
         entity.crinvno = row.IsNull("crinvno") ? 0 : row.Field<int>("crinvno");
         entity.crinvsuf = row.IsNull("crinvsuf") ? 0 : row.Field<int>("crinvsuf");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.taxadjfl = row.Field<bool>("taxadjfl");
         entity.contractno = row.IsNull("contractno") ? string.Empty : row.Field<string>("contractno");
         entity.contrstartdt = row.Field<DateTime?>("contrstartdt");
         entity.contrenddt = row.Field<DateTime?>("contrenddt");
         entity.vendquote = row.IsNull("vendquote") ? string.Empty : row.Field<string>("vendquote");
         entity.replcost = row.IsNull("replcost") ? decimal.Zero : row.Field<decimal>("replcost");
         entity.vabaseassembly = row.IsNull("vabaseassembly") ? string.Empty : row.Field<string>("vabaseassembly");
         entity.vaassemlgth = row.IsNull("vaassemlgth") ? decimal.Zero : row.Field<decimal>("vaassemlgth");
         entity.quoteshipviaty = row.IsNull("quoteshipviaty") ? string.Empty : row.Field<string>("quoteshipviaty");
         entity.ncnr = row.IsNull("ncnr") ? string.Empty : row.Field<string>("ncnr");
         entity.verno = row.IsNull("verno") ? 0 : row.Field<int>("verno");
         entity.eccnclasscd = row.IsNull("eccnclasscd") ? string.Empty : row.Field<string>("eccnclasscd");
         entity.countryoforigin = row.IsNull("countryoforigin") ? string.Empty : row.Field<string>("countryoforigin");
         entity.origpromisedt = row.Field<DateTime?>("origpromisedt");
         entity.systempdscrecid = row.IsNull("systempdscrecid") ? 0 : row.Field<int>("systempdscrecid");
         entity.systemprice = row.IsNull("systemprice") ? decimal.Zero : row.Field<decimal>("systemprice");
         entity.systemrefer = row.IsNull("systemrefer") ? string.Empty : row.Field<string>("systemrefer");
         entity.systemcontractno = row.IsNull("systemcontractno") ? string.Empty : row.Field<string>("systemcontractno");
         entity.systempricesheet = row.IsNull("systempricesheet") ? string.Empty : row.Field<string>("systempricesheet");
         entity.systemeffectivedate = row.Field<DateTime?>("systemeffectivedate");
         entity.systempriceonty = row.IsNull("systempriceonty") ? string.Empty : row.Field<string>("systempriceonty");
         entity.systempriceonamount = row.IsNull("systempriceonamount") ? decimal.Zero : row.Field<decimal>("systempriceonamount");
         entity.systempdcostamt = row.IsNull("systempdcostamt") ? decimal.Zero : row.Field<decimal>("systempdcostamt");
         entity.systempdcostty = row.IsNull("systempdcostty") ? string.Empty : row.Field<string>("systempdcostty");
         entity.hiprcorderno = row.IsNull("hiprcorderno") ? 0 : row.Field<int>("hiprcorderno");
         entity.hiprcordersuf = row.IsNull("hiprcordersuf") ? 0 : row.Field<int>("hiprcordersuf");
         entity.hiprclineno = row.IsNull("hiprclineno") ? 0 : row.Field<int>("hiprclineno");
         entity.overridetype = row.IsNull("overridetype") ? string.Empty : row.Field<string>("overridetype");
         entity.hightolprice = row.IsNull("hightolprice") ? decimal.Zero : row.Field<decimal>("hightolprice");
         entity.lowtolprice = row.IsNull("lowtolprice") ? decimal.Zero : row.Field<decimal>("lowtolprice");
         entity.ehfamt = row.IsNull("ehfamt") ? decimal.Zero : row.Field<decimal>("ehfamt");
         entity.ehfexemptamt = row.IsNull("ehfexemptamt") ? decimal.Zero : row.Field<decimal>("ehfexemptamt");
         entity.ehfnetamt = row.IsNull("ehfnetamt") ? decimal.Zero : row.Field<decimal>("ehfnetamt");
         entity.ehfaddonno = row.IsNull("ehfaddonno") ? 0 : row.Field<int>("ehfaddonno");
         entity.altprodgrp = row.IsNull("altprodgrp") ? string.Empty : row.Field<string>("altprodgrp");
         entity.vendretauth = row.IsNull("vendretauth") ? string.Empty : row.Field<string>("vendretauth");
         entity.taxweight = row.IsNull("taxweight") ? decimal.Zero : row.Field<decimal>("taxweight");
         entity.upcid = row.IsNull("upcid") ? string.Empty : row.Field<string>("upcid");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.shipcompfl = row.Field<bool>("shipcompfl");
         entity.rowID = row.Field<byte[]>("oeelRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOeelBase(ref DataRow row, OeelBase entity)
      {
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("whse", entity.whse);
         row.SetField("transtype", entity.transtype);
         row.SetField("shipto", entity.shipto);
         row.SetField("lineno", entity.lineno);
         row.SetField("custno", entity.custno);
         row.SetField("qtyord", entity.qtyord);
         row.SetField("cono", entity.cono);
         row.SetField("proddesc", entity.proddesc);
         row.SetField("unit", entity.unit);
         row.SetField("price", entity.price);
         row.SetField("transdt", entity.transdt);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("operinit", entity.operinit);
         row.SetField("reqshipdt", entity.reqshipdt);
         row.SetField("discamt", entity.discamt);
         row.SetField("shipprod", entity.shipprod);
         row.SetField("transtm", entity.transtm);
         row.SetField("stkqtyship", entity.stkqtyship);
         row.SetField("commamtin", entity.commamtin);
         row.SetField("prodcost", entity.prodcost);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("arpprodline", entity.arpprodline);
         row.SetField("arpvendno", entity.arpvendno);
         row.SetField("usagefl", entity.usagefl);
         row.SetField("orderaltno", entity.orderaltno);
         row.SetField("ordertype", entity.ordertype);
         row.SetField("botype", entity.botype);
         row.SetField("netamt", entity.netamt);
         row.SetField("corechgty", entity.corechgty);
         row.SetField("specnstype", entity.specnstype);
         row.SetField("commrate", entity.commrate);
         row.SetField("leadtm", entity.leadtm);
         row.SetField("commratein", entity.commratein);
         row.SetField("reqprod", entity.reqprod);
         row.SetField("glcost", entity.glcost);
         row.SetField("xrefprodty", entity.xrefprodty);
         row.SetField("vendno", entity.vendno);
         row.SetField("wlpicktype", entity.wlpicktype);
         row.SetField("advertisingcode", entity.advertisingcode);
         row.SetField("weight", entity.weight);
         row.SetField("ftcnote", entity.ftcnote);
         row.SetField("cubes", entity.cubes);
         row.SetField("costtype", entity.costtype);
         row.SetField("priceoverfl", entity.priceoverfl);
         row.SetField("discoverfl", entity.discoverfl);
         row.SetField("prodline", entity.prodline);
         row.SetField("shpqtyoverfl", entity.shpqtyoverfl);
         row.SetField("icspecrecno", entity.icspecrecno);
         row.SetField("tallyfl", entity.tallyfl);
         row.SetField("notimeschg", entity.notimeschg);
         row.SetField("sxextractdt", entity.sxextractdt);
         row.SetField("statustype", entity.statustype);
         row.SetField("delayresrvfl", entity.delayresrvfl);
         row.SetField("pdrecno", entity.pdrecno);
         row.SetField("ptlkitbofl", entity.ptlkitbofl);
         row.SetField("user3", entity.user3);
         row.SetField("printpckfl", entity.printpckfl);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("chrgqty", entity.chrgqty);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("bono", entity.bono);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("commcost", entity.commcost);
         row.SetField("qtyfmrcvs", entity.qtyfmrcvs);
         row.SetField("salesterr", entity.salesterr);
         row.SetField("nosnlots", entity.nosnlots);
         row.SetField("returnfl", entity.returnfl);
         row.SetField("prevqtyshp", entity.prevqtyshp);
         row.SetField("commentfl", entity.commentfl);
         row.SetField("catwtfl", entity.catwtfl);
         row.SetField("discpct", entity.discpct);
         row.SetField("qtyship", entity.qtyship);
         row.SetField("taxablefl", entity.taxablefl);
         row.SetField("linealtno", entity.linealtno);
         row.SetField("promofl", entity.promofl);
         row.SetField("disccd", entity.disccd);
         row.SetField("pricetype", entity.pricetype);
         row.SetField("lostbusty", entity.lostbusty);
         row.SetField("priceclty", entity.priceclty);
         row.SetField("pricecd", entity.pricecd);
         row.SetField("commamtout", entity.commamtout);
         row.SetField("disctype", entity.disctype);
         row.SetField("wtcono", entity.wtcono);
         row.SetField("altwhse", entity.altwhse);
         row.SetField("corecharge", entity.corecharge);
         row.SetField("nosnlotsk", entity.nosnlotsk);
         row.SetField("reasunavty", entity.reasunavty);
         row.SetField("qtyrel", entity.qtyrel);
         row.SetField("datccost", entity.datccost);
         row.SetField("netord", entity.netord);
         row.SetField("stkqtyord", entity.stkqtyord);
         row.SetField("binloc", entity.binloc);
         row.SetField("slsrepin", entity.slsrepin);
         row.SetField("slsrepout", entity.slsrepout);
         row.SetField("kitfl", entity.kitfl);
         row.SetField("qtyunavail", entity.qtyunavail);
         row.SetField("jobno", entity.jobno);
         row.SetField("discamtoth", entity.discamtoth);
         row.SetField("proddesc2", entity.proddesc2);
         row.SetField("pricecostty", entity.pricecostty);
         row.SetField("commtype", entity.commtype);
         row.SetField("commpaidfl", entity.commpaidfl);
         row.SetField("kitrollty", entity.kitrollty);
         row.SetField("printpricefl", entity.printpricefl);
         row.SetField("subtotalfl", entity.subtotalfl);
         row.SetField("costoverfl", entity.costoverfl);
         row.SetField("wodiscamt", entity.wodiscamt);
         row.SetField("invoicedt", entity.invoicedt);
         row.SetField("crreasonty", entity.crreasonty);
         row.SetField("commmanfl", entity.commmanfl);
         row.SetField("taxgroup", entity.taxgroup);
         row.SetField("nontaxtype", entity.nontaxtype);
         row.SetField("termspct", entity.termspct);
         row.SetField("gststatus", entity.gststatus);
         row.SetField("tariffcd", entity.tariffcd);
         row.SetField("commpaidinfl", entity.commpaidinfl);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("wmqtyship", entity.wmqtyship);
         row.SetField("taxablety", entity.taxablety);
         row.SetField("taxamount1", entity.taxamount1);
         row.SetField("taxamount2", entity.taxamount2);
         row.SetField("taxamount3", entity.taxamount3);
         row.SetField("taxamount4", entity.taxamount4);
         row.SetField("warrtag", entity.warrtag);
         row.SetField("warrstagecd", entity.warrstagecd);
         row.SetField("restockamt", entity.restockamt);
         row.SetField("restockfl", entity.restockfl);
         row.SetField("returnty", entity.returnty);
         row.SetField("qtyreturn", entity.qtyreturn);
         row.SetField("retorderno", entity.retorderno);
         row.SetField("retordersuf", entity.retordersuf);
         row.SetField("retlineno", entity.retlineno);
         row.SetField("ostkqtyship", entity.ostkqtyship);
         row.SetField("warrexchgfl", entity.warrexchgfl);
         row.SetField("promisedt", entity.promisedt);
         row.SetField("jitpickfl", entity.jitpickfl);
         row.SetField("cataddfl", entity.cataddfl);
         row.SetField("dobotype", entity.dobotype);
         row.SetField("shipfmno", entity.shipfmno);
         row.SetField("unitconv", entity.unitconv);
         row.SetField("restrictty", entity.restrictty);
         row.SetField("rushfl", entity.rushfl);
         row.SetField("transproc", entity.transproc);
         row.SetField("canceldt", entity.canceldt);
         row.SetField("chgtolineno", entity.chgtolineno);
         row.SetField("restktaxgrp", entity.restktaxgrp);
         row.SetField("subtotaldesc", entity.subtotaldesc);
         row.SetField("kitsplitamt", entity.kitsplitamt);
         row.SetField("priceorigcd", entity.priceorigcd);
         row.SetField("bonoptl", entity.bonoptl);
         row.SetField("corertnty", entity.corertnty);
         row.SetField("certifiednbr", entity.certifiednbr);
         row.SetField("certifiedorg", entity.certifiedorg);
         row.SetField("certifiedname", entity.certifiedname);
         row.SetField("chgqtyfl", entity.chgqtyfl);
         row.SetField("origcore", entity.origcore);
         row.SetField("origlineno", entity.origlineno);
         row.SetField("esrqstid", entity.esrqstid);
         row.SetField("user10", entity.user10);
         row.SetField("user11", entity.user11);
         row.SetField("user12", entity.user12);
         row.SetField("user13", entity.user13);
         row.SetField("user14", entity.user14);
         row.SetField("user15", entity.user15);
         row.SetField("user16", entity.user16);
         row.SetField("user17", entity.user17);
         row.SetField("user18", entity.user18);
         row.SetField("user19", entity.user19);
         row.SetField("user20", entity.user20);
         row.SetField("user21", entity.user21);
         row.SetField("user22", entity.user22);
         row.SetField("user23", entity.user23);
         row.SetField("user24", entity.user24);
         row.SetField("nonstkrevfl", entity.nonstkrevfl);
         row.SetField("nonstkaddfl", entity.nonstkaddfl);
         row.SetField("inventoryty", entity.inventoryty);
         row.SetField("custcost", entity.custcost);
         row.SetField("cfgkitfl", entity.cfgkitfl);
         row.SetField("hardpricefl", entity.hardpricefl);
         row.SetField("cutfl", entity.cutfl);
         row.SetField("cutlossamt", entity.cutlossamt);
         row.SetField("scraplossamt", entity.scraplossamt);
         row.SetField("crinvno", entity.crinvno);
         row.SetField("crinvsuf", entity.crinvsuf);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("taxadjfl", entity.taxadjfl);
         row.SetField("contractno", entity.contractno);
         row.SetField("contrstartdt", entity.contrstartdt);
         row.SetField("contrenddt", entity.contrenddt);
         row.SetField("vendquote", entity.vendquote);
         row.SetField("replcost", entity.replcost);
         row.SetField("vabaseassembly", entity.vabaseassembly);
         row.SetField("vaassemlgth", entity.vaassemlgth);
         row.SetField("quoteshipviaty", entity.quoteshipviaty);
         row.SetField("ncnr", entity.ncnr);
         row.SetField("verno", entity.verno);
         row.SetField("eccnclasscd", entity.eccnclasscd);
         row.SetField("countryoforigin", entity.countryoforigin);
         row.SetField("origpromisedt", entity.origpromisedt);
         row.SetField("systempdscrecid", entity.systempdscrecid);
         row.SetField("systemprice", entity.systemprice);
         row.SetField("systemrefer", entity.systemrefer);
         row.SetField("systemcontractno", entity.systemcontractno);
         row.SetField("systempricesheet", entity.systempricesheet);
         row.SetField("systemeffectivedate", entity.systemeffectivedate);
         row.SetField("systempriceonty", entity.systempriceonty);
         row.SetField("systempriceonamount", entity.systempriceonamount);
         row.SetField("systempdcostamt", entity.systempdcostamt);
         row.SetField("systempdcostty", entity.systempdcostty);
         row.SetField("hiprcorderno", entity.hiprcorderno);
         row.SetField("hiprcordersuf", entity.hiprcordersuf);
         row.SetField("hiprclineno", entity.hiprclineno);
         row.SetField("overridetype", entity.overridetype);
         row.SetField("hightolprice", entity.hightolprice);
         row.SetField("lowtolprice", entity.lowtolprice);
         row.SetField("ehfamt", entity.ehfamt);
         row.SetField("ehfexemptamt", entity.ehfexemptamt);
         row.SetField("ehfnetamt", entity.ehfnetamt);
         row.SetField("ehfaddonno", entity.ehfaddonno);
         row.SetField("altprodgrp", entity.altprodgrp);
         row.SetField("vendretauth", entity.vendretauth);
         row.SetField("taxweight", entity.taxweight);
         row.SetField("upcid", entity.upcid);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("shipcompfl", entity.shipcompfl);
         row.SetField("oeelRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, OeelBase entity)
      {
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("lineno", entity.lineno);
         row.SetField("cono", entity.cono);
         row.SetField("oeelRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	