//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.AP
{
   /// <summary>
   /// Accounts Payable Entries
   /// </summary>
   [EntityType("AP Group Invoice Transaction","TBD","PayableTransaction")]
   public partial class ApetBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [BusContext(BusPart.AcctEntity),BodContext(BodPart.AcctEntity,""),ID(1)]
      public int cono { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      [BodID(1,RequiredId.True),ID(2)]
      public decimal vendno { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [ID(5)]
      public bool statustype { get; set; }

      /// <summary>
      /// Tran Type
      /// </summary>
      [ID(6)]
      public int transcd { get; set; }

      /// <summary>
      /// Vendor Invoice #
      /// </summary>
      [ID(3),BodID(3,RequiredId.True),StringValidationAttribute]
      public string apinvno { get; set; }

      /// <summary>
      /// Seq#
      /// </summary>
      public int seqno { get; set; }

      /// <summary>
      /// Budget #
      /// </summary>
      public int budgetno { get; set; }

      /// <summary>
      /// Amount
      /// </summary>
      public decimal amount { get; set; }

      /// <summary>
      /// sourcecd
      /// </summary>
      public int sourcecd { get; set; }

      /// <summary>
      /// Jrnl #
      /// </summary>
      [BodID(2,RequiredId.True),ID(7)]
      public int jrnlno { get; set; }

      /// <summary>
      /// Fiscal Period
      /// </summary>
      public int perfisc { get; set; }

      /// <summary>
      /// Calendar Period
      /// </summary>
      public int percal { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      [ID(8)]
      public int setno { get; set; }

      /// <summary>
      /// Trans#
      /// </summary>
      [BusContext(BusPart.Name)]
      public int transno { get; set; }

      /// <summary>
      /// Invoice Date
      /// </summary>
      [ID(4)]
      public DateTime? invdt { get; set; }

      /// <summary>
      /// Discount
      /// </summary>
      public decimal discamt { get; set; }

      /// <summary>
      /// duedt
      /// </summary>
      public DateTime? duedt { get; set; }

      /// <summary>
      /// discdt
      /// </summary>
      public DateTime? discdt { get; set; }

      /// <summary>
      /// Terms
      /// </summary>
      [StringValidationAttribute]
      public string termstype { get; set; }

      /// <summary>
      /// paymtdt
      /// </summary>
      public DateTime? paymtdt { get; set; }

      /// <summary>
      /// Pay Type
      /// </summary>
      [BusContext(BusPart.Descr)]
      public int paymtcd { get; set; }

      /// <summary>
      /// paymtamt
      /// </summary>
      public decimal paymtamt { get; set; }

      /// <summary>
      /// Original Seq No
      /// </summary>
      public int origseqno { get; set; }

      /// <summary>
      /// nextseqno
      /// </summary>
      public int nextseqno { get; set; }

      /// <summary>
      /// Ref
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Journal Amount
      /// </summary>
      public decimal jrnlamt { get; set; }

      /// <summary>
      /// disputefl
      /// </summary>
      public bool disputefl { get; set; }

      /// <summary>
      /// Invoice Type
      /// </summary>
      [StringValidationAttribute]
      public string invtype { get; set; }

      /// <summary>
      /// Immed Pay
      /// </summary>
      public bool immedpyfl { get; set; }

      /// <summary>
      /// Bank #
      /// </summary>
      public int bankno { get; set; }

      /// <summary>
      /// Check #
      /// </summary>
      public decimal checkno { get; set; }

      /// <summary>
      /// Division #
      /// </summary>
      public int divno { get; set; }

      /// <summary>
      /// Check Needs Printing
      /// </summary>
      public bool chkprintfl { get; set; }

      /// <summary>
      /// Addon
      /// </summary>
      public decimal addonamt1 { get; set; }
      public decimal addonamt2 { get; set; }

      /// <summary>
      /// Manual Address
      /// </summary>
      public bool manaddrfl { get; set; }

      /// <summary>
      /// Vendor Type
      /// </summary>
      [StringValidationAttribute]
      public string vendtype { get; set; }

      /// <summary>
      /// Jrnl #
      /// </summary>
      public int pidjrnlno { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      public int pidsetno { get; set; }

      /// <summary>
      /// Send Checks to Vendor #
      /// </summary>
      public decimal vendno2 { get; set; }

      /// <summary>
      /// Manual Check
      /// </summary>
      public bool manchkfl { get; set; }

      /// <summary>
      /// Module
      /// </summary>
      [StringValidationAttribute]
      public string module { get; set; }

      /// <summary>
      /// G.S.T. Amount
      /// </summary>
      public decimal gsttaxamt { get; set; }

      /// <summary>
      /// P.S.T. Amount
      /// </summary>
      public decimal psttaxamt { get; set; }

      /// <summary>
      /// Capitalized Addon Amount
      /// </summary>
      public decimal capaddonamt { get; set; }

      /// <summary>
      /// Currency
      /// </summary>
      [StringValidationAttribute]
      public string currencyty { get; set; }

      /// <summary>
      /// Exchange Rate
      /// </summary>
      public decimal exchgrate1 { get; set; }
      public decimal exchgrate2 { get; set; }

      /// <summary>
      /// Orig Disc
      /// </summary>
      public decimal origdisc { get; set; }

      /// <summary>
      /// Entered
      /// </summary>
      public DateTime? postdt { get; set; }

      /// <summary>
      /// Div#
      /// </summary>
      public int gldivno { get; set; }

      /// <summary>
      /// Dept#
      /// </summary>
      public int gldeptno { get; set; }

      /// <summary>
      /// Acct#
      /// </summary>
      public int glacctno { get; set; }

      /// <summary>
      /// Sub#
      /// </summary>
      public int glsubno { get; set; }

      /// <summary>
      /// Created By
      /// </summary>
      [StringValidationAttribute]
      public string createdby { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Floor Plan Payment
      /// </summary>
      public bool fppayfl { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Rec#
      /// </summary>
      public decimal urecno { get; set; }

      /// <summary>
      /// apinvsuf
      /// </summary>
      [BodID(4,RequiredId.True)]
      public int apinvsuf { get; set; }

      /// <summary>
      /// Invoice Date
      /// </summary>
      public DateTime? appinvdt { get; set; }

      /// <summary>
      /// Invoice#
      /// </summary>
      [StringValidationAttribute]
      public string appinvno { get; set; }

      /// <summary>
      /// Tran Type
      /// </summary>
      public int apptranscd { get; set; }

      /// <summary>
      /// appinvsuf
      /// </summary>
      public int appinvsuf { get; set; }

      /// <summary>
      /// Invoice Suffix
      /// </summary>
      public int apinvnosuf { get; set; }

      /// <summary>
      /// Location
      /// </summary>
      [StringValidationAttribute]
      public string location { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Allocation Type
      /// </summary>
      [StringValidationAttribute]
      public string allocationty { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Revaluation Number
      /// </summary>
      public int revalno { get; set; }

      /// <summary>
      /// BACS Reference
      /// </summary>
      [StringValidationAttribute]
      public string bacsref { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }

      /// <summary>
      /// ACH Inv No
      /// </summary>
      [StringValidationAttribute]
      public string achinvno { get; set; }

      /// <summary>
      /// ACH Inv Suf
      /// </summary>
      public int achinvsuf { get; set; }

      /// <summary>
      /// ACH Bank No
      /// </summary>
      public int achbankno { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildApetBaseFromRow<T>(DataRow row) where T:ApetBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.statustype = row.Field<bool>("statustype");
         entity.transcd = row.IsNull("transcd") ? 0 : row.Field<int>("transcd");
         entity.apinvno = row.IsNull("apinvno") ? string.Empty : row.Field<string>("apinvno");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.budgetno = row.IsNull("budgetno") ? 0 : row.Field<int>("budgetno");
         entity.amount = row.IsNull("amount") ? decimal.Zero : row.Field<decimal>("amount");
         entity.sourcecd = row.IsNull("sourcecd") ? 0 : row.Field<int>("sourcecd");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.perfisc = row.IsNull("perfisc") ? 0 : row.Field<int>("perfisc");
         entity.percal = row.IsNull("percal") ? 0 : row.Field<int>("percal");
         entity.setno = row.IsNull("setno") ? 0 : row.Field<int>("setno");
         entity.transno = row.IsNull("transno") ? 0 : row.Field<int>("transno");
         entity.invdt = row.Field<DateTime?>("invdt");
         entity.discamt = row.IsNull("discamt") ? decimal.Zero : row.Field<decimal>("discamt");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.discdt = row.Field<DateTime?>("discdt");
         entity.termstype = row.IsNull("termstype") ? string.Empty : row.Field<string>("termstype");
         entity.paymtdt = row.Field<DateTime?>("paymtdt");
         entity.paymtcd = row.IsNull("paymtcd") ? 0 : row.Field<int>("paymtcd");
         entity.paymtamt = row.IsNull("paymtamt") ? decimal.Zero : row.Field<decimal>("paymtamt");
         entity.origseqno = row.IsNull("origseqno") ? 0 : row.Field<int>("origseqno");
         entity.nextseqno = row.IsNull("nextseqno") ? 0 : row.Field<int>("nextseqno");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.jrnlamt = row.IsNull("jrnlamt") ? decimal.Zero : row.Field<decimal>("jrnlamt");
         entity.disputefl = row.Field<bool>("disputefl");
         entity.invtype = row.IsNull("invtype") ? string.Empty : row.Field<string>("invtype");
         entity.immedpyfl = row.Field<bool>("immedpyfl");
         entity.bankno = row.IsNull("bankno") ? 0 : row.Field<int>("bankno");
         entity.checkno = row.IsNull("checkno") ? decimal.Zero : row.Field<decimal>("checkno");
         entity.divno = row.IsNull("divno") ? 0 : row.Field<int>("divno");
         entity.chkprintfl = row.Field<bool>("chkprintfl");
         entity.addonamt1 = row.IsNull("addonamt1") ? decimal.Zero : row.Field<decimal>("addonamt1");
         entity.addonamt2 = row.IsNull("addonamt2") ? decimal.Zero : row.Field<decimal>("addonamt2");
         entity.manaddrfl = row.Field<bool>("manaddrfl");
         entity.vendtype = row.IsNull("vendtype") ? string.Empty : row.Field<string>("vendtype");
         entity.pidjrnlno = row.IsNull("pidjrnlno") ? 0 : row.Field<int>("pidjrnlno");
         entity.pidsetno = row.IsNull("pidsetno") ? 0 : row.Field<int>("pidsetno");
         entity.vendno2 = row.IsNull("vendno2") ? decimal.Zero : row.Field<decimal>("vendno2");
         entity.manchkfl = row.Field<bool>("manchkfl");
         entity.module = row.IsNull("module") ? string.Empty : row.Field<string>("module");
         entity.gsttaxamt = row.IsNull("gsttaxamt") ? decimal.Zero : row.Field<decimal>("gsttaxamt");
         entity.psttaxamt = row.IsNull("psttaxamt") ? decimal.Zero : row.Field<decimal>("psttaxamt");
         entity.capaddonamt = row.IsNull("capaddonamt") ? decimal.Zero : row.Field<decimal>("capaddonamt");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.exchgrate1 = row.IsNull("exchgrate1") ? decimal.Zero : row.Field<decimal>("exchgrate1");
         entity.exchgrate2 = row.IsNull("exchgrate2") ? decimal.Zero : row.Field<decimal>("exchgrate2");
         entity.origdisc = row.IsNull("origdisc") ? decimal.Zero : row.Field<decimal>("origdisc");
         entity.postdt = row.Field<DateTime?>("postdt");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.createdby = row.IsNull("createdby") ? string.Empty : row.Field<string>("createdby");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.fppayfl = row.Field<bool>("fppayfl");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.urecno = row.IsNull("urecno") ? decimal.Zero : row.Field<decimal>("urecno");
         entity.apinvsuf = row.IsNull("apinvsuf") ? 0 : row.Field<int>("apinvsuf");
         entity.appinvdt = row.Field<DateTime?>("appinvdt");
         entity.appinvno = row.IsNull("appinvno") ? string.Empty : row.Field<string>("appinvno");
         entity.apptranscd = row.IsNull("apptranscd") ? 0 : row.Field<int>("apptranscd");
         entity.appinvsuf = row.IsNull("appinvsuf") ? 0 : row.Field<int>("appinvsuf");
         entity.apinvnosuf = row.IsNull("apinvnosuf") ? 0 : row.Field<int>("apinvnosuf");
         entity.location = row.IsNull("location") ? string.Empty : row.Field<string>("location");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.allocationty = row.IsNull("allocationty") ? string.Empty : row.Field<string>("allocationty");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.revalno = row.IsNull("revalno") ? 0 : row.Field<int>("revalno");
         entity.bacsref = row.IsNull("bacsref") ? string.Empty : row.Field<string>("bacsref");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.achinvno = row.IsNull("achinvno") ? string.Empty : row.Field<string>("achinvno");
         entity.achinvsuf = row.IsNull("achinvsuf") ? 0 : row.Field<int>("achinvsuf");
         entity.achbankno = row.IsNull("achbankno") ? 0 : row.Field<int>("achbankno");
         entity.rowID = row.Field<byte[]>("apetRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromApetBase(ref DataRow row, ApetBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vendno", entity.vendno);
         row.SetField("statustype", entity.statustype);
         row.SetField("transcd", entity.transcd);
         row.SetField("apinvno", entity.apinvno);
         row.SetField("seqno", entity.seqno);
         row.SetField("budgetno", entity.budgetno);
         row.SetField("amount", entity.amount);
         row.SetField("sourcecd", entity.sourcecd);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("perfisc", entity.perfisc);
         row.SetField("percal", entity.percal);
         row.SetField("setno", entity.setno);
         row.SetField("transno", entity.transno);
         row.SetField("invdt", entity.invdt);
         row.SetField("discamt", entity.discamt);
         row.SetField("duedt", entity.duedt);
         row.SetField("discdt", entity.discdt);
         row.SetField("termstype", entity.termstype);
         row.SetField("paymtdt", entity.paymtdt);
         row.SetField("paymtcd", entity.paymtcd);
         row.SetField("paymtamt", entity.paymtamt);
         row.SetField("origseqno", entity.origseqno);
         row.SetField("nextseqno", entity.nextseqno);
         row.SetField("refer", entity.refer);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("jrnlamt", entity.jrnlamt);
         row.SetField("disputefl", entity.disputefl);
         row.SetField("invtype", entity.invtype);
         row.SetField("immedpyfl", entity.immedpyfl);
         row.SetField("bankno", entity.bankno);
         row.SetField("checkno", entity.checkno);
         row.SetField("divno", entity.divno);
         row.SetField("chkprintfl", entity.chkprintfl);
         row.SetField("addonamt1", entity.addonamt1);
         row.SetField("addonamt2", entity.addonamt2);
         row.SetField("manaddrfl", entity.manaddrfl);
         row.SetField("vendtype", entity.vendtype);
         row.SetField("pidjrnlno", entity.pidjrnlno);
         row.SetField("pidsetno", entity.pidsetno);
         row.SetField("vendno2", entity.vendno2);
         row.SetField("manchkfl", entity.manchkfl);
         row.SetField("module", entity.module);
         row.SetField("gsttaxamt", entity.gsttaxamt);
         row.SetField("psttaxamt", entity.psttaxamt);
         row.SetField("capaddonamt", entity.capaddonamt);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("exchgrate1", entity.exchgrate1);
         row.SetField("exchgrate2", entity.exchgrate2);
         row.SetField("origdisc", entity.origdisc);
         row.SetField("postdt", entity.postdt);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("createdby", entity.createdby);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("fppayfl", entity.fppayfl);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("urecno", entity.urecno);
         row.SetField("apinvsuf", entity.apinvsuf);
         row.SetField("appinvdt", entity.appinvdt);
         row.SetField("appinvno", entity.appinvno);
         row.SetField("apptranscd", entity.apptranscd);
         row.SetField("appinvsuf", entity.appinvsuf);
         row.SetField("apinvnosuf", entity.apinvnosuf);
         row.SetField("location", entity.location);
         row.SetField("transproc", entity.transproc);
         row.SetField("allocationty", entity.allocationty);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("revalno", entity.revalno);
         row.SetField("bacsref", entity.bacsref);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("achinvno", entity.achinvno);
         row.SetField("achinvsuf", entity.achinvsuf);
         row.SetField("achbankno", entity.achbankno);
         row.SetField("apetRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ApetBase entity)
      {
         row.SetField("apetRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	