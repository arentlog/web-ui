//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.AP
{
   /// <summary>
   /// Accounts Payable Floor Plan Entries Modified
   /// </summary>
   
   public partial class ApemfBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      public int cono { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// Vendor Invoice #
      /// </summary>
      [StringValidationAttribute]
      public string apinvno { get; set; }

      /// <summary>
      /// Terms
      /// </summary>
      [StringValidationAttribute]
      public string termstype { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [StringValidationAttribute]
      public string prod { get; set; }

      /// <summary>
      /// Quantity Due
      /// </summary>
      public decimal qtydirected { get; set; }

      /// <summary>
      /// Seq#
      /// </summary>
      public int seqno { get; set; }

      /// <summary>
      /// Status Type
      /// </summary>
      [StringValidationAttribute]
      public string statustype { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Available
      /// </summary>
      public decimal qtyavail { get; set; }

      /// <summary>
      /// PO #
      /// </summary>
      public int pono { get; set; }

      /// <summary>
      /// PO Suffix
      /// </summary>
      public int posuf { get; set; }

      /// <summary>
      /// Line#
      /// </summary>
      public int lineno { get; set; }

      /// <summary>
      /// Amt Due
      /// </summary>
      public decimal amtdue { get; set; }

      /// <summary>
      /// Sold
      /// </summary>
      public bool soldserfl { get; set; }

      /// <summary>
      /// Paid
      /// </summary>
      public bool paidnsfl { get; set; }

      /// <summary>
      /// Invoice Dt
      /// </summary>
      public DateTime? invoicedt { get; set; }

      /// <summary>
      /// Qty Sold
      /// </summary>
      public decimal qtysold { get; set; }

      /// <summary>
      /// Sort Type
      /// </summary>
      [StringValidationAttribute]
      public string sorttype { get; set; }

      /// <summary>
      /// Rec#
      /// </summary>
      public decimal urecno { get; set; }

      /// <summary>
      /// Location
      /// </summary>
      [StringValidationAttribute]
      public string location { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildApemfBaseFromRow<T>(DataRow row) where T:ApemfBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.apinvno = row.IsNull("apinvno") ? string.Empty : row.Field<string>("apinvno");
         entity.termstype = row.IsNull("termstype") ? string.Empty : row.Field<string>("termstype");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.qtydirected = row.IsNull("qtydirected") ? decimal.Zero : row.Field<decimal>("qtydirected");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.statustype = row.IsNull("statustype") ? string.Empty : row.Field<string>("statustype");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.qtyavail = row.IsNull("qtyavail") ? decimal.Zero : row.Field<decimal>("qtyavail");
         entity.pono = row.IsNull("pono") ? 0 : row.Field<int>("pono");
         entity.posuf = row.IsNull("posuf") ? 0 : row.Field<int>("posuf");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.amtdue = row.IsNull("amtdue") ? decimal.Zero : row.Field<decimal>("amtdue");
         entity.soldserfl = row.Field<bool>("soldserfl");
         entity.paidnsfl = row.Field<bool>("paidnsfl");
         entity.invoicedt = row.Field<DateTime?>("invoicedt");
         entity.qtysold = row.IsNull("qtysold") ? decimal.Zero : row.Field<decimal>("qtysold");
         entity.sorttype = row.IsNull("sorttype") ? string.Empty : row.Field<string>("sorttype");
         entity.urecno = row.IsNull("urecno") ? decimal.Zero : row.Field<decimal>("urecno");
         entity.location = row.IsNull("location") ? string.Empty : row.Field<string>("location");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("apemfRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromApemfBase(ref DataRow row, ApemfBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vendno", entity.vendno);
         row.SetField("apinvno", entity.apinvno);
         row.SetField("termstype", entity.termstype);
         row.SetField("prod", entity.prod);
         row.SetField("qtydirected", entity.qtydirected);
         row.SetField("seqno", entity.seqno);
         row.SetField("statustype", entity.statustype);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("qtyavail", entity.qtyavail);
         row.SetField("pono", entity.pono);
         row.SetField("posuf", entity.posuf);
         row.SetField("lineno", entity.lineno);
         row.SetField("amtdue", entity.amtdue);
         row.SetField("soldserfl", entity.soldserfl);
         row.SetField("paidnsfl", entity.paidnsfl);
         row.SetField("invoicedt", entity.invoicedt);
         row.SetField("qtysold", entity.qtysold);
         row.SetField("sorttype", entity.sorttype);
         row.SetField("urecno", entity.urecno);
         row.SetField("location", entity.location);
         row.SetField("transproc", entity.transproc);
         row.SetField("apemfRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ApemfBase entity)
      {
         row.SetField("apemfRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	