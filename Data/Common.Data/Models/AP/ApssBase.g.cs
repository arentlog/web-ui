//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.AP
{
   /// <summary>
   /// AP Ship To
   /// </summary>
   [EntityType("AP Ship From","apss.detail","ShipFromPartyMaster")]
   public partial class ApssBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [BusContext(BusPart.AcctEntity),BodContext(BodPart.AcctEntity,""),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      [BusContext(BusPart.Name),DrillbackParam("pk",1),BodID(1,RequiredId.True),Key,Order]
      public decimal vendno { get; set; }

      /// <summary>
      /// Ship From
      /// </summary>
      [DrillbackParam("pk2",2),BusContext(BusPart.Descr),BodID(2,RequiredId.True),Key,Order]
      public int shipfmno { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [ID(4),StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string zipcd { get; set; }

      /// <summary>
      /// Phone
      /// </summary>
      [StringValidationAttribute]
      public string phoneno { get; set; }

      /// <summary>
      /// Fax Phone
      /// </summary>
      [StringValidationAttribute]
      public string faxphoneno { get; set; }

      /// <summary>
      /// Salesrep
      /// </summary>
      [StringValidationAttribute]
      public string slsnm { get; set; }

      /// <summary>
      /// Slsrep Phone
      /// </summary>
      [StringValidationAttribute]
      public string slsphoneno { get; set; }

      /// <summary>
      /// Expediter
      /// </summary>
      [StringValidationAttribute]
      public string expednm { get; set; }

      /// <summary>
      /// Exped. Phone
      /// </summary>
      [StringValidationAttribute]
      public string exphoneno { get; set; }

      /// <summary>
      /// Our Cust. #
      /// </summary>
      [StringValidationAttribute]
      public string apcustno { get; set; }

      /// <summary>
      /// EDI Level
      /// </summary>
      public int edilevel { get; set; }

      /// <summary>
      /// Ship Via
      /// </summary>
      [StringValidationAttribute]
      public string shipviaty { get; set; }

      /// <summary>
      /// B/O Ok
      /// </summary>
      public bool bofl { get; set; }

      /// <summary>
      /// Subs Ok
      /// </summary>
      public bool subfl { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Entered
      /// </summary>
      public DateTime? enterdt { get; set; }

      /// <summary>
      /// Duns #
      /// </summary>
      [StringValidationAttribute]
      public string dunsno { get; set; }

      /// <summary>
      /// Elec. Purchase Order Type
      /// </summary>
      [StringValidationAttribute]
      public string epotype { get; set; }

      /// <summary>
      /// Elec. Purchase Orders To
      /// </summary>
      public bool epoto { get; set; }

      /// <summary>
      /// EDI Trading Partner
      /// </summary>
      [StringValidationAttribute]
      public string edipartner { get; set; }

      /// <summary>
      /// Language Code
      /// </summary>
      [StringValidationAttribute]
      public string langcd { get; set; }

      /// <summary>
      /// Your Address
      /// </summary>
      [StringValidationAttribute]
      public string ediyouraddr { get; set; }

      /// <summary>
      /// Partner Address
      /// </summary>
      [StringValidationAttribute]
      public string edipartaddr { get; set; }

      /// <summary>
      /// Purchase Order Version
      /// </summary>
      [StringValidationAttribute]
      public string edipover { get; set; }

      /// <summary>
      /// Envelope Tag
      /// </summary>
      [StringValidationAttribute]
      public string edienvtag1 { get; set; }
      [StringValidationAttribute]
      public string edienvtag2 { get; set; }

      /// <summary>
      /// Out Password
      /// </summary>
      [StringValidationAttribute]
      public string edioutpswd { get; set; }

      /// <summary>
      /// In Password
      /// </summary>
      [StringValidationAttribute]
      public string ediinpswd { get; set; }

      /// <summary>
      /// Control #
      /// </summary>
      public int edictrlno { get; set; }

      /// <summary>
      /// Network
      /// </summary>
      [StringValidationAttribute]
      public string edinetwork { get; set; }

      /// <summary>
      /// 846 Version
      /// </summary>
      [StringValidationAttribute]
      public string edi846ver { get; set; }

      /// <summary>
      /// Advice Number
      /// </summary>
      public int edi846no { get; set; }

      /// <summary>
      /// eCommerce Type
      /// </summary>
      [StringValidationAttribute]
      public string ecommercety { get; set; }

      /// <summary>
      /// Email Address
      /// </summary>
      [StringValidationAttribute]
      public string email { get; set; }

      /// <summary>
      /// Country
      /// </summary>
      [StringValidationAttribute]
      public string countrycd { get; set; }

      /// <summary>
      /// Elec. Quote Type
      /// </summary>
      [StringValidationAttribute]
      public string equotetype { get; set; }

      /// <summary>
      /// Sync To CRM
      /// </summary>
      public bool synccrmfl { get; set; }

      /// <summary>
      /// Elec. Quotes To
      /// </summary>
      public bool equoteto { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      public int ptxcono { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [StringValidationAttribute]
      public string ptxwhse { get; set; }

      /// <summary>
      /// Require Acknowledgement
      /// </summary>
      public bool ptxackfl { get; set; }

      /// <summary>
      /// Print Prices on Purchase Orders
      /// </summary>
      public bool printfl { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr3 { get; set; }

      /// <summary>
      /// User 10
      /// </summary>
      [StringValidationAttribute]
      public string user10 { get; set; }

      /// <summary>
      /// User 11
      /// </summary>
      [StringValidationAttribute]
      public string user11 { get; set; }

      /// <summary>
      /// User 12
      /// </summary>
      [StringValidationAttribute]
      public string user12 { get; set; }

      /// <summary>
      /// User 13
      /// </summary>
      [StringValidationAttribute]
      public string user13 { get; set; }

      /// <summary>
      /// User 14
      /// </summary>
      [StringValidationAttribute]
      public string user14 { get; set; }

      /// <summary>
      /// User 15
      /// </summary>
      [StringValidationAttribute]
      public string user15 { get; set; }

      /// <summary>
      /// User 16
      /// </summary>
      [StringValidationAttribute]
      public string user16 { get; set; }

      /// <summary>
      /// User 17
      /// </summary>
      [StringValidationAttribute]
      public string user17 { get; set; }

      /// <summary>
      /// User 18
      /// </summary>
      [StringValidationAttribute]
      public string user18 { get; set; }

      /// <summary>
      /// User 19
      /// </summary>
      [StringValidationAttribute]
      public string user19 { get; set; }

      /// <summary>
      /// User 20
      /// </summary>
      [StringValidationAttribute]
      public string user20 { get; set; }

      /// <summary>
      /// User 21
      /// </summary>
      [StringValidationAttribute]
      public string user21 { get; set; }

      /// <summary>
      /// User 22
      /// </summary>
      [StringValidationAttribute]
      public string user22 { get; set; }

      /// <summary>
      /// User 23
      /// </summary>
      [StringValidationAttribute]
      public string user23 { get; set; }

      /// <summary>
      /// User 24
      /// </summary>
      [StringValidationAttribute]
      public string user24 { get; set; }

      /// <summary>
      /// Freight Expected
      /// </summary>
      [StringValidationAttribute]
      public string freightexpectedty { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Intrastat Terms Of Delivery
      /// </summary>
      public int intratodcd { get; set; }

      /// <summary>
      /// Geo Code
      /// </summary>
      public int geocd { get; set; }

      /// <summary>
      /// Outside City Limit
      /// </summary>
      public bool outofcityfl { get; set; }

      /// <summary>
      /// Supplier Access Vendor Location ID
      /// </summary>
      [StringValidationAttribute]
      public string supaccessvendlocid { get; set; }

      /// <summary>
      /// Freight Terms
      /// </summary>
      [StringValidationAttribute]
      public string frttermscd { get; set; }

      /// <summary>
      /// Transfer Location
      /// </summary>
      [StringValidationAttribute]
      public string transferloc { get; set; }

      /// <summary>
      /// Action Code
      /// </summary>
      [StringValidationAttribute]
      public string esbactioncode { get; set; }

      /// <summary>
      /// Limit Ship Via
      /// </summary>
      public bool limitshipvia { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      public bool statustype { get; set; }

      /// <summary>
      /// Allow Purchases
      /// </summary>
      public bool allowpofl { get; set; }

      /// <summary>
      /// Restrict Data Access
      /// </summary>
      public bool restricteditfl { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.addr1 + "," + this.city + "," + this.state + "," + this.zipcd + "," + this.countrycd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildApssBaseFromRow<T>(DataRow row) where T:ApssBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.shipfmno = row.IsNull("shipfmno") ? 0 : row.Field<int>("shipfmno");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.phoneno = row.IsNull("phoneno") ? string.Empty : row.Field<string>("phoneno");
         entity.faxphoneno = row.IsNull("faxphoneno") ? string.Empty : row.Field<string>("faxphoneno");
         entity.slsnm = row.IsNull("slsnm") ? string.Empty : row.Field<string>("slsnm");
         entity.slsphoneno = row.IsNull("slsphoneno") ? string.Empty : row.Field<string>("slsphoneno");
         entity.expednm = row.IsNull("expednm") ? string.Empty : row.Field<string>("expednm");
         entity.exphoneno = row.IsNull("exphoneno") ? string.Empty : row.Field<string>("exphoneno");
         entity.apcustno = row.IsNull("apcustno") ? string.Empty : row.Field<string>("apcustno");
         entity.edilevel = row.IsNull("edilevel") ? 0 : row.Field<int>("edilevel");
         entity.shipviaty = row.IsNull("shipviaty") ? string.Empty : row.Field<string>("shipviaty");
         entity.bofl = row.Field<bool>("bofl");
         entity.subfl = row.Field<bool>("subfl");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.dunsno = row.IsNull("dunsno") ? string.Empty : row.Field<string>("dunsno");
         entity.epotype = row.IsNull("epotype") ? string.Empty : row.Field<string>("epotype");
         entity.epoto = row.Field<bool>("epoto");
         entity.edipartner = row.IsNull("edipartner") ? string.Empty : row.Field<string>("edipartner");
         entity.langcd = row.IsNull("langcd") ? string.Empty : row.Field<string>("langcd");
         entity.ediyouraddr = row.IsNull("ediyouraddr") ? string.Empty : row.Field<string>("ediyouraddr");
         entity.edipartaddr = row.IsNull("edipartaddr") ? string.Empty : row.Field<string>("edipartaddr");
         entity.edipover = row.IsNull("edipover") ? string.Empty : row.Field<string>("edipover");
         entity.edienvtag1 = row.IsNull("edienvtag1") ? string.Empty : row.Field<string>("edienvtag1");
         entity.edienvtag2 = row.IsNull("edienvtag2") ? string.Empty : row.Field<string>("edienvtag2");
         entity.edioutpswd = row.IsNull("edioutpswd") ? string.Empty : row.Field<string>("edioutpswd");
         entity.ediinpswd = row.IsNull("ediinpswd") ? string.Empty : row.Field<string>("ediinpswd");
         entity.edictrlno = row.IsNull("edictrlno") ? 0 : row.Field<int>("edictrlno");
         entity.edinetwork = row.IsNull("edinetwork") ? string.Empty : row.Field<string>("edinetwork");
         entity.edi846ver = row.IsNull("edi846ver") ? string.Empty : row.Field<string>("edi846ver");
         entity.edi846no = row.IsNull("edi846no") ? 0 : row.Field<int>("edi846no");
         entity.ecommercety = row.IsNull("ecommercety") ? string.Empty : row.Field<string>("ecommercety");
         entity.email = row.IsNull("email") ? string.Empty : row.Field<string>("email");
         entity.countrycd = row.IsNull("countrycd") ? string.Empty : row.Field<string>("countrycd");
         entity.equotetype = row.IsNull("equotetype") ? string.Empty : row.Field<string>("equotetype");
         entity.synccrmfl = row.Field<bool>("synccrmfl");
         entity.equoteto = row.Field<bool>("equoteto");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.ptxcono = row.IsNull("ptxcono") ? 0 : row.Field<int>("ptxcono");
         entity.ptxwhse = row.IsNull("ptxwhse") ? string.Empty : row.Field<string>("ptxwhse");
         entity.ptxackfl = row.Field<bool>("ptxackfl");
         entity.printfl = row.Field<bool>("printfl");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.user10 = row.IsNull("user10") ? string.Empty : row.Field<string>("user10");
         entity.user11 = row.IsNull("user11") ? string.Empty : row.Field<string>("user11");
         entity.user12 = row.IsNull("user12") ? string.Empty : row.Field<string>("user12");
         entity.user13 = row.IsNull("user13") ? string.Empty : row.Field<string>("user13");
         entity.user14 = row.IsNull("user14") ? string.Empty : row.Field<string>("user14");
         entity.user15 = row.IsNull("user15") ? string.Empty : row.Field<string>("user15");
         entity.user16 = row.IsNull("user16") ? string.Empty : row.Field<string>("user16");
         entity.user17 = row.IsNull("user17") ? string.Empty : row.Field<string>("user17");
         entity.user18 = row.IsNull("user18") ? string.Empty : row.Field<string>("user18");
         entity.user19 = row.IsNull("user19") ? string.Empty : row.Field<string>("user19");
         entity.user20 = row.IsNull("user20") ? string.Empty : row.Field<string>("user20");
         entity.user21 = row.IsNull("user21") ? string.Empty : row.Field<string>("user21");
         entity.user22 = row.IsNull("user22") ? string.Empty : row.Field<string>("user22");
         entity.user23 = row.IsNull("user23") ? string.Empty : row.Field<string>("user23");
         entity.user24 = row.IsNull("user24") ? string.Empty : row.Field<string>("user24");
         entity.freightexpectedty = row.IsNull("freightexpectedty") ? string.Empty : row.Field<string>("freightexpectedty");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.intratodcd = row.IsNull("intratodcd") ? 0 : row.Field<int>("intratodcd");
         entity.geocd = row.IsNull("geocd") ? 0 : row.Field<int>("geocd");
         entity.outofcityfl = row.Field<bool>("outofcityfl");
         entity.supaccessvendlocid = row.IsNull("supaccessvendlocid") ? string.Empty : row.Field<string>("supaccessvendlocid");
         entity.frttermscd = row.IsNull("frttermscd") ? string.Empty : row.Field<string>("frttermscd");
         entity.transferloc = row.IsNull("transferloc") ? string.Empty : row.Field<string>("transferloc");
         entity.esbactioncode = row.IsNull("esbactioncode") ? string.Empty : row.Field<string>("esbactioncode");
         entity.limitshipvia = row.Field<bool>("limitshipvia");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.statustype = row.Field<bool>("statustype");
         entity.allowpofl = row.Field<bool>("allowpofl");
         entity.restricteditfl = row.Field<bool>("restricteditfl");
         entity.rowID = row.Field<byte[]>("apssRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromApssBase(ref DataRow row, ApssBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vendno", entity.vendno);
         row.SetField("shipfmno", entity.shipfmno);
         row.SetField("name", entity.name);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("phoneno", entity.phoneno);
         row.SetField("faxphoneno", entity.faxphoneno);
         row.SetField("slsnm", entity.slsnm);
         row.SetField("slsphoneno", entity.slsphoneno);
         row.SetField("expednm", entity.expednm);
         row.SetField("exphoneno", entity.exphoneno);
         row.SetField("apcustno", entity.apcustno);
         row.SetField("edilevel", entity.edilevel);
         row.SetField("shipviaty", entity.shipviaty);
         row.SetField("bofl", entity.bofl);
         row.SetField("subfl", entity.subfl);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("dunsno", entity.dunsno);
         row.SetField("epotype", entity.epotype);
         row.SetField("epoto", entity.epoto);
         row.SetField("edipartner", entity.edipartner);
         row.SetField("langcd", entity.langcd);
         row.SetField("ediyouraddr", entity.ediyouraddr);
         row.SetField("edipartaddr", entity.edipartaddr);
         row.SetField("edipover", entity.edipover);
         row.SetField("edienvtag1", entity.edienvtag1);
         row.SetField("edienvtag2", entity.edienvtag2);
         row.SetField("edioutpswd", entity.edioutpswd);
         row.SetField("ediinpswd", entity.ediinpswd);
         row.SetField("edictrlno", entity.edictrlno);
         row.SetField("edinetwork", entity.edinetwork);
         row.SetField("edi846ver", entity.edi846ver);
         row.SetField("edi846no", entity.edi846no);
         row.SetField("ecommercety", entity.ecommercety);
         row.SetField("email", entity.email);
         row.SetField("countrycd", entity.countrycd);
         row.SetField("equotetype", entity.equotetype);
         row.SetField("synccrmfl", entity.synccrmfl);
         row.SetField("equoteto", entity.equoteto);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("ptxcono", entity.ptxcono);
         row.SetField("ptxwhse", entity.ptxwhse);
         row.SetField("ptxackfl", entity.ptxackfl);
         row.SetField("printfl", entity.printfl);
         row.SetField("addr3", entity.addr3);
         row.SetField("user10", entity.user10);
         row.SetField("user11", entity.user11);
         row.SetField("user12", entity.user12);
         row.SetField("user13", entity.user13);
         row.SetField("user14", entity.user14);
         row.SetField("user15", entity.user15);
         row.SetField("user16", entity.user16);
         row.SetField("user17", entity.user17);
         row.SetField("user18", entity.user18);
         row.SetField("user19", entity.user19);
         row.SetField("user20", entity.user20);
         row.SetField("user21", entity.user21);
         row.SetField("user22", entity.user22);
         row.SetField("user23", entity.user23);
         row.SetField("user24", entity.user24);
         row.SetField("freightexpectedty", entity.freightexpectedty);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("intratodcd", entity.intratodcd);
         row.SetField("geocd", entity.geocd);
         row.SetField("outofcityfl", entity.outofcityfl);
         row.SetField("supaccessvendlocid", entity.supaccessvendlocid);
         row.SetField("frttermscd", entity.frttermscd);
         row.SetField("transferloc", entity.transferloc);
         row.SetField("esbactioncode", entity.esbactioncode);
         row.SetField("limitshipvia", entity.limitshipvia);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("statustype", entity.statustype);
         row.SetField("allowpofl", entity.allowpofl);
         row.SetField("restricteditfl", entity.restricteditfl);
         row.SetField("apssRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ApssBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vendno", entity.vendno);
         row.SetField("shipfmno", entity.shipfmno);
         row.SetField("apssRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	