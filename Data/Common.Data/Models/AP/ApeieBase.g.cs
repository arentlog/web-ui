//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.AP
{
   /// <summary>
   /// AP Batch update and reconcilation errors
   /// </summary>
   
   public partial class ApeieBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Group
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string groupnm { get; set; }

      /// <summary>
      /// Created Date
      /// </summary>
      [Key,Order]
      public DateTime? createddt { get; set; }

      /// <summary>
      /// Group Seq #
      /// </summary>
      [Key,Order]
      public int groupseqno { get; set; }

      /// <summary>
      /// Table Name
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string tablenm { get; set; }

      /// <summary>
      /// Invoice Seq #
      /// </summary>
      [Key,Order]
      public int invseqno { get; set; }

      /// <summary>
      /// Error Seq
      /// </summary>
      [Key,Order]
      public int errorseqno { get; set; }

      /// <summary>
      /// Error #
      /// </summary>
      public int errorno { get; set; }

      /// <summary>
      /// Message
      /// </summary>
      [StringValidationAttribute]
      public string errormsg { get; set; }

      /// <summary>
      /// Program
      /// </summary>
      [StringValidationAttribute]
      public string program { get; set; }

      /// <summary>
      /// Field
      /// </summary>
      [StringValidationAttribute]
      public string errorfld { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// AP Invoice #
      /// </summary>
      [StringValidationAttribute]
      public string apinvno { get; set; }

      /// <summary>
      /// Trans Type
      /// </summary>
      public int transcd { get; set; }

      /// <summary>
      /// Proc Type
      /// </summary>
      [StringValidationAttribute]
      public string proctype { get; set; }

      /// <summary>
      /// Stage
      /// </summary>
      public int stagecd { get; set; }

      /// <summary>
      /// Addon#
      /// </summary>
      public int addonno { get; set; }

      /// <summary>
      /// PO #
      /// </summary>
      public int pono { get; set; }

      /// <summary>
      /// PO Suf
      /// </summary>
      public decimal posuf { get; set; }

      /// <summary>
      /// PO Line #
      /// </summary>
      public decimal lineno { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [StringValidationAttribute]
      public string shipprod { get; set; }

      /// <summary>
      /// Receiver #
      /// </summary>
      [StringValidationAttribute]
      public string receiverno { get; set; }

      /// <summary>
      /// Detail Type
      /// </summary>
      [StringValidationAttribute]
      public string detailty { get; set; }

      /// <summary>
      /// GL Div #
      /// </summary>
      public int gldivno { get; set; }

      /// <summary>
      /// GL Dept #
      /// </summary>
      public int gldeptno { get; set; }

      /// <summary>
      /// GL Acct #
      /// </summary>
      public int glacctno { get; set; }

      /// <summary>
      /// GL Sub #
      /// </summary>
      public int glsubno { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Buyer
      /// </summary>
      [StringValidationAttribute]
      public string buyer { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildApeieBaseFromRow<T>(DataRow row) where T:ApeieBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.groupnm = row.IsNull("groupnm") ? string.Empty : row.Field<string>("groupnm");
         entity.createddt = row.Field<DateTime?>("createddt");
         entity.groupseqno = row.IsNull("groupseqno") ? 0 : row.Field<int>("groupseqno");
         entity.tablenm = row.IsNull("tablenm") ? string.Empty : row.Field<string>("tablenm");
         entity.invseqno = row.IsNull("invseqno") ? 0 : row.Field<int>("invseqno");
         entity.errorseqno = row.IsNull("errorseqno") ? 0 : row.Field<int>("errorseqno");
         entity.errorno = row.IsNull("errorno") ? 0 : row.Field<int>("errorno");
         entity.errormsg = row.IsNull("errormsg") ? string.Empty : row.Field<string>("errormsg");
         entity.program = row.IsNull("program") ? string.Empty : row.Field<string>("program");
         entity.errorfld = row.IsNull("errorfld") ? string.Empty : row.Field<string>("errorfld");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.apinvno = row.IsNull("apinvno") ? string.Empty : row.Field<string>("apinvno");
         entity.transcd = row.IsNull("transcd") ? 0 : row.Field<int>("transcd");
         entity.proctype = row.IsNull("proctype") ? string.Empty : row.Field<string>("proctype");
         entity.stagecd = row.IsNull("stagecd") ? 0 : row.Field<int>("stagecd");
         entity.addonno = row.IsNull("addonno") ? 0 : row.Field<int>("addonno");
         entity.pono = row.IsNull("pono") ? 0 : row.Field<int>("pono");
         entity.posuf = row.IsNull("posuf") ? decimal.Zero : row.Field<decimal>("posuf");
         entity.lineno = row.IsNull("lineno") ? decimal.Zero : row.Field<decimal>("lineno");
         entity.shipprod = row.IsNull("shipprod") ? string.Empty : row.Field<string>("shipprod");
         entity.receiverno = row.IsNull("receiverno") ? string.Empty : row.Field<string>("receiverno");
         entity.detailty = row.IsNull("detailty") ? string.Empty : row.Field<string>("detailty");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.buyer = row.IsNull("buyer") ? string.Empty : row.Field<string>("buyer");
         entity.rowID = row.Field<byte[]>("apeieRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromApeieBase(ref DataRow row, ApeieBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("groupnm", entity.groupnm);
         row.SetField("createddt", entity.createddt);
         row.SetField("groupseqno", entity.groupseqno);
         row.SetField("tablenm", entity.tablenm);
         row.SetField("invseqno", entity.invseqno);
         row.SetField("errorseqno", entity.errorseqno);
         row.SetField("errorno", entity.errorno);
         row.SetField("errormsg", entity.errormsg);
         row.SetField("program", entity.program);
         row.SetField("errorfld", entity.errorfld);
         row.SetField("vendno", entity.vendno);
         row.SetField("apinvno", entity.apinvno);
         row.SetField("transcd", entity.transcd);
         row.SetField("proctype", entity.proctype);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("addonno", entity.addonno);
         row.SetField("pono", entity.pono);
         row.SetField("posuf", entity.posuf);
         row.SetField("lineno", entity.lineno);
         row.SetField("shipprod", entity.shipprod);
         row.SetField("receiverno", entity.receiverno);
         row.SetField("detailty", entity.detailty);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("transproc", entity.transproc);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("buyer", entity.buyer);
         row.SetField("apeieRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ApeieBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("groupnm", entity.groupnm);
         row.SetField("createddt", entity.createddt);
         row.SetField("groupseqno", entity.groupseqno);
         row.SetField("tablenm", entity.tablenm);
         row.SetField("invseqno", entity.invseqno);
         row.SetField("errorseqno", entity.errorseqno);
         row.SetField("apeieRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	