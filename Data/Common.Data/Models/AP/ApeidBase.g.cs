//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.AP
{
   /// <summary>
   /// AP Group Invoice Costing Detail
   /// </summary>
   [EntityType("AP Group Invoice Transaction Detail","TBD","")]
   public partial class ApeidBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [BusContext(BusPart.AcctEntity),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Group
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string groupnm { get; set; }

      /// <summary>
      /// Created Date
      /// </summary>
      [Key,Order]
      public DateTime? createddt { get; set; }

      /// <summary>
      /// Group Seq #
      /// </summary>
      [Key,Order]
      public int groupseqno { get; set; }

      /// <summary>
      /// Detail Seq #
      /// </summary>
      [Key,Order]
      public int detailseqno { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      [ID(6)]
      public decimal vendno { get; set; }

      /// <summary>
      /// AP Invoice #
      /// </summary>
      [ID(7),StringValidationAttribute]
      public string apinvno { get; set; }

      /// <summary>
      /// PO #
      /// </summary>
      [ID(8)]
      public int pono { get; set; }

      /// <summary>
      /// Invoice Net Cost
      /// </summary>
      public decimal costord { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [ID(10)]
      public bool statustype { get; set; }

      /// <summary>
      /// PO Line Seq #
      /// </summary>
      public int polnseqno { get; set; }

      /// <summary>
      /// Product Description
      /// </summary>
      [StringValidationAttribute]
      public string proddesc { get; set; }

      /// <summary>
      /// Invoice Unit Cost
      /// </summary>
      public decimal cost { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Received Cost
      /// </summary>
      public decimal costrcv { get; set; }

      /// <summary>
      /// Invoice Qty
      /// </summary>
      public decimal qtyord { get; set; }

      /// <summary>
      /// Received Qty
      /// </summary>
      public decimal qtyrcv { get; set; }

      /// <summary>
      /// # of Stocking Units
      /// </summary>
      public decimal unitconv { get; set; }

      /// <summary>
      /// Each/All
      /// </summary>
      public bool eachfl { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [StringValidationAttribute]
      public string shipprod { get; set; }

      /// <summary>
      /// Proc Type
      /// </summary>
      [StringValidationAttribute]
      public string proctype { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// PO Line #
      /// </summary>
      [ID(9)]
      public int lineno { get; set; }

      /// <summary>
      /// Product Description 2
      /// </summary>
      [StringValidationAttribute]
      public string proddesc2 { get; set; }

      /// <summary>
      /// Updated?
      /// </summary>
      public bool updatefl { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Bundle ID
      /// </summary>
      [StringValidationAttribute]
      public string bundleid { get; set; }

      /// <summary>
      /// Comp Seq#
      /// </summary>
      public int compseqno { get; set; }

      /// <summary>
      /// Detail Type
      /// </summary>
      [StringValidationAttribute]
      public string detailty { get; set; }

      /// <summary>
      /// Receiver #
      /// </summary>
      [StringValidationAttribute]
      public string receiverno { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Buyer Message
      /// </summary>
      [StringValidationAttribute]
      public string buyermsg { get; set; }

      /// <summary>
      /// Buyer Qty
      /// </summary>
      public decimal qtybuyer { get; set; }

      /// <summary>
      /// Buyer Cost
      /// </summary>
      public decimal costbuyer { get; set; }

      /// <summary>
      /// Addon Seq #
      /// </summary>
      public int addonseqno { get; set; }

      /// <summary>
      /// PO Suf
      /// </summary>
      public int posuf { get; set; }

      /// <summary>
      /// Recon Over
      /// </summary>
      public bool reconoverfl { get; set; }

      /// <summary>
      /// Invoice Units
      /// </summary>
      [StringValidationAttribute]
      public string invunit { get; set; }

      /// <summary>
      /// PO Units
      /// </summary>
      [StringValidationAttribute]
      public string pounit { get; set; }

      /// <summary>
      /// Close
      /// </summary>
      public bool closefl { get; set; }

      /// <summary>
      /// Apply To
      /// </summary>
      [StringValidationAttribute]
      public string addonapplyty { get; set; }

      /// <summary>
      /// From Line #
      /// </summary>
      public int addonfrompoln { get; set; }

      /// <summary>
      /// To Line #
      /// </summary>
      public int addontopoln { get; set; }

      /// <summary>
      /// POLn Selected List
      /// </summary>
      [StringValidationAttribute]
      public string addonpolnlist { get; set; }

      /// <summary>
      /// Vendor Product
      /// </summary>
      [StringValidationAttribute]
      public string vendprod { get; set; }

      /// <summary>
      /// Close When Fully Costed
      /// </summary>
      public bool closewhencostedfl { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildApeidBaseFromRow<T>(DataRow row) where T:ApeidBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.apinvno = row.IsNull("apinvno") ? string.Empty : row.Field<string>("apinvno");
         entity.pono = row.IsNull("pono") ? 0 : row.Field<int>("pono");
         entity.costord = row.IsNull("costord") ? decimal.Zero : row.Field<decimal>("costord");
         entity.statustype = row.Field<bool>("statustype");
         entity.polnseqno = row.IsNull("polnseqno") ? 0 : row.Field<int>("polnseqno");
         entity.proddesc = row.IsNull("proddesc") ? string.Empty : row.Field<string>("proddesc");
         entity.cost = row.IsNull("cost") ? decimal.Zero : row.Field<decimal>("cost");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.costrcv = row.IsNull("costrcv") ? decimal.Zero : row.Field<decimal>("costrcv");
         entity.qtyord = row.IsNull("qtyord") ? decimal.Zero : row.Field<decimal>("qtyord");
         entity.qtyrcv = row.IsNull("qtyrcv") ? decimal.Zero : row.Field<decimal>("qtyrcv");
         entity.unitconv = row.IsNull("unitconv") ? decimal.Zero : row.Field<decimal>("unitconv");
         entity.eachfl = row.Field<bool>("eachfl");
         entity.shipprod = row.IsNull("shipprod") ? string.Empty : row.Field<string>("shipprod");
         entity.proctype = row.IsNull("proctype") ? string.Empty : row.Field<string>("proctype");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.proddesc2 = row.IsNull("proddesc2") ? string.Empty : row.Field<string>("proddesc2");
         entity.updatefl = row.Field<bool>("updatefl");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.bundleid = row.IsNull("bundleid") ? string.Empty : row.Field<string>("bundleid");
         entity.compseqno = row.IsNull("compseqno") ? 0 : row.Field<int>("compseqno");
         entity.groupnm = row.IsNull("groupnm") ? string.Empty : row.Field<string>("groupnm");
         entity.createddt = row.Field<DateTime?>("createddt");
         entity.groupseqno = row.IsNull("groupseqno") ? 0 : row.Field<int>("groupseqno");
         entity.detailseqno = row.IsNull("detailseqno") ? 0 : row.Field<int>("detailseqno");
         entity.detailty = row.IsNull("detailty") ? string.Empty : row.Field<string>("detailty");
         entity.receiverno = row.IsNull("receiverno") ? string.Empty : row.Field<string>("receiverno");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.buyermsg = row.IsNull("buyermsg") ? string.Empty : row.Field<string>("buyermsg");
         entity.qtybuyer = row.IsNull("qtybuyer") ? decimal.Zero : row.Field<decimal>("qtybuyer");
         entity.costbuyer = row.IsNull("costbuyer") ? decimal.Zero : row.Field<decimal>("costbuyer");
         entity.addonseqno = row.IsNull("addonseqno") ? 0 : row.Field<int>("addonseqno");
         entity.posuf = row.IsNull("posuf") ? 0 : row.Field<int>("posuf");
         entity.reconoverfl = row.Field<bool>("reconoverfl");
         entity.invunit = row.IsNull("invunit") ? string.Empty : row.Field<string>("invunit");
         entity.pounit = row.IsNull("pounit") ? string.Empty : row.Field<string>("pounit");
         entity.closefl = row.Field<bool>("closefl");
         entity.addonapplyty = row.IsNull("addonapplyty") ? string.Empty : row.Field<string>("addonapplyty");
         entity.addonfrompoln = row.IsNull("addonfrompoln") ? 0 : row.Field<int>("addonfrompoln");
         entity.addontopoln = row.IsNull("addontopoln") ? 0 : row.Field<int>("addontopoln");
         entity.addonpolnlist = row.IsNull("addonpolnlist") ? string.Empty : row.Field<string>("addonpolnlist");
         entity.vendprod = row.IsNull("vendprod") ? string.Empty : row.Field<string>("vendprod");
         entity.closewhencostedfl = row.Field<bool>("closewhencostedfl");
         entity.rowID = row.Field<byte[]>("apeidRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromApeidBase(ref DataRow row, ApeidBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vendno", entity.vendno);
         row.SetField("apinvno", entity.apinvno);
         row.SetField("pono", entity.pono);
         row.SetField("costord", entity.costord);
         row.SetField("statustype", entity.statustype);
         row.SetField("polnseqno", entity.polnseqno);
         row.SetField("proddesc", entity.proddesc);
         row.SetField("cost", entity.cost);
         row.SetField("whse", entity.whse);
         row.SetField("costrcv", entity.costrcv);
         row.SetField("qtyord", entity.qtyord);
         row.SetField("qtyrcv", entity.qtyrcv);
         row.SetField("unitconv", entity.unitconv);
         row.SetField("eachfl", entity.eachfl);
         row.SetField("shipprod", entity.shipprod);
         row.SetField("proctype", entity.proctype);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("lineno", entity.lineno);
         row.SetField("proddesc2", entity.proddesc2);
         row.SetField("updatefl", entity.updatefl);
         row.SetField("transproc", entity.transproc);
         row.SetField("bundleid", entity.bundleid);
         row.SetField("compseqno", entity.compseqno);
         row.SetField("groupnm", entity.groupnm);
         row.SetField("createddt", entity.createddt);
         row.SetField("groupseqno", entity.groupseqno);
         row.SetField("detailseqno", entity.detailseqno);
         row.SetField("detailty", entity.detailty);
         row.SetField("receiverno", entity.receiverno);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("buyermsg", entity.buyermsg);
         row.SetField("qtybuyer", entity.qtybuyer);
         row.SetField("costbuyer", entity.costbuyer);
         row.SetField("addonseqno", entity.addonseqno);
         row.SetField("posuf", entity.posuf);
         row.SetField("reconoverfl", entity.reconoverfl);
         row.SetField("invunit", entity.invunit);
         row.SetField("pounit", entity.pounit);
         row.SetField("closefl", entity.closefl);
         row.SetField("addonapplyty", entity.addonapplyty);
         row.SetField("addonfrompoln", entity.addonfrompoln);
         row.SetField("addontopoln", entity.addontopoln);
         row.SetField("addonpolnlist", entity.addonpolnlist);
         row.SetField("vendprod", entity.vendprod);
         row.SetField("closewhencostedfl", entity.closewhencostedfl);
         row.SetField("apeidRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ApeidBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("groupnm", entity.groupnm);
         row.SetField("createddt", entity.createddt);
         row.SetField("groupseqno", entity.groupseqno);
         row.SetField("detailseqno", entity.detailseqno);
         row.SetField("apeidRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	