//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.AP
{
   /// <summary>
   /// AP Group Invoice Transaction
   /// </summary>
   [EntityType("AP Group Invoice Transaction","apece.drilldown","")]
   public partial class ApeiBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [BusContext(BusPart.AcctEntity),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Group Seq #
      /// </summary>
      [Key,Order]
      public int groupseqno { get; set; }

      /// <summary>
      /// Group
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string groupnm { get; set; }

      /// <summary>
      /// Created Date
      /// </summary>
      [Key,Order]
      public DateTime? createddt { get; set; }

      /// <summary>
      /// Invoice Seq #
      /// </summary>
      [Key,Order]
      public int invseqno { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      [ID(6)]
      public decimal vendno { get; set; }

      /// <summary>
      /// Amount
      /// </summary>
      public decimal amount { get; set; }

      /// <summary>
      /// Trans Type
      /// </summary>
      [ID(10)]
      public int transcd { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Invoice Date
      /// </summary>
      [ID(8)]
      public DateTime? invdt { get; set; }

      /// <summary>
      /// Due Date
      /// </summary>
      public DateTime? duedt { get; set; }

      /// <summary>
      /// Discount Date
      /// </summary>
      public DateTime? discdt { get; set; }

      /// <summary>
      /// Reference
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Disputed?
      /// </summary>
      public bool disputefl { get; set; }

      /// <summary>
      /// Terms
      /// </summary>
      [StringValidationAttribute]
      public string termstype { get; set; }

      /// <summary>
      /// # of Payments
      /// </summary>
      public int nopays { get; set; }

      /// <summary>
      /// Payment Frequency
      /// </summary>
      public int freqdays { get; set; }

      /// <summary>
      /// Discount %
      /// </summary>
      public decimal discpct { get; set; }

      /// <summary>
      /// AP Invoice #
      /// </summary>
      [ID(7),StringValidationAttribute]
      public string apinvno { get; set; }

      /// <summary>
      /// Invoice Type
      /// </summary>
      [StringValidationAttribute]
      public string invtype { get; set; }

      /// <summary>
      /// Immediately Pay?
      /// </summary>
      public bool immedpyfl { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [BusContext(BusPart.Name),StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string zipcd { get; set; }

      /// <summary>
      /// Manual Address?
      /// </summary>
      public bool manaddrfl { get; set; }

      /// <summary>
      /// Check #
      /// </summary>
      public decimal checkno { get; set; }

      /// <summary>
      /// Bank #
      /// </summary>
      public int bankno { get; set; }

      /// <summary>
      /// G.S.T. Amount
      /// </summary>
      public decimal gsttaxamt { get; set; }

      /// <summary>
      /// P.S.T. Amount
      /// </summary>
      public decimal psttaxamt { get; set; }

      /// <summary>
      /// Currency
      /// </summary>
      [StringValidationAttribute]
      public string currencyty { get; set; }

      /// <summary>
      /// Exchange Rate
      /// </summary>
      public decimal exchgrate1 { get; set; }
      public decimal exchgrate2 { get; set; }

      /// <summary>
      /// Division #
      /// </summary>
      public int divno { get; set; }

      /// <summary>
      /// Max
      /// </summary>
      public int maxpost { get; set; }

      /// <summary>
      /// # of Postings
      /// </summary>
      public int nopost { get; set; }

      /// <summary>
      /// Not for Resale Amount
      /// </summary>
      public decimal notresaleamt { get; set; }

      /// <summary>
      /// Created By
      /// </summary>
      [StringValidationAttribute]
      public string createdby { get; set; }

      /// <summary>
      /// Suspended?
      /// </summary>
      public bool suspfl { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// APET Jrnl #
      /// </summary>
      public int apetjrnlno { get; set; }

      /// <summary>
      /// APET Set #
      /// </summary>
      public int apetsetno { get; set; }

      /// <summary>
      /// ApplyTo Inv Date
      /// </summary>
      public DateTime? appinvdt { get; set; }

      /// <summary>
      /// ApplyTo Invoice #
      /// </summary>
      [StringValidationAttribute]
      public string appinvno { get; set; }

      /// <summary>
      /// ApplyTo TransTy
      /// </summary>
      public int apptranscd { get; set; }

      /// <summary>
      /// Orig Discount
      /// </summary>
      public decimal origdisc { get; set; }

      /// <summary>
      /// Source
      /// </summary>
      public int sourcecd { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [ID(9)]
      public bool statustype { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Auto Reconcile?
      /// </summary>
      public bool autorecfl { get; set; }

      /// <summary>
      /// Seq#
      /// </summary>
      public int paidseqno { get; set; }

      /// <summary>
      /// Stage
      /// </summary>
      public int stagecd { get; set; }

      /// <summary>
      /// Proc Type
      /// </summary>
      [StringValidationAttribute]
      public string proctype { get; set; }

      /// <summary>
      /// Status Message
      /// </summary>
      [StringValidationAttribute]
      public string statusmsg { get; set; }

      /// <summary>
      /// Default GL Accounts
      /// </summary>
      public bool gldefaultfl { get; set; }

      /// <summary>
      /// GL Override
      /// </summary>
      public bool gloverfl { get; set; }

      /// <summary>
      /// New Inv
      /// </summary>
      public bool newinvfl { get; set; }

      /// <summary>
      /// TermsOverridden
      /// </summary>
      public bool termsoverfl { get; set; }

      /// <summary>
      /// EDI
      /// </summary>
      public bool edifl { get; set; }

      /// <summary>
      /// Recon Over
      /// </summary>
      public bool reconoverfl { get; set; }

      /// <summary>
      /// Recon Type
      /// </summary>
      [StringValidationAttribute]
      public string reconty { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Cost Type
      /// </summary>
      [StringValidationAttribute]
      public string costty { get; set; }

      /// <summary>
      /// Seq#
      /// </summary>
      public int appseqno { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr3 { get; set; }

      /// <summary>
      /// Open Initials
      /// </summary>
      [StringValidationAttribute]
      public string openinit { get; set; }

      /// <summary>
      /// Revaluation Number
      /// </summary>
      public int revalno { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.addr1 + "," + this.city + "," + this.state + "," + this.zipcd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildApeiBaseFromRow<T>(DataRow row) where T:ApeiBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.amount = row.IsNull("amount") ? decimal.Zero : row.Field<decimal>("amount");
         entity.transcd = row.IsNull("transcd") ? 0 : row.Field<int>("transcd");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.groupseqno = row.IsNull("groupseqno") ? 0 : row.Field<int>("groupseqno");
         entity.invdt = row.Field<DateTime?>("invdt");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.discdt = row.Field<DateTime?>("discdt");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.disputefl = row.Field<bool>("disputefl");
         entity.termstype = row.IsNull("termstype") ? string.Empty : row.Field<string>("termstype");
         entity.groupnm = row.IsNull("groupnm") ? string.Empty : row.Field<string>("groupnm");
         entity.nopays = row.IsNull("nopays") ? 0 : row.Field<int>("nopays");
         entity.freqdays = row.IsNull("freqdays") ? 0 : row.Field<int>("freqdays");
         entity.discpct = row.IsNull("discpct") ? decimal.Zero : row.Field<decimal>("discpct");
         entity.apinvno = row.IsNull("apinvno") ? string.Empty : row.Field<string>("apinvno");
         entity.invtype = row.IsNull("invtype") ? string.Empty : row.Field<string>("invtype");
         entity.immedpyfl = row.Field<bool>("immedpyfl");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.manaddrfl = row.Field<bool>("manaddrfl");
         entity.checkno = row.IsNull("checkno") ? decimal.Zero : row.Field<decimal>("checkno");
         entity.bankno = row.IsNull("bankno") ? 0 : row.Field<int>("bankno");
         entity.gsttaxamt = row.IsNull("gsttaxamt") ? decimal.Zero : row.Field<decimal>("gsttaxamt");
         entity.psttaxamt = row.IsNull("psttaxamt") ? decimal.Zero : row.Field<decimal>("psttaxamt");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.exchgrate1 = row.IsNull("exchgrate1") ? decimal.Zero : row.Field<decimal>("exchgrate1");
         entity.exchgrate2 = row.IsNull("exchgrate2") ? decimal.Zero : row.Field<decimal>("exchgrate2");
         entity.divno = row.IsNull("divno") ? 0 : row.Field<int>("divno");
         entity.maxpost = row.IsNull("maxpost") ? 0 : row.Field<int>("maxpost");
         entity.nopost = row.IsNull("nopost") ? 0 : row.Field<int>("nopost");
         entity.notresaleamt = row.IsNull("notresaleamt") ? decimal.Zero : row.Field<decimal>("notresaleamt");
         entity.createdby = row.IsNull("createdby") ? string.Empty : row.Field<string>("createdby");
         entity.suspfl = row.Field<bool>("suspfl");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.createddt = row.Field<DateTime?>("createddt");
         entity.invseqno = row.IsNull("invseqno") ? 0 : row.Field<int>("invseqno");
         entity.apetjrnlno = row.IsNull("apetjrnlno") ? 0 : row.Field<int>("apetjrnlno");
         entity.apetsetno = row.IsNull("apetsetno") ? 0 : row.Field<int>("apetsetno");
         entity.appinvdt = row.Field<DateTime?>("appinvdt");
         entity.appinvno = row.IsNull("appinvno") ? string.Empty : row.Field<string>("appinvno");
         entity.apptranscd = row.IsNull("apptranscd") ? 0 : row.Field<int>("apptranscd");
         entity.origdisc = row.IsNull("origdisc") ? decimal.Zero : row.Field<decimal>("origdisc");
         entity.sourcecd = row.IsNull("sourcecd") ? 0 : row.Field<int>("sourcecd");
         entity.statustype = row.Field<bool>("statustype");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.autorecfl = row.Field<bool>("autorecfl");
         entity.paidseqno = row.IsNull("paidseqno") ? 0 : row.Field<int>("paidseqno");
         entity.stagecd = row.IsNull("stagecd") ? 0 : row.Field<int>("stagecd");
         entity.proctype = row.IsNull("proctype") ? string.Empty : row.Field<string>("proctype");
         entity.statusmsg = row.IsNull("statusmsg") ? string.Empty : row.Field<string>("statusmsg");
         entity.gldefaultfl = row.Field<bool>("gldefaultfl");
         entity.gloverfl = row.Field<bool>("gloverfl");
         entity.newinvfl = row.Field<bool>("newinvfl");
         entity.termsoverfl = row.Field<bool>("termsoverfl");
         entity.edifl = row.Field<bool>("edifl");
         entity.reconoverfl = row.Field<bool>("reconoverfl");
         entity.reconty = row.IsNull("reconty") ? string.Empty : row.Field<string>("reconty");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.costty = row.IsNull("costty") ? string.Empty : row.Field<string>("costty");
         entity.appseqno = row.IsNull("appseqno") ? 0 : row.Field<int>("appseqno");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.openinit = row.IsNull("openinit") ? string.Empty : row.Field<string>("openinit");
         entity.revalno = row.IsNull("revalno") ? 0 : row.Field<int>("revalno");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.rowID = row.Field<byte[]>("apeiRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromApeiBase(ref DataRow row, ApeiBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vendno", entity.vendno);
         row.SetField("amount", entity.amount);
         row.SetField("transcd", entity.transcd);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("groupseqno", entity.groupseqno);
         row.SetField("invdt", entity.invdt);
         row.SetField("duedt", entity.duedt);
         row.SetField("discdt", entity.discdt);
         row.SetField("refer", entity.refer);
         row.SetField("disputefl", entity.disputefl);
         row.SetField("termstype", entity.termstype);
         row.SetField("groupnm", entity.groupnm);
         row.SetField("nopays", entity.nopays);
         row.SetField("freqdays", entity.freqdays);
         row.SetField("discpct", entity.discpct);
         row.SetField("apinvno", entity.apinvno);
         row.SetField("invtype", entity.invtype);
         row.SetField("immedpyfl", entity.immedpyfl);
         row.SetField("name", entity.name);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("manaddrfl", entity.manaddrfl);
         row.SetField("checkno", entity.checkno);
         row.SetField("bankno", entity.bankno);
         row.SetField("gsttaxamt", entity.gsttaxamt);
         row.SetField("psttaxamt", entity.psttaxamt);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("exchgrate1", entity.exchgrate1);
         row.SetField("exchgrate2", entity.exchgrate2);
         row.SetField("divno", entity.divno);
         row.SetField("maxpost", entity.maxpost);
         row.SetField("nopost", entity.nopost);
         row.SetField("notresaleamt", entity.notresaleamt);
         row.SetField("createdby", entity.createdby);
         row.SetField("suspfl", entity.suspfl);
         row.SetField("transproc", entity.transproc);
         row.SetField("createddt", entity.createddt);
         row.SetField("invseqno", entity.invseqno);
         row.SetField("apetjrnlno", entity.apetjrnlno);
         row.SetField("apetsetno", entity.apetsetno);
         row.SetField("appinvdt", entity.appinvdt);
         row.SetField("appinvno", entity.appinvno);
         row.SetField("apptranscd", entity.apptranscd);
         row.SetField("origdisc", entity.origdisc);
         row.SetField("sourcecd", entity.sourcecd);
         row.SetField("statustype", entity.statustype);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("autorecfl", entity.autorecfl);
         row.SetField("paidseqno", entity.paidseqno);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("proctype", entity.proctype);
         row.SetField("statusmsg", entity.statusmsg);
         row.SetField("gldefaultfl", entity.gldefaultfl);
         row.SetField("gloverfl", entity.gloverfl);
         row.SetField("newinvfl", entity.newinvfl);
         row.SetField("termsoverfl", entity.termsoverfl);
         row.SetField("edifl", entity.edifl);
         row.SetField("reconoverfl", entity.reconoverfl);
         row.SetField("reconty", entity.reconty);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("costty", entity.costty);
         row.SetField("appseqno", entity.appseqno);
         row.SetField("addr3", entity.addr3);
         row.SetField("openinit", entity.openinit);
         row.SetField("revalno", entity.revalno);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("apeiRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ApeiBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("groupseqno", entity.groupseqno);
         row.SetField("groupnm", entity.groupnm);
         row.SetField("createddt", entity.createddt);
         row.SetField("invseqno", entity.invseqno);
         row.SetField("apeiRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	