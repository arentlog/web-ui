//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.PD
{
   /// <summary>
   /// PD Special Category Pricing
   /// </summary>
   
   public partial class PdssBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Prod Price Type
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string pricetype { get; set; }

      /// <summary>
      /// Begin Date
      /// </summary>
      [Key,Order]
      public DateTime? startdt { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Customer Price Type
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string custptype { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// End Date
      /// </summary>
      public DateTime? enddt { get; set; }

      /// <summary>
      /// Qty Brk On
      /// </summary>
      public bool disctype { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      public bool statustype { get; set; }

      /// <summary>
      /// Reference
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Qty Break
      /// </summary>
      public int qtybrk1 { get; set; }
      public int qtybrk2 { get; set; }
      public int qtybrk3 { get; set; }
      public int qtybrk4 { get; set; }
      public int qtybrk5 { get; set; }
      public int qtybrk6 { get; set; }
      public int qtybrk7 { get; set; }
      public int qtybrk8 { get; set; }

      /// <summary>
      /// Discount
      /// </summary>
      public decimal prcdisc1 { get; set; }
      public decimal prcdisc2 { get; set; }
      public decimal prcdisc3 { get; set; }
      public decimal prcdisc4 { get; set; }
      public decimal prcdisc5 { get; set; }
      public decimal prcdisc6 { get; set; }
      public decimal prcdisc7 { get; set; }
      public decimal prcdisc8 { get; set; }
      public decimal prcdisc9 { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildPdssBaseFromRow<T>(DataRow row) where T:PdssBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.pricetype = row.IsNull("pricetype") ? string.Empty : row.Field<string>("pricetype");
         entity.startdt = row.Field<DateTime?>("startdt");
         entity.enddt = row.Field<DateTime?>("enddt");
         entity.disctype = row.Field<bool>("disctype");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.statustype = row.Field<bool>("statustype");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.qtybrk1 = row.IsNull("qtybrk1") ? 0 : row.Field<int>("qtybrk1");
         entity.qtybrk2 = row.IsNull("qtybrk2") ? 0 : row.Field<int>("qtybrk2");
         entity.qtybrk3 = row.IsNull("qtybrk3") ? 0 : row.Field<int>("qtybrk3");
         entity.qtybrk4 = row.IsNull("qtybrk4") ? 0 : row.Field<int>("qtybrk4");
         entity.qtybrk5 = row.IsNull("qtybrk5") ? 0 : row.Field<int>("qtybrk5");
         entity.qtybrk6 = row.IsNull("qtybrk6") ? 0 : row.Field<int>("qtybrk6");
         entity.qtybrk7 = row.IsNull("qtybrk7") ? 0 : row.Field<int>("qtybrk7");
         entity.qtybrk8 = row.IsNull("qtybrk8") ? 0 : row.Field<int>("qtybrk8");
         entity.prcdisc1 = row.IsNull("prcdisc1") ? decimal.Zero : row.Field<decimal>("prcdisc1");
         entity.prcdisc2 = row.IsNull("prcdisc2") ? decimal.Zero : row.Field<decimal>("prcdisc2");
         entity.prcdisc3 = row.IsNull("prcdisc3") ? decimal.Zero : row.Field<decimal>("prcdisc3");
         entity.prcdisc4 = row.IsNull("prcdisc4") ? decimal.Zero : row.Field<decimal>("prcdisc4");
         entity.prcdisc5 = row.IsNull("prcdisc5") ? decimal.Zero : row.Field<decimal>("prcdisc5");
         entity.prcdisc6 = row.IsNull("prcdisc6") ? decimal.Zero : row.Field<decimal>("prcdisc6");
         entity.prcdisc7 = row.IsNull("prcdisc7") ? decimal.Zero : row.Field<decimal>("prcdisc7");
         entity.prcdisc8 = row.IsNull("prcdisc8") ? decimal.Zero : row.Field<decimal>("prcdisc8");
         entity.prcdisc9 = row.IsNull("prcdisc9") ? decimal.Zero : row.Field<decimal>("prcdisc9");
         entity.custptype = row.IsNull("custptype") ? string.Empty : row.Field<string>("custptype");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("pdssRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPdssBase(ref DataRow row, PdssBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("pricetype", entity.pricetype);
         row.SetField("startdt", entity.startdt);
         row.SetField("enddt", entity.enddt);
         row.SetField("disctype", entity.disctype);
         row.SetField("whse", entity.whse);
         row.SetField("statustype", entity.statustype);
         row.SetField("refer", entity.refer);
         row.SetField("qtybrk1", entity.qtybrk1);
         row.SetField("qtybrk2", entity.qtybrk2);
         row.SetField("qtybrk3", entity.qtybrk3);
         row.SetField("qtybrk4", entity.qtybrk4);
         row.SetField("qtybrk5", entity.qtybrk5);
         row.SetField("qtybrk6", entity.qtybrk6);
         row.SetField("qtybrk7", entity.qtybrk7);
         row.SetField("qtybrk8", entity.qtybrk8);
         row.SetField("prcdisc1", entity.prcdisc1);
         row.SetField("prcdisc2", entity.prcdisc2);
         row.SetField("prcdisc3", entity.prcdisc3);
         row.SetField("prcdisc4", entity.prcdisc4);
         row.SetField("prcdisc5", entity.prcdisc5);
         row.SetField("prcdisc6", entity.prcdisc6);
         row.SetField("prcdisc7", entity.prcdisc7);
         row.SetField("prcdisc8", entity.prcdisc8);
         row.SetField("prcdisc9", entity.prcdisc9);
         row.SetField("custptype", entity.custptype);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("pdssRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, PdssBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("pricetype", entity.pricetype);
         row.SetField("startdt", entity.startdt);
         row.SetField("whse", entity.whse);
         row.SetField("custptype", entity.custptype);
         row.SetField("pdssRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	