//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.IC
{
   /// <summary>
   /// Catalog Group Keys - This table serves a dual purpose. The first purpose is to create an environment in which a store can easily add products to a branch of a tree or create a branch without having to know the specific nodeid for that node on the tree. This will be accomplished by using a tag that is specific to each store or by using a product which has already been placed on the tree as a reference product. The second purpose is to allow us to report on and manage the store specific tree structure.
   /// </summary>
   
   public partial class IcsgkBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Corp Id
      /// </summary>
      [Key,Order]
      public int corpid { get; set; }

      /// <summary>
      /// Store Id
      /// </summary>
      [Key,Order]
      public int storeid { get; set; }

      /// <summary>
      /// Tag
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string tag { get; set; }

      /// <summary>
      /// Tag Type
      /// </summary>
      [StringValidationAttribute]
      public string tagType { get; set; }

      /// <summary>
      /// Tag Number
      /// </summary>
      public int tagno { get; set; }

      /// <summary>
      /// Reference Prod
      /// </summary>
      [StringValidationAttribute]
      public string referenceProd { get; set; }

      /// <summary>
      /// Reference Product Category
      /// </summary>
      [StringValidationAttribute]
      public string referencePcat { get; set; }

      /// <summary>
      /// Tree Level 1
      /// </summary>
      [StringValidationAttribute]
      public string level1 { get; set; }

      /// <summary>
      /// Tree Level 2
      /// </summary>
      [StringValidationAttribute]
      public string level2 { get; set; }

      /// <summary>
      /// Tree Level 3
      /// </summary>
      [StringValidationAttribute]
      public string level3 { get; set; }

      /// <summary>
      /// Tree Level 4
      /// </summary>
      [StringValidationAttribute]
      public string level4 { get; set; }

      /// <summary>
      /// Tree Level 5
      /// </summary>
      [StringValidationAttribute]
      public string level5 { get; set; }

      /// <summary>
      /// Tree Level 6
      /// </summary>
      [StringValidationAttribute]
      public string level6 { get; set; }

      /// <summary>
      /// Tree Level 7
      /// </summary>
      [StringValidationAttribute]
      public string level7 { get; set; }

      /// <summary>
      /// Tree Level 8
      /// </summary>
      [StringValidationAttribute]
      public string level8 { get; set; }

      /// <summary>
      /// Tree Level 9
      /// </summary>
      [StringValidationAttribute]
      public string level9 { get; set; }

      /// <summary>
      /// Tree Level 10
      /// </summary>
      [StringValidationAttribute]
      public string level10 { get; set; }

      /// <summary>
      /// GAV
      /// </summary>
      [StringValidationAttribute]
      public string gav { get; set; }

      /// <summary>
      /// Node Id
      /// </summary>
      public int nodeid { get; set; }

      /// <summary>
      /// link
      /// </summary>
      [StringValidationAttribute]
      public string link { get; set; }

      /// <summary>
      /// Auth Group List
      /// </summary>
      [StringValidationAttribute]
      public string authgrplist { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [StringValidationAttribute]
      public string statustype { get; set; }

      /// <summary>
      /// Status Date
      /// </summary>
      public DateTime? statusdt { get; set; }

      /// <summary>
      /// Batch
      /// </summary>
      [StringValidationAttribute]
      public string ecbatchnm { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildIcsgkBaseFromRow<T>(DataRow row) where T:IcsgkBase, new()
      {
         T entity = new T();
         entity.corpid = row.IsNull("corpid") ? 0 : row.Field<int>("corpid");
         entity.storeid = row.IsNull("storeid") ? 0 : row.Field<int>("storeid");
         entity.tag = row.IsNull("tag") ? string.Empty : row.Field<string>("tag");
         entity.tagType = row.IsNull("tag-type") ? string.Empty : row.Field<string>("tag-type");
         entity.tagno = row.IsNull("tagno") ? 0 : row.Field<int>("tagno");
         entity.referenceProd = row.IsNull("reference-prod") ? string.Empty : row.Field<string>("reference-prod");
         entity.referencePcat = row.IsNull("reference-pcat") ? string.Empty : row.Field<string>("reference-pcat");
         entity.level1 = row.IsNull("level1") ? string.Empty : row.Field<string>("level1");
         entity.level2 = row.IsNull("level2") ? string.Empty : row.Field<string>("level2");
         entity.level3 = row.IsNull("level3") ? string.Empty : row.Field<string>("level3");
         entity.level4 = row.IsNull("level4") ? string.Empty : row.Field<string>("level4");
         entity.level5 = row.IsNull("level5") ? string.Empty : row.Field<string>("level5");
         entity.level6 = row.IsNull("level6") ? string.Empty : row.Field<string>("level6");
         entity.level7 = row.IsNull("level7") ? string.Empty : row.Field<string>("level7");
         entity.level8 = row.IsNull("level8") ? string.Empty : row.Field<string>("level8");
         entity.level9 = row.IsNull("level9") ? string.Empty : row.Field<string>("level9");
         entity.level10 = row.IsNull("level10") ? string.Empty : row.Field<string>("level10");
         entity.gav = row.IsNull("gav") ? string.Empty : row.Field<string>("gav");
         entity.nodeid = row.IsNull("nodeid") ? 0 : row.Field<int>("nodeid");
         entity.link = row.IsNull("link") ? string.Empty : row.Field<string>("link");
         entity.authgrplist = row.IsNull("authgrplist") ? string.Empty : row.Field<string>("authgrplist");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.statustype = row.IsNull("statustype") ? string.Empty : row.Field<string>("statustype");
         entity.statusdt = row.Field<DateTime?>("statusdt");
         entity.ecbatchnm = row.IsNull("ecbatchnm") ? string.Empty : row.Field<string>("ecbatchnm");
         entity.rowID = row.Field<byte[]>("icsgkRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcsgkBase(ref DataRow row, IcsgkBase entity)
      {
         row.SetField("corpid", entity.corpid);
         row.SetField("storeid", entity.storeid);
         row.SetField("tag", entity.tag);
         row.SetField("tag-type", entity.tagType);
         row.SetField("tagno", entity.tagno);
         row.SetField("reference-prod", entity.referenceProd);
         row.SetField("reference-pcat", entity.referencePcat);
         row.SetField("level1", entity.level1);
         row.SetField("level2", entity.level2);
         row.SetField("level3", entity.level3);
         row.SetField("level4", entity.level4);
         row.SetField("level5", entity.level5);
         row.SetField("level6", entity.level6);
         row.SetField("level7", entity.level7);
         row.SetField("level8", entity.level8);
         row.SetField("level9", entity.level9);
         row.SetField("level10", entity.level10);
         row.SetField("gav", entity.gav);
         row.SetField("nodeid", entity.nodeid);
         row.SetField("link", entity.link);
         row.SetField("authgrplist", entity.authgrplist);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("transproc", entity.transproc);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("statustype", entity.statustype);
         row.SetField("statusdt", entity.statusdt);
         row.SetField("ecbatchnm", entity.ecbatchnm);
         row.SetField("icsgkRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, IcsgkBase entity)
      {
         row.SetField("corpid", entity.corpid);
         row.SetField("storeid", entity.storeid);
         row.SetField("tag", entity.tag);
         row.SetField("icsgkRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	