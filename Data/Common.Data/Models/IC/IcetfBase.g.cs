//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.IC
{
   /// <summary>
   /// Inventory Issues
   /// </summary>
   [EntityType("Inventory Issues","TBD","")]
   public partial class IcetfBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [BusContext(BusPart.AcctEntity),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Product #
      /// </summary>
      [BusContext(BusPart.Name),Key,Order,StringValidationAttribute]
      public string prod { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [BusContext(BusPart.Location),Key,Order,StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Seq#
      /// </summary>
      [Key,Order]
      public int seqno { get; set; }

      /// <summary>
      /// Issue Date
      /// </summary>
      [BusContext(BusPart.Descr),Key,Order]
      public DateTime? issuedt { get; set; }

      /// <summary>
      /// Order #
      /// </summary>
      [ID(9)]
      public int orderno { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      [ID(10)]
      public int ordersuf { get; set; }

      /// <summary>
      /// Line#
      /// </summary>
      [ID(11)]
      public int lineno { get; set; }

      /// <summary>
      /// PO/WT #
      /// </summary>
      [StringValidationAttribute]
      public string ordertype { get; set; }

      /// <summary>
      /// Qty Ship
      /// </summary>
      public decimal qtyship { get; set; }

      /// <summary>
      /// Receipt
      /// </summary>
      public DateTime? receiptdt { get; set; }

      /// <summary>
      /// Tax Rate
      /// </summary>
      public decimal taxrateau { get; set; }

      /// <summary>
      /// Tax Rate Paid
      /// </summary>
      public decimal taxratepdau { get; set; }

      /// <summary>
      /// Taxable Type
      /// </summary>
      [StringValidationAttribute]
      public string taxablety { get; set; }

      /// <summary>
      /// Tax Issued on Sale
      /// </summary>
      public decimal taxissuedau { get; set; }

      /// <summary>
      /// Spec Rec Link
      /// </summary>
      public decimal icspecrecno { get; set; }

      /// <summary>
      /// Credits Value
      /// </summary>
      public decimal creditvalau { get; set; }

      /// <summary>
      /// Cost of Sales
      /// </summary>
      public decimal salescostau { get; set; }

      /// <summary>
      /// Tax Paid
      /// </summary>
      public decimal taxpaid { get; set; }

      /// <summary>
      /// Cost of Goods Returned
      /// </summary>
      public decimal returncostau { get; set; }

      /// <summary>
      /// Kit Seq#
      /// </summary>
      public int kitseqno { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// Stage Cd (au)
      /// </summary>
      public int stagecdau { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// PO #
      /// </summary>
      [ID(6)]
      public int pono { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// PO Suffix
      /// </summary>
      [ID(7)]
      public int posuf { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// PO Line #
      /// </summary>
      [ID(8)]
      public int polineno { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// Source
      /// </summary>
      [StringValidationAttribute]
      public string src { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// Qty Costed
      /// </summary>
      public decimal qtycost { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// OE Cost
      /// </summary>
      public decimal oeelcost { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// Backposted?
      /// </summary>
      public bool bpfl { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildIcetfBaseFromRow<T>(DataRow row) where T:IcetfBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.ordertype = row.IsNull("ordertype") ? string.Empty : row.Field<string>("ordertype");
         entity.qtyship = row.IsNull("qtyship") ? decimal.Zero : row.Field<decimal>("qtyship");
         entity.receiptdt = row.Field<DateTime?>("receiptdt");
         entity.issuedt = row.Field<DateTime?>("issuedt");
         entity.taxrateau = row.IsNull("taxrateau") ? decimal.Zero : row.Field<decimal>("taxrateau");
         entity.taxratepdau = row.IsNull("taxratepdau") ? decimal.Zero : row.Field<decimal>("taxratepdau");
         entity.taxablety = row.IsNull("taxablety") ? string.Empty : row.Field<string>("taxablety");
         entity.taxissuedau = row.IsNull("taxissuedau") ? decimal.Zero : row.Field<decimal>("taxissuedau");
         entity.icspecrecno = row.IsNull("icspecrecno") ? decimal.Zero : row.Field<decimal>("icspecrecno");
         entity.creditvalau = row.IsNull("creditvalau") ? decimal.Zero : row.Field<decimal>("creditvalau");
         entity.salescostau = row.IsNull("salescostau") ? decimal.Zero : row.Field<decimal>("salescostau");
         entity.taxpaid = row.IsNull("taxpaid") ? decimal.Zero : row.Field<decimal>("taxpaid");
         entity.returncostau = row.IsNull("returncostau") ? decimal.Zero : row.Field<decimal>("returncostau");
         entity.kitseqno = row.IsNull("kitseqno") ? 0 : row.Field<int>("kitseqno");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.stagecdau = row.IsNull("stagecdau") ? 0 : row.Field<int>("stagecdau");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.pono = row.IsNull("pono") ? 0 : row.Field<int>("pono");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.posuf = row.IsNull("posuf") ? 0 : row.Field<int>("posuf");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.polineno = row.IsNull("polineno") ? 0 : row.Field<int>("polineno");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.src = row.IsNull("src") ? string.Empty : row.Field<string>("src");
         entity.user6 = row.Field<decimal?>("user6");
         entity.qtycost = row.IsNull("qtycost") ? decimal.Zero : row.Field<decimal>("qtycost");
         entity.user7 = row.Field<decimal?>("user7");
         entity.oeelcost = row.IsNull("oeelcost") ? decimal.Zero : row.Field<decimal>("oeelcost");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.bpfl = row.Field<bool>("bpfl");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("icetfRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcetfBase(ref DataRow row, IcetfBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("prod", entity.prod);
         row.SetField("whse", entity.whse);
         row.SetField("seqno", entity.seqno);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("lineno", entity.lineno);
         row.SetField("ordertype", entity.ordertype);
         row.SetField("qtyship", entity.qtyship);
         row.SetField("receiptdt", entity.receiptdt);
         row.SetField("issuedt", entity.issuedt);
         row.SetField("taxrateau", entity.taxrateau);
         row.SetField("taxratepdau", entity.taxratepdau);
         row.SetField("taxablety", entity.taxablety);
         row.SetField("taxissuedau", entity.taxissuedau);
         row.SetField("icspecrecno", entity.icspecrecno);
         row.SetField("creditvalau", entity.creditvalau);
         row.SetField("salescostau", entity.salescostau);
         row.SetField("taxpaid", entity.taxpaid);
         row.SetField("returncostau", entity.returncostau);
         row.SetField("kitseqno", entity.kitseqno);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("user1", entity.user1);
         row.SetField("stagecdau", entity.stagecdau);
         row.SetField("user2", entity.user2);
         row.SetField("pono", entity.pono);
         row.SetField("user3", entity.user3);
         row.SetField("posuf", entity.posuf);
         row.SetField("user4", entity.user4);
         row.SetField("polineno", entity.polineno);
         row.SetField("user5", entity.user5);
         row.SetField("src", entity.src);
         row.SetField("user6", entity.user6);
         row.SetField("qtycost", entity.qtycost);
         row.SetField("user7", entity.user7);
         row.SetField("oeelcost", entity.oeelcost);
         row.SetField("user8", entity.user8);
         row.SetField("bpfl", entity.bpfl);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("icetfRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, IcetfBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("prod", entity.prod);
         row.SetField("whse", entity.whse);
         row.SetField("seqno", entity.seqno);
         row.SetField("issuedt", entity.issuedt);
         row.SetField("icetfRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	