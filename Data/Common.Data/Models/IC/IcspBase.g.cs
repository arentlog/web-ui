//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.IC
{
   /// <summary>
   /// R&D Products
   /// </summary>
   [EntityType("IC Product Master","icip.detail","ItemMaster")]
   public partial class IcspBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [BodContext(BodPart.AcctEntity,""),BusContext(BusPart.AcctEntity),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [DrillbackParam("pk",1),BodID(1,RequiredId.True),BusContext(BusPart.Name),Key,Order,StringValidationAttribute]
      public string prod { get; set; }

      /// <summary>
      /// Lookup Name
      /// </summary>
      [StringValidationAttribute]
      public string lookupnm { get; set; }

      /// <summary>
      /// Category
      /// </summary>
      [StringValidationAttribute]
      public string prodcat { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Selling Units
      /// </summary>
      [StringValidationAttribute]
      public string unitsell { get; set; }

      /// <summary>
      /// Counting Units
      /// </summary>
      [StringValidationAttribute]
      public string unitcnt { get; set; }

      /// <summary>
      /// Stocking Units
      /// </summary>
      [StringValidationAttribute]
      public string unitstock { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal weight { get; set; }

      /// <summary>
      /// Cube
      /// </summary>
      public decimal cubes { get; set; }

      /// <summary>
      /// Core Charge
      /// </summary>
      public decimal corecharge { get; set; }

      /// <summary>
      /// MSDS Product
      /// </summary>
      public bool msdsfl { get; set; }

      /// <summary>
      /// Last MSDS Change
      /// </summary>
      public DateTime? msdschgdt { get; set; }

      /// <summary>
      /// External Web Page
      /// </summary>
      [StringValidationAttribute]
      public string webpageext { get; set; }

      /// <summary>
      /// Internal Web Page
      /// </summary>
      [StringValidationAttribute]
      public string webpage { get; set; }

      /// <summary>
      /// Length of Warranty
      /// </summary>
      public int warrlength { get; set; }

      /// <summary>
      /// Warranty Period
      /// </summary>
      [StringValidationAttribute]
      public string warrtype { get; set; }

      /// <summary>
      /// Unit Conversions
      /// </summary>
      public bool unitconvfl { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string descrip1 { get; set; }
      [ID(4),StringValidationAttribute]
      public string descrip2 { get; set; }

      /// <summary>
      /// Entered
      /// </summary>
      public DateTime? enterdt { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [StringValidationAttribute]
      public string statustype { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Kit Type
      /// </summary>
      [StringValidationAttribute]
      public string kittype { get; set; }

      /// <summary>
      /// OE Kit Rollup
      /// </summary>
      [StringValidationAttribute]
      public string kitrollty { get; set; }

      /// <summary>
      /// List Kit on Invoice
      /// </summary>
      public bool exponinvfl { get; set; }

      /// <summary>
      /// No SPC Default
      /// </summary>
      public int nospecrecno { get; set; }

      /// <summary>
      /// LIFO Category
      /// </summary>
      [StringValidationAttribute]
      public string lifocat { get; set; }

      /// <summary>
      /// MSDS Sheet #
      /// </summary>
      [StringValidationAttribute]
      public string msdssheetno { get; set; }

      /// <summary>
      /// Price Book Sequence#
      /// </summary>
      public int pbseqno { get; set; }

      /// <summary>
      /// Round By
      /// </summary>
      public int sellmult { get; set; }

      /// <summary>
      /// Seq#
      /// </summary>
      public int seqno { get; set; }

      /// <summary>
      /// Length
      /// </summary>
      public decimal length { get; set; }

      /// <summary>
      /// Terms Disc
      /// </summary>
      public bool termsdiscfl { get; set; }

      /// <summary>
      /// Terms Discount %
      /// </summary>
      public decimal termspct { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Comp Prt Trans
      /// </summary>
      [StringValidationAttribute]
      public string tiedcompprt { get; set; }

      /// <summary>
      /// BOL Rate
      /// </summary>
      [StringValidationAttribute]
      public string bolclass { get; set; }

      /// <summary>
      /// Edi Code
      /// </summary>
      [StringValidationAttribute]
      public string edicd { get; set; }

      /// <summary>
      /// Supplier Group
      /// </summary>
      [StringValidationAttribute]
      public string slgroup { get; set; }

      /// <summary>
      /// Multiplier
      /// </summary>
      [StringValidationAttribute]
      public string priceonty { get; set; }

      /// <summary>
      /// Spec Rec Link
      /// </summary>
      public int icspecrecno { get; set; }

      /// <summary>
      /// Width
      /// </summary>
      public decimal width { get; set; }

      /// <summary>
      /// OE SPC Default
      /// </summary>
      public int oespecrecno { get; set; }

      /// <summary>
      /// Height
      /// </summary>
      public decimal height { get; set; }

      /// <summary>
      /// Non Stock Component Required
      /// </summary>
      public bool kitnsreqfl { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Auto Update Code
      /// </summary>
      [StringValidationAttribute]
      public string autoupcd { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Req Bundle ID
      /// </summary>
      public bool reqbundleidfl { get; set; }

      /// <summary>
      /// Random Mix?
      /// </summary>
      public bool randommixfl { get; set; }

      /// <summary>
      /// Memo Mix?
      /// </summary>
      public bool memomixfl { get; set; }

      /// <summary>
      /// Imply Qty
      /// </summary>
      public int implyqty { get; set; }

      /// <summary>
      /// Allow Transfer
      /// </summary>
      [StringValidationAttribute]
      public string bodtransferty { get; set; }

      /// <summary>
      /// Product Type
      /// </summary>
      [StringValidationAttribute]
      public string prodtype { get; set; }

      /// <summary>
      /// Implied Core Product
      /// </summary>
      [StringValidationAttribute]
      public string impliedcoreprod { get; set; }

      /// <summary>
      /// Dirty Core Product
      /// </summary>
      [StringValidationAttribute]
      public string dirtycoreprod { get; set; }

      /// <summary>
      /// Months/Days
      /// </summary>
      public bool vendcoregrcfl { get; set; }

      /// <summary>
      /// Months/Days
      /// </summary>
      public bool custcoregrcfl { get; set; }

      /// <summary>
      /// Grace period
      /// </summary>
      public int vendgraceper { get; set; }

      /// <summary>
      /// Grace Period
      /// </summary>
      public int custgraceper { get; set; }

      /// <summary>
      /// Certification Type
      /// </summary>
      [StringValidationAttribute]
      public string certifiedtype { get; set; }

      /// <summary>
      /// Volume Info?
      /// </summary>
      public bool volinfofl { get; set; }

      /// <summary>
      /// SL Update Date
      /// </summary>
      public DateTime? slchgdt { get; set; }

      /// <summary>
      /// Tally Units
      /// </summary>
      [StringValidationAttribute]
      public string tallyunit { get; set; }

      /// <summary>
      /// User 10
      /// </summary>
      [StringValidationAttribute]
      public string user10 { get; set; }

      /// <summary>
      /// User 11
      /// </summary>
      [StringValidationAttribute]
      public string user11 { get; set; }

      /// <summary>
      /// User 12
      /// </summary>
      [StringValidationAttribute]
      public string user12 { get; set; }

      /// <summary>
      /// User 13
      /// </summary>
      [StringValidationAttribute]
      public string user13 { get; set; }

      /// <summary>
      /// User 14
      /// </summary>
      [StringValidationAttribute]
      public string user14 { get; set; }

      /// <summary>
      /// User 15
      /// </summary>
      [StringValidationAttribute]
      public string user15 { get; set; }

      /// <summary>
      /// User 16
      /// </summary>
      [StringValidationAttribute]
      public string user16 { get; set; }

      /// <summary>
      /// User 17
      /// </summary>
      [StringValidationAttribute]
      public string user17 { get; set; }

      /// <summary>
      /// User 18
      /// </summary>
      [StringValidationAttribute]
      public string user18 { get; set; }

      /// <summary>
      /// User 19
      /// </summary>
      [StringValidationAttribute]
      public string user19 { get; set; }

      /// <summary>
      /// User 20
      /// </summary>
      [StringValidationAttribute]
      public string user20 { get; set; }

      /// <summary>
      /// User 21
      /// </summary>
      [StringValidationAttribute]
      public string user21 { get; set; }

      /// <summary>
      /// User 22
      /// </summary>
      [StringValidationAttribute]
      public string user22 { get; set; }

      /// <summary>
      /// User 23
      /// </summary>
      [StringValidationAttribute]
      public string user23 { get; set; }

      /// <summary>
      /// User 24
      /// </summary>
      [StringValidationAttribute]
      public string user24 { get; set; }

      /// <summary>
      /// Configure Kit
      /// </summary>
      public bool cfgkitfl { get; set; }

      /// <summary>
      /// Rule Set
      /// </summary>
      [StringValidationAttribute]
      public string cfgruleset { get; set; }

      /// <summary>
      /// Application Name
      /// </summary>
      [StringValidationAttribute]
      public string cfgapplicationid { get; set; }

      /// <summary>
      /// Namespace
      /// </summary>
      [StringValidationAttribute]
      public string cfgnamespace { get; set; }

      /// <summary>
      /// # Parts
      /// </summary>
      public int cutnumparts { get; set; }

      /// <summary>
      /// 1st Part Type
      /// </summary>
      public bool cutparttype1 { get; set; }

      /// <summary>
      /// Part 1 Unit
      /// </summary>
      [StringValidationAttribute]
      public string cutpartunit1 { get; set; }

      /// <summary>
      /// 2nd Part Type
      /// </summary>
      public bool cutparttype2 { get; set; }

      /// <summary>
      /// Part 2 Unit
      /// </summary>
      [StringValidationAttribute]
      public string cutpartunit2 { get; set; }

      /// <summary>
      /// 2nd Part Increment
      /// </summary>
      public int cutpartincr2 { get; set; }

      /// <summary>
      /// Extended Description
      /// </summary>
      [ID(5),StringValidationAttribute]
      public string descrip3 { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Intrastat Commodity Code
      /// </summary>
      [StringValidationAttribute]
      public string commoditycd { get; set; }

      /// <summary>
      /// Intrastat Net Mass
      /// </summary>
      public decimal netmassamt { get; set; }

      /// <summary>
      /// Intrastat Supplementary Units
      /// </summary>
      public decimal usesuppunits { get; set; }

      /// <summary>
      /// Manufacturer Product
      /// </summary>
      [StringValidationAttribute]
      public string mfgprod { get; set; }

      /// <summary>
      /// Brand Code
      /// </summary>
      [StringValidationAttribute]
      public string brandcode { get; set; }

      /// <summary>
      /// VA Assembly Type
      /// </summary>
      [StringValidationAttribute]
      public string vaassemblyty { get; set; }

      /// <summary>
      /// VA Cutoff Length
      /// </summary>
      public decimal vacutofflength { get; set; }

      /// <summary>
      /// VA Assembly Unit
      /// </summary>
      [StringValidationAttribute]
      public string unitvaassembly { get; set; }

      /// <summary>
      /// NCNR
      /// </summary>
      [StringValidationAttribute]
      public string ncnr { get; set; }

      /// <summary>
      /// Country of Origin
      /// </summary>
      [StringValidationAttribute]
      public string countryoforigin { get; set; }

      /// <summary>
      /// ECCN
      /// </summary>
      [StringValidationAttribute]
      public string eccnclasscd { get; set; }

      /// <summary>
      /// Action Code
      /// </summary>
      [StringValidationAttribute]
      public string esbactioncode { get; set; }

      /// <summary>
      /// HS Code
      /// </summary>
      [StringValidationAttribute]
      public string tariffcd { get; set; }

      /// <summary>
      /// Product Tier
      /// </summary>
      [StringValidationAttribute]
      public string prodtier { get; set; }

      /// <summary>
      /// Alternate Product Group
      /// </summary>
      [StringValidationAttribute]
      public string altprodgrp { get; set; }

      /// <summary>
      /// UNSPSC
      /// </summary>
      [StringValidationAttribute]
      public string unspsc { get; set; }

      /// <summary>
      /// Alt Product Price Code
      /// </summary>
      [StringValidationAttribute]
      public string altprodprccd { get; set; }

      /// <summary>
      /// Cut Type
      /// </summary>
      [StringValidationAttribute]
      public string cuttype { get; set; }

      /// <summary>
      /// Dimensional Length Parts
      /// </summary>
      public int dimlengthparts { get; set; }

      /// <summary>
      /// First Dimensional Length Type
      /// </summary>
      [StringValidationAttribute]
      public string dimlengthty1 { get; set; }

      /// <summary>
      /// Second Dimensional Length Type
      /// </summary>
      [StringValidationAttribute]
      public string dimlengthty2 { get; set; }

      /// <summary>
      /// First Dimensional Length Unit
      /// </summary>
      [StringValidationAttribute]
      public string dimlengthunit1 { get; set; }

      /// <summary>
      /// Second Dimensional Length Unit
      /// </summary>
      [StringValidationAttribute]
      public string dimlengthunit2 { get; set; }

      /// <summary>
      /// Dimensional Length Increment
      /// </summary>
      public decimal dimlengthincr { get; set; }

      /// <summary>
      /// Dimensional Width Parts
      /// </summary>
      public int dimwidthparts { get; set; }

      /// <summary>
      /// First Dimensional Width Type
      /// </summary>
      [StringValidationAttribute]
      public string dimwidthty1 { get; set; }

      /// <summary>
      /// Second Dimensional Width Type
      /// </summary>
      [StringValidationAttribute]
      public string dimwidthty2 { get; set; }

      /// <summary>
      /// First Dimensional Width Unit
      /// </summary>
      [StringValidationAttribute]
      public string dimwidthunit1 { get; set; }

      /// <summary>
      /// Second Dimensional Width Unit
      /// </summary>
      [StringValidationAttribute]
      public string dimwidthunit2 { get; set; }

      /// <summary>
      /// Dimensional Width Increment
      /// </summary>
      public decimal dimwidthincr { get; set; }

      /// <summary>
      /// Product Tier Group
      /// </summary>
      [StringValidationAttribute]
      public string prodtiergrp { get; set; }

      /// <summary>
      /// Product Preference
      /// </summary>
      [StringValidationAttribute]
      public string prodpreference { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }

      /// <summary>
      /// Rental Product Category
      /// </summary>
      [StringValidationAttribute]
      public string rentprodcat { get; set; }

      /// <summary>
      /// Model Number
      /// </summary>
      [StringValidationAttribute]
      public string modelcode { get; set; }

      /// <summary>
      /// Taxation Weight
      /// </summary>
      public decimal taxweight { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildIcspBaseFromRow<T>(DataRow row) where T:IcspBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.lookupnm = row.IsNull("lookupnm") ? string.Empty : row.Field<string>("lookupnm");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.unitsell = row.IsNull("unitsell") ? string.Empty : row.Field<string>("unitsell");
         entity.unitcnt = row.IsNull("unitcnt") ? string.Empty : row.Field<string>("unitcnt");
         entity.unitstock = row.IsNull("unitstock") ? string.Empty : row.Field<string>("unitstock");
         entity.weight = row.IsNull("weight") ? decimal.Zero : row.Field<decimal>("weight");
         entity.cubes = row.IsNull("cubes") ? decimal.Zero : row.Field<decimal>("cubes");
         entity.corecharge = row.IsNull("corecharge") ? decimal.Zero : row.Field<decimal>("corecharge");
         entity.msdsfl = row.Field<bool>("msdsfl");
         entity.msdschgdt = row.Field<DateTime?>("msdschgdt");
         entity.webpageext = row.IsNull("webpageext") ? string.Empty : row.Field<string>("webpageext");
         entity.webpage = row.IsNull("webpage") ? string.Empty : row.Field<string>("webpage");
         entity.warrlength = row.IsNull("warrlength") ? 0 : row.Field<int>("warrlength");
         entity.warrtype = row.IsNull("warrtype") ? string.Empty : row.Field<string>("warrtype");
         entity.unitconvfl = row.Field<bool>("unitconvfl");
         entity.descrip1 = row.IsNull("descrip1") ? string.Empty : row.Field<string>("descrip1");
         entity.descrip2 = row.IsNull("descrip2") ? string.Empty : row.Field<string>("descrip2");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.statustype = row.IsNull("statustype") ? string.Empty : row.Field<string>("statustype");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.kittype = row.IsNull("kittype") ? string.Empty : row.Field<string>("kittype");
         entity.kitrollty = row.IsNull("kitrollty") ? string.Empty : row.Field<string>("kitrollty");
         entity.exponinvfl = row.Field<bool>("exponinvfl");
         entity.nospecrecno = row.IsNull("nospecrecno") ? 0 : row.Field<int>("nospecrecno");
         entity.lifocat = row.IsNull("lifocat") ? string.Empty : row.Field<string>("lifocat");
         entity.msdssheetno = row.IsNull("msdssheetno") ? string.Empty : row.Field<string>("msdssheetno");
         entity.pbseqno = row.IsNull("pbseqno") ? 0 : row.Field<int>("pbseqno");
         entity.sellmult = row.IsNull("sellmult") ? 0 : row.Field<int>("sellmult");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.length = row.IsNull("length") ? decimal.Zero : row.Field<decimal>("length");
         entity.termsdiscfl = row.Field<bool>("termsdiscfl");
         entity.termspct = row.IsNull("termspct") ? decimal.Zero : row.Field<decimal>("termspct");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.tiedcompprt = row.IsNull("tiedcompprt") ? string.Empty : row.Field<string>("tiedcompprt");
         entity.bolclass = row.IsNull("bolclass") ? string.Empty : row.Field<string>("bolclass");
         entity.edicd = row.IsNull("edicd") ? string.Empty : row.Field<string>("edicd");
         entity.slgroup = row.IsNull("slgroup") ? string.Empty : row.Field<string>("slgroup");
         entity.priceonty = row.IsNull("priceonty") ? string.Empty : row.Field<string>("priceonty");
         entity.icspecrecno = row.IsNull("icspecrecno") ? 0 : row.Field<int>("icspecrecno");
         entity.width = row.IsNull("width") ? decimal.Zero : row.Field<decimal>("width");
         entity.oespecrecno = row.IsNull("oespecrecno") ? 0 : row.Field<int>("oespecrecno");
         entity.height = row.IsNull("height") ? decimal.Zero : row.Field<decimal>("height");
         entity.kitnsreqfl = row.Field<bool>("kitnsreqfl");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.autoupcd = row.IsNull("autoupcd") ? string.Empty : row.Field<string>("autoupcd");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.reqbundleidfl = row.Field<bool>("reqbundleidfl");
         entity.randommixfl = row.Field<bool>("randommixfl");
         entity.memomixfl = row.Field<bool>("memomixfl");
         entity.implyqty = row.IsNull("implyqty") ? 0 : row.Field<int>("implyqty");
         entity.bodtransferty = row.IsNull("bodtransferty") ? string.Empty : row.Field<string>("bodtransferty");
         entity.prodtype = row.IsNull("prodtype") ? string.Empty : row.Field<string>("prodtype");
         entity.impliedcoreprod = row.IsNull("impliedcoreprod") ? string.Empty : row.Field<string>("impliedcoreprod");
         entity.dirtycoreprod = row.IsNull("dirtycoreprod") ? string.Empty : row.Field<string>("dirtycoreprod");
         entity.vendcoregrcfl = row.Field<bool>("vendcoregrcfl");
         entity.custcoregrcfl = row.Field<bool>("custcoregrcfl");
         entity.vendgraceper = row.IsNull("vendgraceper") ? 0 : row.Field<int>("vendgraceper");
         entity.custgraceper = row.IsNull("custgraceper") ? 0 : row.Field<int>("custgraceper");
         entity.certifiedtype = row.IsNull("certifiedtype") ? string.Empty : row.Field<string>("certifiedtype");
         entity.volinfofl = row.Field<bool>("volinfofl");
         entity.slchgdt = row.Field<DateTime?>("slchgdt");
         entity.tallyunit = row.IsNull("tallyunit") ? string.Empty : row.Field<string>("tallyunit");
         entity.user10 = row.IsNull("user10") ? string.Empty : row.Field<string>("user10");
         entity.user11 = row.IsNull("user11") ? string.Empty : row.Field<string>("user11");
         entity.user12 = row.IsNull("user12") ? string.Empty : row.Field<string>("user12");
         entity.user13 = row.IsNull("user13") ? string.Empty : row.Field<string>("user13");
         entity.user14 = row.IsNull("user14") ? string.Empty : row.Field<string>("user14");
         entity.user15 = row.IsNull("user15") ? string.Empty : row.Field<string>("user15");
         entity.user16 = row.IsNull("user16") ? string.Empty : row.Field<string>("user16");
         entity.user17 = row.IsNull("user17") ? string.Empty : row.Field<string>("user17");
         entity.user18 = row.IsNull("user18") ? string.Empty : row.Field<string>("user18");
         entity.user19 = row.IsNull("user19") ? string.Empty : row.Field<string>("user19");
         entity.user20 = row.IsNull("user20") ? string.Empty : row.Field<string>("user20");
         entity.user21 = row.IsNull("user21") ? string.Empty : row.Field<string>("user21");
         entity.user22 = row.IsNull("user22") ? string.Empty : row.Field<string>("user22");
         entity.user23 = row.IsNull("user23") ? string.Empty : row.Field<string>("user23");
         entity.user24 = row.IsNull("user24") ? string.Empty : row.Field<string>("user24");
         entity.cfgkitfl = row.Field<bool>("cfgkitfl");
         entity.cfgruleset = row.IsNull("cfgruleset") ? string.Empty : row.Field<string>("cfgruleset");
         entity.cfgapplicationid = row.IsNull("cfgapplicationid") ? string.Empty : row.Field<string>("cfgapplicationid");
         entity.cfgnamespace = row.IsNull("cfgnamespace") ? string.Empty : row.Field<string>("cfgnamespace");
         entity.cutnumparts = row.IsNull("cutnumparts") ? 0 : row.Field<int>("cutnumparts");
         entity.cutparttype1 = row.Field<bool>("cutparttype1");
         entity.cutpartunit1 = row.IsNull("cutpartunit1") ? string.Empty : row.Field<string>("cutpartunit1");
         entity.cutparttype2 = row.Field<bool>("cutparttype2");
         entity.cutpartunit2 = row.IsNull("cutpartunit2") ? string.Empty : row.Field<string>("cutpartunit2");
         entity.cutpartincr2 = row.IsNull("cutpartincr2") ? 0 : row.Field<int>("cutpartincr2");
         entity.descrip3 = row.IsNull("descrip3") ? string.Empty : row.Field<string>("descrip3");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.commoditycd = row.IsNull("commoditycd") ? string.Empty : row.Field<string>("commoditycd");
         entity.netmassamt = row.IsNull("netmassamt") ? decimal.Zero : row.Field<decimal>("netmassamt");
         entity.usesuppunits = row.IsNull("usesuppunits") ? decimal.Zero : row.Field<decimal>("usesuppunits");
         entity.mfgprod = row.IsNull("mfgprod") ? string.Empty : row.Field<string>("mfgprod");
         entity.brandcode = row.IsNull("brandcode") ? string.Empty : row.Field<string>("brandcode");
         entity.vaassemblyty = row.IsNull("vaassemblyty") ? string.Empty : row.Field<string>("vaassemblyty");
         entity.vacutofflength = row.IsNull("vacutofflength") ? decimal.Zero : row.Field<decimal>("vacutofflength");
         entity.unitvaassembly = row.IsNull("unitvaassembly") ? string.Empty : row.Field<string>("unitvaassembly");
         entity.ncnr = row.IsNull("ncnr") ? string.Empty : row.Field<string>("ncnr");
         entity.countryoforigin = row.IsNull("countryoforigin") ? string.Empty : row.Field<string>("countryoforigin");
         entity.eccnclasscd = row.IsNull("eccnclasscd") ? string.Empty : row.Field<string>("eccnclasscd");
         entity.esbactioncode = row.IsNull("esbactioncode") ? string.Empty : row.Field<string>("esbactioncode");
         entity.tariffcd = row.IsNull("tariffcd") ? string.Empty : row.Field<string>("tariffcd");
         entity.prodtier = row.IsNull("prodtier") ? string.Empty : row.Field<string>("prodtier");
         entity.altprodgrp = row.IsNull("altprodgrp") ? string.Empty : row.Field<string>("altprodgrp");
         entity.unspsc = row.IsNull("unspsc") ? string.Empty : row.Field<string>("unspsc");
         entity.altprodprccd = row.IsNull("altprodprccd") ? string.Empty : row.Field<string>("altprodprccd");
         entity.cuttype = row.IsNull("cuttype") ? string.Empty : row.Field<string>("cuttype");
         entity.dimlengthparts = row.IsNull("dimlengthparts") ? 0 : row.Field<int>("dimlengthparts");
         entity.dimlengthty1 = row.IsNull("dimlengthty1") ? string.Empty : row.Field<string>("dimlengthty1");
         entity.dimlengthty2 = row.IsNull("dimlengthty2") ? string.Empty : row.Field<string>("dimlengthty2");
         entity.dimlengthunit1 = row.IsNull("dimlengthunit1") ? string.Empty : row.Field<string>("dimlengthunit1");
         entity.dimlengthunit2 = row.IsNull("dimlengthunit2") ? string.Empty : row.Field<string>("dimlengthunit2");
         entity.dimlengthincr = row.IsNull("dimlengthincr") ? decimal.Zero : row.Field<decimal>("dimlengthincr");
         entity.dimwidthparts = row.IsNull("dimwidthparts") ? 0 : row.Field<int>("dimwidthparts");
         entity.dimwidthty1 = row.IsNull("dimwidthty1") ? string.Empty : row.Field<string>("dimwidthty1");
         entity.dimwidthty2 = row.IsNull("dimwidthty2") ? string.Empty : row.Field<string>("dimwidthty2");
         entity.dimwidthunit1 = row.IsNull("dimwidthunit1") ? string.Empty : row.Field<string>("dimwidthunit1");
         entity.dimwidthunit2 = row.IsNull("dimwidthunit2") ? string.Empty : row.Field<string>("dimwidthunit2");
         entity.dimwidthincr = row.IsNull("dimwidthincr") ? decimal.Zero : row.Field<decimal>("dimwidthincr");
         entity.prodtiergrp = row.IsNull("prodtiergrp") ? string.Empty : row.Field<string>("prodtiergrp");
         entity.prodpreference = row.IsNull("prodpreference") ? string.Empty : row.Field<string>("prodpreference");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.rentprodcat = row.IsNull("rentprodcat") ? string.Empty : row.Field<string>("rentprodcat");
         entity.modelcode = row.IsNull("modelcode") ? string.Empty : row.Field<string>("modelcode");
         entity.taxweight = row.IsNull("taxweight") ? decimal.Zero : row.Field<decimal>("taxweight");
         entity.rowID = row.Field<byte[]>("icspRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcspBase(ref DataRow row, IcspBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("prod", entity.prod);
         row.SetField("lookupnm", entity.lookupnm);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("unitsell", entity.unitsell);
         row.SetField("unitcnt", entity.unitcnt);
         row.SetField("unitstock", entity.unitstock);
         row.SetField("weight", entity.weight);
         row.SetField("cubes", entity.cubes);
         row.SetField("corecharge", entity.corecharge);
         row.SetField("msdsfl", entity.msdsfl);
         row.SetField("msdschgdt", entity.msdschgdt);
         row.SetField("webpageext", entity.webpageext);
         row.SetField("webpage", entity.webpage);
         row.SetField("warrlength", entity.warrlength);
         row.SetField("warrtype", entity.warrtype);
         row.SetField("unitconvfl", entity.unitconvfl);
         row.SetField("descrip1", entity.descrip1);
         row.SetField("descrip2", entity.descrip2);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("statustype", entity.statustype);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("kittype", entity.kittype);
         row.SetField("kitrollty", entity.kitrollty);
         row.SetField("exponinvfl", entity.exponinvfl);
         row.SetField("nospecrecno", entity.nospecrecno);
         row.SetField("lifocat", entity.lifocat);
         row.SetField("msdssheetno", entity.msdssheetno);
         row.SetField("pbseqno", entity.pbseqno);
         row.SetField("sellmult", entity.sellmult);
         row.SetField("seqno", entity.seqno);
         row.SetField("length", entity.length);
         row.SetField("termsdiscfl", entity.termsdiscfl);
         row.SetField("termspct", entity.termspct);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("tiedcompprt", entity.tiedcompprt);
         row.SetField("bolclass", entity.bolclass);
         row.SetField("edicd", entity.edicd);
         row.SetField("slgroup", entity.slgroup);
         row.SetField("priceonty", entity.priceonty);
         row.SetField("icspecrecno", entity.icspecrecno);
         row.SetField("width", entity.width);
         row.SetField("oespecrecno", entity.oespecrecno);
         row.SetField("height", entity.height);
         row.SetField("kitnsreqfl", entity.kitnsreqfl);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("autoupcd", entity.autoupcd);
         row.SetField("transproc", entity.transproc);
         row.SetField("reqbundleidfl", entity.reqbundleidfl);
         row.SetField("randommixfl", entity.randommixfl);
         row.SetField("memomixfl", entity.memomixfl);
         row.SetField("implyqty", entity.implyqty);
         row.SetField("bodtransferty", entity.bodtransferty);
         row.SetField("prodtype", entity.prodtype);
         row.SetField("impliedcoreprod", entity.impliedcoreprod);
         row.SetField("dirtycoreprod", entity.dirtycoreprod);
         row.SetField("vendcoregrcfl", entity.vendcoregrcfl);
         row.SetField("custcoregrcfl", entity.custcoregrcfl);
         row.SetField("vendgraceper", entity.vendgraceper);
         row.SetField("custgraceper", entity.custgraceper);
         row.SetField("certifiedtype", entity.certifiedtype);
         row.SetField("volinfofl", entity.volinfofl);
         row.SetField("slchgdt", entity.slchgdt);
         row.SetField("tallyunit", entity.tallyunit);
         row.SetField("user10", entity.user10);
         row.SetField("user11", entity.user11);
         row.SetField("user12", entity.user12);
         row.SetField("user13", entity.user13);
         row.SetField("user14", entity.user14);
         row.SetField("user15", entity.user15);
         row.SetField("user16", entity.user16);
         row.SetField("user17", entity.user17);
         row.SetField("user18", entity.user18);
         row.SetField("user19", entity.user19);
         row.SetField("user20", entity.user20);
         row.SetField("user21", entity.user21);
         row.SetField("user22", entity.user22);
         row.SetField("user23", entity.user23);
         row.SetField("user24", entity.user24);
         row.SetField("cfgkitfl", entity.cfgkitfl);
         row.SetField("cfgruleset", entity.cfgruleset);
         row.SetField("cfgapplicationid", entity.cfgapplicationid);
         row.SetField("cfgnamespace", entity.cfgnamespace);
         row.SetField("cutnumparts", entity.cutnumparts);
         row.SetField("cutparttype1", entity.cutparttype1);
         row.SetField("cutpartunit1", entity.cutpartunit1);
         row.SetField("cutparttype2", entity.cutparttype2);
         row.SetField("cutpartunit2", entity.cutpartunit2);
         row.SetField("cutpartincr2", entity.cutpartincr2);
         row.SetField("descrip3", entity.descrip3);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("commoditycd", entity.commoditycd);
         row.SetField("netmassamt", entity.netmassamt);
         row.SetField("usesuppunits", entity.usesuppunits);
         row.SetField("mfgprod", entity.mfgprod);
         row.SetField("brandcode", entity.brandcode);
         row.SetField("vaassemblyty", entity.vaassemblyty);
         row.SetField("vacutofflength", entity.vacutofflength);
         row.SetField("unitvaassembly", entity.unitvaassembly);
         row.SetField("ncnr", entity.ncnr);
         row.SetField("countryoforigin", entity.countryoforigin);
         row.SetField("eccnclasscd", entity.eccnclasscd);
         row.SetField("esbactioncode", entity.esbactioncode);
         row.SetField("tariffcd", entity.tariffcd);
         row.SetField("prodtier", entity.prodtier);
         row.SetField("altprodgrp", entity.altprodgrp);
         row.SetField("unspsc", entity.unspsc);
         row.SetField("altprodprccd", entity.altprodprccd);
         row.SetField("cuttype", entity.cuttype);
         row.SetField("dimlengthparts", entity.dimlengthparts);
         row.SetField("dimlengthty1", entity.dimlengthty1);
         row.SetField("dimlengthty2", entity.dimlengthty2);
         row.SetField("dimlengthunit1", entity.dimlengthunit1);
         row.SetField("dimlengthunit2", entity.dimlengthunit2);
         row.SetField("dimlengthincr", entity.dimlengthincr);
         row.SetField("dimwidthparts", entity.dimwidthparts);
         row.SetField("dimwidthty1", entity.dimwidthty1);
         row.SetField("dimwidthty2", entity.dimwidthty2);
         row.SetField("dimwidthunit1", entity.dimwidthunit1);
         row.SetField("dimwidthunit2", entity.dimwidthunit2);
         row.SetField("dimwidthincr", entity.dimwidthincr);
         row.SetField("prodtiergrp", entity.prodtiergrp);
         row.SetField("prodpreference", entity.prodpreference);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("rentprodcat", entity.rentprodcat);
         row.SetField("modelcode", entity.modelcode);
         row.SetField("taxweight", entity.taxweight);
         row.SetField("icspRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, IcspBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("prod", entity.prod);
         row.SetField("icspRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	