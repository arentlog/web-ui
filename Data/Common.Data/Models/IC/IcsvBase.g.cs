//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.IC
{
   /// <summary>
   /// UPC# Setup
   /// </summary>
   
   public partial class IcsvBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string type { get; set; }

      /// <summary>
      /// Product #
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string prod { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      [Key,Order]
      public decimal vendno { get; set; }

      /// <summary>
      /// Section1
      /// </summary>
      public decimal section1 { get; set; }

      /// <summary>
      /// Section2
      /// </summary>
      public decimal section2 { get; set; }

      /// <summary>
      /// Section3
      /// </summary>
      public decimal section3 { get; set; }

      /// <summary>
      /// Section4
      /// </summary>
      public decimal section4 { get; set; }

      /// <summary>
      /// Section5
      /// </summary>
      public decimal section5 { get; set; }

      /// <summary>
      /// Section6
      /// </summary>
      public decimal section6 { get; set; }

      /// <summary>
      /// SCC14 Pack Detail
      /// </summary>
      [StringValidationAttribute]
      public string scc14packdet { get; set; }

      /// <summary>
      /// UN/SPSC Cd
      /// </summary>
      [StringValidationAttribute]
      public string unspsc { get; set; }

      /// <summary>
      /// PCC Type
      /// </summary>
      [StringValidationAttribute]
      public string pcctype { get; set; }

      /// <summary>
      /// SCC14 Sub Pack
      /// </summary>
      public int scc14nrsubpack { get; set; }

      /// <summary>
      /// SCC14 Tot Units
      /// </summary>
      public decimal scc14totunits { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Vendor Product
      /// </summary>
      [StringValidationAttribute]
      public string vendprod { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Batch
      /// </summary>
      [StringValidationAttribute]
      public string ecbatchnm { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildIcsvBaseFromRow<T>(DataRow row) where T:IcsvBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.type = row.IsNull("type") ? string.Empty : row.Field<string>("type");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.section1 = row.IsNull("section1") ? decimal.Zero : row.Field<decimal>("section1");
         entity.section2 = row.IsNull("section2") ? decimal.Zero : row.Field<decimal>("section2");
         entity.section3 = row.IsNull("section3") ? decimal.Zero : row.Field<decimal>("section3");
         entity.section4 = row.IsNull("section4") ? decimal.Zero : row.Field<decimal>("section4");
         entity.section5 = row.IsNull("section5") ? decimal.Zero : row.Field<decimal>("section5");
         entity.section6 = row.IsNull("section6") ? decimal.Zero : row.Field<decimal>("section6");
         entity.scc14packdet = row.IsNull("scc14packdet") ? string.Empty : row.Field<string>("scc14packdet");
         entity.unspsc = row.IsNull("unspsc") ? string.Empty : row.Field<string>("unspsc");
         entity.pcctype = row.IsNull("pcctype") ? string.Empty : row.Field<string>("pcctype");
         entity.scc14nrsubpack = row.IsNull("scc14nrsubpack") ? 0 : row.Field<int>("scc14nrsubpack");
         entity.scc14totunits = row.IsNull("scc14totunits") ? decimal.Zero : row.Field<decimal>("scc14totunits");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.vendprod = row.IsNull("vendprod") ? string.Empty : row.Field<string>("vendprod");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.ecbatchnm = row.IsNull("ecbatchnm") ? string.Empty : row.Field<string>("ecbatchnm");
         entity.rowID = row.Field<byte[]>("icsvRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcsvBase(ref DataRow row, IcsvBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("type", entity.type);
         row.SetField("prod", entity.prod);
         row.SetField("section1", entity.section1);
         row.SetField("section2", entity.section2);
         row.SetField("section3", entity.section3);
         row.SetField("section4", entity.section4);
         row.SetField("section5", entity.section5);
         row.SetField("section6", entity.section6);
         row.SetField("scc14packdet", entity.scc14packdet);
         row.SetField("unspsc", entity.unspsc);
         row.SetField("pcctype", entity.pcctype);
         row.SetField("scc14nrsubpack", entity.scc14nrsubpack);
         row.SetField("scc14totunits", entity.scc14totunits);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("vendno", entity.vendno);
         row.SetField("vendprod", entity.vendprod);
         row.SetField("transproc", entity.transproc);
         row.SetField("ecbatchnm", entity.ecbatchnm);
         row.SetField("icsvRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, IcsvBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("type", entity.type);
         row.SetField("prod", entity.prod);
         row.SetField("vendno", entity.vendno);
         row.SetField("icsvRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	