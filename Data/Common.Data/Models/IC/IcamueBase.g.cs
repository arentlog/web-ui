//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.IC
{
   /// <summary>
   /// ICAMU exceptions file.  Holds exception information for warehouse products.  Used by the buyer to adjust ordering quantities.
   /// </summary>
   
   public partial class IcamueBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string prod { get; set; }

      /// <summary>
      /// Buyer
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string buyer { get; set; }

      /// <summary>
      /// Frozen Reason
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string frozentype { get; set; }

      /// <summary>
      /// Frozen Date
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string frozenmmyy { get; set; }

      /// <summary>
      /// Active
      /// </summary>
      [Key,Order]
      public bool activefl { get; set; }

      /// <summary>
      /// Exception Type
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string exctype { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string excdesc { get; set; }

      /// <summary>
      /// Exception Message
      /// </summary>
      [StringValidationAttribute]
      public string excmsg { get; set; }

      /// <summary>
      /// ExcDe1
      /// </summary>
      public decimal excde1 { get; set; }

      /// <summary>
      /// ExcDe2
      /// </summary>
      public decimal excde2 { get; set; }

      /// <summary>
      /// ExcDe3
      /// </summary>
      public decimal excde3 { get; set; }

      /// <summary>
      /// ExcDe4
      /// </summary>
      public decimal excde4 { get; set; }

      /// <summary>
      /// ExcDe5
      /// </summary>
      public decimal excde5 { get; set; }

      /// <summary>
      /// ExcDe6
      /// </summary>
      public decimal excde6 { get; set; }

      /// <summary>
      /// ExcDe7
      /// </summary>
      public decimal excde7 { get; set; }

      /// <summary>
      /// ExcDe8
      /// </summary>
      public decimal excde8 { get; set; }

      /// <summary>
      /// ExcDe9
      /// </summary>
      public decimal excde9 { get; set; }

      /// <summary>
      /// ExcDe10
      /// </summary>
      public decimal excde10 { get; set; }

      /// <summary>
      /// ExcI1
      /// </summary>
      public int exci1 { get; set; }

      /// <summary>
      /// ExcI2
      /// </summary>
      public int exci2 { get; set; }

      /// <summary>
      /// ExcI3
      /// </summary>
      public int exci3 { get; set; }

      /// <summary>
      /// ExcI4
      /// </summary>
      public int exci4 { get; set; }

      /// <summary>
      /// ExcI5
      /// </summary>
      public int exci5 { get; set; }

      /// <summary>
      /// ExcI6
      /// </summary>
      public int exci6 { get; set; }

      /// <summary>
      /// ExcDa1
      /// </summary>
      public DateTime? excda1 { get; set; }

      /// <summary>
      /// ExcDa2
      /// </summary>
      public DateTime? excda2 { get; set; }

      /// <summary>
      /// ExcDa3
      /// </summary>
      public DateTime? excda3 { get; set; }

      /// <summary>
      /// ExcDa4
      /// </summary>
      public DateTime? excda4 { get; set; }

      /// <summary>
      /// ExcDa5
      /// </summary>
      public DateTime? excda5 { get; set; }

      /// <summary>
      /// ExcDa6
      /// </summary>
      public DateTime? excda6 { get; set; }

      /// <summary>
      /// ExcC1
      /// </summary>
      [StringValidationAttribute]
      public string excc1 { get; set; }

      /// <summary>
      /// ExcC2
      /// </summary>
      [StringValidationAttribute]
      public string excc2 { get; set; }

      /// <summary>
      /// ExcC3
      /// </summary>
      [StringValidationAttribute]
      public string excc3 { get; set; }

      /// <summary>
      /// ExcC4
      /// </summary>
      [StringValidationAttribute]
      public string excc4 { get; set; }

      /// <summary>
      /// ExcC5
      /// </summary>
      [StringValidationAttribute]
      public string excc5 { get; set; }

      /// <summary>
      /// ExcC6
      /// </summary>
      [StringValidationAttribute]
      public string excc6 { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// ExcC7
      /// </summary>
      [StringValidationAttribute]
      public string excc7 { get; set; }

      /// <summary>
      /// ExcC8
      /// </summary>
      [StringValidationAttribute]
      public string excc8 { get; set; }

      /// <summary>
      /// ExcC9
      /// </summary>
      [StringValidationAttribute]
      public string excc9 { get; set; }

      /// <summary>
      /// ExcC10
      /// </summary>
      [StringValidationAttribute]
      public string excc10 { get; set; }

      /// <summary>
      /// ExcC11
      /// </summary>
      [StringValidationAttribute]
      public string excc11 { get; set; }

      /// <summary>
      /// ExcC12
      /// </summary>
      [StringValidationAttribute]
      public string excc12 { get; set; }

      /// <summary>
      /// ExcI7
      /// </summary>
      public int exci7 { get; set; }

      /// <summary>
      /// excI8
      /// </summary>
      public int exci8 { get; set; }

      /// <summary>
      /// ExcI9
      /// </summary>
      public int exci9 { get; set; }

      /// <summary>
      /// ExcI10
      /// </summary>
      public int exci10 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildIcamueBaseFromRow<T>(DataRow row) where T:IcamueBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.buyer = row.IsNull("buyer") ? string.Empty : row.Field<string>("buyer");
         entity.frozentype = row.IsNull("frozentype") ? string.Empty : row.Field<string>("frozentype");
         entity.frozenmmyy = row.IsNull("frozenmmyy") ? string.Empty : row.Field<string>("frozenmmyy");
         entity.activefl = row.Field<bool>("activefl");
         entity.exctype = row.IsNull("exctype") ? string.Empty : row.Field<string>("exctype");
         entity.excdesc = row.IsNull("excdesc") ? string.Empty : row.Field<string>("excdesc");
         entity.excmsg = row.IsNull("excmsg") ? string.Empty : row.Field<string>("excmsg");
         entity.excde1 = row.IsNull("excde1") ? decimal.Zero : row.Field<decimal>("excde1");
         entity.excde2 = row.IsNull("excde2") ? decimal.Zero : row.Field<decimal>("excde2");
         entity.excde3 = row.IsNull("excde3") ? decimal.Zero : row.Field<decimal>("excde3");
         entity.excde4 = row.IsNull("excde4") ? decimal.Zero : row.Field<decimal>("excde4");
         entity.excde5 = row.IsNull("excde5") ? decimal.Zero : row.Field<decimal>("excde5");
         entity.excde6 = row.IsNull("excde6") ? decimal.Zero : row.Field<decimal>("excde6");
         entity.excde7 = row.IsNull("excde7") ? decimal.Zero : row.Field<decimal>("excde7");
         entity.excde8 = row.IsNull("excde8") ? decimal.Zero : row.Field<decimal>("excde8");
         entity.excde9 = row.IsNull("excde9") ? decimal.Zero : row.Field<decimal>("excde9");
         entity.excde10 = row.IsNull("excde10") ? decimal.Zero : row.Field<decimal>("excde10");
         entity.exci1 = row.IsNull("exci1") ? 0 : row.Field<int>("exci1");
         entity.exci2 = row.IsNull("exci2") ? 0 : row.Field<int>("exci2");
         entity.exci3 = row.IsNull("exci3") ? 0 : row.Field<int>("exci3");
         entity.exci4 = row.IsNull("exci4") ? 0 : row.Field<int>("exci4");
         entity.exci5 = row.IsNull("exci5") ? 0 : row.Field<int>("exci5");
         entity.exci6 = row.IsNull("exci6") ? 0 : row.Field<int>("exci6");
         entity.excda1 = row.Field<DateTime?>("excda1");
         entity.excda2 = row.Field<DateTime?>("excda2");
         entity.excda3 = row.Field<DateTime?>("excda3");
         entity.excda4 = row.Field<DateTime?>("excda4");
         entity.excda5 = row.Field<DateTime?>("excda5");
         entity.excda6 = row.Field<DateTime?>("excda6");
         entity.excc1 = row.IsNull("excc1") ? string.Empty : row.Field<string>("excc1");
         entity.excc2 = row.IsNull("excc2") ? string.Empty : row.Field<string>("excc2");
         entity.excc3 = row.IsNull("excc3") ? string.Empty : row.Field<string>("excc3");
         entity.excc4 = row.IsNull("excc4") ? string.Empty : row.Field<string>("excc4");
         entity.excc5 = row.IsNull("excc5") ? string.Empty : row.Field<string>("excc5");
         entity.excc6 = row.IsNull("excc6") ? string.Empty : row.Field<string>("excc6");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.excc7 = row.IsNull("excc7") ? string.Empty : row.Field<string>("excc7");
         entity.excc8 = row.IsNull("excc8") ? string.Empty : row.Field<string>("excc8");
         entity.excc9 = row.IsNull("excc9") ? string.Empty : row.Field<string>("excc9");
         entity.excc10 = row.IsNull("excc10") ? string.Empty : row.Field<string>("excc10");
         entity.excc11 = row.IsNull("excc11") ? string.Empty : row.Field<string>("excc11");
         entity.excc12 = row.IsNull("excc12") ? string.Empty : row.Field<string>("excc12");
         entity.exci7 = row.IsNull("exci7") ? 0 : row.Field<int>("exci7");
         entity.exci8 = row.IsNull("exci8") ? 0 : row.Field<int>("exci8");
         entity.exci9 = row.IsNull("exci9") ? 0 : row.Field<int>("exci9");
         entity.exci10 = row.IsNull("exci10") ? 0 : row.Field<int>("exci10");
         entity.rowID = row.Field<byte[]>("icamueRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcamueBase(ref DataRow row, IcamueBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("whse", entity.whse);
         row.SetField("prod", entity.prod);
         row.SetField("buyer", entity.buyer);
         row.SetField("frozentype", entity.frozentype);
         row.SetField("frozenmmyy", entity.frozenmmyy);
         row.SetField("activefl", entity.activefl);
         row.SetField("exctype", entity.exctype);
         row.SetField("excdesc", entity.excdesc);
         row.SetField("excmsg", entity.excmsg);
         row.SetField("excde1", entity.excde1);
         row.SetField("excde2", entity.excde2);
         row.SetField("excde3", entity.excde3);
         row.SetField("excde4", entity.excde4);
         row.SetField("excde5", entity.excde5);
         row.SetField("excde6", entity.excde6);
         row.SetField("excde7", entity.excde7);
         row.SetField("excde8", entity.excde8);
         row.SetField("excde9", entity.excde9);
         row.SetField("excde10", entity.excde10);
         row.SetField("exci1", entity.exci1);
         row.SetField("exci2", entity.exci2);
         row.SetField("exci3", entity.exci3);
         row.SetField("exci4", entity.exci4);
         row.SetField("exci5", entity.exci5);
         row.SetField("exci6", entity.exci6);
         row.SetField("excda1", entity.excda1);
         row.SetField("excda2", entity.excda2);
         row.SetField("excda3", entity.excda3);
         row.SetField("excda4", entity.excda4);
         row.SetField("excda5", entity.excda5);
         row.SetField("excda6", entity.excda6);
         row.SetField("excc1", entity.excc1);
         row.SetField("excc2", entity.excc2);
         row.SetField("excc3", entity.excc3);
         row.SetField("excc4", entity.excc4);
         row.SetField("excc5", entity.excc5);
         row.SetField("excc6", entity.excc6);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("excc7", entity.excc7);
         row.SetField("excc8", entity.excc8);
         row.SetField("excc9", entity.excc9);
         row.SetField("excc10", entity.excc10);
         row.SetField("excc11", entity.excc11);
         row.SetField("excc12", entity.excc12);
         row.SetField("exci7", entity.exci7);
         row.SetField("exci8", entity.exci8);
         row.SetField("exci9", entity.exci9);
         row.SetField("exci10", entity.exci10);
         row.SetField("icamueRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, IcamueBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("whse", entity.whse);
         row.SetField("prod", entity.prod);
         row.SetField("buyer", entity.buyer);
         row.SetField("frozentype", entity.frozentype);
         row.SetField("frozenmmyy", entity.frozenmmyy);
         row.SetField("activefl", entity.activefl);
         row.SetField("exctype", entity.exctype);
         row.SetField("icamueRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	