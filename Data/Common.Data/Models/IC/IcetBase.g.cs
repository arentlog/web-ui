//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.IC
{
   /// <summary>
   /// IC Transaction Entry
   /// </summary>
   [EntityType("IC Transaction Entry","icip.detail.transaction","")]
   public partial class IcetBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [ID(1),BusContext(BusPart.AcctEntity)]
      public int cono { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [ID(3),DrillbackParam("pk2",2),BusContext(BusPart.Location),StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Product #
      /// </summary>
      [ID(2),DrillbackParam("pk",1),BusContext(BusPart.Name),StringValidationAttribute]
      public string prod { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [ID(10),BusContext(BusPart.Descr),StringValidationAttribute]
      public string transtype { get; set; }

      /// <summary>
      /// Module
      /// </summary>
      [ID(4),StringValidationAttribute]
      public string module { get; set; }

      /// <summary>
      /// Date
      /// </summary>
      [ID(11)]
      public DateTime? postdt { get; set; }

      /// <summary>
      /// Order #
      /// </summary>
      [ID(5)]
      public int orderno { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      [ID(6)]
      public int ordersuf { get; set; }

      /// <summary>
      /// Quantity
      /// </summary>
      public decimal stkqtyship { get; set; }

      /// <summary>
      /// Division #
      /// </summary>
      public int divno { get; set; }

      /// <summary>
      /// Line#
      /// </summary>
      [ID(7)]
      public int lineno { get; set; }

      /// <summary>
      /// Cost
      /// </summary>
      public decimal cost { get; set; }

      /// <summary>
      /// Reason
      /// </summary>
      [StringValidationAttribute]
      public string reasunavty { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Merged
      /// </summary>
      public bool mergedfl { get; set; }

      /// <summary>
      /// Ticket #
      /// </summary>
      [StringValidationAttribute]
      public string ticketno { get; set; }

      /// <summary>
      /// Phy Adj Excpt
      /// </summary>
      [StringValidationAttribute]
      public string phyadjexcp { get; set; }

      /// <summary>
      /// Usage Product
      /// </summary>
      [StringValidationAttribute]
      public string usageprod { get; set; }

      /// <summary>
      /// Usage
      /// </summary>
      public bool usagefl { get; set; }

      /// <summary>
      /// Jrnl #
      /// </summary>
      [ID(8)]
      public int jrnlno { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      [ID(9)]
      public int setno { get; set; }

      /// <summary>
      /// Seq#
      /// </summary>
      public int seqno { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      [StringValidationAttribute]
      public string custno { get; set; }

      /// <summary>
      /// Ref
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// ICSW Cost
      /// </summary>
      public decimal icswcost { get; set; }

      /// <summary>
      /// Unavailable
      /// </summary>
      public decimal qtyunavail { get; set; }

      /// <summary>
      /// Spec Rec Link
      /// </summary>
      public decimal icspecrecno { get; set; }

      /// <summary>
      /// Orig Cost
      /// </summary>
      public decimal origcost { get; set; }

      /// <summary>
      /// Usage Qty
      /// </summary>
      public decimal usageqty { get; set; }

      /// <summary>
      /// Vendor Invoice
      /// </summary>
      [StringValidationAttribute]
      public string apinvno { get; set; }

      /// <summary>
      /// Usage Whse
      /// </summary>
      [StringValidationAttribute]
      public string usagewhse { get; set; }

      /// <summary>
      /// Entered
      /// </summary>
      public DateTime? enterdt { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// IC Exchange Rate
      /// </summary>
      public decimal exchgrate { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Notes ID
      /// </summary>
      public int notesid { get; set; }

      /// <summary>
      /// SR Packing List #
      /// </summary>
      [StringValidationAttribute]
      public string srpacklistno { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildIcetBaseFromRow<T>(DataRow row) where T:IcetBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.module = row.IsNull("module") ? string.Empty : row.Field<string>("module");
         entity.postdt = row.Field<DateTime?>("postdt");
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.stkqtyship = row.IsNull("stkqtyship") ? decimal.Zero : row.Field<decimal>("stkqtyship");
         entity.divno = row.IsNull("divno") ? 0 : row.Field<int>("divno");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.cost = row.IsNull("cost") ? decimal.Zero : row.Field<decimal>("cost");
         entity.reasunavty = row.IsNull("reasunavty") ? string.Empty : row.Field<string>("reasunavty");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.mergedfl = row.Field<bool>("mergedfl");
         entity.ticketno = row.IsNull("ticketno") ? string.Empty : row.Field<string>("ticketno");
         entity.phyadjexcp = row.IsNull("phyadjexcp") ? string.Empty : row.Field<string>("phyadjexcp");
         entity.usageprod = row.IsNull("usageprod") ? string.Empty : row.Field<string>("usageprod");
         entity.usagefl = row.Field<bool>("usagefl");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.setno = row.IsNull("setno") ? 0 : row.Field<int>("setno");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.custno = row.IsNull("custno") ? string.Empty : row.Field<string>("custno");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.icswcost = row.IsNull("icswcost") ? decimal.Zero : row.Field<decimal>("icswcost");
         entity.qtyunavail = row.IsNull("qtyunavail") ? decimal.Zero : row.Field<decimal>("qtyunavail");
         entity.icspecrecno = row.IsNull("icspecrecno") ? decimal.Zero : row.Field<decimal>("icspecrecno");
         entity.origcost = row.IsNull("origcost") ? decimal.Zero : row.Field<decimal>("origcost");
         entity.usageqty = row.IsNull("usageqty") ? decimal.Zero : row.Field<decimal>("usageqty");
         entity.apinvno = row.IsNull("apinvno") ? string.Empty : row.Field<string>("apinvno");
         entity.usagewhse = row.IsNull("usagewhse") ? string.Empty : row.Field<string>("usagewhse");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.exchgrate = row.IsNull("exchgrate") ? decimal.Zero : row.Field<decimal>("exchgrate");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.notesid = row.IsNull("notesid") ? 0 : row.Field<int>("notesid");
         entity.srpacklistno = row.IsNull("srpacklistno") ? string.Empty : row.Field<string>("srpacklistno");
         entity.rowID = row.Field<byte[]>("icetRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcetBase(ref DataRow row, IcetBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("whse", entity.whse);
         row.SetField("prod", entity.prod);
         row.SetField("transtype", entity.transtype);
         row.SetField("module", entity.module);
         row.SetField("postdt", entity.postdt);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("stkqtyship", entity.stkqtyship);
         row.SetField("divno", entity.divno);
         row.SetField("lineno", entity.lineno);
         row.SetField("cost", entity.cost);
         row.SetField("reasunavty", entity.reasunavty);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("mergedfl", entity.mergedfl);
         row.SetField("ticketno", entity.ticketno);
         row.SetField("phyadjexcp", entity.phyadjexcp);
         row.SetField("usageprod", entity.usageprod);
         row.SetField("usagefl", entity.usagefl);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("setno", entity.setno);
         row.SetField("seqno", entity.seqno);
         row.SetField("custno", entity.custno);
         row.SetField("refer", entity.refer);
         row.SetField("icswcost", entity.icswcost);
         row.SetField("qtyunavail", entity.qtyunavail);
         row.SetField("icspecrecno", entity.icspecrecno);
         row.SetField("origcost", entity.origcost);
         row.SetField("usageqty", entity.usageqty);
         row.SetField("apinvno", entity.apinvno);
         row.SetField("usagewhse", entity.usagewhse);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("exchgrate", entity.exchgrate);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("notesid", entity.notesid);
         row.SetField("srpacklistno", entity.srpacklistno);
         row.SetField("icetRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, IcetBase entity)
      {
         row.SetField("icetRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	