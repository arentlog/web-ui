//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.IC
{
   /// <summary>
   /// IC Replenishment Usage Matrix
   /// </summary>
   
   public partial class IcsruBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      [Key,Order]
      public decimal vendno { get; set; }

      /// <summary>
      /// Product Line
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string prodline { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Level
      /// </summary>
      [Key,Order]
      public int usagelevel { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Cost Greater Than
      /// </summary>
      public decimal costge1 { get; set; }
      public decimal costge2 { get; set; }
      public decimal costge3 { get; set; }
      public decimal costge4 { get; set; }
      public decimal costge5 { get; set; }
      public decimal costge6 { get; set; }
      public decimal costge7 { get; set; }
      public decimal costge8 { get; set; }
      public decimal costge9 { get; set; }
      public decimal costge10 { get; set; }

      /// <summary>
      /// New Order Point
      /// </summary>
      public int newop1 { get; set; }
      public int newop2 { get; set; }
      public int newop3 { get; set; }
      public int newop4 { get; set; }
      public int newop5 { get; set; }
      public int newop6 { get; set; }
      public int newop7 { get; set; }
      public int newop8 { get; set; }
      public int newop9 { get; set; }
      public int newop10 { get; set; }

      /// <summary>
      /// New Line Point
      /// </summary>
      public int newlp1 { get; set; }
      public int newlp2 { get; set; }
      public int newlp3 { get; set; }
      public int newlp4 { get; set; }
      public int newlp5 { get; set; }
      public int newlp6 { get; set; }
      public int newlp7 { get; set; }
      public int newlp8 { get; set; }
      public int newlp9 { get; set; }
      public int newlp10 { get; set; }

      /// <summary>
      /// New Order Quantity
      /// </summary>
      public int newqty1 { get; set; }
      public int newqty2 { get; set; }
      public int newqty3 { get; set; }
      public int newqty4 { get; set; }
      public int newqty5 { get; set; }
      public int newqty6 { get; set; }
      public int newqty7 { get; set; }
      public int newqty8 { get; set; }
      public int newqty9 { get; set; }
      public int newqty10 { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Usage Rate
      /// </summary>
      public decimal usagerate { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildIcsruBaseFromRow<T>(DataRow row) where T:IcsruBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.usagelevel = row.IsNull("usagelevel") ? 0 : row.Field<int>("usagelevel");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.costge1 = row.IsNull("costge1") ? decimal.Zero : row.Field<decimal>("costge1");
         entity.costge2 = row.IsNull("costge2") ? decimal.Zero : row.Field<decimal>("costge2");
         entity.costge3 = row.IsNull("costge3") ? decimal.Zero : row.Field<decimal>("costge3");
         entity.costge4 = row.IsNull("costge4") ? decimal.Zero : row.Field<decimal>("costge4");
         entity.costge5 = row.IsNull("costge5") ? decimal.Zero : row.Field<decimal>("costge5");
         entity.costge6 = row.IsNull("costge6") ? decimal.Zero : row.Field<decimal>("costge6");
         entity.costge7 = row.IsNull("costge7") ? decimal.Zero : row.Field<decimal>("costge7");
         entity.costge8 = row.IsNull("costge8") ? decimal.Zero : row.Field<decimal>("costge8");
         entity.costge9 = row.IsNull("costge9") ? decimal.Zero : row.Field<decimal>("costge9");
         entity.costge10 = row.IsNull("costge10") ? decimal.Zero : row.Field<decimal>("costge10");
         entity.newop1 = row.IsNull("newop1") ? 0 : row.Field<int>("newop1");
         entity.newop2 = row.IsNull("newop2") ? 0 : row.Field<int>("newop2");
         entity.newop3 = row.IsNull("newop3") ? 0 : row.Field<int>("newop3");
         entity.newop4 = row.IsNull("newop4") ? 0 : row.Field<int>("newop4");
         entity.newop5 = row.IsNull("newop5") ? 0 : row.Field<int>("newop5");
         entity.newop6 = row.IsNull("newop6") ? 0 : row.Field<int>("newop6");
         entity.newop7 = row.IsNull("newop7") ? 0 : row.Field<int>("newop7");
         entity.newop8 = row.IsNull("newop8") ? 0 : row.Field<int>("newop8");
         entity.newop9 = row.IsNull("newop9") ? 0 : row.Field<int>("newop9");
         entity.newop10 = row.IsNull("newop10") ? 0 : row.Field<int>("newop10");
         entity.newlp1 = row.IsNull("newlp1") ? 0 : row.Field<int>("newlp1");
         entity.newlp2 = row.IsNull("newlp2") ? 0 : row.Field<int>("newlp2");
         entity.newlp3 = row.IsNull("newlp3") ? 0 : row.Field<int>("newlp3");
         entity.newlp4 = row.IsNull("newlp4") ? 0 : row.Field<int>("newlp4");
         entity.newlp5 = row.IsNull("newlp5") ? 0 : row.Field<int>("newlp5");
         entity.newlp6 = row.IsNull("newlp6") ? 0 : row.Field<int>("newlp6");
         entity.newlp7 = row.IsNull("newlp7") ? 0 : row.Field<int>("newlp7");
         entity.newlp8 = row.IsNull("newlp8") ? 0 : row.Field<int>("newlp8");
         entity.newlp9 = row.IsNull("newlp9") ? 0 : row.Field<int>("newlp9");
         entity.newlp10 = row.IsNull("newlp10") ? 0 : row.Field<int>("newlp10");
         entity.newqty1 = row.IsNull("newqty1") ? 0 : row.Field<int>("newqty1");
         entity.newqty2 = row.IsNull("newqty2") ? 0 : row.Field<int>("newqty2");
         entity.newqty3 = row.IsNull("newqty3") ? 0 : row.Field<int>("newqty3");
         entity.newqty4 = row.IsNull("newqty4") ? 0 : row.Field<int>("newqty4");
         entity.newqty5 = row.IsNull("newqty5") ? 0 : row.Field<int>("newqty5");
         entity.newqty6 = row.IsNull("newqty6") ? 0 : row.Field<int>("newqty6");
         entity.newqty7 = row.IsNull("newqty7") ? 0 : row.Field<int>("newqty7");
         entity.newqty8 = row.IsNull("newqty8") ? 0 : row.Field<int>("newqty8");
         entity.newqty9 = row.IsNull("newqty9") ? 0 : row.Field<int>("newqty9");
         entity.newqty10 = row.IsNull("newqty10") ? 0 : row.Field<int>("newqty10");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.usagerate = row.IsNull("usagerate") ? decimal.Zero : row.Field<decimal>("usagerate");
         entity.rowID = row.Field<byte[]>("icsruRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcsruBase(ref DataRow row, IcsruBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vendno", entity.vendno);
         row.SetField("prodline", entity.prodline);
         row.SetField("whse", entity.whse);
         row.SetField("usagelevel", entity.usagelevel);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("costge1", entity.costge1);
         row.SetField("costge2", entity.costge2);
         row.SetField("costge3", entity.costge3);
         row.SetField("costge4", entity.costge4);
         row.SetField("costge5", entity.costge5);
         row.SetField("costge6", entity.costge6);
         row.SetField("costge7", entity.costge7);
         row.SetField("costge8", entity.costge8);
         row.SetField("costge9", entity.costge9);
         row.SetField("costge10", entity.costge10);
         row.SetField("newop1", entity.newop1);
         row.SetField("newop2", entity.newop2);
         row.SetField("newop3", entity.newop3);
         row.SetField("newop4", entity.newop4);
         row.SetField("newop5", entity.newop5);
         row.SetField("newop6", entity.newop6);
         row.SetField("newop7", entity.newop7);
         row.SetField("newop8", entity.newop8);
         row.SetField("newop9", entity.newop9);
         row.SetField("newop10", entity.newop10);
         row.SetField("newlp1", entity.newlp1);
         row.SetField("newlp2", entity.newlp2);
         row.SetField("newlp3", entity.newlp3);
         row.SetField("newlp4", entity.newlp4);
         row.SetField("newlp5", entity.newlp5);
         row.SetField("newlp6", entity.newlp6);
         row.SetField("newlp7", entity.newlp7);
         row.SetField("newlp8", entity.newlp8);
         row.SetField("newlp9", entity.newlp9);
         row.SetField("newlp10", entity.newlp10);
         row.SetField("newqty1", entity.newqty1);
         row.SetField("newqty2", entity.newqty2);
         row.SetField("newqty3", entity.newqty3);
         row.SetField("newqty4", entity.newqty4);
         row.SetField("newqty5", entity.newqty5);
         row.SetField("newqty6", entity.newqty6);
         row.SetField("newqty7", entity.newqty7);
         row.SetField("newqty8", entity.newqty8);
         row.SetField("newqty9", entity.newqty9);
         row.SetField("newqty10", entity.newqty10);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("usagerate", entity.usagerate);
         row.SetField("icsruRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, IcsruBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vendno", entity.vendno);
         row.SetField("prodline", entity.prodline);
         row.SetField("whse", entity.whse);
         row.SetField("usagelevel", entity.usagelevel);
         row.SetField("icsruRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	