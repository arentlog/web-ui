//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.IC
{
   /// <summary>
   /// Tracks PO, OE and WT line detail transactions for cores.
   /// </summary>
   
   public partial class IceatBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Trans Type
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string transty { get; set; }

      /// <summary>
      /// Order #
      /// </summary>
      [Key,Order]
      public int orderno { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      [Key,Order]
      public int ordersuf { get; set; }

      /// <summary>
      /// Line #
      /// </summary>
      [Key,Order]
      public int lineno { get; set; }

      /// <summary>
      /// Line #
      /// </summary>
      [Key,Order]
      public int seqno { get; set; }

      /// <summary>
      /// Component Sequence
      /// </summary>
      [Key,Order]
      public int compseqno { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Job Type Changed
      /// </summary>
      public bool warrchfl { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// Claim Paid
      /// </summary>
      public bool claimpdfl { get; set; }

      /// <summary>
      /// Claim Paid Date
      /// </summary>
      public DateTime? claimpddt { get; set; }

      /// <summary>
      /// Repair Order #
      /// </summary>
      public int repairordno { get; set; }

      /// <summary>
      /// Repair Order Suffix
      /// </summary>
      public int repairordsuf { get; set; }

      /// <summary>
      /// Line #
      /// </summary>
      public int repairlineno { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [StringValidationAttribute]
      public string prod { get; set; }

      /// <summary>
      /// Substitute
      /// </summary>
      public bool subfl { get; set; }

      /// <summary>
      /// Return Order Tie
      /// </summary>
      public int retorderno { get; set; }

      /// <summary>
      /// Return Order Suffix
      /// </summary>
      public int retordersuf { get; set; }

      /// <summary>
      /// Return Order Line
      /// </summary>
      public int retlineno { get; set; }

      /// <summary>
      /// Quantity
      /// </summary>
      public decimal qty { get; set; }

      /// <summary>
      /// Qty Bank
      /// </summary>
      public decimal qtybank { get; set; }

      /// <summary>
      /// Warranty Qty
      /// </summary>
      public decimal qtywarr { get; set; }

      /// <summary>
      /// Qty Allocated
      /// </summary>
      public decimal qtyalloc { get; set; }

      /// <summary>
      /// Internal Claim #
      /// </summary>
      public int intclaimno { get; set; }

      /// <summary>
      /// Vendor Claim #
      /// </summary>
      [StringValidationAttribute]
      public string vendclaimno { get; set; }

      /// <summary>
      /// Serial # Sold
      /// </summary>
      [StringValidationAttribute]
      public string snsold { get; set; }

      /// <summary>
      /// Serial # Returned
      /// </summary>
      [StringValidationAttribute]
      public string snreturn { get; set; }

      /// <summary>
      /// Core Expire Date
      /// </summary>
      public DateTime? expiredt { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Manual Adj
      /// </summary>
      public bool manadjfl { get; set; }

      /// <summary>
      /// Last Oper Man Adj
      /// </summary>
      [StringValidationAttribute]
      public string manoper { get; set; }

      /// <summary>
      /// Last Manual Adj Date
      /// </summary>
      public DateTime? mandt { get; set; }

      /// <summary>
      /// Last Manual Adj Time
      /// </summary>
      [StringValidationAttribute]
      public string mantm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Implied Line#
      /// </summary>
      public int implylineno { get; set; }

      /// <summary>
      /// Implied Prod
      /// </summary>
      [StringValidationAttribute]
      public string implyprod { get; set; }

      /// <summary>
      /// Implied SRO Line#
      /// </summary>
      public int implyreplineno { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildIceatBaseFromRow<T>(DataRow row) where T:IceatBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.transty = row.IsNull("transty") ? string.Empty : row.Field<string>("transty");
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.warrchfl = row.Field<bool>("warrchfl");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.claimpdfl = row.Field<bool>("claimpdfl");
         entity.claimpddt = row.Field<DateTime?>("claimpddt");
         entity.repairordno = row.IsNull("repairordno") ? 0 : row.Field<int>("repairordno");
         entity.repairordsuf = row.IsNull("repairordsuf") ? 0 : row.Field<int>("repairordsuf");
         entity.repairlineno = row.IsNull("repairlineno") ? 0 : row.Field<int>("repairlineno");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.subfl = row.Field<bool>("subfl");
         entity.retorderno = row.IsNull("retorderno") ? 0 : row.Field<int>("retorderno");
         entity.retordersuf = row.IsNull("retordersuf") ? 0 : row.Field<int>("retordersuf");
         entity.retlineno = row.IsNull("retlineno") ? 0 : row.Field<int>("retlineno");
         entity.qty = row.IsNull("qty") ? decimal.Zero : row.Field<decimal>("qty");
         entity.qtybank = row.IsNull("qtybank") ? decimal.Zero : row.Field<decimal>("qtybank");
         entity.qtywarr = row.IsNull("qtywarr") ? decimal.Zero : row.Field<decimal>("qtywarr");
         entity.qtyalloc = row.IsNull("qtyalloc") ? decimal.Zero : row.Field<decimal>("qtyalloc");
         entity.intclaimno = row.IsNull("intclaimno") ? 0 : row.Field<int>("intclaimno");
         entity.vendclaimno = row.IsNull("vendclaimno") ? string.Empty : row.Field<string>("vendclaimno");
         entity.snsold = row.IsNull("snsold") ? string.Empty : row.Field<string>("snsold");
         entity.snreturn = row.IsNull("snreturn") ? string.Empty : row.Field<string>("snreturn");
         entity.expiredt = row.Field<DateTime?>("expiredt");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.manadjfl = row.Field<bool>("manadjfl");
         entity.manoper = row.IsNull("manoper") ? string.Empty : row.Field<string>("manoper");
         entity.mandt = row.Field<DateTime?>("mandt");
         entity.mantm = row.IsNull("mantm") ? string.Empty : row.Field<string>("mantm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.implylineno = row.IsNull("implylineno") ? 0 : row.Field<int>("implylineno");
         entity.implyprod = row.IsNull("implyprod") ? string.Empty : row.Field<string>("implyprod");
         entity.implyreplineno = row.IsNull("implyreplineno") ? 0 : row.Field<int>("implyreplineno");
         entity.compseqno = row.IsNull("compseqno") ? 0 : row.Field<int>("compseqno");
         entity.rowID = row.Field<byte[]>("iceatRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIceatBase(ref DataRow row, IceatBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("transty", entity.transty);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("lineno", entity.lineno);
         row.SetField("seqno", entity.seqno);
         row.SetField("whse", entity.whse);
         row.SetField("warrchfl", entity.warrchfl);
         row.SetField("vendno", entity.vendno);
         row.SetField("claimpdfl", entity.claimpdfl);
         row.SetField("claimpddt", entity.claimpddt);
         row.SetField("repairordno", entity.repairordno);
         row.SetField("repairordsuf", entity.repairordsuf);
         row.SetField("repairlineno", entity.repairlineno);
         row.SetField("prod", entity.prod);
         row.SetField("subfl", entity.subfl);
         row.SetField("retorderno", entity.retorderno);
         row.SetField("retordersuf", entity.retordersuf);
         row.SetField("retlineno", entity.retlineno);
         row.SetField("qty", entity.qty);
         row.SetField("qtybank", entity.qtybank);
         row.SetField("qtywarr", entity.qtywarr);
         row.SetField("qtyalloc", entity.qtyalloc);
         row.SetField("intclaimno", entity.intclaimno);
         row.SetField("vendclaimno", entity.vendclaimno);
         row.SetField("snsold", entity.snsold);
         row.SetField("snreturn", entity.snreturn);
         row.SetField("expiredt", entity.expiredt);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("manadjfl", entity.manadjfl);
         row.SetField("manoper", entity.manoper);
         row.SetField("mandt", entity.mandt);
         row.SetField("mantm", entity.mantm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("implylineno", entity.implylineno);
         row.SetField("implyprod", entity.implyprod);
         row.SetField("implyreplineno", entity.implyreplineno);
         row.SetField("compseqno", entity.compseqno);
         row.SetField("iceatRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, IceatBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("transty", entity.transty);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("lineno", entity.lineno);
         row.SetField("seqno", entity.seqno);
         row.SetField("compseqno", entity.compseqno);
         row.SetField("iceatRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	