//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.EDI
{
   /// <summary>
   /// EDI Line File. Contains the edi incoming purchase order line information
   /// </summary>
   
   public partial class EdilBase: ModelBase
   {

      /// <summary>
      /// Company Number
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Batch Name
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string batchnm { get; set; }

      /// <summary>
      /// Seq #
      /// </summary>
      [Key,Order]
      public int seqno { get; set; }

      /// <summary>
      /// Line #
      /// </summary>
      [Key,Order]
      public int lineno { get; set; }

      /// <summary>
      /// Ordered
      /// </summary>
      public decimal qtyord { get; set; }

      /// <summary>
      /// Units
      /// </summary>
      [StringValidationAttribute]
      public string unit { get; set; }

      /// <summary>
      /// Price
      /// </summary>
      public decimal price { get; set; }

      /// <summary>
      /// Requested Prod
      /// </summary>
      [StringValidationAttribute]
      public string reqprod { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [StringValidationAttribute]
      public string shipprod { get; set; }

      /// <summary>
      /// Cross Ref Type
      /// </summary>
      [StringValidationAttribute]
      public string xrefprodty { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string proddesc { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// Description 2
      /// </summary>
      [StringValidationAttribute]
      public string proddesc2 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// EDI Ln#
      /// </summary>
      [StringValidationAttribute]
      public string edilineno { get; set; }

      /// <summary>
      /// CustProd#
      /// </summary>
      [StringValidationAttribute]
      public string custprod { get; set; }

      /// <summary>
      /// Man
      /// </summary>
      public bool manfl { get; set; }

      /// <summary>
      /// Ext Ln Comments
      /// </summary>
      [StringValidationAttribute]
      public string extlncom { get; set; }

      /// <summary>
      /// Error Cnt
      /// </summary>
      public int errcnt { get; set; }

      /// <summary>
      /// ExceptCnt
      /// </summary>
      public int exccnt { get; set; }

      /// <summary>
      /// Taxable
      /// </summary>
      [StringValidationAttribute]
      public string taxablety { get; set; }

      /// <summary>
      /// Spec Rec Link
      /// </summary>
      public int icspecrecno { get; set; }

      /// <summary>
      /// Extended Prod Desc
      /// </summary>
      [StringValidationAttribute]
      public string extdesc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildEdilBaseFromRow<T>(DataRow row) where T:EdilBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.batchnm = row.IsNull("batchnm") ? string.Empty : row.Field<string>("batchnm");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.qtyord = row.IsNull("qtyord") ? decimal.Zero : row.Field<decimal>("qtyord");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.price = row.IsNull("price") ? decimal.Zero : row.Field<decimal>("price");
         entity.reqprod = row.IsNull("reqprod") ? string.Empty : row.Field<string>("reqprod");
         entity.shipprod = row.IsNull("shipprod") ? string.Empty : row.Field<string>("shipprod");
         entity.xrefprodty = row.IsNull("xrefprodty") ? string.Empty : row.Field<string>("xrefprodty");
         entity.proddesc = row.IsNull("proddesc") ? string.Empty : row.Field<string>("proddesc");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.proddesc2 = row.IsNull("proddesc2") ? string.Empty : row.Field<string>("proddesc2");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.edilineno = row.IsNull("edilineno") ? string.Empty : row.Field<string>("edilineno");
         entity.custprod = row.IsNull("custprod") ? string.Empty : row.Field<string>("custprod");
         entity.manfl = row.Field<bool>("manfl");
         entity.extlncom = row.IsNull("extlncom") ? string.Empty : row.Field<string>("extlncom");
         entity.errcnt = row.IsNull("errcnt") ? 0 : row.Field<int>("errcnt");
         entity.exccnt = row.IsNull("exccnt") ? 0 : row.Field<int>("exccnt");
         entity.taxablety = row.IsNull("taxablety") ? string.Empty : row.Field<string>("taxablety");
         entity.icspecrecno = row.IsNull("icspecrecno") ? 0 : row.Field<int>("icspecrecno");
         entity.extdesc = row.IsNull("extdesc") ? string.Empty : row.Field<string>("extdesc");
         entity.rowID = row.Field<byte[]>("edilRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromEdilBase(ref DataRow row, EdilBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("batchnm", entity.batchnm);
         row.SetField("seqno", entity.seqno);
         row.SetField("lineno", entity.lineno);
         row.SetField("qtyord", entity.qtyord);
         row.SetField("unit", entity.unit);
         row.SetField("price", entity.price);
         row.SetField("reqprod", entity.reqprod);
         row.SetField("shipprod", entity.shipprod);
         row.SetField("xrefprodty", entity.xrefprodty);
         row.SetField("proddesc", entity.proddesc);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("proddesc2", entity.proddesc2);
         row.SetField("transproc", entity.transproc);
         row.SetField("edilineno", entity.edilineno);
         row.SetField("custprod", entity.custprod);
         row.SetField("manfl", entity.manfl);
         row.SetField("extlncom", entity.extlncom);
         row.SetField("errcnt", entity.errcnt);
         row.SetField("exccnt", entity.exccnt);
         row.SetField("taxablety", entity.taxablety);
         row.SetField("icspecrecno", entity.icspecrecno);
         row.SetField("extdesc", entity.extdesc);
         row.SetField("edilRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, EdilBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("batchnm", entity.batchnm);
         row.SetField("seqno", entity.seqno);
         row.SetField("lineno", entity.lineno);
         row.SetField("edilRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	