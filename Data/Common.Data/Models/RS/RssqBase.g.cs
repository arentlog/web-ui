//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.RS
{
   /// <summary>
   /// Queue Setup File
   /// </summary>
   
   public partial class RssqBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Queue
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string queuenm { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      public bool statustype { get; set; }

      /// <summary>
      /// Max Jobs
      /// </summary>
      public int nomaxjobs { get; set; }

      /// <summary>
      /// Priority
      /// </summary>
      public int queuepri { get; set; }

      /// <summary>
      /// Last Change Dt
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Trans Tm
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Begin Time
      /// </summary>
      public int begintm { get; set; }

      /// <summary>
      /// End Time
      /// </summary>
      public int endtm { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string descrip { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Log Directory
      /// </summary>
      [StringValidationAttribute]
      public string logdir { get; set; }

      /// <summary>
      /// Options Flag
      /// </summary>
      public bool rngoptfl { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildRssqBaseFromRow<T>(DataRow row) where T:RssqBase, new()
      {
         T entity = new T();
         entity.queuenm = row.IsNull("queuenm") ? string.Empty : row.Field<string>("queuenm");
         entity.statustype = row.Field<bool>("statustype");
         entity.nomaxjobs = row.IsNull("nomaxjobs") ? 0 : row.Field<int>("nomaxjobs");
         entity.queuepri = row.IsNull("queuepri") ? 0 : row.Field<int>("queuepri");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.begintm = row.IsNull("begintm") ? 0 : row.Field<int>("begintm");
         entity.endtm = row.IsNull("endtm") ? 0 : row.Field<int>("endtm");
         entity.descrip = row.IsNull("descrip") ? string.Empty : row.Field<string>("descrip");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.logdir = row.IsNull("logdir") ? string.Empty : row.Field<string>("logdir");
         entity.rngoptfl = row.Field<bool>("rngoptfl");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("rssqRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromRssqBase(ref DataRow row, RssqBase entity)
      {
         row.SetField("queuenm", entity.queuenm);
         row.SetField("statustype", entity.statustype);
         row.SetField("nomaxjobs", entity.nomaxjobs);
         row.SetField("queuepri", entity.queuepri);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("begintm", entity.begintm);
         row.SetField("endtm", entity.endtm);
         row.SetField("descrip", entity.descrip);
         row.SetField("operinit", entity.operinit);
         row.SetField("logdir", entity.logdir);
         row.SetField("rngoptfl", entity.rngoptfl);
         row.SetField("transproc", entity.transproc);
         row.SetField("rssqRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, RssqBase entity)
      {
         row.SetField("queuenm", entity.queuenm);
         row.SetField("rssqRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	