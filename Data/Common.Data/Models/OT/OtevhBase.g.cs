//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.OT
{
   /// <summary>
   /// Overseas Trade Entry Vessel Header
   /// </summary>
   
   public partial class OtevhBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Vessel #
      /// </summary>
      [Key,Order]
      public int vesselno { get; set; }

      /// <summary>
      /// Shipment ID
      /// </summary>
      [StringValidationAttribute]
      public string shipid { get; set; }

      /// <summary>
      /// Shipping Company
      /// </summary>
      [StringValidationAttribute]
      public string shipco { get; set; }

      /// <summary>
      /// Vessel Name
      /// </summary>
      [StringValidationAttribute]
      public string vessnm { get; set; }

      /// <summary>
      /// Voyage #
      /// </summary>
      [StringValidationAttribute]
      public string voyageno { get; set; }

      /// <summary>
      /// Country Of Origin
      /// </summary>
      [StringValidationAttribute]
      public string countryorgcd { get; set; }

      /// <summary>
      /// Country of Destination
      /// </summary>
      [StringValidationAttribute]
      public string countrydestcd { get; set; }

      /// <summary>
      /// Estimated Departure Date
      /// </summary>
      public DateTime? estdeptdt { get; set; }

      /// <summary>
      /// Revised Departure Date
      /// </summary>
      public DateTime? revdeptdt { get; set; }

      /// <summary>
      /// Actual Departure Date
      /// </summary>
      public DateTime? actdeptdt { get; set; }

      /// <summary>
      /// Estimated Arrival Date
      /// </summary>
      public DateTime? estarrdt { get; set; }

      /// <summary>
      /// Actual Arrival Date
      /// </summary>
      public DateTime? actarrdt { get; set; }

      /// <summary>
      /// Stg
      /// </summary>
      public int stagecd { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Estimated Unload Date
      /// </summary>
      public DateTime? estunldt { get; set; }

      /// <summary>
      /// Actual Unload Date
      /// </summary>
      public DateTime? actunldt { get; set; }

      /// <summary>
      /// Revised Arrival Date
      /// </summary>
      public DateTime? revarrdt { get; set; }

      /// <summary>
      /// Revised Unload Date
      /// </summary>
      public DateTime? revunldt { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildOtevhBaseFromRow<T>(DataRow row) where T:OtevhBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.vesselno = row.IsNull("vesselno") ? 0 : row.Field<int>("vesselno");
         entity.shipid = row.IsNull("shipid") ? string.Empty : row.Field<string>("shipid");
         entity.shipco = row.IsNull("shipco") ? string.Empty : row.Field<string>("shipco");
         entity.vessnm = row.IsNull("vessnm") ? string.Empty : row.Field<string>("vessnm");
         entity.voyageno = row.IsNull("voyageno") ? string.Empty : row.Field<string>("voyageno");
         entity.countryorgcd = row.IsNull("countryorgcd") ? string.Empty : row.Field<string>("countryorgcd");
         entity.countrydestcd = row.IsNull("countrydestcd") ? string.Empty : row.Field<string>("countrydestcd");
         entity.estdeptdt = row.Field<DateTime?>("estdeptdt");
         entity.revdeptdt = row.Field<DateTime?>("revdeptdt");
         entity.actdeptdt = row.Field<DateTime?>("actdeptdt");
         entity.estarrdt = row.Field<DateTime?>("estarrdt");
         entity.actarrdt = row.Field<DateTime?>("actarrdt");
         entity.stagecd = row.IsNull("stagecd") ? 0 : row.Field<int>("stagecd");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.estunldt = row.Field<DateTime?>("estunldt");
         entity.actunldt = row.Field<DateTime?>("actunldt");
         entity.revarrdt = row.Field<DateTime?>("revarrdt");
         entity.revunldt = row.Field<DateTime?>("revunldt");
         entity.rowID = row.Field<byte[]>("otevhRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOtevhBase(ref DataRow row, OtevhBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vesselno", entity.vesselno);
         row.SetField("shipid", entity.shipid);
         row.SetField("shipco", entity.shipco);
         row.SetField("vessnm", entity.vessnm);
         row.SetField("voyageno", entity.voyageno);
         row.SetField("countryorgcd", entity.countryorgcd);
         row.SetField("countrydestcd", entity.countrydestcd);
         row.SetField("estdeptdt", entity.estdeptdt);
         row.SetField("revdeptdt", entity.revdeptdt);
         row.SetField("actdeptdt", entity.actdeptdt);
         row.SetField("estarrdt", entity.estarrdt);
         row.SetField("actarrdt", entity.actarrdt);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("estunldt", entity.estunldt);
         row.SetField("actunldt", entity.actunldt);
         row.SetField("revarrdt", entity.revarrdt);
         row.SetField("revunldt", entity.revunldt);
         row.SetField("otevhRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, OtevhBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vesselno", entity.vesselno);
         row.SetField("otevhRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	