//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.OT
{
   /// <summary>
   /// Tracking Document Header Table 
   /// </summary>
   
   public partial class OtehBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Tracking #
      /// </summary>
      [Key,Order]
      public int trackno { get; set; }

      /// <summary>
      /// Container #
      /// </summary>
      [StringValidationAttribute]
      public string contno { get; set; }

      /// <summary>
      /// Bill Of Lading #
      /// </summary>
      [StringValidationAttribute]
      public string bolno { get; set; }

      /// <summary>
      /// Shipment ID
      /// </summary>
      [StringValidationAttribute]
      public string shipid { get; set; }

      /// <summary>
      /// Shipping Company
      /// </summary>
      [StringValidationAttribute]
      public string shipco { get; set; }

      /// <summary>
      /// Vessel Name
      /// </summary>
      [StringValidationAttribute]
      public string vesselnm { get; set; }

      /// <summary>
      /// Voyage #
      /// </summary>
      [StringValidationAttribute]
      public string voyageno { get; set; }

      /// <summary>
      /// Country of Origin
      /// </summary>
      [StringValidationAttribute]
      public string countryorgcd { get; set; }

      /// <summary>
      /// Destination Country
      /// </summary>
      [StringValidationAttribute]
      public string countrydestcd { get; set; }

      /// <summary>
      /// Port #
      /// </summary>
      public int portno { get; set; }

      /// <summary>
      /// Port Name
      /// </summary>
      [StringValidationAttribute]
      public string portnm { get; set; }

      /// <summary>
      /// Letter of Credit #
      /// </summary>
      [StringValidationAttribute]
      public string ltofcreditno { get; set; }

      /// <summary>
      /// Container Size
      /// </summary>
      public int contsize { get; set; }

      /// <summary>
      /// Estimated Departure Date
      /// </summary>
      public DateTime? estdeptdt { get; set; }

      /// <summary>
      /// Revised Departure Date
      /// </summary>
      public DateTime? revdeptdt { get; set; }

      /// <summary>
      /// Actual Departure Date
      /// </summary>
      public DateTime? actdeptdt { get; set; }

      /// <summary>
      /// Estimated Dock Arrival Date
      /// </summary>
      public DateTime? estdockarrdt { get; set; }

      /// <summary>
      /// Actual Dock Arrival Date
      /// </summary>
      public DateTime? actdockarrdt { get; set; }

      /// <summary>
      /// Estimated Dock Ready Date
      /// </summary>
      public DateTime? estdockreddt { get; set; }

      /// <summary>
      /// Actual Dock Ready Date
      /// </summary>
      public DateTime? actdockreddt { get; set; }

      /// <summary>
      /// Estimated Dock Demurrage Date
      /// </summary>
      public DateTime? estdockdemurdt { get; set; }

      /// <summary>
      /// Actual Dock Demurrage Date
      /// </summary>
      public DateTime? actdockdemurdt { get; set; }

      /// <summary>
      /// Estimated Last Free Date
      /// </summary>
      public DateTime? estlastfreedt { get; set; }

      /// <summary>
      /// Actual Last Free Date
      /// </summary>
      public DateTime? actlastfreedt { get; set; }

      /// <summary>
      /// Estimated Warehouse Unload Date
      /// </summary>
      public DateTime? estwhseunldt { get; set; }

      /// <summary>
      /// Actual Warehouse Unload Date
      /// </summary>
      public DateTime? actwhseunldt { get; set; }

      /// <summary>
      /// Estimated Empty Date
      /// </summary>
      public DateTime? estempdt { get; set; }

      /// <summary>
      /// Actual Empty Date
      /// </summary>
      public DateTime? actempdt { get; set; }

      /// <summary>
      /// Estimated Return Date
      /// </summary>
      public DateTime? estretdt { get; set; }

      /// <summary>
      /// Actual Return Date
      /// </summary>
      public DateTime? actretdt { get; set; }

      /// <summary>
      /// Tracking Busy
      /// </summary>
      public bool trackbusyfl { get; set; }

      /// <summary>
      /// Stage
      /// </summary>
      public int stagecd { get; set; }

      /// <summary>
      /// Broker/Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// Contact Name
      /// </summary>
      [StringValidationAttribute]
      public string contactnm { get; set; }

      /// <summary>
      /// Addons
      /// </summary>
      public int addonno1 { get; set; }
      public int addonno2 { get; set; }
      public int addonno3 { get; set; }
      public int addonno4 { get; set; }

      /// <summary>
      /// Addon Amt
      /// </summary>
      public decimal addonamt1 { get; set; }
      public decimal addonamt2 { get; set; }
      public decimal addonamt3 { get; set; }
      public decimal addonamt4 { get; set; }

      /// <summary>
      /// Net Addon Amount
      /// </summary>
      public decimal addonnet1 { get; set; }
      public decimal addonnet2 { get; set; }
      public decimal addonnet3 { get; set; }
      public decimal addonnet4 { get; set; }

      /// <summary>
      /// Addon Type
      /// </summary>
      public bool addontype1 { get; set; }
      public bool addontype2 { get; set; }
      public bool addontype3 { get; set; }
      public bool addontype4 { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Open Initial
      /// </summary>
      [StringValidationAttribute]
      public string openinit { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Estimated At Whse Date
      /// </summary>
      public DateTime? estatwhsedt { get; set; }

      /// <summary>
      /// Actual At Whse Date
      /// </summary>
      public DateTime? actatwhsedt { get; set; }

      /// <summary>
      /// Ship From
      /// </summary>
      public int shipfmno { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [StringValidationAttribute]
      public string manname { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string manaddr1 { get; set; }
      [StringValidationAttribute]
      public string manaddr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string mancity { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string manstate { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string manzipcd { get; set; }

      /// <summary>
      /// Country
      /// </summary>
      [StringValidationAttribute]
      public string mancountrycd { get; set; }

      /// <summary>
      /// Phone
      /// </summary>
      [StringValidationAttribute]
      public string manphoneno { get; set; }

      /// <summary>
      /// Total Tacking Amt
      /// </summary>
      public decimal totamt { get; set; }

      /// <summary>
      /// Estimated Production Start Date
      /// </summary>
      public DateTime? estprodstdt { get; set; }

      /// <summary>
      /// Revised Production Start Date
      /// </summary>
      public DateTime? revprodstdt { get; set; }

      /// <summary>
      /// Actual Production Start Date
      /// </summary>
      public DateTime? actprodstdt { get; set; }

      /// <summary>
      /// Estimated Production Complete Date
      /// </summary>
      public DateTime? estprodcompdt { get; set; }

      /// <summary>
      /// Revised Production Complete Date
      /// </summary>
      public DateTime? revprodcompdt { get; set; }

      /// <summary>
      /// Actual Production Complete Date
      /// </summary>
      public DateTime? actprodcompdt { get; set; }

      /// <summary>
      /// Revised Dock Demurrage Date
      /// </summary>
      public DateTime? revdockdemurdt { get; set; }

      /// <summary>
      /// Revised Last Free Date
      /// </summary>
      public DateTime? revlastfreedt { get; set; }

      /// <summary>
      /// Revised At Whse Date
      /// </summary>
      public DateTime? revatwhsedt { get; set; }

      /// <summary>
      /// Revised Container Empty Date
      /// </summary>
      public DateTime? revempdt { get; set; }

      /// <summary>
      /// Revised Dock Arrival Date
      /// </summary>
      public DateTime? revdockarrdt { get; set; }

      /// <summary>
      /// Revised Dock Ready Date
      /// </summary>
      public DateTime? revdockreddt { get; set; }

      /// <summary>
      /// Revised Container Return Date
      /// </summary>
      public DateTime? revretdt { get; set; }

      /// <summary>
      /// Revised Whse Unload Date
      /// </summary>
      public DateTime? revwhseunldt { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string manaddr3 { get; set; }

      /// <summary>
      /// In Transit Jrnl#
      /// </summary>
      public int jrnlnoin { get; set; }

      /// <summary>
      /// Out-of Transit Jrnl#
      /// </summary>
      public int jrnlnoout { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.manaddr1 + "," + this.mancity + "," + this.manstate + "," + this.manzipcd + "," + this.countrydestcd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildOtehBaseFromRow<T>(DataRow row) where T:OtehBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.trackno = row.IsNull("trackno") ? 0 : row.Field<int>("trackno");
         entity.contno = row.IsNull("contno") ? string.Empty : row.Field<string>("contno");
         entity.bolno = row.IsNull("bolno") ? string.Empty : row.Field<string>("bolno");
         entity.shipid = row.IsNull("shipid") ? string.Empty : row.Field<string>("shipid");
         entity.shipco = row.IsNull("shipco") ? string.Empty : row.Field<string>("shipco");
         entity.vesselnm = row.IsNull("vesselnm") ? string.Empty : row.Field<string>("vesselnm");
         entity.voyageno = row.IsNull("voyageno") ? string.Empty : row.Field<string>("voyageno");
         entity.countryorgcd = row.IsNull("countryorgcd") ? string.Empty : row.Field<string>("countryorgcd");
         entity.countrydestcd = row.IsNull("countrydestcd") ? string.Empty : row.Field<string>("countrydestcd");
         entity.portno = row.IsNull("portno") ? 0 : row.Field<int>("portno");
         entity.portnm = row.IsNull("portnm") ? string.Empty : row.Field<string>("portnm");
         entity.ltofcreditno = row.IsNull("ltofcreditno") ? string.Empty : row.Field<string>("ltofcreditno");
         entity.contsize = row.IsNull("contsize") ? 0 : row.Field<int>("contsize");
         entity.estdeptdt = row.Field<DateTime?>("estdeptdt");
         entity.revdeptdt = row.Field<DateTime?>("revdeptdt");
         entity.actdeptdt = row.Field<DateTime?>("actdeptdt");
         entity.estdockarrdt = row.Field<DateTime?>("estdockarrdt");
         entity.actdockarrdt = row.Field<DateTime?>("actdockarrdt");
         entity.estdockreddt = row.Field<DateTime?>("estdockreddt");
         entity.actdockreddt = row.Field<DateTime?>("actdockreddt");
         entity.estdockdemurdt = row.Field<DateTime?>("estdockdemurdt");
         entity.actdockdemurdt = row.Field<DateTime?>("actdockdemurdt");
         entity.estlastfreedt = row.Field<DateTime?>("estlastfreedt");
         entity.actlastfreedt = row.Field<DateTime?>("actlastfreedt");
         entity.estwhseunldt = row.Field<DateTime?>("estwhseunldt");
         entity.actwhseunldt = row.Field<DateTime?>("actwhseunldt");
         entity.estempdt = row.Field<DateTime?>("estempdt");
         entity.actempdt = row.Field<DateTime?>("actempdt");
         entity.estretdt = row.Field<DateTime?>("estretdt");
         entity.actretdt = row.Field<DateTime?>("actretdt");
         entity.trackbusyfl = row.Field<bool>("trackbusyfl");
         entity.stagecd = row.IsNull("stagecd") ? 0 : row.Field<int>("stagecd");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.contactnm = row.IsNull("contactnm") ? string.Empty : row.Field<string>("contactnm");
         entity.addonno1 = row.IsNull("addonno1") ? 0 : row.Field<int>("addonno1");
         entity.addonno2 = row.IsNull("addonno2") ? 0 : row.Field<int>("addonno2");
         entity.addonno3 = row.IsNull("addonno3") ? 0 : row.Field<int>("addonno3");
         entity.addonno4 = row.IsNull("addonno4") ? 0 : row.Field<int>("addonno4");
         entity.addonamt1 = row.IsNull("addonamt1") ? decimal.Zero : row.Field<decimal>("addonamt1");
         entity.addonamt2 = row.IsNull("addonamt2") ? decimal.Zero : row.Field<decimal>("addonamt2");
         entity.addonamt3 = row.IsNull("addonamt3") ? decimal.Zero : row.Field<decimal>("addonamt3");
         entity.addonamt4 = row.IsNull("addonamt4") ? decimal.Zero : row.Field<decimal>("addonamt4");
         entity.addonnet1 = row.IsNull("addonnet1") ? decimal.Zero : row.Field<decimal>("addonnet1");
         entity.addonnet2 = row.IsNull("addonnet2") ? decimal.Zero : row.Field<decimal>("addonnet2");
         entity.addonnet3 = row.IsNull("addonnet3") ? decimal.Zero : row.Field<decimal>("addonnet3");
         entity.addonnet4 = row.IsNull("addonnet4") ? decimal.Zero : row.Field<decimal>("addonnet4");
         entity.addontype1 = row.Field<bool>("addontype1");
         entity.addontype2 = row.Field<bool>("addontype2");
         entity.addontype3 = row.Field<bool>("addontype3");
         entity.addontype4 = row.Field<bool>("addontype4");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.openinit = row.IsNull("openinit") ? string.Empty : row.Field<string>("openinit");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.estatwhsedt = row.Field<DateTime?>("estatwhsedt");
         entity.actatwhsedt = row.Field<DateTime?>("actatwhsedt");
         entity.shipfmno = row.IsNull("shipfmno") ? 0 : row.Field<int>("shipfmno");
         entity.manname = row.IsNull("manname") ? string.Empty : row.Field<string>("manname");
         entity.manaddr1 = row.IsNull("manaddr1") ? string.Empty : row.Field<string>("manaddr1");
         entity.manaddr2 = row.IsNull("manaddr2") ? string.Empty : row.Field<string>("manaddr2");
         entity.mancity = row.IsNull("mancity") ? string.Empty : row.Field<string>("mancity");
         entity.manstate = row.IsNull("manstate") ? string.Empty : row.Field<string>("manstate");
         entity.manzipcd = row.IsNull("manzipcd") ? string.Empty : row.Field<string>("manzipcd");
         entity.mancountrycd = row.IsNull("mancountrycd") ? string.Empty : row.Field<string>("mancountrycd");
         entity.manphoneno = row.IsNull("manphoneno") ? string.Empty : row.Field<string>("manphoneno");
         entity.totamt = row.IsNull("totamt") ? decimal.Zero : row.Field<decimal>("totamt");
         entity.estprodstdt = row.Field<DateTime?>("estprodstdt");
         entity.revprodstdt = row.Field<DateTime?>("revprodstdt");
         entity.actprodstdt = row.Field<DateTime?>("actprodstdt");
         entity.estprodcompdt = row.Field<DateTime?>("estprodcompdt");
         entity.revprodcompdt = row.Field<DateTime?>("revprodcompdt");
         entity.actprodcompdt = row.Field<DateTime?>("actprodcompdt");
         entity.revdockdemurdt = row.Field<DateTime?>("revdockdemurdt");
         entity.revlastfreedt = row.Field<DateTime?>("revlastfreedt");
         entity.revatwhsedt = row.Field<DateTime?>("revatwhsedt");
         entity.revempdt = row.Field<DateTime?>("revempdt");
         entity.revdockarrdt = row.Field<DateTime?>("revdockarrdt");
         entity.revdockreddt = row.Field<DateTime?>("revdockreddt");
         entity.revretdt = row.Field<DateTime?>("revretdt");
         entity.revwhseunldt = row.Field<DateTime?>("revwhseunldt");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.manaddr3 = row.IsNull("manaddr3") ? string.Empty : row.Field<string>("manaddr3");
         entity.jrnlnoin = row.IsNull("jrnlnoin") ? 0 : row.Field<int>("jrnlnoin");
         entity.jrnlnoout = row.IsNull("jrnlnoout") ? 0 : row.Field<int>("jrnlnoout");
         entity.rowID = row.Field<byte[]>("otehRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOtehBase(ref DataRow row, OtehBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("trackno", entity.trackno);
         row.SetField("contno", entity.contno);
         row.SetField("bolno", entity.bolno);
         row.SetField("shipid", entity.shipid);
         row.SetField("shipco", entity.shipco);
         row.SetField("vesselnm", entity.vesselnm);
         row.SetField("voyageno", entity.voyageno);
         row.SetField("countryorgcd", entity.countryorgcd);
         row.SetField("countrydestcd", entity.countrydestcd);
         row.SetField("portno", entity.portno);
         row.SetField("portnm", entity.portnm);
         row.SetField("ltofcreditno", entity.ltofcreditno);
         row.SetField("contsize", entity.contsize);
         row.SetField("estdeptdt", entity.estdeptdt);
         row.SetField("revdeptdt", entity.revdeptdt);
         row.SetField("actdeptdt", entity.actdeptdt);
         row.SetField("estdockarrdt", entity.estdockarrdt);
         row.SetField("actdockarrdt", entity.actdockarrdt);
         row.SetField("estdockreddt", entity.estdockreddt);
         row.SetField("actdockreddt", entity.actdockreddt);
         row.SetField("estdockdemurdt", entity.estdockdemurdt);
         row.SetField("actdockdemurdt", entity.actdockdemurdt);
         row.SetField("estlastfreedt", entity.estlastfreedt);
         row.SetField("actlastfreedt", entity.actlastfreedt);
         row.SetField("estwhseunldt", entity.estwhseunldt);
         row.SetField("actwhseunldt", entity.actwhseunldt);
         row.SetField("estempdt", entity.estempdt);
         row.SetField("actempdt", entity.actempdt);
         row.SetField("estretdt", entity.estretdt);
         row.SetField("actretdt", entity.actretdt);
         row.SetField("trackbusyfl", entity.trackbusyfl);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("vendno", entity.vendno);
         row.SetField("contactnm", entity.contactnm);
         row.SetField("addonno1", entity.addonno1);
         row.SetField("addonno2", entity.addonno2);
         row.SetField("addonno3", entity.addonno3);
         row.SetField("addonno4", entity.addonno4);
         row.SetField("addonamt1", entity.addonamt1);
         row.SetField("addonamt2", entity.addonamt2);
         row.SetField("addonamt3", entity.addonamt3);
         row.SetField("addonamt4", entity.addonamt4);
         row.SetField("addonnet1", entity.addonnet1);
         row.SetField("addonnet2", entity.addonnet2);
         row.SetField("addonnet3", entity.addonnet3);
         row.SetField("addonnet4", entity.addonnet4);
         row.SetField("addontype1", entity.addontype1);
         row.SetField("addontype2", entity.addontype2);
         row.SetField("addontype3", entity.addontype3);
         row.SetField("addontype4", entity.addontype4);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("openinit", entity.openinit);
         row.SetField("whse", entity.whse);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("estatwhsedt", entity.estatwhsedt);
         row.SetField("actatwhsedt", entity.actatwhsedt);
         row.SetField("shipfmno", entity.shipfmno);
         row.SetField("manname", entity.manname);
         row.SetField("manaddr1", entity.manaddr1);
         row.SetField("manaddr2", entity.manaddr2);
         row.SetField("mancity", entity.mancity);
         row.SetField("manstate", entity.manstate);
         row.SetField("manzipcd", entity.manzipcd);
         row.SetField("mancountrycd", entity.mancountrycd);
         row.SetField("manphoneno", entity.manphoneno);
         row.SetField("totamt", entity.totamt);
         row.SetField("estprodstdt", entity.estprodstdt);
         row.SetField("revprodstdt", entity.revprodstdt);
         row.SetField("actprodstdt", entity.actprodstdt);
         row.SetField("estprodcompdt", entity.estprodcompdt);
         row.SetField("revprodcompdt", entity.revprodcompdt);
         row.SetField("actprodcompdt", entity.actprodcompdt);
         row.SetField("revdockdemurdt", entity.revdockdemurdt);
         row.SetField("revlastfreedt", entity.revlastfreedt);
         row.SetField("revatwhsedt", entity.revatwhsedt);
         row.SetField("revempdt", entity.revempdt);
         row.SetField("revdockarrdt", entity.revdockarrdt);
         row.SetField("revdockreddt", entity.revdockreddt);
         row.SetField("revretdt", entity.revretdt);
         row.SetField("revwhseunldt", entity.revwhseunldt);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("manaddr3", entity.manaddr3);
         row.SetField("jrnlnoin", entity.jrnlnoin);
         row.SetField("jrnlnoout", entity.jrnlnoout);
         row.SetField("otehRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, OtehBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("trackno", entity.trackno);
         row.SetField("otehRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	