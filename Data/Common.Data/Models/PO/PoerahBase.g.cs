//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.PO
{
   /// <summary>
   /// PO RRAR Header Acceptance
   /// </summary>
   
   public partial class PoerahBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Report #
      /// </summary>
      [Key,Order]
      public int reportno { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// Line
      /// </summary>
      [StringValidationAttribute]
      public string prodline { get; set; }

      /// <summary>
      /// From
      /// </summary>
      public int shipfmno { get; set; }

      /// <summary>
      /// Bill
      /// </summary>
      [StringValidationAttribute]
      public string billtowhse { get; set; }

      /// <summary>
      /// To
      /// </summary>
      [StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Buyer
      /// </summary>
      [StringValidationAttribute]
      public string buyer { get; set; }

      /// <summary>
      /// Ship
      /// </summary>
      [StringValidationAttribute]
      public string shiptonm { get; set; }

      /// <summary>
      /// Ship Addr
      /// </summary>
      [StringValidationAttribute]
      public string shiptoaddr1 { get; set; }
      [StringValidationAttribute]
      public string shiptoaddr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string shiptocity { get; set; }

      /// <summary>
      /// shiptost
      /// </summary>
      [StringValidationAttribute]
      public string shiptost { get; set; }

      /// <summary>
      /// shiptozip
      /// </summary>
      [StringValidationAttribute]
      public string shiptozip { get; set; }

      /// <summary>
      /// Instructions
      /// </summary>
      [StringValidationAttribute]
      public string shipinstr { get; set; }

      /// <summary>
      /// Ref
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Due Dt
      /// </summary>
      public DateTime? duedt { get; set; }

      /// <summary>
      /// Ship Via
      /// </summary>
      [StringValidationAttribute]
      public string shipviaty { get; set; }

      /// <summary>
      /// Terms
      /// </summary>
      [StringValidationAttribute]
      public string termstype { get; set; }

      /// <summary>
      /// Ignore Lead Time
      /// </summary>
      public bool ignoreltfl { get; set; }

      /// <summary>
      /// Subs
      /// </summary>
      public bool subfl { get; set; }

      /// <summary>
      /// B/O
      /// </summary>
      public bool bofl { get; set; }

      /// <summary>
      /// Resale/#
      /// </summary>
      public bool resalefl { get; set; }

      /// <summary>
      /// Resale #
      /// </summary>
      [StringValidationAttribute]
      public string resaleno { get; set; }

      /// <summary>
      /// Disp
      /// </summary>
      [StringValidationAttribute]
      public string orderdisp { get; set; }

      /// <summary>
      /// Line Items
      /// </summary>
      public decimal totlineamt { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal totweight { get; set; }

      /// <summary>
      /// Cube
      /// </summary>
      public decimal totcubes { get; set; }

      /// <summary>
      /// Qty Ordered
      /// </summary>
      public decimal totqtyord { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [StringValidationAttribute]
      public string transtype { get; set; }

      /// <summary>
      /// Operator
      /// </summary>
      [StringValidationAttribute]
      public string oper2 { get; set; }

      /// <summary>
      /// Store As
      /// </summary>
      [StringValidationAttribute]
      public string reportnm { get; set; }

      /// <summary>
      /// Next Line #
      /// </summary>
      public int nextlineno { get; set; }

      /// <summary>
      /// Free on Board Destination
      /// </summary>
      public bool fobfl { get; set; }

      /// <summary>
      /// Line Reviewed
      /// </summary>
      public bool linerevfl { get; set; }

      /// <summary>
      /// Currency
      /// </summary>
      [StringValidationAttribute]
      public string currencyty { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Additional Carrying Cost
      /// </summary>
      public decimal addlcarrycost { get; set; }

      /// <summary>
      /// Target Amount
      /// </summary>
      public decimal tarbuyamt { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Rpt Err
      /// </summary>
      [StringValidationAttribute]
      public string rpterr { get; set; }

      /// <summary>
      /// Target Type
      /// </summary>
      [StringValidationAttribute]
      public string tarbuytype { get; set; }

      /// <summary>
      /// Source
      /// </summary>
      [StringValidationAttribute]
      public string sourcety { get; set; }

      /// <summary>
      /// Freight Consolidation Code
      /// </summary>
      [StringValidationAttribute]
      public string frtconsldtcd { get; set; }

      /// <summary>
      /// Open Initials
      /// </summary>
      [StringValidationAttribute]
      public string openinit { get; set; }

      /// <summary>
      /// Req Ship Dt
      /// </summary>
      public DateTime? reqshipdt { get; set; }

      /// <summary>
      /// Create Date
      /// </summary>
      public DateTime? createdt { get; set; }

      /// <summary>
      /// Due Dt Override
      /// </summary>
      public bool dueoverfl { get; set; }

      /// <summary>
      /// Rush
      /// </summary>
      public bool rushfl { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// Consolidate Lines
      /// </summary>
      public bool conslinefl { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// Consolidate Warehouses
      /// </summary>
      public bool conswhsefl { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// WO Disc Override
      /// </summary>
      public bool wodiscoverfl { get; set; }

      /// <summary>
      /// Order Discount
      /// </summary>
      public decimal wodiscamt { get; set; }

      /// <summary>
      /// Order Disc Type
      /// </summary>
      public bool wodisctype { get; set; }

      /// <summary>
      /// Auto Merge Flag
      /// </summary>
      public bool automrgfl { get; set; }

      /// <summary>
      /// reqoverfl
      /// </summary>
      public bool reqoverfl { get; set; }

      /// <summary>
      /// Ready To Merge Flag
      /// </summary>
      public bool mergefl { get; set; }

      /// <summary>
      /// Below Order Point Flag
      /// </summary>
      public bool orderptfl { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Report Priority
      /// </summary>
      public int reportpri { get; set; }

      /// <summary>
      /// Total Critical
      /// </summary>
      public int totcritical { get; set; }

      /// <summary>
      /// Total Below OP
      /// </summary>
      public int totbelowop { get; set; }

      /// <summary>
      /// Total Rush
      /// </summary>
      public int totrush { get; set; }

      /// <summary>
      /// Total Neg Purch Net Avail
      /// </summary>
      public int totnpna { get; set; }

      /// <summary>
      /// Prioity Desc
      /// </summary>
      [StringValidationAttribute]
      public string pridesc { get; set; }

      /// <summary>
      /// Review Cycle Days
      /// </summary>
      public int reviewcycle { get; set; }

      /// <summary>
      /// Total Document Ties
      /// </summary>
      public int totdoc { get; set; }

      /// <summary>
      /// Rpt Err Fl
      /// </summary>
      public bool rpterrfl { get; set; }

      /// <summary>
      /// Blanket PO#
      /// </summary>
      public int blno { get; set; }

      /// <summary>
      /// Blanket Suf
      /// </summary>
      public int blsuf { get; set; }

      /// <summary>
      /// eSrcRqstId
      /// </summary>
      [StringValidationAttribute]
      public string esrqstid { get; set; }

      /// <summary>
      /// Ship Addr
      /// </summary>
      [StringValidationAttribute]
      public string shiptoaddr3 { get; set; }

      /// <summary>
      /// Addon Amt
      /// </summary>
      public decimal addonamt1 { get; set; }
      public decimal addonamt2 { get; set; }
      public decimal addonamt3 { get; set; }
      public decimal addonamt4 { get; set; }

      /// <summary>
      /// Capitalized?
      /// </summary>
      public bool addoncapfl1 { get; set; }
      public bool addoncapfl2 { get; set; }
      public bool addoncapfl3 { get; set; }
      public bool addoncapfl4 { get; set; }

      /// <summary>
      /// Addon Distr
      /// </summary>
      [StringValidationAttribute]
      public string addondistr { get; set; }

      /// <summary>
      /// Net Addon Amount
      /// </summary>
      public decimal addonnet1 { get; set; }
      public decimal addonnet2 { get; set; }
      public decimal addonnet3 { get; set; }
      public decimal addonnet4 { get; set; }

      /// <summary>
      /// Addons
      /// </summary>
      public int addonno1 { get; set; }
      public int addonno2 { get; set; }
      public int addonno3 { get; set; }
      public int addonno4 { get; set; }

      /// <summary>
      /// Addon Type
      /// </summary>
      public bool addontype1 { get; set; }
      public bool addontype2 { get; set; }
      public bool addontype3 { get; set; }
      public bool addontype4 { get; set; }

      /// <summary>
      /// User 10
      /// </summary>
      [StringValidationAttribute]
      public string user10 { get; set; }

      /// <summary>
      /// User 11
      /// </summary>
      [StringValidationAttribute]
      public string user11 { get; set; }

      /// <summary>
      /// User 12
      /// </summary>
      [StringValidationAttribute]
      public string user12 { get; set; }

      /// <summary>
      /// User 13
      /// </summary>
      [StringValidationAttribute]
      public string user13 { get; set; }

      /// <summary>
      /// User 14
      /// </summary>
      [StringValidationAttribute]
      public string user14 { get; set; }

      /// <summary>
      /// User 15
      /// </summary>
      [StringValidationAttribute]
      public string user15 { get; set; }

      /// <summary>
      /// User 16
      /// </summary>
      [StringValidationAttribute]
      public string user16 { get; set; }

      /// <summary>
      /// User 17
      /// </summary>
      [StringValidationAttribute]
      public string user17 { get; set; }

      /// <summary>
      /// User 18
      /// </summary>
      [StringValidationAttribute]
      public string user18 { get; set; }

      /// <summary>
      /// User 19
      /// </summary>
      [StringValidationAttribute]
      public string user19 { get; set; }

      /// <summary>
      /// User 20
      /// </summary>
      [StringValidationAttribute]
      public string user20 { get; set; }

      /// <summary>
      /// User 21
      /// </summary>
      [StringValidationAttribute]
      public string user21 { get; set; }

      /// <summary>
      /// User 22
      /// </summary>
      [StringValidationAttribute]
      public string user22 { get; set; }

      /// <summary>
      /// User 23
      /// </summary>
      [StringValidationAttribute]
      public string user23 { get; set; }

      /// <summary>
      /// User 24
      /// </summary>
      [StringValidationAttribute]
      public string user24 { get; set; }

      /// <summary>
      /// Contract #
      /// </summary>
      [StringValidationAttribute]
      public string contractno { get; set; }

      /// <summary>
      /// Freight Expected
      /// </summary>
      [StringValidationAttribute]
      public string freightexpectedty { get; set; }

      /// <summary>
      /// Total Superseded Products
      /// </summary>
      public int totsuper { get; set; }

      /// <summary>
      /// Country
      /// </summary>
      [StringValidationAttribute]
      public string countrycd { get; set; }

      /// <summary>
      /// Geo Code
      /// </summary>
      public int geocd { get; set; }

      /// <summary>
      /// Outside City Limit
      /// </summary>
      public bool outofcityfl { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Freight Terms
      /// </summary>
      [StringValidationAttribute]
      public string frttermscd { get; set; }

      /// <summary>
      /// Frt Bill Account
      /// </summary>
      [StringValidationAttribute]
      public string frtbillacct { get; set; }

      /// <summary>
      /// Transfer Location
      /// </summary>
      [StringValidationAttribute]
      public string transferloc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.shiptoaddr1 + "," + this.shiptocity + "," + this.shiptost + "," + this.shiptozip + "," + this.countrycd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildPoerahBaseFromRow<T>(DataRow row) where T:PoerahBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.reportno = row.IsNull("reportno") ? 0 : row.Field<int>("reportno");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.shipfmno = row.IsNull("shipfmno") ? 0 : row.Field<int>("shipfmno");
         entity.billtowhse = row.IsNull("billtowhse") ? string.Empty : row.Field<string>("billtowhse");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.buyer = row.IsNull("buyer") ? string.Empty : row.Field<string>("buyer");
         entity.shiptonm = row.IsNull("shiptonm") ? string.Empty : row.Field<string>("shiptonm");
         entity.shiptoaddr1 = row.IsNull("shiptoaddr1") ? string.Empty : row.Field<string>("shiptoaddr1");
         entity.shiptoaddr2 = row.IsNull("shiptoaddr2") ? string.Empty : row.Field<string>("shiptoaddr2");
         entity.shiptocity = row.IsNull("shiptocity") ? string.Empty : row.Field<string>("shiptocity");
         entity.shiptost = row.IsNull("shiptost") ? string.Empty : row.Field<string>("shiptost");
         entity.shiptozip = row.IsNull("shiptozip") ? string.Empty : row.Field<string>("shiptozip");
         entity.shipinstr = row.IsNull("shipinstr") ? string.Empty : row.Field<string>("shipinstr");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.shipviaty = row.IsNull("shipviaty") ? string.Empty : row.Field<string>("shipviaty");
         entity.termstype = row.IsNull("termstype") ? string.Empty : row.Field<string>("termstype");
         entity.ignoreltfl = row.Field<bool>("ignoreltfl");
         entity.subfl = row.Field<bool>("subfl");
         entity.bofl = row.Field<bool>("bofl");
         entity.resalefl = row.Field<bool>("resalefl");
         entity.resaleno = row.IsNull("resaleno") ? string.Empty : row.Field<string>("resaleno");
         entity.orderdisp = row.IsNull("orderdisp") ? string.Empty : row.Field<string>("orderdisp");
         entity.totlineamt = row.IsNull("totlineamt") ? decimal.Zero : row.Field<decimal>("totlineamt");
         entity.totweight = row.IsNull("totweight") ? decimal.Zero : row.Field<decimal>("totweight");
         entity.totcubes = row.IsNull("totcubes") ? decimal.Zero : row.Field<decimal>("totcubes");
         entity.totqtyord = row.IsNull("totqtyord") ? decimal.Zero : row.Field<decimal>("totqtyord");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.oper2 = row.IsNull("oper2") ? string.Empty : row.Field<string>("oper2");
         entity.reportnm = row.IsNull("reportnm") ? string.Empty : row.Field<string>("reportnm");
         entity.nextlineno = row.IsNull("nextlineno") ? 0 : row.Field<int>("nextlineno");
         entity.fobfl = row.Field<bool>("fobfl");
         entity.linerevfl = row.Field<bool>("linerevfl");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.addlcarrycost = row.IsNull("addlcarrycost") ? decimal.Zero : row.Field<decimal>("addlcarrycost");
         entity.tarbuyamt = row.IsNull("tarbuyamt") ? decimal.Zero : row.Field<decimal>("tarbuyamt");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.rpterr = row.IsNull("rpterr") ? string.Empty : row.Field<string>("rpterr");
         entity.tarbuytype = row.IsNull("tarbuytype") ? string.Empty : row.Field<string>("tarbuytype");
         entity.sourcety = row.IsNull("sourcety") ? string.Empty : row.Field<string>("sourcety");
         entity.frtconsldtcd = row.IsNull("frtconsldtcd") ? string.Empty : row.Field<string>("frtconsldtcd");
         entity.openinit = row.IsNull("openinit") ? string.Empty : row.Field<string>("openinit");
         entity.reqshipdt = row.Field<DateTime?>("reqshipdt");
         entity.createdt = row.Field<DateTime?>("createdt");
         entity.dueoverfl = row.Field<bool>("dueoverfl");
         entity.rushfl = row.Field<bool>("rushfl");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.conslinefl = row.Field<bool>("conslinefl");
         entity.user6 = row.Field<decimal?>("user6");
         entity.conswhsefl = row.Field<bool>("conswhsefl");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.wodiscoverfl = row.Field<bool>("wodiscoverfl");
         entity.wodiscamt = row.IsNull("wodiscamt") ? decimal.Zero : row.Field<decimal>("wodiscamt");
         entity.wodisctype = row.Field<bool>("wodisctype");
         entity.automrgfl = row.Field<bool>("automrgfl");
         entity.reqoverfl = row.Field<bool>("reqoverfl");
         entity.mergefl = row.Field<bool>("mergefl");
         entity.orderptfl = row.Field<bool>("orderptfl");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.reportpri = row.IsNull("reportpri") ? 0 : row.Field<int>("reportpri");
         entity.totcritical = row.IsNull("totcritical") ? 0 : row.Field<int>("totcritical");
         entity.totbelowop = row.IsNull("totbelowop") ? 0 : row.Field<int>("totbelowop");
         entity.totrush = row.IsNull("totrush") ? 0 : row.Field<int>("totrush");
         entity.totnpna = row.IsNull("totnpna") ? 0 : row.Field<int>("totnpna");
         entity.pridesc = row.IsNull("pridesc") ? string.Empty : row.Field<string>("pridesc");
         entity.reviewcycle = row.IsNull("reviewcycle") ? 0 : row.Field<int>("reviewcycle");
         entity.totdoc = row.IsNull("totdoc") ? 0 : row.Field<int>("totdoc");
         entity.rpterrfl = row.Field<bool>("rpterrfl");
         entity.blno = row.IsNull("blno") ? 0 : row.Field<int>("blno");
         entity.blsuf = row.IsNull("blsuf") ? 0 : row.Field<int>("blsuf");
         entity.esrqstid = row.IsNull("esrqstid") ? string.Empty : row.Field<string>("esrqstid");
         entity.shiptoaddr3 = row.IsNull("shiptoaddr3") ? string.Empty : row.Field<string>("shiptoaddr3");
         entity.addonamt1 = row.IsNull("addonamt1") ? decimal.Zero : row.Field<decimal>("addonamt1");
         entity.addonamt2 = row.IsNull("addonamt2") ? decimal.Zero : row.Field<decimal>("addonamt2");
         entity.addonamt3 = row.IsNull("addonamt3") ? decimal.Zero : row.Field<decimal>("addonamt3");
         entity.addonamt4 = row.IsNull("addonamt4") ? decimal.Zero : row.Field<decimal>("addonamt4");
         entity.addoncapfl1 = row.Field<bool>("addoncapfl1");
         entity.addoncapfl2 = row.Field<bool>("addoncapfl2");
         entity.addoncapfl3 = row.Field<bool>("addoncapfl3");
         entity.addoncapfl4 = row.Field<bool>("addoncapfl4");
         entity.addondistr = row.IsNull("addondistr") ? string.Empty : row.Field<string>("addondistr");
         entity.addonnet1 = row.IsNull("addonnet1") ? decimal.Zero : row.Field<decimal>("addonnet1");
         entity.addonnet2 = row.IsNull("addonnet2") ? decimal.Zero : row.Field<decimal>("addonnet2");
         entity.addonnet3 = row.IsNull("addonnet3") ? decimal.Zero : row.Field<decimal>("addonnet3");
         entity.addonnet4 = row.IsNull("addonnet4") ? decimal.Zero : row.Field<decimal>("addonnet4");
         entity.addonno1 = row.IsNull("addonno1") ? 0 : row.Field<int>("addonno1");
         entity.addonno2 = row.IsNull("addonno2") ? 0 : row.Field<int>("addonno2");
         entity.addonno3 = row.IsNull("addonno3") ? 0 : row.Field<int>("addonno3");
         entity.addonno4 = row.IsNull("addonno4") ? 0 : row.Field<int>("addonno4");
         entity.addontype1 = row.Field<bool>("addontype1");
         entity.addontype2 = row.Field<bool>("addontype2");
         entity.addontype3 = row.Field<bool>("addontype3");
         entity.addontype4 = row.Field<bool>("addontype4");
         entity.user10 = row.IsNull("user10") ? string.Empty : row.Field<string>("user10");
         entity.user11 = row.IsNull("user11") ? string.Empty : row.Field<string>("user11");
         entity.user12 = row.IsNull("user12") ? string.Empty : row.Field<string>("user12");
         entity.user13 = row.IsNull("user13") ? string.Empty : row.Field<string>("user13");
         entity.user14 = row.IsNull("user14") ? string.Empty : row.Field<string>("user14");
         entity.user15 = row.IsNull("user15") ? string.Empty : row.Field<string>("user15");
         entity.user16 = row.IsNull("user16") ? string.Empty : row.Field<string>("user16");
         entity.user17 = row.IsNull("user17") ? string.Empty : row.Field<string>("user17");
         entity.user18 = row.IsNull("user18") ? string.Empty : row.Field<string>("user18");
         entity.user19 = row.IsNull("user19") ? string.Empty : row.Field<string>("user19");
         entity.user20 = row.IsNull("user20") ? string.Empty : row.Field<string>("user20");
         entity.user21 = row.IsNull("user21") ? string.Empty : row.Field<string>("user21");
         entity.user22 = row.IsNull("user22") ? string.Empty : row.Field<string>("user22");
         entity.user23 = row.IsNull("user23") ? string.Empty : row.Field<string>("user23");
         entity.user24 = row.IsNull("user24") ? string.Empty : row.Field<string>("user24");
         entity.contractno = row.IsNull("contractno") ? string.Empty : row.Field<string>("contractno");
         entity.freightexpectedty = row.IsNull("freightexpectedty") ? string.Empty : row.Field<string>("freightexpectedty");
         entity.totsuper = row.IsNull("totsuper") ? 0 : row.Field<int>("totsuper");
         entity.countrycd = row.IsNull("countrycd") ? string.Empty : row.Field<string>("countrycd");
         entity.geocd = row.IsNull("geocd") ? 0 : row.Field<int>("geocd");
         entity.outofcityfl = row.Field<bool>("outofcityfl");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.frttermscd = row.IsNull("frttermscd") ? string.Empty : row.Field<string>("frttermscd");
         entity.frtbillacct = row.IsNull("frtbillacct") ? string.Empty : row.Field<string>("frtbillacct");
         entity.transferloc = row.IsNull("transferloc") ? string.Empty : row.Field<string>("transferloc");
         entity.rowID = row.Field<byte[]>("poerahRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPoerahBase(ref DataRow row, PoerahBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("reportno", entity.reportno);
         row.SetField("vendno", entity.vendno);
         row.SetField("prodline", entity.prodline);
         row.SetField("shipfmno", entity.shipfmno);
         row.SetField("billtowhse", entity.billtowhse);
         row.SetField("whse", entity.whse);
         row.SetField("buyer", entity.buyer);
         row.SetField("shiptonm", entity.shiptonm);
         row.SetField("shiptoaddr1", entity.shiptoaddr1);
         row.SetField("shiptoaddr2", entity.shiptoaddr2);
         row.SetField("shiptocity", entity.shiptocity);
         row.SetField("shiptost", entity.shiptost);
         row.SetField("shiptozip", entity.shiptozip);
         row.SetField("shipinstr", entity.shipinstr);
         row.SetField("refer", entity.refer);
         row.SetField("duedt", entity.duedt);
         row.SetField("shipviaty", entity.shipviaty);
         row.SetField("termstype", entity.termstype);
         row.SetField("ignoreltfl", entity.ignoreltfl);
         row.SetField("subfl", entity.subfl);
         row.SetField("bofl", entity.bofl);
         row.SetField("resalefl", entity.resalefl);
         row.SetField("resaleno", entity.resaleno);
         row.SetField("orderdisp", entity.orderdisp);
         row.SetField("totlineamt", entity.totlineamt);
         row.SetField("totweight", entity.totweight);
         row.SetField("totcubes", entity.totcubes);
         row.SetField("totqtyord", entity.totqtyord);
         row.SetField("transtype", entity.transtype);
         row.SetField("oper2", entity.oper2);
         row.SetField("reportnm", entity.reportnm);
         row.SetField("nextlineno", entity.nextlineno);
         row.SetField("fobfl", entity.fobfl);
         row.SetField("linerevfl", entity.linerevfl);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("addlcarrycost", entity.addlcarrycost);
         row.SetField("tarbuyamt", entity.tarbuyamt);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("rpterr", entity.rpterr);
         row.SetField("tarbuytype", entity.tarbuytype);
         row.SetField("sourcety", entity.sourcety);
         row.SetField("frtconsldtcd", entity.frtconsldtcd);
         row.SetField("openinit", entity.openinit);
         row.SetField("reqshipdt", entity.reqshipdt);
         row.SetField("createdt", entity.createdt);
         row.SetField("dueoverfl", entity.dueoverfl);
         row.SetField("rushfl", entity.rushfl);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("conslinefl", entity.conslinefl);
         row.SetField("user6", entity.user6);
         row.SetField("conswhsefl", entity.conswhsefl);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("wodiscoverfl", entity.wodiscoverfl);
         row.SetField("wodiscamt", entity.wodiscamt);
         row.SetField("wodisctype", entity.wodisctype);
         row.SetField("automrgfl", entity.automrgfl);
         row.SetField("reqoverfl", entity.reqoverfl);
         row.SetField("mergefl", entity.mergefl);
         row.SetField("orderptfl", entity.orderptfl);
         row.SetField("transproc", entity.transproc);
         row.SetField("reportpri", entity.reportpri);
         row.SetField("totcritical", entity.totcritical);
         row.SetField("totbelowop", entity.totbelowop);
         row.SetField("totrush", entity.totrush);
         row.SetField("totnpna", entity.totnpna);
         row.SetField("pridesc", entity.pridesc);
         row.SetField("reviewcycle", entity.reviewcycle);
         row.SetField("totdoc", entity.totdoc);
         row.SetField("rpterrfl", entity.rpterrfl);
         row.SetField("blno", entity.blno);
         row.SetField("blsuf", entity.blsuf);
         row.SetField("esrqstid", entity.esrqstid);
         row.SetField("shiptoaddr3", entity.shiptoaddr3);
         row.SetField("addonamt1", entity.addonamt1);
         row.SetField("addonamt2", entity.addonamt2);
         row.SetField("addonamt3", entity.addonamt3);
         row.SetField("addonamt4", entity.addonamt4);
         row.SetField("addoncapfl1", entity.addoncapfl1);
         row.SetField("addoncapfl2", entity.addoncapfl2);
         row.SetField("addoncapfl3", entity.addoncapfl3);
         row.SetField("addoncapfl4", entity.addoncapfl4);
         row.SetField("addondistr", entity.addondistr);
         row.SetField("addonnet1", entity.addonnet1);
         row.SetField("addonnet2", entity.addonnet2);
         row.SetField("addonnet3", entity.addonnet3);
         row.SetField("addonnet4", entity.addonnet4);
         row.SetField("addonno1", entity.addonno1);
         row.SetField("addonno2", entity.addonno2);
         row.SetField("addonno3", entity.addonno3);
         row.SetField("addonno4", entity.addonno4);
         row.SetField("addontype1", entity.addontype1);
         row.SetField("addontype2", entity.addontype2);
         row.SetField("addontype3", entity.addontype3);
         row.SetField("addontype4", entity.addontype4);
         row.SetField("user10", entity.user10);
         row.SetField("user11", entity.user11);
         row.SetField("user12", entity.user12);
         row.SetField("user13", entity.user13);
         row.SetField("user14", entity.user14);
         row.SetField("user15", entity.user15);
         row.SetField("user16", entity.user16);
         row.SetField("user17", entity.user17);
         row.SetField("user18", entity.user18);
         row.SetField("user19", entity.user19);
         row.SetField("user20", entity.user20);
         row.SetField("user21", entity.user21);
         row.SetField("user22", entity.user22);
         row.SetField("user23", entity.user23);
         row.SetField("user24", entity.user24);
         row.SetField("contractno", entity.contractno);
         row.SetField("freightexpectedty", entity.freightexpectedty);
         row.SetField("totsuper", entity.totsuper);
         row.SetField("countrycd", entity.countrycd);
         row.SetField("geocd", entity.geocd);
         row.SetField("outofcityfl", entity.outofcityfl);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("frttermscd", entity.frttermscd);
         row.SetField("frtbillacct", entity.frtbillacct);
         row.SetField("transferloc", entity.transferloc);
         row.SetField("poerahRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, PoerahBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("reportno", entity.reportno);
         row.SetField("poerahRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	