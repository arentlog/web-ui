//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.PO
{
   /// <summary>
   /// PO Line Items
   /// </summary>
   [EntityType("PO Line Items","poip.detail.linedetail","PurchaseOrder")]
   public partial class PoelBase: ModelBase, IUserFields
   {

      /// <summary>
      /// PO #
      /// </summary>
      [DrillbackParam("pk",1),BodID(1,RequiredId.True),Key,Order]
      public int pono { get; set; }

      /// <summary>
      /// PO Suffix
      /// </summary>
      [BodID(2,RequiredId.True),DrillbackParam("pk2",2),Key,Order]
      public int posuf { get; set; }

      /// <summary>
      /// Line#
      /// </summary>
      [DrillbackParam("pk3",3),BusContext(BusPart.Descr),Key,Order]
      public int lineno { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      [BodContext(BodPart.AcctEntity,""),BusContext(BusPart.AcctEntity),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [BodContext(BodPart.Location,""),BusContext(BusPart.Location),ID(9),StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [ID(5),StringValidationAttribute]
      public string transtype { get; set; }

      /// <summary>
      /// Ordered
      /// </summary>
      public decimal stkqtyord { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [ID(7),StringValidationAttribute]
      public string proddesc { get; set; }

      /// <summary>
      /// Units
      /// </summary>
      [StringValidationAttribute]
      public string unit { get; set; }

      /// <summary>
      /// Buyer
      /// </summary>
      [ID(8),StringValidationAttribute]
      public string buyer { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Entered
      /// </summary>
      public DateTime? enterdt { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [ID(6),StringValidationAttribute]
      public string shipprod { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Stk Qty Rcv
      /// </summary>
      public decimal stkqtyrcv { get; set; }

      /// <summary>
      /// Price
      /// </summary>
      public decimal price { get; set; }

      /// <summary>
      /// Line
      /// </summary>
      [StringValidationAttribute]
      public string prodline { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// B/O
      /// </summary>
      [StringValidationAttribute]
      public string botype { get; set; }

      /// <summary>
      /// netamt
      /// </summary>
      public decimal netamt { get; set; }

      /// <summary>
      /// Requested Prod
      /// </summary>
      [StringValidationAttribute]
      public string reqprod { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal weight { get; set; }

      /// <summary>
      /// Cube
      /// </summary>
      public decimal cubes { get; set; }

      /// <summary>
      /// Original Cubes
      /// </summary>
      public decimal origcubes { get; set; }

      /// <summary>
      /// Original Weight
      /// </summary>
      public decimal origweight { get; set; }

      /// <summary>
      /// # Times Chg
      /// </summary>
      public int notimeschg { get; set; }

      /// <summary>
      /// Stat
      /// </summary>
      [StringValidationAttribute]
      public string statustype { get; set; }

      /// <summary>
      /// Lead Time Excpt
      /// </summary>
      [StringValidationAttribute]
      public string leadoverty { get; set; }

      /// <summary>
      /// Spec Rec Link
      /// </summary>
      public int icspecrecno { get; set; }

      /// <summary>
      /// Print
      /// </summary>
      public bool printfl { get; set; }

      /// <summary>
      /// sxextractdt
      /// </summary>
      public DateTime? sxextractdt { get; set; }

      /// <summary>
      /// Charge Qty
      /// </summary>
      public decimal chrgqty { get; set; }

      /// <summary>
      /// Original Due Dt
      /// </summary>
      public DateTime? origduedt { get; set; }

      /// <summary>
      /// Expected Ship
      /// </summary>
      public DateTime? expshipdt { get; set; }

      /// <summary>
      /// BO #
      /// </summary>
      public int bono { get; set; }

      /// <summary>
      /// VA Fictitious Product Flag
      /// </summary>
      public bool vafakeprodfl { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// # SN/Lots
      /// </summary>
      public decimal nosnlots { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Prev Qty Ord
      /// </summary>
      public decimal prevqtyord { get; set; }

      /// <summary>
      /// Comment
      /// </summary>
      public bool commentfl { get; set; }

      /// <summary>
      /// Due
      /// </summary>
      public DateTime? duedt { get; set; }

      /// <summary>
      /// Invoice Cost
      /// </summary>
      public decimal invcost { get; set; }

      /// <summary>
      /// Unit Override
      /// </summary>
      public bool unitoverfl { get; set; }

      /// <summary>
      /// Price Over
      /// </summary>
      public bool priceoverfl { get; set; }

      /// <summary>
      /// Stk Qty Over
      /// </summary>
      public bool stkqtyoverfl { get; set; }

      /// <summary>
      /// Qty Ord
      /// </summary>
      public decimal qtyord { get; set; }

      /// <summary>
      /// Rcv Qty
      /// </summary>
      public decimal qtyrcv { get; set; }

      /// <summary>
      /// Ship From
      /// </summary>
      public int shipfmno { get; set; }

      /// <summary>
      /// Qty Released
      /// </summary>
      public decimal qtyrel { get; set; }

      /// <summary>
      /// Cost Over
      /// </summary>
      public bool costoverfl { get; set; }

      /// <summary>
      /// Non Stock
      /// </summary>
      [StringValidationAttribute]
      public string nonstockty { get; set; }

      /// <summary>
      /// Rcv Cost
      /// </summary>
      public decimal rcvcost { get; set; }

      /// <summary>
      /// Unavailable
      /// </summary>
      public decimal qtyunavail { get; set; }

      /// <summary>
      /// Reason
      /// </summary>
      [StringValidationAttribute]
      public string reasunavty { get; set; }

      /// <summary>
      /// Each/All
      /// </summary>
      public bool eachfl { get; set; }

      /// <summary>
      /// Description 2
      /// </summary>
      [StringValidationAttribute]
      public string proddesc2 { get; set; }

      /// <summary>
      /// Category
      /// </summary>
      [StringValidationAttribute]
      public string prodcat { get; set; }

      /// <summary>
      /// Tally
      /// </summary>
      public bool tallyfl { get; set; }

      /// <summary>
      /// Gl Rcv Cost
      /// </summary>
      public decimal glcostrcv { get; set; }

      /// <summary>
      /// GL Inv Cost
      /// </summary>
      public decimal glcostinv { get; set; }

      /// <summary>
      /// Order Discount
      /// </summary>
      public decimal wodiscamt { get; set; }

      /// <summary>
      /// Catch Wt
      /// </summary>
      public bool catwtfl { get; set; }

      /// <summary>
      /// Net Rcv
      /// </summary>
      public decimal netrcv { get; set; }

      /// <summary>
      /// Expedite Late
      /// </summary>
      public bool exlatefl { get; set; }

      /// <summary>
      /// Tariff
      /// </summary>
      public decimal tariffamt { get; set; }

      /// <summary>
      /// Domestic Receive Cost
      /// </summary>
      public decimal domrcvcost { get; set; }

      /// <summary>
      /// Domestic Invoice Cost
      /// </summary>
      public decimal dominvcost { get; set; }

      /// <summary>
      /// Domestic Landed Cost
      /// </summary>
      public decimal landedcost { get; set; }

      /// <summary>
      /// Addon Amt
      /// </summary>
      public decimal addonamt1 { get; set; }
      public decimal addonamt2 { get; set; }
      public decimal addonamt3 { get; set; }
      public decimal addonamt4 { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Each/All During Costing
      /// </summary>
      public bool costeachfl { get; set; }

      /// <summary>
      /// Whse Mgr Qty Rcv
      /// </summary>
      public decimal wmqtyrcv { get; set; }

      /// <summary>
      /// Taxable Type
      /// </summary>
      [StringValidationAttribute]
      public string taxabletyau { get; set; }

      /// <summary>
      /// Tax Overide
      /// </summary>
      public bool taxoverideau { get; set; }

      /// <summary>
      /// Tax Group
      /// </summary>
      public int taxgroup { get; set; }

      /// <summary>
      /// Tax Rate
      /// </summary>
      public decimal taxrateau { get; set; }

      /// <summary>
      /// Tax Amt
      /// </summary>
      public decimal taxamt { get; set; }

      /// <summary>
      /// RCV Unit Change
      /// </summary>
      public bool unitchgfl { get; set; }

      /// <summary>
      /// Req Ship
      /// </summary>
      public DateTime? reqshipdt { get; set; }

      /// <summary>
      /// Qty Costed
      /// </summary>
      public decimal qtycosted { get; set; }

      /// <summary>
      /// Stk Qty Billed
      /// </summary>
      public decimal stkqtybilled { get; set; }

      /// <summary>
      /// Orig Tariff
      /// </summary>
      public decimal origtrf { get; set; }

      /// <summary>
      /// # Stk Units
      /// </summary>
      public decimal unitconv { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Ignore Lead Time
      /// </summary>
      public bool ignoreltfl { get; set; }

      /// <summary>
      /// Safety at Receipt
      /// </summary>
      public decimal rcvsafety { get; set; }

      /// <summary>
      /// Net Avail at Receipt
      /// </summary>
      public decimal rcvnetavl { get; set; }

      /// <summary>
      /// Lead Time Days
      /// </summary>
      public int leadtime { get; set; }

      /// <summary>
      /// Receive Add Flag
      /// </summary>
      public bool recvaddfl { get; set; }

      /// <summary>
      /// Container Number
      /// </summary>
      [StringValidationAttribute]
      public string contno { get; set; }

      /// <summary>
      /// In Tracking
      /// </summary>
      public bool usetrackfl { get; set; }

      /// <summary>
      /// Tracking #
      /// </summary>
      public int trackno { get; set; }

      /// <summary>
      /// Line#
      /// </summary>
      public int tracklineno { get; set; }

      /// <summary>
      /// Old PO #
      /// </summary>
      public int orgpono { get; set; }

      /// <summary>
      /// Old PO Suffix
      /// </summary>
      public int orgposuf { get; set; }

      /// <summary>
      /// Wnty
      /// </summary>
      public bool warrantyfl { get; set; }

      /// <summary>
      /// Correction Type
      /// </summary>
      [StringValidationAttribute]
      public string correctionty { get; set; }

      /// <summary>
      /// Country of Origin
      /// </summary>
      [StringValidationAttribute]
      public string countrycd { get; set; }

      /// <summary>
      /// User 10
      /// </summary>
      [StringValidationAttribute]
      public string user10 { get; set; }

      /// <summary>
      /// User 11
      /// </summary>
      [StringValidationAttribute]
      public string user11 { get; set; }

      /// <summary>
      /// User 12
      /// </summary>
      [StringValidationAttribute]
      public string user12 { get; set; }

      /// <summary>
      /// User 13
      /// </summary>
      [StringValidationAttribute]
      public string user13 { get; set; }

      /// <summary>
      /// User 14
      /// </summary>
      [StringValidationAttribute]
      public string user14 { get; set; }

      /// <summary>
      /// User 15
      /// </summary>
      [StringValidationAttribute]
      public string user15 { get; set; }

      /// <summary>
      /// User 16
      /// </summary>
      [StringValidationAttribute]
      public string user16 { get; set; }

      /// <summary>
      /// User 17
      /// </summary>
      [StringValidationAttribute]
      public string user17 { get; set; }

      /// <summary>
      /// User 18
      /// </summary>
      [StringValidationAttribute]
      public string user18 { get; set; }

      /// <summary>
      /// User 19
      /// </summary>
      [StringValidationAttribute]
      public string user19 { get; set; }

      /// <summary>
      /// User 20
      /// </summary>
      [StringValidationAttribute]
      public string user20 { get; set; }

      /// <summary>
      /// User 21
      /// </summary>
      [StringValidationAttribute]
      public string user21 { get; set; }

      /// <summary>
      /// User 22
      /// </summary>
      [StringValidationAttribute]
      public string user22 { get; set; }

      /// <summary>
      /// User 23
      /// </summary>
      [StringValidationAttribute]
      public string user23 { get; set; }

      /// <summary>
      /// User 24
      /// </summary>
      [StringValidationAttribute]
      public string user24 { get; set; }

      /// <summary>
      /// Contract #
      /// </summary>
      [StringValidationAttribute]
      public string contractno { get; set; }

      /// <summary>
      /// PDSVC #
      /// </summary>
      public int pdsvcrecno { get; set; }

      /// <summary>
      /// Acknowledgment Date
      /// </summary>
      public DateTime? ackdt { get; set; }

      /// <summary>
      /// Acknowledgement Reason
      /// </summary>
      [StringValidationAttribute]
      public string ackrsn { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// NCNR
      /// </summary>
      [StringValidationAttribute]
      public string ncnr { get; set; }

      /// <summary>
      /// Country of Origin
      /// </summary>
      [StringValidationAttribute]
      public string countryoforigin { get; set; }

      /// <summary>
      /// HS Code
      /// </summary>
      [StringValidationAttribute]
      public string tariffcd { get; set; }

      /// <summary>
      /// Vendor Return Auth
      /// </summary>
      [StringValidationAttribute]
      public string vendretauth { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }

      /// <summary>
      /// UPC Identifier
      /// </summary>
      [StringValidationAttribute]
      public string upcid { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildPoelBaseFromRow<T>(DataRow row) where T:PoelBase, new()
      {
         T entity = new T();
         entity.pono = row.IsNull("pono") ? 0 : row.Field<int>("pono");
         entity.posuf = row.IsNull("posuf") ? 0 : row.Field<int>("posuf");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.stkqtyord = row.IsNull("stkqtyord") ? decimal.Zero : row.Field<decimal>("stkqtyord");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.proddesc = row.IsNull("proddesc") ? string.Empty : row.Field<string>("proddesc");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.buyer = row.IsNull("buyer") ? string.Empty : row.Field<string>("buyer");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.shipprod = row.IsNull("shipprod") ? string.Empty : row.Field<string>("shipprod");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.stkqtyrcv = row.IsNull("stkqtyrcv") ? decimal.Zero : row.Field<decimal>("stkqtyrcv");
         entity.price = row.IsNull("price") ? decimal.Zero : row.Field<decimal>("price");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.botype = row.IsNull("botype") ? string.Empty : row.Field<string>("botype");
         entity.netamt = row.IsNull("netamt") ? decimal.Zero : row.Field<decimal>("netamt");
         entity.reqprod = row.IsNull("reqprod") ? string.Empty : row.Field<string>("reqprod");
         entity.weight = row.IsNull("weight") ? decimal.Zero : row.Field<decimal>("weight");
         entity.cubes = row.IsNull("cubes") ? decimal.Zero : row.Field<decimal>("cubes");
         entity.origcubes = row.IsNull("origcubes") ? decimal.Zero : row.Field<decimal>("origcubes");
         entity.origweight = row.IsNull("origweight") ? decimal.Zero : row.Field<decimal>("origweight");
         entity.notimeschg = row.IsNull("notimeschg") ? 0 : row.Field<int>("notimeschg");
         entity.statustype = row.IsNull("statustype") ? string.Empty : row.Field<string>("statustype");
         entity.leadoverty = row.IsNull("leadoverty") ? string.Empty : row.Field<string>("leadoverty");
         entity.icspecrecno = row.IsNull("icspecrecno") ? 0 : row.Field<int>("icspecrecno");
         entity.printfl = row.Field<bool>("printfl");
         entity.sxextractdt = row.Field<DateTime?>("sxextractdt");
         entity.chrgqty = row.IsNull("chrgqty") ? decimal.Zero : row.Field<decimal>("chrgqty");
         entity.origduedt = row.Field<DateTime?>("origduedt");
         entity.expshipdt = row.Field<DateTime?>("expshipdt");
         entity.bono = row.IsNull("bono") ? 0 : row.Field<int>("bono");
         entity.vafakeprodfl = row.Field<bool>("vafakeprodfl");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.nosnlots = row.IsNull("nosnlots") ? decimal.Zero : row.Field<decimal>("nosnlots");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.prevqtyord = row.IsNull("prevqtyord") ? decimal.Zero : row.Field<decimal>("prevqtyord");
         entity.commentfl = row.Field<bool>("commentfl");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.invcost = row.IsNull("invcost") ? decimal.Zero : row.Field<decimal>("invcost");
         entity.unitoverfl = row.Field<bool>("unitoverfl");
         entity.priceoverfl = row.Field<bool>("priceoverfl");
         entity.stkqtyoverfl = row.Field<bool>("stkqtyoverfl");
         entity.qtyord = row.IsNull("qtyord") ? decimal.Zero : row.Field<decimal>("qtyord");
         entity.qtyrcv = row.IsNull("qtyrcv") ? decimal.Zero : row.Field<decimal>("qtyrcv");
         entity.shipfmno = row.IsNull("shipfmno") ? 0 : row.Field<int>("shipfmno");
         entity.qtyrel = row.IsNull("qtyrel") ? decimal.Zero : row.Field<decimal>("qtyrel");
         entity.costoverfl = row.Field<bool>("costoverfl");
         entity.nonstockty = row.IsNull("nonstockty") ? string.Empty : row.Field<string>("nonstockty");
         entity.rcvcost = row.IsNull("rcvcost") ? decimal.Zero : row.Field<decimal>("rcvcost");
         entity.qtyunavail = row.IsNull("qtyunavail") ? decimal.Zero : row.Field<decimal>("qtyunavail");
         entity.reasunavty = row.IsNull("reasunavty") ? string.Empty : row.Field<string>("reasunavty");
         entity.eachfl = row.Field<bool>("eachfl");
         entity.proddesc2 = row.IsNull("proddesc2") ? string.Empty : row.Field<string>("proddesc2");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.tallyfl = row.Field<bool>("tallyfl");
         entity.glcostrcv = row.IsNull("glcostrcv") ? decimal.Zero : row.Field<decimal>("glcostrcv");
         entity.glcostinv = row.IsNull("glcostinv") ? decimal.Zero : row.Field<decimal>("glcostinv");
         entity.wodiscamt = row.IsNull("wodiscamt") ? decimal.Zero : row.Field<decimal>("wodiscamt");
         entity.catwtfl = row.Field<bool>("catwtfl");
         entity.netrcv = row.IsNull("netrcv") ? decimal.Zero : row.Field<decimal>("netrcv");
         entity.exlatefl = row.Field<bool>("exlatefl");
         entity.tariffamt = row.IsNull("tariffamt") ? decimal.Zero : row.Field<decimal>("tariffamt");
         entity.domrcvcost = row.IsNull("domrcvcost") ? decimal.Zero : row.Field<decimal>("domrcvcost");
         entity.dominvcost = row.IsNull("dominvcost") ? decimal.Zero : row.Field<decimal>("dominvcost");
         entity.landedcost = row.IsNull("landedcost") ? decimal.Zero : row.Field<decimal>("landedcost");
         entity.addonamt1 = row.IsNull("addonamt1") ? decimal.Zero : row.Field<decimal>("addonamt1");
         entity.addonamt2 = row.IsNull("addonamt2") ? decimal.Zero : row.Field<decimal>("addonamt2");
         entity.addonamt3 = row.IsNull("addonamt3") ? decimal.Zero : row.Field<decimal>("addonamt3");
         entity.addonamt4 = row.IsNull("addonamt4") ? decimal.Zero : row.Field<decimal>("addonamt4");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.costeachfl = row.Field<bool>("costeachfl");
         entity.wmqtyrcv = row.IsNull("wmqtyrcv") ? decimal.Zero : row.Field<decimal>("wmqtyrcv");
         entity.taxabletyau = row.IsNull("taxabletyau") ? string.Empty : row.Field<string>("taxabletyau");
         entity.taxoverideau = row.Field<bool>("taxoverideau");
         entity.taxgroup = row.IsNull("taxgroup") ? 0 : row.Field<int>("taxgroup");
         entity.taxrateau = row.IsNull("taxrateau") ? decimal.Zero : row.Field<decimal>("taxrateau");
         entity.taxamt = row.IsNull("taxamt") ? decimal.Zero : row.Field<decimal>("taxamt");
         entity.unitchgfl = row.Field<bool>("unitchgfl");
         entity.reqshipdt = row.Field<DateTime?>("reqshipdt");
         entity.qtycosted = row.IsNull("qtycosted") ? decimal.Zero : row.Field<decimal>("qtycosted");
         entity.stkqtybilled = row.IsNull("stkqtybilled") ? decimal.Zero : row.Field<decimal>("stkqtybilled");
         entity.origtrf = row.IsNull("origtrf") ? decimal.Zero : row.Field<decimal>("origtrf");
         entity.unitconv = row.IsNull("unitconv") ? decimal.Zero : row.Field<decimal>("unitconv");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.ignoreltfl = row.Field<bool>("ignoreltfl");
         entity.rcvsafety = row.IsNull("rcvsafety") ? decimal.Zero : row.Field<decimal>("rcvsafety");
         entity.rcvnetavl = row.IsNull("rcvnetavl") ? decimal.Zero : row.Field<decimal>("rcvnetavl");
         entity.leadtime = row.IsNull("leadtime") ? 0 : row.Field<int>("leadtime");
         entity.recvaddfl = row.Field<bool>("recvaddfl");
         entity.contno = row.IsNull("contno") ? string.Empty : row.Field<string>("contno");
         entity.usetrackfl = row.Field<bool>("usetrackfl");
         entity.trackno = row.IsNull("trackno") ? 0 : row.Field<int>("trackno");
         entity.tracklineno = row.IsNull("tracklineno") ? 0 : row.Field<int>("tracklineno");
         entity.orgpono = row.IsNull("orgpono") ? 0 : row.Field<int>("orgpono");
         entity.orgposuf = row.IsNull("orgposuf") ? 0 : row.Field<int>("orgposuf");
         entity.warrantyfl = row.Field<bool>("warrantyfl");
         entity.correctionty = row.IsNull("correctionty") ? string.Empty : row.Field<string>("correctionty");
         entity.countrycd = row.IsNull("countrycd") ? string.Empty : row.Field<string>("countrycd");
         entity.user10 = row.IsNull("user10") ? string.Empty : row.Field<string>("user10");
         entity.user11 = row.IsNull("user11") ? string.Empty : row.Field<string>("user11");
         entity.user12 = row.IsNull("user12") ? string.Empty : row.Field<string>("user12");
         entity.user13 = row.IsNull("user13") ? string.Empty : row.Field<string>("user13");
         entity.user14 = row.IsNull("user14") ? string.Empty : row.Field<string>("user14");
         entity.user15 = row.IsNull("user15") ? string.Empty : row.Field<string>("user15");
         entity.user16 = row.IsNull("user16") ? string.Empty : row.Field<string>("user16");
         entity.user17 = row.IsNull("user17") ? string.Empty : row.Field<string>("user17");
         entity.user18 = row.IsNull("user18") ? string.Empty : row.Field<string>("user18");
         entity.user19 = row.IsNull("user19") ? string.Empty : row.Field<string>("user19");
         entity.user20 = row.IsNull("user20") ? string.Empty : row.Field<string>("user20");
         entity.user21 = row.IsNull("user21") ? string.Empty : row.Field<string>("user21");
         entity.user22 = row.IsNull("user22") ? string.Empty : row.Field<string>("user22");
         entity.user23 = row.IsNull("user23") ? string.Empty : row.Field<string>("user23");
         entity.user24 = row.IsNull("user24") ? string.Empty : row.Field<string>("user24");
         entity.contractno = row.IsNull("contractno") ? string.Empty : row.Field<string>("contractno");
         entity.pdsvcrecno = row.IsNull("pdsvcrecno") ? 0 : row.Field<int>("pdsvcrecno");
         entity.ackdt = row.Field<DateTime?>("ackdt");
         entity.ackrsn = row.IsNull("ackrsn") ? string.Empty : row.Field<string>("ackrsn");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.ncnr = row.IsNull("ncnr") ? string.Empty : row.Field<string>("ncnr");
         entity.countryoforigin = row.IsNull("countryoforigin") ? string.Empty : row.Field<string>("countryoforigin");
         entity.tariffcd = row.IsNull("tariffcd") ? string.Empty : row.Field<string>("tariffcd");
         entity.vendretauth = row.IsNull("vendretauth") ? string.Empty : row.Field<string>("vendretauth");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.upcid = row.IsNull("upcid") ? string.Empty : row.Field<string>("upcid");
         entity.rowID = row.Field<byte[]>("poelRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPoelBase(ref DataRow row, PoelBase entity)
      {
         row.SetField("pono", entity.pono);
         row.SetField("posuf", entity.posuf);
         row.SetField("whse", entity.whse);
         row.SetField("transtype", entity.transtype);
         row.SetField("lineno", entity.lineno);
         row.SetField("stkqtyord", entity.stkqtyord);
         row.SetField("cono", entity.cono);
         row.SetField("proddesc", entity.proddesc);
         row.SetField("unit", entity.unit);
         row.SetField("buyer", entity.buyer);
         row.SetField("transdt", entity.transdt);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("operinit", entity.operinit);
         row.SetField("shipprod", entity.shipprod);
         row.SetField("transtm", entity.transtm);
         row.SetField("stkqtyrcv", entity.stkqtyrcv);
         row.SetField("price", entity.price);
         row.SetField("prodline", entity.prodline);
         row.SetField("vendno", entity.vendno);
         row.SetField("botype", entity.botype);
         row.SetField("netamt", entity.netamt);
         row.SetField("reqprod", entity.reqprod);
         row.SetField("weight", entity.weight);
         row.SetField("cubes", entity.cubes);
         row.SetField("origcubes", entity.origcubes);
         row.SetField("origweight", entity.origweight);
         row.SetField("notimeschg", entity.notimeschg);
         row.SetField("statustype", entity.statustype);
         row.SetField("leadoverty", entity.leadoverty);
         row.SetField("icspecrecno", entity.icspecrecno);
         row.SetField("printfl", entity.printfl);
         row.SetField("sxextractdt", entity.sxextractdt);
         row.SetField("chrgqty", entity.chrgqty);
         row.SetField("origduedt", entity.origduedt);
         row.SetField("expshipdt", entity.expshipdt);
         row.SetField("bono", entity.bono);
         row.SetField("vafakeprodfl", entity.vafakeprodfl);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("nosnlots", entity.nosnlots);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("prevqtyord", entity.prevqtyord);
         row.SetField("commentfl", entity.commentfl);
         row.SetField("duedt", entity.duedt);
         row.SetField("invcost", entity.invcost);
         row.SetField("unitoverfl", entity.unitoverfl);
         row.SetField("priceoverfl", entity.priceoverfl);
         row.SetField("stkqtyoverfl", entity.stkqtyoverfl);
         row.SetField("qtyord", entity.qtyord);
         row.SetField("qtyrcv", entity.qtyrcv);
         row.SetField("shipfmno", entity.shipfmno);
         row.SetField("qtyrel", entity.qtyrel);
         row.SetField("costoverfl", entity.costoverfl);
         row.SetField("nonstockty", entity.nonstockty);
         row.SetField("rcvcost", entity.rcvcost);
         row.SetField("qtyunavail", entity.qtyunavail);
         row.SetField("reasunavty", entity.reasunavty);
         row.SetField("eachfl", entity.eachfl);
         row.SetField("proddesc2", entity.proddesc2);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("tallyfl", entity.tallyfl);
         row.SetField("glcostrcv", entity.glcostrcv);
         row.SetField("glcostinv", entity.glcostinv);
         row.SetField("wodiscamt", entity.wodiscamt);
         row.SetField("catwtfl", entity.catwtfl);
         row.SetField("netrcv", entity.netrcv);
         row.SetField("exlatefl", entity.exlatefl);
         row.SetField("tariffamt", entity.tariffamt);
         row.SetField("domrcvcost", entity.domrcvcost);
         row.SetField("dominvcost", entity.dominvcost);
         row.SetField("landedcost", entity.landedcost);
         row.SetField("addonamt1", entity.addonamt1);
         row.SetField("addonamt2", entity.addonamt2);
         row.SetField("addonamt3", entity.addonamt3);
         row.SetField("addonamt4", entity.addonamt4);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("costeachfl", entity.costeachfl);
         row.SetField("wmqtyrcv", entity.wmqtyrcv);
         row.SetField("taxabletyau", entity.taxabletyau);
         row.SetField("taxoverideau", entity.taxoverideau);
         row.SetField("taxgroup", entity.taxgroup);
         row.SetField("taxrateau", entity.taxrateau);
         row.SetField("taxamt", entity.taxamt);
         row.SetField("unitchgfl", entity.unitchgfl);
         row.SetField("reqshipdt", entity.reqshipdt);
         row.SetField("qtycosted", entity.qtycosted);
         row.SetField("stkqtybilled", entity.stkqtybilled);
         row.SetField("origtrf", entity.origtrf);
         row.SetField("unitconv", entity.unitconv);
         row.SetField("transproc", entity.transproc);
         row.SetField("ignoreltfl", entity.ignoreltfl);
         row.SetField("rcvsafety", entity.rcvsafety);
         row.SetField("rcvnetavl", entity.rcvnetavl);
         row.SetField("leadtime", entity.leadtime);
         row.SetField("recvaddfl", entity.recvaddfl);
         row.SetField("contno", entity.contno);
         row.SetField("usetrackfl", entity.usetrackfl);
         row.SetField("trackno", entity.trackno);
         row.SetField("tracklineno", entity.tracklineno);
         row.SetField("orgpono", entity.orgpono);
         row.SetField("orgposuf", entity.orgposuf);
         row.SetField("warrantyfl", entity.warrantyfl);
         row.SetField("correctionty", entity.correctionty);
         row.SetField("countrycd", entity.countrycd);
         row.SetField("user10", entity.user10);
         row.SetField("user11", entity.user11);
         row.SetField("user12", entity.user12);
         row.SetField("user13", entity.user13);
         row.SetField("user14", entity.user14);
         row.SetField("user15", entity.user15);
         row.SetField("user16", entity.user16);
         row.SetField("user17", entity.user17);
         row.SetField("user18", entity.user18);
         row.SetField("user19", entity.user19);
         row.SetField("user20", entity.user20);
         row.SetField("user21", entity.user21);
         row.SetField("user22", entity.user22);
         row.SetField("user23", entity.user23);
         row.SetField("user24", entity.user24);
         row.SetField("contractno", entity.contractno);
         row.SetField("pdsvcrecno", entity.pdsvcrecno);
         row.SetField("ackdt", entity.ackdt);
         row.SetField("ackrsn", entity.ackrsn);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("ncnr", entity.ncnr);
         row.SetField("countryoforigin", entity.countryoforigin);
         row.SetField("tariffcd", entity.tariffcd);
         row.SetField("vendretauth", entity.vendretauth);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("upcid", entity.upcid);
         row.SetField("poelRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, PoelBase entity)
      {
         row.SetField("pono", entity.pono);
         row.SetField("posuf", entity.posuf);
         row.SetField("lineno", entity.lineno);
         row.SetField("cono", entity.cono);
         row.SetField("poelRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	