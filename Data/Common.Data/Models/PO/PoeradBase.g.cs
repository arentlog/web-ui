//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.PO
{
   /// <summary>
   /// Purchase Order Acceptance Warehouse Detail
   /// </summary>
   
   public partial class PoeradBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Report #
      /// </summary>
      [Key,Order]
      public int reportno { get; set; }

      /// <summary>
      /// Ln#
      /// </summary>
      [Key,Order]
      public int lineno { get; set; }

      /// <summary>
      /// Seq#
      /// </summary>
      [Key,Order]
      public int seqno { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Stk Qty Ord
      /// </summary>
      public decimal stkqtyord { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Product Line
      /// </summary>
      [StringValidationAttribute]
      public string prodline { get; set; }

      /// <summary>
      /// Quantity
      /// </summary>
      public decimal qtyord { get; set; }

      /// <summary>
      /// Forecast Month 1
      /// </summary>
      public decimal frcstamt1 { get; set; }

      /// <summary>
      /// Forecast Month 2
      /// </summary>
      public decimal frcstamt2 { get; set; }

      /// <summary>
      /// Forecast Month 3
      /// </summary>
      public decimal frcstamt3 { get; set; }

      /// <summary>
      /// Forecast Month 4
      /// </summary>
      public decimal frcstamt4 { get; set; }

      /// <summary>
      /// Forecast Month 5
      /// </summary>
      public decimal frcstamt5 { get; set; }

      /// <summary>
      /// Forecast Month 6
      /// </summary>
      public decimal frcstamt6 { get; set; }

      /// <summary>
      /// Forecast Month 7
      /// </summary>
      public decimal frcstamt7 { get; set; }

      /// <summary>
      /// Forecast Month 8
      /// </summary>
      public decimal frcstamt8 { get; set; }

      /// <summary>
      /// Forecast Month 9
      /// </summary>
      public decimal frcstamt9 { get; set; }

      /// <summary>
      /// Forecast Month 10
      /// </summary>
      public decimal frcstamt10 { get; set; }

      /// <summary>
      /// Forecast Month 11
      /// </summary>
      public decimal frcstamt11 { get; set; }

      /// <summary>
      /// Forecast Month 12
      /// </summary>
      public decimal frcstamt12 { get; set; }

      /// <summary>
      /// Start Month
      /// </summary>
      public int startmth { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildPoeradBaseFromRow<T>(DataRow row) where T:PoeradBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.reportno = row.IsNull("reportno") ? 0 : row.Field<int>("reportno");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.stkqtyord = row.IsNull("stkqtyord") ? decimal.Zero : row.Field<decimal>("stkqtyord");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.qtyord = row.IsNull("qtyord") ? decimal.Zero : row.Field<decimal>("qtyord");
         entity.frcstamt1 = row.IsNull("frcstamt1") ? decimal.Zero : row.Field<decimal>("frcstamt1");
         entity.frcstamt2 = row.IsNull("frcstamt2") ? decimal.Zero : row.Field<decimal>("frcstamt2");
         entity.frcstamt3 = row.IsNull("frcstamt3") ? decimal.Zero : row.Field<decimal>("frcstamt3");
         entity.frcstamt4 = row.IsNull("frcstamt4") ? decimal.Zero : row.Field<decimal>("frcstamt4");
         entity.frcstamt5 = row.IsNull("frcstamt5") ? decimal.Zero : row.Field<decimal>("frcstamt5");
         entity.frcstamt6 = row.IsNull("frcstamt6") ? decimal.Zero : row.Field<decimal>("frcstamt6");
         entity.frcstamt7 = row.IsNull("frcstamt7") ? decimal.Zero : row.Field<decimal>("frcstamt7");
         entity.frcstamt8 = row.IsNull("frcstamt8") ? decimal.Zero : row.Field<decimal>("frcstamt8");
         entity.frcstamt9 = row.IsNull("frcstamt9") ? decimal.Zero : row.Field<decimal>("frcstamt9");
         entity.frcstamt10 = row.IsNull("frcstamt10") ? decimal.Zero : row.Field<decimal>("frcstamt10");
         entity.frcstamt11 = row.IsNull("frcstamt11") ? decimal.Zero : row.Field<decimal>("frcstamt11");
         entity.frcstamt12 = row.IsNull("frcstamt12") ? decimal.Zero : row.Field<decimal>("frcstamt12");
         entity.startmth = row.IsNull("startmth") ? 0 : row.Field<int>("startmth");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("poeradRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPoeradBase(ref DataRow row, PoeradBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("reportno", entity.reportno);
         row.SetField("lineno", entity.lineno);
         row.SetField("seqno", entity.seqno);
         row.SetField("whse", entity.whse);
         row.SetField("stkqtyord", entity.stkqtyord);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("prodline", entity.prodline);
         row.SetField("qtyord", entity.qtyord);
         row.SetField("frcstamt1", entity.frcstamt1);
         row.SetField("frcstamt2", entity.frcstamt2);
         row.SetField("frcstamt3", entity.frcstamt3);
         row.SetField("frcstamt4", entity.frcstamt4);
         row.SetField("frcstamt5", entity.frcstamt5);
         row.SetField("frcstamt6", entity.frcstamt6);
         row.SetField("frcstamt7", entity.frcstamt7);
         row.SetField("frcstamt8", entity.frcstamt8);
         row.SetField("frcstamt9", entity.frcstamt9);
         row.SetField("frcstamt10", entity.frcstamt10);
         row.SetField("frcstamt11", entity.frcstamt11);
         row.SetField("frcstamt12", entity.frcstamt12);
         row.SetField("startmth", entity.startmth);
         row.SetField("transproc", entity.transproc);
         row.SetField("poeradRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, PoeradBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("reportno", entity.reportno);
         row.SetField("lineno", entity.lineno);
         row.SetField("seqno", entity.seqno);
         row.SetField("whse", entity.whse);
         row.SetField("poeradRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	