//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SL
{
   /// <summary>
   /// Supplier Link Setup New Item Defaults
   /// </summary>
   
   public partial class SlsnBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Action
      /// </summary>
      [StringValidationAttribute]
      public string charactionty1 { get; set; }
      [StringValidationAttribute]
      public string charactionty2 { get; set; }
      [StringValidationAttribute]
      public string charactionty3 { get; set; }
      [StringValidationAttribute]
      public string charactionty4 { get; set; }
      [StringValidationAttribute]
      public string charactionty5 { get; set; }
      [StringValidationAttribute]
      public string charactionty6 { get; set; }

      /// <summary>
      /// Find Character
      /// </summary>
      [StringValidationAttribute]
      public string charfind1 { get; set; }
      [StringValidationAttribute]
      public string charfind2 { get; set; }
      [StringValidationAttribute]
      public string charfind3 { get; set; }
      [StringValidationAttribute]
      public string charfind4 { get; set; }
      [StringValidationAttribute]
      public string charfind5 { get; set; }
      [StringValidationAttribute]
      public string charfind6 { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [StringValidationAttribute]
      public string charfieldty1 { get; set; }
      [StringValidationAttribute]
      public string charfieldty2 { get; set; }
      [StringValidationAttribute]
      public string charfieldty3 { get; set; }
      [StringValidationAttribute]
      public string charfieldty4 { get; set; }
      [StringValidationAttribute]
      public string charfieldty5 { get; set; }
      [StringValidationAttribute]
      public string charfieldty6 { get; set; }

      /// <summary>
      /// Replace Character
      /// </summary>
      [StringValidationAttribute]
      public string charrepl1 { get; set; }
      [StringValidationAttribute]
      public string charrepl2 { get; set; }
      [StringValidationAttribute]
      public string charrepl3 { get; set; }
      [StringValidationAttribute]
      public string charrepl4 { get; set; }
      [StringValidationAttribute]
      public string charrepl5 { get; set; }
      [StringValidationAttribute]
      public string charrepl6 { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      public int cono { get; set; }

      /// <summary>
      /// Description 2
      /// </summary>
      [StringValidationAttribute]
      public string descrip2txt { get; set; }

      /// <summary>
      /// Desc 2 Code
      /// </summary>
      [StringValidationAttribute]
      public string descrip2cd { get; set; }

      /// <summary>
      /// ICSC Create
      /// </summary>
      public bool icscfl { get; set; }

      /// <summary>
      /// ICSP Create
      /// </summary>
      public bool icspfl { get; set; }

      /// <summary>
      /// ICSW Create
      /// </summary>
      public bool icswfl { get; set; }

      /// <summary>
      /// Import Type
      /// </summary>
      [StringValidationAttribute]
      public string imptype { get; set; }

      /// <summary>
      /// Line Code
      /// </summary>
      [StringValidationAttribute]
      public string linecd { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Price On
      /// </summary>
      [StringValidationAttribute]
      public string priceonty { get; set; }

      /// <summary>
      /// Price Type
      /// </summary>
      [StringValidationAttribute]
      public string pricetype { get; set; }

      /// <summary>
      /// Category
      /// </summary>
      [StringValidationAttribute]
      public string prodcat { get; set; }

      /// <summary>
      /// Product Line
      /// </summary>
      [StringValidationAttribute]
      public string prodline { get; set; }

      /// <summary>
      /// Product Prefix Space
      /// </summary>
      public bool prodpreffl { get; set; }

      /// <summary>
      /// Product Prefix
      /// </summary>
      [StringValidationAttribute]
      public string prodprefix { get; set; }

      /// <summary>
      /// Product Suffix Space
      /// </summary>
      public bool prodsuffl { get; set; }

      /// <summary>
      /// Product Suffix
      /// </summary>
      [StringValidationAttribute]
      public string prodsuffix { get; set; }

      /// <summary>
      /// Supplier Group
      /// </summary>
      [StringValidationAttribute]
      public string slgroup { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Vendor Code
      /// </summary>
      [StringValidationAttribute]
      public string vendcd { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// Description1
      /// </summary>
      [StringValidationAttribute]
      public string descrip1cd { get; set; }

      /// <summary>
      /// Constant2
      /// </summary>
      [StringValidationAttribute]
      public string descrip1txt { get; set; }

      /// <summary>
      /// LookupCode
      /// </summary>
      [StringValidationAttribute]
      public string lookupcd { get; set; }

      /// <summary>
      /// Lookup Name
      /// </summary>
      [StringValidationAttribute]
      public string lookuptxt { get; set; }

      /// <summary>
      /// Use Price Group
      /// </summary>
      [StringValidationAttribute]
      public string pgrpty { get; set; }

      /// <summary>
      /// Price Sheet
      /// </summary>
      [StringValidationAttribute]
      public string pdspsty { get; set; }

      /// <summary>
      /// Vendor Price
      /// </summary>
      [StringValidationAttribute]
      public string pdsvty { get; set; }

      /// <summary>
      /// Product Price
      /// </summary>
      public bool pdscfl { get; set; }

      /// <summary>
      /// T/S Comm Code
      /// </summary>
      public bool pcatlinecdfl { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Rebate Type
      /// </summary>
      [StringValidationAttribute]
      public string rebatety { get; set; }

      /// <summary>
      /// Rebate Sub Type
      /// </summary>
      [StringValidationAttribute]
      public string rebsubty { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Description 3
      /// </summary>
      [StringValidationAttribute]
      public string descrip3txt { get; set; }

      /// <summary>
      /// Desc 3 Code
      /// </summary>
      [StringValidationAttribute]
      public string descrip3cd { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildSlsnBaseFromRow<T>(DataRow row) where T:SlsnBase, new()
      {
         T entity = new T();
         entity.charactionty1 = row.IsNull("charactionty1") ? string.Empty : row.Field<string>("charactionty1");
         entity.charactionty2 = row.IsNull("charactionty2") ? string.Empty : row.Field<string>("charactionty2");
         entity.charactionty3 = row.IsNull("charactionty3") ? string.Empty : row.Field<string>("charactionty3");
         entity.charactionty4 = row.IsNull("charactionty4") ? string.Empty : row.Field<string>("charactionty4");
         entity.charactionty5 = row.IsNull("charactionty5") ? string.Empty : row.Field<string>("charactionty5");
         entity.charactionty6 = row.IsNull("charactionty6") ? string.Empty : row.Field<string>("charactionty6");
         entity.charfind1 = row.IsNull("charfind1") ? string.Empty : row.Field<string>("charfind1");
         entity.charfind2 = row.IsNull("charfind2") ? string.Empty : row.Field<string>("charfind2");
         entity.charfind3 = row.IsNull("charfind3") ? string.Empty : row.Field<string>("charfind3");
         entity.charfind4 = row.IsNull("charfind4") ? string.Empty : row.Field<string>("charfind4");
         entity.charfind5 = row.IsNull("charfind5") ? string.Empty : row.Field<string>("charfind5");
         entity.charfind6 = row.IsNull("charfind6") ? string.Empty : row.Field<string>("charfind6");
         entity.charfieldty1 = row.IsNull("charfieldty1") ? string.Empty : row.Field<string>("charfieldty1");
         entity.charfieldty2 = row.IsNull("charfieldty2") ? string.Empty : row.Field<string>("charfieldty2");
         entity.charfieldty3 = row.IsNull("charfieldty3") ? string.Empty : row.Field<string>("charfieldty3");
         entity.charfieldty4 = row.IsNull("charfieldty4") ? string.Empty : row.Field<string>("charfieldty4");
         entity.charfieldty5 = row.IsNull("charfieldty5") ? string.Empty : row.Field<string>("charfieldty5");
         entity.charfieldty6 = row.IsNull("charfieldty6") ? string.Empty : row.Field<string>("charfieldty6");
         entity.charrepl1 = row.IsNull("charrepl1") ? string.Empty : row.Field<string>("charrepl1");
         entity.charrepl2 = row.IsNull("charrepl2") ? string.Empty : row.Field<string>("charrepl2");
         entity.charrepl3 = row.IsNull("charrepl3") ? string.Empty : row.Field<string>("charrepl3");
         entity.charrepl4 = row.IsNull("charrepl4") ? string.Empty : row.Field<string>("charrepl4");
         entity.charrepl5 = row.IsNull("charrepl5") ? string.Empty : row.Field<string>("charrepl5");
         entity.charrepl6 = row.IsNull("charrepl6") ? string.Empty : row.Field<string>("charrepl6");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.descrip2txt = row.IsNull("descrip2txt") ? string.Empty : row.Field<string>("descrip2txt");
         entity.descrip2cd = row.IsNull("descrip2cd") ? string.Empty : row.Field<string>("descrip2cd");
         entity.icscfl = row.Field<bool>("icscfl");
         entity.icspfl = row.Field<bool>("icspfl");
         entity.icswfl = row.Field<bool>("icswfl");
         entity.imptype = row.IsNull("imptype") ? string.Empty : row.Field<string>("imptype");
         entity.linecd = row.IsNull("linecd") ? string.Empty : row.Field<string>("linecd");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.priceonty = row.IsNull("priceonty") ? string.Empty : row.Field<string>("priceonty");
         entity.pricetype = row.IsNull("pricetype") ? string.Empty : row.Field<string>("pricetype");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.prodpreffl = row.Field<bool>("prodpreffl");
         entity.prodprefix = row.IsNull("prodprefix") ? string.Empty : row.Field<string>("prodprefix");
         entity.prodsuffl = row.Field<bool>("prodsuffl");
         entity.prodsuffix = row.IsNull("prodsuffix") ? string.Empty : row.Field<string>("prodsuffix");
         entity.slgroup = row.IsNull("slgroup") ? string.Empty : row.Field<string>("slgroup");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.vendcd = row.IsNull("vendcd") ? string.Empty : row.Field<string>("vendcd");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.descrip1cd = row.IsNull("descrip1cd") ? string.Empty : row.Field<string>("descrip1cd");
         entity.descrip1txt = row.IsNull("descrip1txt") ? string.Empty : row.Field<string>("descrip1txt");
         entity.lookupcd = row.IsNull("lookupcd") ? string.Empty : row.Field<string>("lookupcd");
         entity.lookuptxt = row.IsNull("lookuptxt") ? string.Empty : row.Field<string>("lookuptxt");
         entity.pgrpty = row.IsNull("pgrpty") ? string.Empty : row.Field<string>("pgrpty");
         entity.pdspsty = row.IsNull("pdspsty") ? string.Empty : row.Field<string>("pdspsty");
         entity.pdsvty = row.IsNull("pdsvty") ? string.Empty : row.Field<string>("pdsvty");
         entity.pdscfl = row.Field<bool>("pdscfl");
         entity.pcatlinecdfl = row.Field<bool>("pcatlinecdfl");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.rebatety = row.IsNull("rebatety") ? string.Empty : row.Field<string>("rebatety");
         entity.rebsubty = row.IsNull("rebsubty") ? string.Empty : row.Field<string>("rebsubty");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.descrip3txt = row.IsNull("descrip3txt") ? string.Empty : row.Field<string>("descrip3txt");
         entity.descrip3cd = row.IsNull("descrip3cd") ? string.Empty : row.Field<string>("descrip3cd");
         entity.rowID = row.Field<byte[]>("slsnRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSlsnBase(ref DataRow row, SlsnBase entity)
      {
         row.SetField("charactionty1", entity.charactionty1);
         row.SetField("charactionty2", entity.charactionty2);
         row.SetField("charactionty3", entity.charactionty3);
         row.SetField("charactionty4", entity.charactionty4);
         row.SetField("charactionty5", entity.charactionty5);
         row.SetField("charactionty6", entity.charactionty6);
         row.SetField("charfind1", entity.charfind1);
         row.SetField("charfind2", entity.charfind2);
         row.SetField("charfind3", entity.charfind3);
         row.SetField("charfind4", entity.charfind4);
         row.SetField("charfind5", entity.charfind5);
         row.SetField("charfind6", entity.charfind6);
         row.SetField("charfieldty1", entity.charfieldty1);
         row.SetField("charfieldty2", entity.charfieldty2);
         row.SetField("charfieldty3", entity.charfieldty3);
         row.SetField("charfieldty4", entity.charfieldty4);
         row.SetField("charfieldty5", entity.charfieldty5);
         row.SetField("charfieldty6", entity.charfieldty6);
         row.SetField("charrepl1", entity.charrepl1);
         row.SetField("charrepl2", entity.charrepl2);
         row.SetField("charrepl3", entity.charrepl3);
         row.SetField("charrepl4", entity.charrepl4);
         row.SetField("charrepl5", entity.charrepl5);
         row.SetField("charrepl6", entity.charrepl6);
         row.SetField("cono", entity.cono);
         row.SetField("descrip2txt", entity.descrip2txt);
         row.SetField("descrip2cd", entity.descrip2cd);
         row.SetField("icscfl", entity.icscfl);
         row.SetField("icspfl", entity.icspfl);
         row.SetField("icswfl", entity.icswfl);
         row.SetField("imptype", entity.imptype);
         row.SetField("linecd", entity.linecd);
         row.SetField("operinit", entity.operinit);
         row.SetField("priceonty", entity.priceonty);
         row.SetField("pricetype", entity.pricetype);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("prodline", entity.prodline);
         row.SetField("prodpreffl", entity.prodpreffl);
         row.SetField("prodprefix", entity.prodprefix);
         row.SetField("prodsuffl", entity.prodsuffl);
         row.SetField("prodsuffix", entity.prodsuffix);
         row.SetField("slgroup", entity.slgroup);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("vendcd", entity.vendcd);
         row.SetField("vendno", entity.vendno);
         row.SetField("descrip1cd", entity.descrip1cd);
         row.SetField("descrip1txt", entity.descrip1txt);
         row.SetField("lookupcd", entity.lookupcd);
         row.SetField("lookuptxt", entity.lookuptxt);
         row.SetField("pgrpty", entity.pgrpty);
         row.SetField("pdspsty", entity.pdspsty);
         row.SetField("pdsvty", entity.pdsvty);
         row.SetField("pdscfl", entity.pdscfl);
         row.SetField("pcatlinecdfl", entity.pcatlinecdfl);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("rebatety", entity.rebatety);
         row.SetField("rebsubty", entity.rebsubty);
         row.SetField("transproc", entity.transproc);
         row.SetField("descrip3txt", entity.descrip3txt);
         row.SetField("descrip3cd", entity.descrip3cd);
         row.SetField("slsnRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, SlsnBase entity)
      {
         row.SetField("slsnRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	