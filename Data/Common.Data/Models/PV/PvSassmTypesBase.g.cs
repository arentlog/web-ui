//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.PV
{
   /// <summary>
   /// A list of the type of container records defined
   /// </summary>
   
   public partial class PvSassmTypesBase: ModelBase, IUserFields
   {

      /// <summary>
      /// 
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string typeCode { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Key_Label
      /// </summary>
      [StringValidationAttribute]
      public string keyLabel { get; set; }

      /// <summary>
      /// Browse_Label
      /// </summary>
      [StringValidationAttribute]
      public string browseLabel { get; set; }

      /// <summary>
      /// Proc_Label
      /// </summary>
      [StringValidationAttribute]
      public string procLabel { get; set; }

      /// <summary>
      /// Run_Name
      /// </summary>
      [StringValidationAttribute]
      public string runName { get; set; }

      /// <summary>
      /// Param_Flag
      /// </summary>
      public bool paramFlag { get; set; }

      /// <summary>
      /// type_dialog
      /// </summary>
      [StringValidationAttribute]
      public string typeDialog { get; set; }

      /// <summary>
      /// origin
      /// </summary>
      [StringValidationAttribute]
      public string origin { get; set; }

      /// <summary>
      /// operinit
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Browser Label Required Flag
      /// </summary>
      public bool browseLabelReqFL { get; set; }

      /// <summary>
      /// Standard
      /// </summary>
      [StringValidationAttribute]
      public string standardty { get; set; }

      /// <summary>
      /// Key Label Required Flag
      /// </summary>
      public bool keyLabelReqFL { get; set; }

      /// <summary>
      /// Procedure Label Required Flag
      /// </summary>
      public bool procLabelReqFL { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildPvSassmTypesBaseFromRow<T>(DataRow row) where T:PvSassmTypesBase, new()
      {
         T entity = new T();
         entity.typeCode = row.IsNull("type_code") ? string.Empty : row.Field<string>("type_code");
         entity.name = row.IsNull("Name") ? string.Empty : row.Field<string>("Name");
         entity.keyLabel = row.IsNull("Key_Label") ? string.Empty : row.Field<string>("Key_Label");
         entity.browseLabel = row.IsNull("Browse_Label") ? string.Empty : row.Field<string>("Browse_Label");
         entity.procLabel = row.IsNull("Proc_Label") ? string.Empty : row.Field<string>("Proc_Label");
         entity.runName = row.IsNull("Run_Name") ? string.Empty : row.Field<string>("Run_Name");
         entity.paramFlag = row.Field<bool>("Param_Flag");
         entity.typeDialog = row.IsNull("type_dialog") ? string.Empty : row.Field<string>("type_dialog");
         entity.origin = row.IsNull("origin") ? string.Empty : row.Field<string>("origin");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.browseLabelReqFL = row.Field<bool>("Browse_Label_ReqFL");
         entity.standardty = row.IsNull("standardty") ? string.Empty : row.Field<string>("standardty");
         entity.keyLabelReqFL = row.Field<bool>("Key_Label_ReqFL");
         entity.procLabelReqFL = row.Field<bool>("Proc_Label_ReqFL");
         entity.rowID = row.Field<byte[]>("pv_sassm_typesRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPvSassmTypesBase(ref DataRow row, PvSassmTypesBase entity)
      {
         row.SetField("type_code", entity.typeCode);
         row.SetField("Name", entity.name);
         row.SetField("Key_Label", entity.keyLabel);
         row.SetField("Browse_Label", entity.browseLabel);
         row.SetField("Proc_Label", entity.procLabel);
         row.SetField("Run_Name", entity.runName);
         row.SetField("Param_Flag", entity.paramFlag);
         row.SetField("type_dialog", entity.typeDialog);
         row.SetField("origin", entity.origin);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("Browse_Label_ReqFL", entity.browseLabelReqFL);
         row.SetField("standardty", entity.standardty);
         row.SetField("Key_Label_ReqFL", entity.keyLabelReqFL);
         row.SetField("Proc_Label_ReqFL", entity.procLabelReqFL);
         row.SetField("pv_sassm_typesRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, PvSassmTypesBase entity)
      {
         row.SetField("typeCode", entity.typeCode);
         row.SetField("pv_sassm_typesRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	