//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.PV
{
   /// <summary>
   /// user field settings for all user fields on all tables
   /// </summary>
   
   public partial class PvUserfieldsBase: ModelBase, IUserFields
   {

      /// <summary>
      /// 
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string tablename { get; set; }

      /// <summary>
      /// 
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string fieldname { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// userlabel
      /// </summary>
      [StringValidationAttribute]
      public string userlabel { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// userinuse
      /// </summary>
      public bool userinuse { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// usercando
      /// </summary>
      [StringValidationAttribute]
      public string usercando { get; set; }

      /// <summary>
      /// usermin
      /// </summary>
      public int usermin { get; set; }

      /// <summary>
      /// usermax
      /// </summary>
      public int usermax { get; set; }

      /// <summary>
      /// userdatemin
      /// </summary>
      public DateTime? userdatemin { get; set; }

      /// <summary>
      /// userdatemax
      /// </summary>
      public DateTime? userdatemax { get; set; }

      /// <summary>
      /// userhelp
      /// </summary>
      [StringValidationAttribute]
      public string userhelp { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildPvUserfieldsBaseFromRow<T>(DataRow row) where T:PvUserfieldsBase, new()
      {
         T entity = new T();
         entity.tablename = row.IsNull("tablename") ? string.Empty : row.Field<string>("tablename");
         entity.fieldname = row.IsNull("fieldname") ? string.Empty : row.Field<string>("fieldname");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.userlabel = row.IsNull("userlabel") ? string.Empty : row.Field<string>("userlabel");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.userinuse = row.Field<bool>("userinuse");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.usercando = row.IsNull("usercando") ? string.Empty : row.Field<string>("usercando");
         entity.usermin = row.IsNull("usermin") ? 0 : row.Field<int>("usermin");
         entity.usermax = row.IsNull("usermax") ? 0 : row.Field<int>("usermax");
         entity.userdatemin = row.Field<DateTime?>("userdatemin");
         entity.userdatemax = row.Field<DateTime?>("userdatemax");
         entity.userhelp = row.IsNull("userhelp") ? string.Empty : row.Field<string>("userhelp");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("pv_userfieldsRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPvUserfieldsBase(ref DataRow row, PvUserfieldsBase entity)
      {
         row.SetField("tablename", entity.tablename);
         row.SetField("fieldname", entity.fieldname);
         row.SetField("transdt", entity.transdt);
         row.SetField("userlabel", entity.userlabel);
         row.SetField("transtm", entity.transtm);
         row.SetField("userinuse", entity.userinuse);
         row.SetField("operinit", entity.operinit);
         row.SetField("usercando", entity.usercando);
         row.SetField("usermin", entity.usermin);
         row.SetField("usermax", entity.usermax);
         row.SetField("userdatemin", entity.userdatemin);
         row.SetField("userdatemax", entity.userdatemax);
         row.SetField("userhelp", entity.userhelp);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("pv_userfieldsRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, PvUserfieldsBase entity)
      {
         row.SetField("tablename", entity.tablename);
         row.SetField("fieldname", entity.fieldname);
         row.SetField("pv_userfieldsRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	