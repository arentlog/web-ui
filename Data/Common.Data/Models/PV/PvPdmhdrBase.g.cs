//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.PV
{
   /// <summary>
   /// PvPdmhdr
   /// </summary>
   
   public partial class PvPdmhdrBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Set ID
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string setID { get; set; }

      /// <summary>
      /// 
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Source table
      /// </summary>
      [StringValidationAttribute]
      public string source { get; set; }

      /// <summary>
      /// Destination Label
      /// </summary>
      [StringValidationAttribute]
      public string destination { get; set; }

      /// <summary>
      /// Create Date
      /// </summary>
      public DateTime? createDt { get; set; }

      /// <summary>
      /// Operator
      /// </summary>
      [StringValidationAttribute]
      public string operInit { get; set; }

      /// <summary>
      /// Seq
      /// </summary>
      public decimal lastSeqNo { get; set; }

      /// <summary>
      /// Vend Type
      /// </summary>
      [StringValidationAttribute]
      public string vendType { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [StringValidationAttribute]
      public string pTypeSource { get; set; }

      /// <summary>
      /// Prod Line
      /// </summary>
      [StringValidationAttribute]
      public string line { get; set; }

      /// <summary>
      /// Prc Ty
      /// </summary>
      [StringValidationAttribute]
      public string prodPrcTy { get; set; }

      /// <summary>
      /// Fam
      /// </summary>
      [StringValidationAttribute]
      public string family { get; set; }

      /// <summary>
      /// Class
      /// </summary>
      [StringValidationAttribute]
      public string @class { get; set; }

      /// <summary>
      /// Reb Type
      /// </summary>
      [StringValidationAttribute]
      public string rebateTy { get; set; }

      /// <summary>
      /// Reb Sub-type
      /// </summary>
      [StringValidationAttribute]
      public string rebSubTy { get; set; }

      /// <summary>
      /// Reb Code
      /// </summary>
      [StringValidationAttribute]
      public string rebateCd { get; set; }

      /// <summary>
      /// DS
      /// </summary>
      [StringValidationAttribute]
      public string dropshipty { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string description { get; set; }

      /// <summary>
      /// Calc Type
      /// </summary>
      [StringValidationAttribute]
      public string rebCalcTy { get; set; }

      /// <summary>
      /// Basis
      /// </summary>
      [StringValidationAttribute]
      public string rebBasedOn { get; set; }

      /// <summary>
      /// Down To
      /// </summary>
      [StringValidationAttribute]
      public string rebDownTo { get; set; }

      /// <summary>
      /// Prod Cat
      /// </summary>
      [StringValidationAttribute]
      public string prodCat { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Ship To
      /// </summary>
      [StringValidationAttribute]
      public string shipTo { get; set; }

      /// <summary>
      /// Cust Type
      /// </summary>
      [StringValidationAttribute]
      public string custType { get; set; }

      /// <summary>
      /// Prod
      /// </summary>
      [StringValidationAttribute]
      public string prod { get; set; }

      /// <summary>
      /// Def Price
      /// </summary>
      [StringValidationAttribute]
      public string defPrice { get; set; }

      /// <summary>
      /// Def Whse
      /// </summary>
      [StringValidationAttribute]
      public string defWhse { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Vendor
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// Cap Rebate
      /// </summary>
      public bool rebateCap { get; set; }

      /// <summary>
      /// Percent
      /// </summary>
      public decimal rebPercent { get; set; }

      /// <summary>
      /// Amount
      /// </summary>
      public decimal rebAmount { get; set; }

      /// <summary>
      /// Customer
      /// </summary>
      public decimal custno { get; set; }

      /// <summary>
      /// Begin From
      /// </summary>
      public DateTime? startFrom { get; set; }

      /// <summary>
      /// Begin To
      /// </summary>
      public DateTime? startTo { get; set; }

      /// <summary>
      /// End From
      /// </summary>
      public DateTime? endFrom { get; set; }

      /// <summary>
      /// End To
      /// </summary>
      public DateTime? endTo { get; set; }

      /// <summary>
      /// Add
      /// </summary>
      public int addCode { get; set; }

      /// <summary>
      /// Update
      /// </summary>
      public int updType { get; set; }

      /// <summary>
      /// Begin
      /// </summary>
      public DateTime? defStart { get; set; }

      /// <summary>
      /// End
      /// </summary>
      public DateTime? defend { get; set; }

      /// <summary>
      /// Exc PDSC
      /// </summary>
      public bool excludePDSC1 { get; set; }
      public bool excludePDSC2 { get; set; }
      public bool excludePDSC3 { get; set; }
      public bool excludePDSC4 { get; set; }
      public bool excludePDSC5 { get; set; }
      public bool excludePDSC6 { get; set; }
      public bool excludePDSC7 { get; set; }
      public bool excludePDSC8 { get; set; }

      /// <summary>
      /// Del
      /// </summary>
      public bool delduringupd { get; set; }

      /// <summary>
      /// Acct Upd
      /// </summary>
      public bool acctupdfl { get; set; }

      /// <summary>
      /// Sort Selection
      /// </summary>
      [StringValidationAttribute]
      public string sortselection { get; set; }

      /// <summary>
      /// pv_pdmhdr.stagecd
      /// </summary>
      public int stagecd { get; set; }

      /// <summary>
      /// Store As
      /// </summary>
      [StringValidationAttribute]
      public string reportnm { get; set; }

      /// <summary>
      /// Contract #
      /// </summary>
      [StringValidationAttribute]
      public string contractno { get; set; }

      /// <summary>
      /// Beginning Product
      /// </summary>
      [StringValidationAttribute]
      public string begprod { get; set; }

      /// <summary>
      /// Ending Product
      /// </summary>
      [StringValidationAttribute]
      public string endprod { get; set; }

      /// <summary>
      /// Product Line
      /// </summary>
      [StringValidationAttribute]
      public string prodline { get; set; }

      /// <summary>
      /// Customer Reb Type
      /// </summary>
      [StringValidationAttribute]
      public string custrebty { get; set; }

      /// <summary>
      /// Modifier Identifier
      /// </summary>
      [StringValidationAttribute]
      public string modifiernm { get; set; }

      /// <summary>
      /// Allow With Line Rebate
      /// </summary>
      public bool modifierrebfl { get; set; }

      /// <summary>
      /// Last Used Date
      /// </summary>
      public DateTime? lastuseddt { get; set; }

      /// <summary>
      /// Price Rebate Flag
      /// </summary>
      public bool pricerebfl { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildPvPdmhdrBaseFromRow<T>(DataRow row) where T:PvPdmhdrBase, new()
      {
         T entity = new T();
         entity.setID = row.IsNull("SetID") ? string.Empty : row.Field<string>("SetID");
         entity.source = row.IsNull("Source") ? string.Empty : row.Field<string>("Source");
         entity.destination = row.IsNull("Destination") ? string.Empty : row.Field<string>("Destination");
         entity.createDt = row.Field<DateTime?>("CreateDt");
         entity.operInit = row.IsNull("OperInit") ? string.Empty : row.Field<string>("OperInit");
         entity.lastSeqNo = row.IsNull("LastSeqNo") ? decimal.Zero : row.Field<decimal>("LastSeqNo");
         entity.vendType = row.IsNull("VendType") ? string.Empty : row.Field<string>("VendType");
         entity.pTypeSource = row.IsNull("PTypeSource") ? string.Empty : row.Field<string>("PTypeSource");
         entity.line = row.IsNull("Line") ? string.Empty : row.Field<string>("Line");
         entity.prodPrcTy = row.IsNull("ProdPrcTy") ? string.Empty : row.Field<string>("ProdPrcTy");
         entity.family = row.IsNull("Family") ? string.Empty : row.Field<string>("Family");
         entity.@class = row.IsNull("Class") ? string.Empty : row.Field<string>("Class");
         entity.rebateTy = row.IsNull("RebateTy") ? string.Empty : row.Field<string>("RebateTy");
         entity.rebSubTy = row.IsNull("RebSubTy") ? string.Empty : row.Field<string>("RebSubTy");
         entity.rebateCd = row.IsNull("RebateCd") ? string.Empty : row.Field<string>("RebateCd");
         entity.dropshipty = row.IsNull("dropshipty") ? string.Empty : row.Field<string>("dropshipty");
         entity.cono = row.IsNull("Cono") ? 0 : row.Field<int>("Cono");
         entity.description = row.IsNull("Description") ? string.Empty : row.Field<string>("Description");
         entity.rebCalcTy = row.IsNull("RebCalcTy") ? string.Empty : row.Field<string>("RebCalcTy");
         entity.rebBasedOn = row.IsNull("RebBasedOn") ? string.Empty : row.Field<string>("RebBasedOn");
         entity.rebDownTo = row.IsNull("RebDownTo") ? string.Empty : row.Field<string>("RebDownTo");
         entity.prodCat = row.IsNull("ProdCat") ? string.Empty : row.Field<string>("ProdCat");
         entity.whse = row.IsNull("Whse") ? string.Empty : row.Field<string>("Whse");
         entity.shipTo = row.IsNull("ShipTo") ? string.Empty : row.Field<string>("ShipTo");
         entity.custType = row.IsNull("CustType") ? string.Empty : row.Field<string>("CustType");
         entity.prod = row.IsNull("Prod") ? string.Empty : row.Field<string>("Prod");
         entity.defPrice = row.IsNull("DefPrice") ? string.Empty : row.Field<string>("DefPrice");
         entity.defWhse = row.IsNull("DefWhse") ? string.Empty : row.Field<string>("DefWhse");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.rebateCap = row.Field<bool>("RebateCap");
         entity.rebPercent = row.IsNull("RebPercent") ? decimal.Zero : row.Field<decimal>("RebPercent");
         entity.rebAmount = row.IsNull("RebAmount") ? decimal.Zero : row.Field<decimal>("RebAmount");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.startFrom = row.Field<DateTime?>("StartFrom");
         entity.startTo = row.Field<DateTime?>("StartTo");
         entity.endFrom = row.Field<DateTime?>("EndFrom");
         entity.endTo = row.Field<DateTime?>("EndTo");
         entity.addCode = row.IsNull("AddCode") ? 0 : row.Field<int>("AddCode");
         entity.updType = row.IsNull("UpdType") ? 0 : row.Field<int>("UpdType");
         entity.defStart = row.Field<DateTime?>("DefStart");
         entity.defend = row.Field<DateTime?>("defend");
         entity.excludePDSC1 = row.Field<bool>("ExcludePDSC1");
         entity.excludePDSC2 = row.Field<bool>("ExcludePDSC2");
         entity.excludePDSC3 = row.Field<bool>("ExcludePDSC3");
         entity.excludePDSC4 = row.Field<bool>("ExcludePDSC4");
         entity.excludePDSC5 = row.Field<bool>("ExcludePDSC5");
         entity.excludePDSC6 = row.Field<bool>("ExcludePDSC6");
         entity.excludePDSC7 = row.Field<bool>("ExcludePDSC7");
         entity.excludePDSC8 = row.Field<bool>("ExcludePDSC8");
         entity.delduringupd = row.Field<bool>("delduringupd");
         entity.acctupdfl = row.Field<bool>("acctupdfl");
         entity.sortselection = row.IsNull("sortselection") ? string.Empty : row.Field<string>("sortselection");
         entity.stagecd = row.IsNull("stagecd") ? 0 : row.Field<int>("stagecd");
         entity.reportnm = row.IsNull("reportnm") ? string.Empty : row.Field<string>("reportnm");
         entity.contractno = row.IsNull("contractno") ? string.Empty : row.Field<string>("contractno");
         entity.begprod = row.IsNull("begprod") ? string.Empty : row.Field<string>("begprod");
         entity.endprod = row.IsNull("endprod") ? string.Empty : row.Field<string>("endprod");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.custrebty = row.IsNull("custrebty") ? string.Empty : row.Field<string>("custrebty");
         entity.modifiernm = row.IsNull("modifiernm") ? string.Empty : row.Field<string>("modifiernm");
         entity.modifierrebfl = row.Field<bool>("modifierrebfl");
         entity.lastuseddt = row.Field<DateTime?>("lastuseddt");
         entity.pricerebfl = row.Field<bool>("pricerebfl");
         entity.rowID = row.Field<byte[]>("pv_pdmhdrRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPvPdmhdrBase(ref DataRow row, PvPdmhdrBase entity)
      {
         row.SetField("SetID", entity.setID);
         row.SetField("Source", entity.source);
         row.SetField("Destination", entity.destination);
         row.SetField("CreateDt", entity.createDt);
         row.SetField("OperInit", entity.operInit);
         row.SetField("LastSeqNo", entity.lastSeqNo);
         row.SetField("VendType", entity.vendType);
         row.SetField("PTypeSource", entity.pTypeSource);
         row.SetField("Line", entity.line);
         row.SetField("ProdPrcTy", entity.prodPrcTy);
         row.SetField("Family", entity.family);
         row.SetField("Class", entity.@class);
         row.SetField("RebateTy", entity.rebateTy);
         row.SetField("RebSubTy", entity.rebSubTy);
         row.SetField("RebateCd", entity.rebateCd);
         row.SetField("dropshipty", entity.dropshipty);
         row.SetField("Cono", entity.cono);
         row.SetField("Description", entity.description);
         row.SetField("RebCalcTy", entity.rebCalcTy);
         row.SetField("RebBasedOn", entity.rebBasedOn);
         row.SetField("RebDownTo", entity.rebDownTo);
         row.SetField("ProdCat", entity.prodCat);
         row.SetField("Whse", entity.whse);
         row.SetField("ShipTo", entity.shipTo);
         row.SetField("CustType", entity.custType);
         row.SetField("Prod", entity.prod);
         row.SetField("DefPrice", entity.defPrice);
         row.SetField("DefWhse", entity.defWhse);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("vendno", entity.vendno);
         row.SetField("RebateCap", entity.rebateCap);
         row.SetField("RebPercent", entity.rebPercent);
         row.SetField("RebAmount", entity.rebAmount);
         row.SetField("custno", entity.custno);
         row.SetField("StartFrom", entity.startFrom);
         row.SetField("StartTo", entity.startTo);
         row.SetField("EndFrom", entity.endFrom);
         row.SetField("EndTo", entity.endTo);
         row.SetField("AddCode", entity.addCode);
         row.SetField("UpdType", entity.updType);
         row.SetField("DefStart", entity.defStart);
         row.SetField("defend", entity.defend);
         row.SetField("ExcludePDSC1", entity.excludePDSC1);
         row.SetField("ExcludePDSC2", entity.excludePDSC2);
         row.SetField("ExcludePDSC3", entity.excludePDSC3);
         row.SetField("ExcludePDSC4", entity.excludePDSC4);
         row.SetField("ExcludePDSC5", entity.excludePDSC5);
         row.SetField("ExcludePDSC6", entity.excludePDSC6);
         row.SetField("ExcludePDSC7", entity.excludePDSC7);
         row.SetField("ExcludePDSC8", entity.excludePDSC8);
         row.SetField("delduringupd", entity.delduringupd);
         row.SetField("acctupdfl", entity.acctupdfl);
         row.SetField("sortselection", entity.sortselection);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("reportnm", entity.reportnm);
         row.SetField("contractno", entity.contractno);
         row.SetField("begprod", entity.begprod);
         row.SetField("endprod", entity.endprod);
         row.SetField("prodline", entity.prodline);
         row.SetField("custrebty", entity.custrebty);
         row.SetField("modifiernm", entity.modifiernm);
         row.SetField("modifierrebfl", entity.modifierrebfl);
         row.SetField("lastuseddt", entity.lastuseddt);
         row.SetField("pricerebfl", entity.pricerebfl);
         row.SetField("pv_pdmhdrRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, PvPdmhdrBase entity)
      {
         row.SetField("setID", entity.setID);
         row.SetField("cono", entity.cono);
         row.SetField("pv_pdmhdrRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	