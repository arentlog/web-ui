//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.PV
{
   /// <summary>
   /// SX Enterprise GUI Operator Setup
   /// </summary>
   
   public partial class PvUserBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Operator
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string oper2 { get; set; }

      /// <summary>
      /// Userid
      /// </summary>
      public string userid { get; set; }

      /// <summary>
      /// User Profile
      /// </summary>
      [StringValidationAttribute]
      public string profileName { get; set; }

      /// <summary>
      /// Arrange Browse Columns?
      /// </summary>
      public bool arrangeCols { get; set; }

      /// <summary>
      /// Add Favorites?
      /// </summary>
      public bool addFavorites { get; set; }

      /// <summary>
      /// Change Layout of Entries?
      /// </summary>
      public bool entryLayout { get; set; }

      /// <summary>
      /// Change Layout of Navigator?
      /// </summary>
      public bool navLayout { get; set; }

      /// <summary>
      /// Change layout of toolbars?
      /// </summary>
      public bool toolbarLayout { get; set; }

      /// <summary>
      /// Add/change profiles?
      /// </summary>
      public bool changeProfiles { get; set; }

      /// <summary>
      /// Change AppServer settings?
      /// </summary>
      public bool changeAppServer { get; set; }

      /// <summary>
      /// Automatic Journal Close?
      /// </summary>
      public bool autoJournalClose { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }

      /// <summary>
      /// Unlimited Web Access?
      /// </summary>
      public bool unlimitedWebAccess { get; set; }

      /// <summary>
      /// Login Source
      /// </summary>
      [StringValidationAttribute]
      public string loginSource { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Password
      /// </summary>
      public string password { get; set; }

      /// <summary>
      /// User-Name
      /// </summary>
      public string userName { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string zipcd { get; set; }

      /// <summary>
      /// Last operator
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Account Disabled
      /// </summary>
      public bool disabled { get; set; }

      /// <summary>
      /// User Must Change Password at next Login
      /// </summary>
      public bool mustChange { get; set; }

      /// <summary>
      /// User Cannot Change Password
      /// </summary>
      public bool cannotChange { get; set; }

      /// <summary>
      /// Home Phone
      /// </summary>
      [StringValidationAttribute]
      public string homeph { get; set; }

      /// <summary>
      /// Work Phone
      /// </summary>
      [StringValidationAttribute]
      public string workph { get; set; }

      /// <summary>
      /// Cell Phone
      /// </summary>
      [StringValidationAttribute]
      public string cellph { get; set; }

      /// <summary>
      /// Fax Phone
      /// </summary>
      [StringValidationAttribute]
      public string faxph { get; set; }

      /// <summary>
      /// Department
      /// </summary>
      [StringValidationAttribute]
      public string dept { get; set; }

      /// <summary>
      /// Title
      /// </summary>
      [StringValidationAttribute]
      public string jobTitle { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// email
      /// </summary>
      [StringValidationAttribute]
      public string email { get; set; }

      /// <summary>
      /// Pager
      /// </summary>
      [StringValidationAttribute]
      public string pagerph { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Max Windows
      /// </summary>
      public int maxwindows { get; set; }

      /// <summary>
      /// MaxUsers
      /// </summary>
      public int maxUsers { get; set; }

      /// <summary>
      /// Menu Set
      /// </summary>
      [StringValidationAttribute]
      public string menuSet { get; set; }

      /// <summary>
      /// AOSecurity
      /// </summary>
      [StringValidationAttribute]
      public string aOSecurity { get; set; }

      /// <summary>
      /// OK to Change Credit Mgr
      /// </summary>
      public bool seccredmgrfl { get; set; }

      /// <summary>
      /// Standard Report Queue
      /// </summary>
      [StringValidationAttribute]
      public string queueS { get; set; }

      /// <summary>
      /// Demand Print Queue
      /// </summary>
      [StringValidationAttribute]
      public string queueD { get; set; }

      /// <summary>
      /// Override Queue
      /// </summary>
      public bool queuefl { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Update GL Trans
      /// </summary>
      public bool updategltrans { get; set; }

      /// <summary>
      /// Update AP Trans
      /// </summary>
      public bool updateaptrans { get; set; }

      /// <summary>
      /// Update AR Trans
      /// </summary>
      public bool updateartrans { get; set; }

      /// <summary>
      /// Allow Access to Other Operators
      /// </summary>
      public bool activityOtherOperFl { get; set; }

      /// <summary>
      /// Credit Card Display Flag
      /// </summary>
      public bool creditCardDisplayFl { get; set; }

      /// <summary>
      /// Activity Security Level
      /// </summary>
      public int activitySecrLev { get; set; }

      /// <summary>
      /// Contact Management Security Level
      /// </summary>
      public int contactMgmntSecrLev { get; set; }

      /// <summary>
      /// CRM User Type
      /// </summary>
      [StringValidationAttribute]
      public string cRMUserType { get; set; }

      /// <summary>
      /// Trade Invoices
      /// </summary>
      public bool apeitradefl { get; set; }

      /// <summary>
      /// Expense Invoices
      /// </summary>
      public bool apeiexpensefl { get; set; }

      /// <summary>
      /// Third Party Addon Invoices
      /// </summary>
      public bool apeiaddonfl { get; set; }

      /// <summary>
      /// Use Cost
      /// </summary>
      public bool apeiusecostfl { get; set; }

      /// <summary>
      /// Override Tolerance
      /// </summary>
      public bool apeiovertolfl { get; set; }

      /// <summary>
      /// Start
      /// </summary>
      [StringValidationAttribute]
      public string starttoolbar { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr3 { get; set; }

      /// <summary>
      /// Electronic Transfer Security
      /// </summary>
      [StringValidationAttribute]
      public string etsecurity { get; set; }

      /// <summary>
      /// Allow User Specific Settings
      /// </summary>
      public bool profileuserset { get; set; }

      /// <summary>
      /// WebUI User Profile
      /// </summary>
      [StringValidationAttribute]
      public string webprofilename { get; set; }

      /// <summary>
      /// Save/Load Web Settings
      /// </summary>
      [StringValidationAttribute]
      public string websettingaccesslevel { get; set; }

      /// <summary>
      /// Save/Load Web Modifications
      /// </summary>
      [StringValidationAttribute]
      public string webmodificationaccesslevel { get; set; }

      /// <summary>
      /// TWL Whse
      /// </summary>
      [StringValidationAttribute]
      public string twlwhse { get; set; }

      /// <summary>
      /// Restrict to TWL Whse Only?
      /// </summary>
      public bool twlrestrictwhsefl { get; set; }

      /// <summary>
      /// TWL Last Used Date
      /// </summary>
      public DateTime? twllastuseddt { get; set; }

      /// <summary>
      /// Save WebUI Extensions
      /// </summary>
      [StringValidationAttribute]
      public string webextensiontype { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Dropbox Authorization Key
      /// </summary>
      [StringValidationAttribute]
      public string dropboxauthkey { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }

      /// <summary>
      /// Reassign ARSC/ARSS Key Fields
      /// </summary>
      public bool oereassignarfl { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.addr1 + "," + this.city + "," + this.state + "," + this.zipcd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildPvUserBaseFromRow<T>(DataRow row) where T:PvUserBase, new()
      {
         T entity = new T();
         entity.userid = row.IsNull("UseridOVERRIDE") ? string.Empty : row.Field<string>("UseridOVERRIDE");
         entity.profileName = row.IsNull("ProfileName") ? string.Empty : row.Field<string>("ProfileName");
         entity.arrangeCols = row.Field<bool>("ArrangeCols");
         entity.addFavorites = row.Field<bool>("AddFavorites");
         entity.entryLayout = row.Field<bool>("EntryLayout");
         entity.navLayout = row.Field<bool>("NavLayout");
         entity.toolbarLayout = row.Field<bool>("ToolbarLayout");
         entity.changeProfiles = row.Field<bool>("ChangeProfiles");
         entity.changeAppServer = row.Field<bool>("ChangeAppServer");
         entity.autoJournalClose = row.Field<bool>("AutoJournalClose");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.unlimitedWebAccess = row.Field<bool>("UnlimitedWebAccess");
         entity.loginSource = row.IsNull("LoginSource") ? string.Empty : row.Field<string>("LoginSource");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.password = row.IsNull("Password") ? string.Empty : row.Field<string>("Password");
         entity.userName = row.IsNull("User-Name") ? string.Empty : row.Field<string>("User-Name");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.disabled = row.Field<bool>("Disabled");
         entity.mustChange = row.Field<bool>("MustChange");
         entity.cannotChange = row.Field<bool>("CannotChange");
         entity.oper2 = row.IsNull("oper2") ? string.Empty : row.Field<string>("oper2");
         entity.homeph = row.IsNull("homeph") ? string.Empty : row.Field<string>("homeph");
         entity.workph = row.IsNull("workph") ? string.Empty : row.Field<string>("workph");
         entity.cellph = row.IsNull("cellph") ? string.Empty : row.Field<string>("cellph");
         entity.faxph = row.IsNull("faxph") ? string.Empty : row.Field<string>("faxph");
         entity.dept = row.IsNull("Dept") ? string.Empty : row.Field<string>("Dept");
         entity.jobTitle = row.IsNull("JobTitle") ? string.Empty : row.Field<string>("JobTitle");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.email = row.IsNull("email") ? string.Empty : row.Field<string>("email");
         entity.pagerph = row.IsNull("pagerph") ? string.Empty : row.Field<string>("pagerph");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.maxwindows = row.IsNull("maxwindows") ? 0 : row.Field<int>("maxwindows");
         entity.maxUsers = row.IsNull("MaxUsers") ? 0 : row.Field<int>("MaxUsers");
         entity.menuSet = row.IsNull("MenuSet") ? string.Empty : row.Field<string>("MenuSet");
         entity.aOSecurity = row.IsNull("AOSecurity") ? string.Empty : row.Field<string>("AOSecurity");
         entity.seccredmgrfl = row.Field<bool>("seccredmgrfl");
         entity.queueS = row.IsNull("queue-s") ? string.Empty : row.Field<string>("queue-s");
         entity.queueD = row.IsNull("queue-d") ? string.Empty : row.Field<string>("queue-d");
         entity.queuefl = row.Field<bool>("queuefl");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.updategltrans = row.Field<bool>("updategltrans");
         entity.updateaptrans = row.Field<bool>("updateaptrans");
         entity.updateartrans = row.Field<bool>("updateartrans");
         entity.activityOtherOperFl = row.Field<bool>("ActivityOtherOperFl");
         entity.creditCardDisplayFl = row.Field<bool>("CreditCardDisplayFl");
         entity.activitySecrLev = row.IsNull("ActivitySecrLev") ? 0 : row.Field<int>("ActivitySecrLev");
         entity.contactMgmntSecrLev = row.IsNull("ContactMgmntSecrLev") ? 0 : row.Field<int>("ContactMgmntSecrLev");
         entity.cRMUserType = row.IsNull("CRMUserType") ? string.Empty : row.Field<string>("CRMUserType");
         entity.apeitradefl = row.Field<bool>("apeitradefl");
         entity.apeiexpensefl = row.Field<bool>("apeiexpensefl");
         entity.apeiaddonfl = row.Field<bool>("apeiaddonfl");
         entity.apeiusecostfl = row.Field<bool>("apeiusecostfl");
         entity.apeiovertolfl = row.Field<bool>("apeiovertolfl");
         entity.starttoolbar = row.IsNull("starttoolbar") ? string.Empty : row.Field<string>("starttoolbar");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.etsecurity = row.IsNull("etsecurity") ? string.Empty : row.Field<string>("etsecurity");
         entity.profileuserset = row.Field<bool>("profileuserset");
         entity.webprofilename = row.IsNull("webprofilename") ? string.Empty : row.Field<string>("webprofilename");
         entity.websettingaccesslevel = row.IsNull("websettingaccesslevel") ? string.Empty : row.Field<string>("websettingaccesslevel");
         entity.webmodificationaccesslevel = row.IsNull("webmodificationaccesslevel") ? string.Empty : row.Field<string>("webmodificationaccesslevel");
         entity.twlwhse = row.IsNull("twlwhse") ? string.Empty : row.Field<string>("twlwhse");
         entity.twlrestrictwhsefl = row.Field<bool>("twlrestrictwhsefl");
         entity.twllastuseddt = row.Field<DateTime?>("twllastuseddt");
         entity.webextensiontype = row.IsNull("webextensiontype") ? string.Empty : row.Field<string>("webextensiontype");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.dropboxauthkey = row.IsNull("dropboxauthkey") ? string.Empty : row.Field<string>("dropboxauthkey");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.oereassignarfl = row.Field<bool>("oereassignarfl");
         entity.rowID = row.Field<byte[]>("pv_userRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPvUserBase(ref DataRow row, PvUserBase entity)
      {
         row.SetField("_Userid", entity.userid);
         row.SetField("ProfileName", entity.profileName);
         row.SetField("ArrangeCols", entity.arrangeCols);
         row.SetField("AddFavorites", entity.addFavorites);
         row.SetField("EntryLayout", entity.entryLayout);
         row.SetField("NavLayout", entity.navLayout);
         row.SetField("ToolbarLayout", entity.toolbarLayout);
         row.SetField("ChangeProfiles", entity.changeProfiles);
         row.SetField("ChangeAppServer", entity.changeAppServer);
         row.SetField("AutoJournalClose", entity.autoJournalClose);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("UnlimitedWebAccess", entity.unlimitedWebAccess);
         row.SetField("LoginSource", entity.loginSource);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("_Password", entity.password);
         row.SetField("_User-Name", entity.userName);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("cono", entity.cono);
         row.SetField("operinit", entity.operinit);
         row.SetField("Disabled", entity.disabled);
         row.SetField("MustChange", entity.mustChange);
         row.SetField("CannotChange", entity.cannotChange);
         row.SetField("oper2", entity.oper2);
         row.SetField("homeph", entity.homeph);
         row.SetField("workph", entity.workph);
         row.SetField("cellph", entity.cellph);
         row.SetField("faxph", entity.faxph);
         row.SetField("Dept", entity.dept);
         row.SetField("JobTitle", entity.jobTitle);
         row.SetField("transdt", entity.transdt);
         row.SetField("email", entity.email);
         row.SetField("pagerph", entity.pagerph);
         row.SetField("transtm", entity.transtm);
         row.SetField("maxwindows", entity.maxwindows);
         row.SetField("MaxUsers", entity.maxUsers);
         row.SetField("MenuSet", entity.menuSet);
         row.SetField("AOSecurity", entity.aOSecurity);
         row.SetField("seccredmgrfl", entity.seccredmgrfl);
         row.SetField("queue-s", entity.queueS);
         row.SetField("queue-d", entity.queueD);
         row.SetField("queuefl", entity.queuefl);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("updategltrans", entity.updategltrans);
         row.SetField("updateaptrans", entity.updateaptrans);
         row.SetField("updateartrans", entity.updateartrans);
         row.SetField("ActivityOtherOperFl", entity.activityOtherOperFl);
         row.SetField("CreditCardDisplayFl", entity.creditCardDisplayFl);
         row.SetField("ActivitySecrLev", entity.activitySecrLev);
         row.SetField("ContactMgmntSecrLev", entity.contactMgmntSecrLev);
         row.SetField("CRMUserType", entity.cRMUserType);
         row.SetField("apeitradefl", entity.apeitradefl);
         row.SetField("apeiexpensefl", entity.apeiexpensefl);
         row.SetField("apeiaddonfl", entity.apeiaddonfl);
         row.SetField("apeiusecostfl", entity.apeiusecostfl);
         row.SetField("apeiovertolfl", entity.apeiovertolfl);
         row.SetField("starttoolbar", entity.starttoolbar);
         row.SetField("addr3", entity.addr3);
         row.SetField("etsecurity", entity.etsecurity);
         row.SetField("profileuserset", entity.profileuserset);
         row.SetField("webprofilename", entity.webprofilename);
         row.SetField("websettingaccesslevel", entity.websettingaccesslevel);
         row.SetField("webmodificationaccesslevel", entity.webmodificationaccesslevel);
         row.SetField("twlwhse", entity.twlwhse);
         row.SetField("twlrestrictwhsefl", entity.twlrestrictwhsefl);
         row.SetField("twllastuseddt", entity.twllastuseddt);
         row.SetField("webextensiontype", entity.webextensiontype);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("dropboxauthkey", entity.dropboxauthkey);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("oereassignarfl", entity.oereassignarfl);
         row.SetField("pv_userRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, PvUserBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("oper2", entity.oper2);
         row.SetField("pv_userRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	