//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.BI
{
   /// <summary>
   /// Business Intelligence KPI Build Detail
   /// </summary>
   
   public partial class BirbdBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Group
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string kpigroup { get; set; }

      /// <summary>
      /// Gauge #
      /// </summary>
      [Key,Order]
      public int gaugeno { get; set; }

      /// <summary>
      /// Page Number
      /// </summary>
      [Key,Order]
      public int pagenum { get; set; }

      /// <summary>
      /// Slicer Data
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string slicerdata { get; set; }

      /// <summary>
      /// Row 1 Data
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string row1data { get; set; }

      /// <summary>
      /// Row 2 Data
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string row2data { get; set; }

      /// <summary>
      /// Row 3 Data
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string row3data { get; set; }

      /// <summary>
      /// Col 1 Data
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string col1data { get; set; }

      /// <summary>
      /// Col 2 Data
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string col2data { get; set; }

      /// <summary>
      /// Col 3 Data
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string col3data { get; set; }

      /// <summary>
      /// Page Label
      /// </summary>
      [StringValidationAttribute]
      public string pagelabel { get; set; }

      /// <summary>
      /// Slicer Label
      /// </summary>
      [StringValidationAttribute]
      public string slicerlabel { get; set; }

      /// <summary>
      /// Row 1 Label
      /// </summary>
      [StringValidationAttribute]
      public string row1label { get; set; }

      /// <summary>
      /// Row 2 Label
      /// </summary>
      [StringValidationAttribute]
      public string row2label { get; set; }

      /// <summary>
      /// Row 3 Label
      /// </summary>
      [StringValidationAttribute]
      public string row3label { get; set; }

      /// <summary>
      /// Col 1 Label
      /// </summary>
      [StringValidationAttribute]
      public string col1label { get; set; }

      /// <summary>
      /// Col 2 Label
      /// </summary>
      [StringValidationAttribute]
      public string col2label { get; set; }

      /// <summary>
      /// Col 3 Label
      /// </summary>
      [StringValidationAttribute]
      public string col3label { get; set; }

      /// <summary>
      /// Cell 1 Data
      /// </summary>
      [StringValidationAttribute]
      public string cell1data { get; set; }

      /// <summary>
      /// Cell 1 Label
      /// </summary>
      [StringValidationAttribute]
      public string cell1label { get; set; }

      /// <summary>
      /// Cell 2 Data
      /// </summary>
      [StringValidationAttribute]
      public string cell2data { get; set; }

      /// <summary>
      /// Cell 2 Label
      /// </summary>
      [StringValidationAttribute]
      public string cell2label { get; set; }

      /// <summary>
      /// Cell 3 Data
      /// </summary>
      [StringValidationAttribute]
      public string cell3data { get; set; }

      /// <summary>
      /// Cell 3 Label
      /// </summary>
      [StringValidationAttribute]
      public string cell3label { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildBirbdBaseFromRow<T>(DataRow row) where T:BirbdBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.kpigroup = row.IsNull("kpigroup") ? string.Empty : row.Field<string>("kpigroup");
         entity.gaugeno = row.IsNull("gaugeno") ? 0 : row.Field<int>("gaugeno");
         entity.pagenum = row.IsNull("pagenum") ? 0 : row.Field<int>("pagenum");
         entity.pagelabel = row.IsNull("pagelabel") ? string.Empty : row.Field<string>("pagelabel");
         entity.slicerdata = row.IsNull("slicerdata") ? string.Empty : row.Field<string>("slicerdata");
         entity.slicerlabel = row.IsNull("slicerlabel") ? string.Empty : row.Field<string>("slicerlabel");
         entity.row1data = row.IsNull("row1data") ? string.Empty : row.Field<string>("row1data");
         entity.row1label = row.IsNull("row1label") ? string.Empty : row.Field<string>("row1label");
         entity.row2data = row.IsNull("row2data") ? string.Empty : row.Field<string>("row2data");
         entity.row2label = row.IsNull("row2label") ? string.Empty : row.Field<string>("row2label");
         entity.row3data = row.IsNull("row3data") ? string.Empty : row.Field<string>("row3data");
         entity.row3label = row.IsNull("row3label") ? string.Empty : row.Field<string>("row3label");
         entity.col1data = row.IsNull("col1data") ? string.Empty : row.Field<string>("col1data");
         entity.col1label = row.IsNull("col1label") ? string.Empty : row.Field<string>("col1label");
         entity.col2data = row.IsNull("col2data") ? string.Empty : row.Field<string>("col2data");
         entity.col2label = row.IsNull("col2label") ? string.Empty : row.Field<string>("col2label");
         entity.col3data = row.IsNull("col3data") ? string.Empty : row.Field<string>("col3data");
         entity.col3label = row.IsNull("col3label") ? string.Empty : row.Field<string>("col3label");
         entity.cell1data = row.IsNull("cell1data") ? string.Empty : row.Field<string>("cell1data");
         entity.cell1label = row.IsNull("cell1label") ? string.Empty : row.Field<string>("cell1label");
         entity.cell2data = row.IsNull("cell2data") ? string.Empty : row.Field<string>("cell2data");
         entity.cell2label = row.IsNull("cell2label") ? string.Empty : row.Field<string>("cell2label");
         entity.cell3data = row.IsNull("cell3data") ? string.Empty : row.Field<string>("cell3data");
         entity.cell3label = row.IsNull("cell3label") ? string.Empty : row.Field<string>("cell3label");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.rowID = row.Field<byte[]>("birbdRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromBirbdBase(ref DataRow row, BirbdBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("kpigroup", entity.kpigroup);
         row.SetField("gaugeno", entity.gaugeno);
         row.SetField("pagenum", entity.pagenum);
         row.SetField("pagelabel", entity.pagelabel);
         row.SetField("slicerdata", entity.slicerdata);
         row.SetField("slicerlabel", entity.slicerlabel);
         row.SetField("row1data", entity.row1data);
         row.SetField("row1label", entity.row1label);
         row.SetField("row2data", entity.row2data);
         row.SetField("row2label", entity.row2label);
         row.SetField("row3data", entity.row3data);
         row.SetField("row3label", entity.row3label);
         row.SetField("col1data", entity.col1data);
         row.SetField("col1label", entity.col1label);
         row.SetField("col2data", entity.col2data);
         row.SetField("col2label", entity.col2label);
         row.SetField("col3data", entity.col3data);
         row.SetField("col3label", entity.col3label);
         row.SetField("cell1data", entity.cell1data);
         row.SetField("cell1label", entity.cell1label);
         row.SetField("cell2data", entity.cell2data);
         row.SetField("cell2label", entity.cell2label);
         row.SetField("cell3data", entity.cell3data);
         row.SetField("cell3label", entity.cell3label);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("transproc", entity.transproc);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("birbdRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, BirbdBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("kpigroup", entity.kpigroup);
         row.SetField("gaugeno", entity.gaugeno);
         row.SetField("pagenum", entity.pagenum);
         row.SetField("slicerdata", entity.slicerdata);
         row.SetField("row1data", entity.row1data);
         row.SetField("row2data", entity.row2data);
         row.SetField("row3data", entity.row3data);
         row.SetField("col1data", entity.col1data);
         row.SetField("col2data", entity.col2data);
         row.SetField("col3data", entity.col3data);
         row.SetField("birbdRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	