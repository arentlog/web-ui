//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.WL
{
   /// <summary>
   /// Warehouse Logistics Master File Information
   /// </summary>
   
   public partial class WlemBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Field 1
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string field1 { get; set; }

      /// <summary>
      /// Field 2
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string field2 { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string setno { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [StringValidationAttribute]
      public string prod { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Function
      /// </summary>
      [StringValidationAttribute]
      public string function { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string zipcd { get; set; }

      /// <summary>
      /// Stocking Units
      /// </summary>
      [StringValidationAttribute]
      public string unitstock { get; set; }

      /// <summary>
      /// ICSW Statustype
      /// </summary>
      [StringValidationAttribute]
      public string icswstattype { get; set; }

      /// <summary>
      /// Kit Type
      /// </summary>
      [StringValidationAttribute]
      public string kittype { get; set; }

      /// <summary>
      /// MSDS Product
      /// </summary>
      public bool msdsfl { get; set; }

      /// <summary>
      /// Cube
      /// </summary>
      public decimal cubes { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal weight { get; set; }

      /// <summary>
      /// Height
      /// </summary>
      public decimal height { get; set; }

      /// <summary>
      /// Width
      /// </summary>
      public decimal width { get; set; }

      /// <summary>
      /// Length
      /// </summary>
      public decimal length { get; set; }

      /// <summary>
      /// Extended Type
      /// </summary>
      [StringValidationAttribute]
      public string serlottype { get; set; }

      /// <summary>
      /// Bin Loc #1
      /// </summary>
      [StringValidationAttribute]
      public string binloc1 { get; set; }

      /// <summary>
      /// Bin Loc #2
      /// </summary>
      [StringValidationAttribute]
      public string binloc2 { get; set; }

      /// <summary>
      /// Spec/NS
      /// </summary>
      [StringValidationAttribute]
      public string specnstype { get; set; }

      /// <summary>
      /// Adj Type
      /// </summary>
      [StringValidationAttribute]
      public string adjusttype { get; set; }

      /// <summary>
      /// Expected Qty
      /// </summary>
      public decimal expectqty { get; set; }

      /// <summary>
      /// Actual Qty
      /// </summary>
      public decimal actualqty { get; set; }

      /// <summary>
      /// Adjust Reason
      /// </summary>
      [StringValidationAttribute]
      public string adjustreas { get; set; }

      /// <summary>
      /// Status Type
      /// </summary>
      [StringValidationAttribute]
      public string statustype { get; set; }

      /// <summary>
      /// Error Msg
      /// </summary>
      [StringValidationAttribute]
      public string errormsg { get; set; }

      /// <summary>
      /// Update Type
      /// </summary>
      [StringValidationAttribute]
      public string updtype { get; set; }

      /// <summary>
      /// Whse Zone
      /// </summary>
      [StringValidationAttribute]
      public string whzone { get; set; }

      /// <summary>
      /// Box Quantity
      /// </summary>
      public int boxqty { get; set; }

      /// <summary>
      /// ABC
      /// </summary>
      [StringValidationAttribute]
      public string abc { get; set; }

      /// <summary>
      /// Rotation Count
      /// </summary>
      public decimal rotate { get; set; }

      /// <summary>
      /// Pilferage
      /// </summary>
      public bool pilferfl { get; set; }

      /// <summary>
      /// Country
      /// </summary>
      [StringValidationAttribute]
      public string country { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string descrip { get; set; }

      /// <summary>
      /// UPC Number
      /// </summary>
      [StringValidationAttribute]
      public string upcno { get; set; }

      /// <summary>
      /// Vendor Product
      /// </summary>
      [StringValidationAttribute]
      public string vendprod { get; set; }

      /// <summary>
      /// Counter Bin
      /// </summary>
      [StringValidationAttribute]
      public string bincntr { get; set; }

      /// <summary>
      /// Kit Build Dept
      /// </summary>
      [StringValidationAttribute]
      public string kitbuild { get; set; }

      /// <summary>
      /// ICSP Statustype
      /// </summary>
      [StringValidationAttribute]
      public string icspstattype { get; set; }

      /// <summary>
      /// Adjust Lot Status
      /// </summary>
      [StringValidationAttribute]
      public string adjlotstat { get; set; }

      /// <summary>
      /// Adjust Lot Type
      /// </summary>
      [StringValidationAttribute]
      public string adjlottype { get; set; }

      /// <summary>
      /// Old Reason Unavail
      /// </summary>
      [StringValidationAttribute]
      public string oreasunavty { get; set; }

      /// <summary>
      /// Category
      /// </summary>
      [StringValidationAttribute]
      public string prodcat { get; set; }

      /// <summary>
      /// MSDS Sheet#
      /// </summary>
      [StringValidationAttribute]
      public string msdssheetno { get; set; }

      /// <summary>
      /// Adjust Lot Qty
      /// </summary>
      public decimal adjlotqty { get; set; }

      /// <summary>
      /// ICSOU Unavail Qty
      /// </summary>
      public decimal icsouqty { get; set; }

      /// <summary>
      /// Trans ID
      /// </summary>
      public decimal transid { get; set; }

      /// <summary>
      /// Entry Date
      /// </summary>
      public DateTime? entrydt { get; set; }

      /// <summary>
      /// Run Number
      /// </summary>
      public decimal runno { get; set; }

      /// <summary>
      /// Reason
      /// </summary>
      [StringValidationAttribute]
      public string reasunavty { get; set; }

      /// <summary>
      /// Reply
      /// </summary>
      [StringValidationAttribute]
      public string reply { get; set; }

      /// <summary>
      /// binloc1updfl
      /// </summary>
      public bool binloc1updfl { get; set; }

      /// <summary>
      /// binloc2updfl
      /// </summary>
      public bool binloc2updfl { get; set; }

      /// <summary>
      /// bincntrupdfl
      /// </summary>
      public bool bincntrupdfl { get; set; }

      /// <summary>
      /// Process Type
      /// </summary>
      [StringValidationAttribute]
      public string processty { get; set; }

      /// <summary>
      /// Error #
      /// </summary>
      public int errorno { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// Ship From
      /// </summary>
      public int shipfmno { get; set; }

      /// <summary>
      /// Contact Name
      /// </summary>
      [StringValidationAttribute]
      public string contact { get; set; }

      /// <summary>
      /// Phone
      /// </summary>
      [StringValidationAttribute]
      public string phoneno { get; set; }

      /// <summary>
      /// Fax Phone
      /// </summary>
      [StringValidationAttribute]
      public string faxphoneno { get; set; }

      /// <summary>
      /// EDI Code
      /// </summary>
      [StringValidationAttribute]
      public string edicode { get; set; }

      /// <summary>
      /// Duns #
      /// </summary>
      [StringValidationAttribute]
      public string dunsno { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Description 2
      /// </summary>
      [StringValidationAttribute]
      public string descrip2 { get; set; }

      /// <summary>
      /// Memo
      /// </summary>
      [StringValidationAttribute]
      public string memo { get; set; }

      /// <summary>
      /// Case Quantity
      /// </summary>
      public decimal casequantity { get; set; }

      /// <summary>
      /// Pallet Quantity
      /// </summary>
      public decimal palletquantity { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr3 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.addr1 + "," + this.city + "," + this.state + "," + this.zipcd + "," + this.country; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildWlemBaseFromRow<T>(DataRow row) where T:WlemBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.function = row.IsNull("function") ? string.Empty : row.Field<string>("function");
         entity.field1 = row.IsNull("field1") ? string.Empty : row.Field<string>("field1");
         entity.field2 = row.IsNull("field2") ? string.Empty : row.Field<string>("field2");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.unitstock = row.IsNull("unitstock") ? string.Empty : row.Field<string>("unitstock");
         entity.icswstattype = row.IsNull("icswstattype") ? string.Empty : row.Field<string>("icswstattype");
         entity.kittype = row.IsNull("kittype") ? string.Empty : row.Field<string>("kittype");
         entity.msdsfl = row.Field<bool>("msdsfl");
         entity.cubes = row.IsNull("cubes") ? decimal.Zero : row.Field<decimal>("cubes");
         entity.weight = row.IsNull("weight") ? decimal.Zero : row.Field<decimal>("weight");
         entity.height = row.IsNull("height") ? decimal.Zero : row.Field<decimal>("height");
         entity.width = row.IsNull("width") ? decimal.Zero : row.Field<decimal>("width");
         entity.length = row.IsNull("length") ? decimal.Zero : row.Field<decimal>("length");
         entity.serlottype = row.IsNull("serlottype") ? string.Empty : row.Field<string>("serlottype");
         entity.binloc1 = row.IsNull("binloc1") ? string.Empty : row.Field<string>("binloc1");
         entity.binloc2 = row.IsNull("binloc2") ? string.Empty : row.Field<string>("binloc2");
         entity.specnstype = row.IsNull("specnstype") ? string.Empty : row.Field<string>("specnstype");
         entity.adjusttype = row.IsNull("adjusttype") ? string.Empty : row.Field<string>("adjusttype");
         entity.expectqty = row.IsNull("expectqty") ? decimal.Zero : row.Field<decimal>("expectqty");
         entity.actualqty = row.IsNull("actualqty") ? decimal.Zero : row.Field<decimal>("actualqty");
         entity.adjustreas = row.IsNull("adjustreas") ? string.Empty : row.Field<string>("adjustreas");
         entity.statustype = row.IsNull("statustype") ? string.Empty : row.Field<string>("statustype");
         entity.errormsg = row.IsNull("errormsg") ? string.Empty : row.Field<string>("errormsg");
         entity.updtype = row.IsNull("updtype") ? string.Empty : row.Field<string>("updtype");
         entity.setno = row.IsNull("setno") ? string.Empty : row.Field<string>("setno");
         entity.whzone = row.IsNull("whzone") ? string.Empty : row.Field<string>("whzone");
         entity.boxqty = row.IsNull("boxqty") ? 0 : row.Field<int>("boxqty");
         entity.abc = row.IsNull("abc") ? string.Empty : row.Field<string>("abc");
         entity.rotate = row.IsNull("rotate") ? decimal.Zero : row.Field<decimal>("rotate");
         entity.pilferfl = row.Field<bool>("pilferfl");
         entity.country = row.IsNull("country") ? string.Empty : row.Field<string>("country");
         entity.descrip = row.IsNull("descrip") ? string.Empty : row.Field<string>("descrip");
         entity.upcno = row.IsNull("upcno") ? string.Empty : row.Field<string>("upcno");
         entity.vendprod = row.IsNull("vendprod") ? string.Empty : row.Field<string>("vendprod");
         entity.bincntr = row.IsNull("bincntr") ? string.Empty : row.Field<string>("bincntr");
         entity.kitbuild = row.IsNull("kitbuild") ? string.Empty : row.Field<string>("kitbuild");
         entity.icspstattype = row.IsNull("icspstattype") ? string.Empty : row.Field<string>("icspstattype");
         entity.adjlotstat = row.IsNull("adjlotstat") ? string.Empty : row.Field<string>("adjlotstat");
         entity.adjlottype = row.IsNull("adjlottype") ? string.Empty : row.Field<string>("adjlottype");
         entity.oreasunavty = row.IsNull("oreasunavty") ? string.Empty : row.Field<string>("oreasunavty");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.msdssheetno = row.IsNull("msdssheetno") ? string.Empty : row.Field<string>("msdssheetno");
         entity.adjlotqty = row.IsNull("adjlotqty") ? decimal.Zero : row.Field<decimal>("adjlotqty");
         entity.icsouqty = row.IsNull("icsouqty") ? decimal.Zero : row.Field<decimal>("icsouqty");
         entity.transid = row.IsNull("transid") ? decimal.Zero : row.Field<decimal>("transid");
         entity.entrydt = row.Field<DateTime?>("entrydt");
         entity.runno = row.IsNull("runno") ? decimal.Zero : row.Field<decimal>("runno");
         entity.reasunavty = row.IsNull("reasunavty") ? string.Empty : row.Field<string>("reasunavty");
         entity.reply = row.IsNull("reply") ? string.Empty : row.Field<string>("reply");
         entity.binloc1updfl = row.Field<bool>("binloc1updfl");
         entity.binloc2updfl = row.Field<bool>("binloc2updfl");
         entity.bincntrupdfl = row.Field<bool>("bincntrupdfl");
         entity.processty = row.IsNull("processty") ? string.Empty : row.Field<string>("processty");
         entity.errorno = row.IsNull("errorno") ? 0 : row.Field<int>("errorno");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.shipfmno = row.IsNull("shipfmno") ? 0 : row.Field<int>("shipfmno");
         entity.contact = row.IsNull("contact") ? string.Empty : row.Field<string>("contact");
         entity.phoneno = row.IsNull("phoneno") ? string.Empty : row.Field<string>("phoneno");
         entity.faxphoneno = row.IsNull("faxphoneno") ? string.Empty : row.Field<string>("faxphoneno");
         entity.edicode = row.IsNull("edicode") ? string.Empty : row.Field<string>("edicode");
         entity.dunsno = row.IsNull("dunsno") ? string.Empty : row.Field<string>("dunsno");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.descrip2 = row.IsNull("descrip2") ? string.Empty : row.Field<string>("descrip2");
         entity.memo = row.IsNull("memo") ? string.Empty : row.Field<string>("memo");
         entity.casequantity = row.IsNull("casequantity") ? decimal.Zero : row.Field<decimal>("casequantity");
         entity.palletquantity = row.IsNull("palletquantity") ? decimal.Zero : row.Field<decimal>("palletquantity");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.rowID = row.Field<byte[]>("wlemRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromWlemBase(ref DataRow row, WlemBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("whse", entity.whse);
         row.SetField("prod", entity.prod);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("function", entity.function);
         row.SetField("field1", entity.field1);
         row.SetField("field2", entity.field2);
         row.SetField("name", entity.name);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("unitstock", entity.unitstock);
         row.SetField("icswstattype", entity.icswstattype);
         row.SetField("kittype", entity.kittype);
         row.SetField("msdsfl", entity.msdsfl);
         row.SetField("cubes", entity.cubes);
         row.SetField("weight", entity.weight);
         row.SetField("height", entity.height);
         row.SetField("width", entity.width);
         row.SetField("length", entity.length);
         row.SetField("serlottype", entity.serlottype);
         row.SetField("binloc1", entity.binloc1);
         row.SetField("binloc2", entity.binloc2);
         row.SetField("specnstype", entity.specnstype);
         row.SetField("adjusttype", entity.adjusttype);
         row.SetField("expectqty", entity.expectqty);
         row.SetField("actualqty", entity.actualqty);
         row.SetField("adjustreas", entity.adjustreas);
         row.SetField("statustype", entity.statustype);
         row.SetField("errormsg", entity.errormsg);
         row.SetField("updtype", entity.updtype);
         row.SetField("setno", entity.setno);
         row.SetField("whzone", entity.whzone);
         row.SetField("boxqty", entity.boxqty);
         row.SetField("abc", entity.abc);
         row.SetField("rotate", entity.rotate);
         row.SetField("pilferfl", entity.pilferfl);
         row.SetField("country", entity.country);
         row.SetField("descrip", entity.descrip);
         row.SetField("upcno", entity.upcno);
         row.SetField("vendprod", entity.vendprod);
         row.SetField("bincntr", entity.bincntr);
         row.SetField("kitbuild", entity.kitbuild);
         row.SetField("icspstattype", entity.icspstattype);
         row.SetField("adjlotstat", entity.adjlotstat);
         row.SetField("adjlottype", entity.adjlottype);
         row.SetField("oreasunavty", entity.oreasunavty);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("msdssheetno", entity.msdssheetno);
         row.SetField("adjlotqty", entity.adjlotqty);
         row.SetField("icsouqty", entity.icsouqty);
         row.SetField("transid", entity.transid);
         row.SetField("entrydt", entity.entrydt);
         row.SetField("runno", entity.runno);
         row.SetField("reasunavty", entity.reasunavty);
         row.SetField("reply", entity.reply);
         row.SetField("binloc1updfl", entity.binloc1updfl);
         row.SetField("binloc2updfl", entity.binloc2updfl);
         row.SetField("bincntrupdfl", entity.bincntrupdfl);
         row.SetField("processty", entity.processty);
         row.SetField("errorno", entity.errorno);
         row.SetField("vendno", entity.vendno);
         row.SetField("shipfmno", entity.shipfmno);
         row.SetField("contact", entity.contact);
         row.SetField("phoneno", entity.phoneno);
         row.SetField("faxphoneno", entity.faxphoneno);
         row.SetField("edicode", entity.edicode);
         row.SetField("dunsno", entity.dunsno);
         row.SetField("transproc", entity.transproc);
         row.SetField("descrip2", entity.descrip2);
         row.SetField("memo", entity.memo);
         row.SetField("casequantity", entity.casequantity);
         row.SetField("palletquantity", entity.palletquantity);
         row.SetField("addr3", entity.addr3);
         row.SetField("wlemRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, WlemBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("whse", entity.whse);
         row.SetField("field1", entity.field1);
         row.SetField("field2", entity.field2);
         row.SetField("setno", entity.setno);
         row.SetField("wlemRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	