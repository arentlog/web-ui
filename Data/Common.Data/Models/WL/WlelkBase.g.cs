//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.WL
{
   /// <summary>
   /// Warehouse Logistics Component Information
   /// </summary>
   
   public partial class WlelkBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Order Type
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string ordertype { get; set; }

      /// <summary>
      /// Order #
      /// </summary>
      [Key,Order]
      public int orderno { get; set; }

      /// <summary>
      /// 
      /// </summary>
      [Key,Order]
      public int ordersuf { get; set; }

      /// <summary>
      /// Line #
      /// </summary>
      [Key,Order]
      public int lineno { get; set; }

      /// <summary>
      /// Seq #
      /// </summary>
      [Key,Order]
      public int seqno { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string setno { get; set; }

      /// <summary>
      /// Ship Prod
      /// </summary>
      [StringValidationAttribute]
      public string shipprod { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Status Type
      /// </summary>
      [StringValidationAttribute]
      public string statustype { get; set; }

      /// <summary>
      /// Spec/NS
      /// </summary>
      [StringValidationAttribute]
      public string specnstype { get; set; }

      /// <summary>
      /// Vendor Product
      /// </summary>
      [StringValidationAttribute]
      public string vendprod { get; set; }

      /// <summary>
      /// Stocking Qty
      /// </summary>
      public decimal stkqty { get; set; }

      /// <summary>
      /// MSDS Sheet #
      /// </summary>
      [StringValidationAttribute]
      public string msdssheetno { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string proddesc { get; set; }

      /// <summary>
      /// Update Type
      /// </summary>
      [StringValidationAttribute]
      public string updtype { get; set; }

      /// <summary>
      /// negcompfl
      /// </summary>
      public bool negcompfl { get; set; }

      /// <summary>
      /// Stock Status
      /// </summary>
      [StringValidationAttribute]
      public string stkstatcomp { get; set; }

      /// <summary>
      /// WL Pick Type
      /// </summary>
      [StringValidationAttribute]
      public string wlpicktype { get; set; }

      /// <summary>
      /// Required Component
      /// </summary>
      public bool reqfl { get; set; }

      /// <summary>
      /// Trans ID
      /// </summary>
      public decimal transid { get; set; }

      /// <summary>
      /// Reply
      /// </summary>
      [StringValidationAttribute]
      public string reply { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Original VA Line
      /// </summary>
      public int origvalineno { get; set; }

      /// <summary>
      /// Original VA Seq
      /// </summary>
      public int origvaseqno { get; set; }

      /// <summary>
      /// Alt Whse
      /// </summary>
      [StringValidationAttribute]
      public string altwhse { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildWlelkBaseFromRow<T>(DataRow row) where T:WlelkBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.ordertype = row.IsNull("ordertype") ? string.Empty : row.Field<string>("ordertype");
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.shipprod = row.IsNull("shipprod") ? string.Empty : row.Field<string>("shipprod");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.statustype = row.IsNull("statustype") ? string.Empty : row.Field<string>("statustype");
         entity.specnstype = row.IsNull("specnstype") ? string.Empty : row.Field<string>("specnstype");
         entity.vendprod = row.IsNull("vendprod") ? string.Empty : row.Field<string>("vendprod");
         entity.stkqty = row.IsNull("stkqty") ? decimal.Zero : row.Field<decimal>("stkqty");
         entity.msdssheetno = row.IsNull("msdssheetno") ? string.Empty : row.Field<string>("msdssheetno");
         entity.proddesc = row.IsNull("proddesc") ? string.Empty : row.Field<string>("proddesc");
         entity.updtype = row.IsNull("updtype") ? string.Empty : row.Field<string>("updtype");
         entity.setno = row.IsNull("setno") ? string.Empty : row.Field<string>("setno");
         entity.negcompfl = row.Field<bool>("negcompfl");
         entity.stkstatcomp = row.IsNull("stkstatcomp") ? string.Empty : row.Field<string>("stkstatcomp");
         entity.wlpicktype = row.IsNull("wlpicktype") ? string.Empty : row.Field<string>("wlpicktype");
         entity.reqfl = row.Field<bool>("reqfl");
         entity.transid = row.IsNull("transid") ? decimal.Zero : row.Field<decimal>("transid");
         entity.reply = row.IsNull("reply") ? string.Empty : row.Field<string>("reply");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.origvalineno = row.IsNull("origvalineno") ? 0 : row.Field<int>("origvalineno");
         entity.origvaseqno = row.IsNull("origvaseqno") ? 0 : row.Field<int>("origvaseqno");
         entity.altwhse = row.IsNull("altwhse") ? string.Empty : row.Field<string>("altwhse");
         entity.rowID = row.Field<byte[]>("wlelkRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromWlelkBase(ref DataRow row, WlelkBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("whse", entity.whse);
         row.SetField("ordertype", entity.ordertype);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("lineno", entity.lineno);
         row.SetField("seqno", entity.seqno);
         row.SetField("shipprod", entity.shipprod);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("statustype", entity.statustype);
         row.SetField("specnstype", entity.specnstype);
         row.SetField("vendprod", entity.vendprod);
         row.SetField("stkqty", entity.stkqty);
         row.SetField("msdssheetno", entity.msdssheetno);
         row.SetField("proddesc", entity.proddesc);
         row.SetField("updtype", entity.updtype);
         row.SetField("setno", entity.setno);
         row.SetField("negcompfl", entity.negcompfl);
         row.SetField("stkstatcomp", entity.stkstatcomp);
         row.SetField("wlpicktype", entity.wlpicktype);
         row.SetField("reqfl", entity.reqfl);
         row.SetField("transid", entity.transid);
         row.SetField("reply", entity.reply);
         row.SetField("transproc", entity.transproc);
         row.SetField("origvalineno", entity.origvalineno);
         row.SetField("origvaseqno", entity.origvaseqno);
         row.SetField("altwhse", entity.altwhse);
         row.SetField("wlelkRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, WlelkBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("whse", entity.whse);
         row.SetField("ordertype", entity.ordertype);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("lineno", entity.lineno);
         row.SetField("seqno", entity.seqno);
         row.SetField("setno", entity.setno);
         row.SetField("wlelkRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	