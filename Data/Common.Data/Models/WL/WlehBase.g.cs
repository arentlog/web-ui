//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.WL
{
   /// <summary>
   /// Warehouse Logistics Header Information
   /// </summary>
   
   public partial class WlehBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Order Type
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string ordertype { get; set; }

      /// <summary>
      /// Order #
      /// </summary>
      [Key,Order]
      public int orderno { get; set; }

      /// <summary>
      /// 
      /// </summary>
      [Key,Order]
      public int ordersuf { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string setno { get; set; }

      /// <summary>
      /// Function
      /// </summary>
      [StringValidationAttribute]
      public string function { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Priority
      /// </summary>
      public int priority { get; set; }

      /// <summary>
      /// Status Type
      /// </summary>
      [StringValidationAttribute]
      public string statustype { get; set; }

      /// <summary>
      /// Error Msg
      /// </summary>
      [StringValidationAttribute]
      public string errormsg { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// Due Date
      /// </summary>
      public DateTime? duedt { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      public decimal custno { get; set; }

      /// <summary>
      /// Ship To Name
      /// </summary>
      [StringValidationAttribute]
      public string shiptonm { get; set; }

      /// <summary>
      /// Shipto Addr
      /// </summary>
      [StringValidationAttribute]
      public string shiptoaddr1 { get; set; }
      [StringValidationAttribute]
      public string shiptoaddr2 { get; set; }

      /// <summary>
      /// Shipto City
      /// </summary>
      [StringValidationAttribute]
      public string shiptocity { get; set; }

      /// <summary>
      /// Shipto State
      /// </summary>
      [StringValidationAttribute]
      public string shiptost { get; set; }

      /// <summary>
      /// Shipto Zipcd
      /// </summary>
      [StringValidationAttribute]
      public string shiptozip { get; set; }

      /// <summary>
      /// Ship Date
      /// </summary>
      public DateTime? shipdate { get; set; }

      /// <summary>
      /// Ship Via
      /// </summary>
      [StringValidationAttribute]
      public string shipviaty { get; set; }

      /// <summary>
      /// Default PO#
      /// </summary>
      [StringValidationAttribute]
      public string custpo { get; set; }

      /// <summary>
      /// Trans Type
      /// </summary>
      [StringValidationAttribute]
      public string transtype { get; set; }

      /// <summary>
      /// Instructions
      /// </summary>
      [StringValidationAttribute]
      public string shipinstr { get; set; }

      /// <summary>
      /// Net Addon Amount
      /// </summary>
      public decimal addonnet { get; set; }

      /// <summary>
      /// # Packages
      /// </summary>
      public int nopackages { get; set; }

      /// <summary>
      /// Actual Freight Amt
      /// </summary>
      public decimal actfreight { get; set; }

      /// <summary>
      /// Update Type
      /// </summary>
      [StringValidationAttribute]
      public string updtype { get; set; }

      /// <summary>
      /// Shipment Identification
      /// </summary>
      [StringValidationAttribute]
      public string shipmentid { get; set; }

      /// <summary>
      /// EDI Flag
      /// </summary>
      public bool edifl { get; set; }

      /// <summary>
      /// Kit Build Type
      /// </summary>
      [StringValidationAttribute]
      public string kitbuildty { get; set; }

      /// <summary>
      /// Trans ID
      /// </summary>
      public decimal transid { get; set; }

      /// <summary>
      /// Reply
      /// </summary>
      [StringValidationAttribute]
      public string reply { get; set; }

      /// <summary>
      /// Error #
      /// </summary>
      public int errorno { get; set; }

      /// <summary>
      /// Receiver #
      /// </summary>
      [StringValidationAttribute]
      public string receiverno { get; set; }

      /// <summary>
      /// Ship From
      /// </summary>
      public int shipfmno { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Shipto Addr
      /// </summary>
      [StringValidationAttribute]
      public string shiptoaddr3 { get; set; }

      /// <summary>
      /// EDI Shipment ID
      /// </summary>
      [StringValidationAttribute]
      public string edishipmentid { get; set; }

      /// <summary>
      /// EDI Package ID
      /// </summary>
      [StringValidationAttribute]
      public string edipackageid { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.shiptoaddr1 + "," + this.shiptocity + "," + this.shiptost + "," + this.shiptozip; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildWlehBaseFromRow<T>(DataRow row) where T:WlehBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.function = row.IsNull("function") ? string.Empty : row.Field<string>("function");
         entity.ordertype = row.IsNull("ordertype") ? string.Empty : row.Field<string>("ordertype");
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.priority = row.IsNull("priority") ? 0 : row.Field<int>("priority");
         entity.statustype = row.IsNull("statustype") ? string.Empty : row.Field<string>("statustype");
         entity.errormsg = row.IsNull("errormsg") ? string.Empty : row.Field<string>("errormsg");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.shiptonm = row.IsNull("shiptonm") ? string.Empty : row.Field<string>("shiptonm");
         entity.shiptoaddr1 = row.IsNull("shiptoaddr1") ? string.Empty : row.Field<string>("shiptoaddr1");
         entity.shiptoaddr2 = row.IsNull("shiptoaddr2") ? string.Empty : row.Field<string>("shiptoaddr2");
         entity.shiptocity = row.IsNull("shiptocity") ? string.Empty : row.Field<string>("shiptocity");
         entity.shiptost = row.IsNull("shiptost") ? string.Empty : row.Field<string>("shiptost");
         entity.shiptozip = row.IsNull("shiptozip") ? string.Empty : row.Field<string>("shiptozip");
         entity.shipdate = row.Field<DateTime?>("shipdate");
         entity.shipviaty = row.IsNull("shipviaty") ? string.Empty : row.Field<string>("shipviaty");
         entity.custpo = row.IsNull("custpo") ? string.Empty : row.Field<string>("custpo");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.shipinstr = row.IsNull("shipinstr") ? string.Empty : row.Field<string>("shipinstr");
         entity.addonnet = row.IsNull("addonnet") ? decimal.Zero : row.Field<decimal>("addonnet");
         entity.nopackages = row.IsNull("nopackages") ? 0 : row.Field<int>("nopackages");
         entity.actfreight = row.IsNull("actfreight") ? decimal.Zero : row.Field<decimal>("actfreight");
         entity.updtype = row.IsNull("updtype") ? string.Empty : row.Field<string>("updtype");
         entity.setno = row.IsNull("setno") ? string.Empty : row.Field<string>("setno");
         entity.shipmentid = row.IsNull("shipmentid") ? string.Empty : row.Field<string>("shipmentid");
         entity.edifl = row.Field<bool>("edifl");
         entity.kitbuildty = row.IsNull("kitbuildty") ? string.Empty : row.Field<string>("kitbuildty");
         entity.transid = row.IsNull("transid") ? decimal.Zero : row.Field<decimal>("transid");
         entity.reply = row.IsNull("reply") ? string.Empty : row.Field<string>("reply");
         entity.errorno = row.IsNull("errorno") ? 0 : row.Field<int>("errorno");
         entity.receiverno = row.IsNull("receiverno") ? string.Empty : row.Field<string>("receiverno");
         entity.shipfmno = row.IsNull("shipfmno") ? 0 : row.Field<int>("shipfmno");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.shiptoaddr3 = row.IsNull("shiptoaddr3") ? string.Empty : row.Field<string>("shiptoaddr3");
         entity.edishipmentid = row.IsNull("edishipmentid") ? string.Empty : row.Field<string>("edishipmentid");
         entity.edipackageid = row.IsNull("edipackageid") ? string.Empty : row.Field<string>("edipackageid");
         entity.rowID = row.Field<byte[]>("wlehRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromWlehBase(ref DataRow row, WlehBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("whse", entity.whse);
         row.SetField("function", entity.function);
         row.SetField("ordertype", entity.ordertype);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("priority", entity.priority);
         row.SetField("statustype", entity.statustype);
         row.SetField("errormsg", entity.errormsg);
         row.SetField("vendno", entity.vendno);
         row.SetField("duedt", entity.duedt);
         row.SetField("custno", entity.custno);
         row.SetField("shiptonm", entity.shiptonm);
         row.SetField("shiptoaddr1", entity.shiptoaddr1);
         row.SetField("shiptoaddr2", entity.shiptoaddr2);
         row.SetField("shiptocity", entity.shiptocity);
         row.SetField("shiptost", entity.shiptost);
         row.SetField("shiptozip", entity.shiptozip);
         row.SetField("shipdate", entity.shipdate);
         row.SetField("shipviaty", entity.shipviaty);
         row.SetField("custpo", entity.custpo);
         row.SetField("transtype", entity.transtype);
         row.SetField("shipinstr", entity.shipinstr);
         row.SetField("addonnet", entity.addonnet);
         row.SetField("nopackages", entity.nopackages);
         row.SetField("actfreight", entity.actfreight);
         row.SetField("updtype", entity.updtype);
         row.SetField("setno", entity.setno);
         row.SetField("shipmentid", entity.shipmentid);
         row.SetField("edifl", entity.edifl);
         row.SetField("kitbuildty", entity.kitbuildty);
         row.SetField("transid", entity.transid);
         row.SetField("reply", entity.reply);
         row.SetField("errorno", entity.errorno);
         row.SetField("receiverno", entity.receiverno);
         row.SetField("shipfmno", entity.shipfmno);
         row.SetField("transproc", entity.transproc);
         row.SetField("shiptoaddr3", entity.shiptoaddr3);
         row.SetField("edishipmentid", entity.edishipmentid);
         row.SetField("edipackageid", entity.edipackageid);
         row.SetField("wlehRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, WlehBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("whse", entity.whse);
         row.SetField("ordertype", entity.ordertype);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("setno", entity.setno);
         row.SetField("wlehRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	