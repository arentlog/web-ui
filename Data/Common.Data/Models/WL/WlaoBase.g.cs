//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.WL
{
   /// <summary>
   /// WL Admin Options
   /// </summary>
   
   public partial class WlaoBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Purge Inactive
      /// </summary>
      public bool delinactfl { get; set; }

      /// <summary>
      /// Current Version
      /// </summary>
      [StringValidationAttribute]
      public string version { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Journal Operator Initials
      /// </summary>
      [StringValidationAttribute]
      public string jrnloperinit { get; set; }

      /// <summary>
      /// Zero Approve Type
      /// </summary>
      [StringValidationAttribute]
      public string zeroapprty { get; set; }

      /// <summary>
      /// Whse Zone
      /// </summary>
      [StringValidationAttribute]
      public string whzone { get; set; }

      /// <summary>
      /// Hold OE Returns
      /// </summary>
      [StringValidationAttribute]
      public string holdoerm { get; set; }

      /// <summary>
      /// Returns Approve Type
      /// </summary>
      [StringValidationAttribute]
      public string holdoeapprty { get; set; }

      /// <summary>
      /// Send Customer Notes
      /// </summary>
      public bool custnotesfl { get; set; }

      /// <summary>
      /// Zero Qty Flag
      /// </summary>
      public bool zeroqtyfl { get; set; }

      /// <summary>
      /// Manual PO/RM
      /// </summary>
      public bool holdporm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Send ICSP Notes with Order Lines
      /// </summary>
      public bool icspnotesfl { get; set; }

      /// <summary>
      /// Create Ship When Pack Record Exists
      /// </summary>
      public bool createshipfl { get; set; }

      /// <summary>
      /// Send ICSP Notes with Receipt Lines
      /// </summary>
      public bool icsp2notesfl { get; set; }

      /// <summary>
      /// WL II VAST Value for Final IT
      /// </summary>
      [StringValidationAttribute]
      public string vastit { get; set; }

      /// <summary>
      /// WL II VAST Value for Final EX
      /// </summary>
      [StringValidationAttribute]
      public string vastex { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildWlaoBaseFromRow<T>(DataRow row) where T:WlaoBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.delinactfl = row.Field<bool>("delinactfl");
         entity.version = row.IsNull("version") ? string.Empty : row.Field<string>("version");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.jrnloperinit = row.IsNull("jrnloperinit") ? string.Empty : row.Field<string>("jrnloperinit");
         entity.zeroapprty = row.IsNull("zeroapprty") ? string.Empty : row.Field<string>("zeroapprty");
         entity.whzone = row.IsNull("whzone") ? string.Empty : row.Field<string>("whzone");
         entity.holdoerm = row.IsNull("holdoerm") ? string.Empty : row.Field<string>("holdoerm");
         entity.holdoeapprty = row.IsNull("holdoeapprty") ? string.Empty : row.Field<string>("holdoeapprty");
         entity.custnotesfl = row.Field<bool>("custnotesfl");
         entity.zeroqtyfl = row.Field<bool>("zeroqtyfl");
         entity.holdporm = row.Field<bool>("holdporm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.icspnotesfl = row.Field<bool>("icspnotesfl");
         entity.createshipfl = row.Field<bool>("createshipfl");
         entity.icsp2notesfl = row.Field<bool>("icsp2notesfl");
         entity.vastit = row.IsNull("vastit") ? string.Empty : row.Field<string>("vastit");
         entity.vastex = row.IsNull("vastex") ? string.Empty : row.Field<string>("vastex");
         entity.rowID = row.Field<byte[]>("wlaoRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromWlaoBase(ref DataRow row, WlaoBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("delinactfl", entity.delinactfl);
         row.SetField("version", entity.version);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("jrnloperinit", entity.jrnloperinit);
         row.SetField("zeroapprty", entity.zeroapprty);
         row.SetField("whzone", entity.whzone);
         row.SetField("holdoerm", entity.holdoerm);
         row.SetField("holdoeapprty", entity.holdoeapprty);
         row.SetField("custnotesfl", entity.custnotesfl);
         row.SetField("zeroqtyfl", entity.zeroqtyfl);
         row.SetField("holdporm", entity.holdporm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("icspnotesfl", entity.icspnotesfl);
         row.SetField("createshipfl", entity.createshipfl);
         row.SetField("icsp2notesfl", entity.icsp2notesfl);
         row.SetField("vastit", entity.vastit);
         row.SetField("vastex", entity.vastex);
         row.SetField("wlaoRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, WlaoBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("wlaoRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	