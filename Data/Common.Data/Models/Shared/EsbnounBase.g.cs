//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SHARED
{
   /// <summary>
   /// ESB - Administrative Option (Nouns Being Processed)
   /// </summary>
   
   public partial class EsbnounBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// BOD Noun
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string noun { get; set; }

      /// <summary>
      /// Show BOD
      /// </summary>
      public bool showbodfl { get; set; }

      /// <summary>
      /// Sync BOD
      /// </summary>
      public bool syncbodfl { get; set; }

      /// <summary>
      /// Show BOD Max Count
      /// </summary>
      public int showmaxcnt { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Show Max BOD Size
      /// </summary>
      public decimal showmaxbodsize { get; set; }

      /// <summary>
      /// Process BOD
      /// </summary>
      public bool processbodfl { get; set; }

      /// <summary>
      /// Extra Data Level 1
      /// </summary>
      [StringValidationAttribute]
      public string extradatalevel1 { get; set; }

      /// <summary>
      /// Extra Data Level 2
      /// </summary>
      [StringValidationAttribute]
      public string extradatalevel2 { get; set; }

      /// <summary>
      /// Extra Data Level 3
      /// </summary>
      [StringValidationAttribute]
      public string extradatalevel3 { get; set; }

      /// <summary>
      /// Enable Extra Data Levels
      /// </summary>
      public bool extradataenablefl { get; set; }

      /// <summary>
      /// Extra Data Enable Level 1
      /// </summary>
      [StringValidationAttribute]
      public string edenablelev1 { get; set; }

      /// <summary>
      /// Extra Data Enable Level 2
      /// </summary>
      [StringValidationAttribute]
      public string edenablelev2 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildEsbnounBaseFromRow<T>(DataRow row) where T:EsbnounBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.noun = row.IsNull("noun") ? string.Empty : row.Field<string>("noun");
         entity.showbodfl = row.Field<bool>("showbodfl");
         entity.syncbodfl = row.Field<bool>("syncbodfl");
         entity.showmaxcnt = row.IsNull("showmaxcnt") ? 0 : row.Field<int>("showmaxcnt");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.showmaxbodsize = row.IsNull("showmaxbodsize") ? decimal.Zero : row.Field<decimal>("showmaxbodsize");
         entity.processbodfl = row.Field<bool>("processbodfl");
         entity.extradatalevel1 = row.IsNull("extradatalevel1") ? string.Empty : row.Field<string>("extradatalevel1");
         entity.extradatalevel2 = row.IsNull("extradatalevel2") ? string.Empty : row.Field<string>("extradatalevel2");
         entity.extradatalevel3 = row.IsNull("extradatalevel3") ? string.Empty : row.Field<string>("extradatalevel3");
         entity.extradataenablefl = row.Field<bool>("extradataenablefl");
         entity.edenablelev1 = row.IsNull("edenablelev1") ? string.Empty : row.Field<string>("edenablelev1");
         entity.edenablelev2 = row.IsNull("edenablelev2") ? string.Empty : row.Field<string>("edenablelev2");
         entity.rowID = row.Field<byte[]>("esbnounRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromEsbnounBase(ref DataRow row, EsbnounBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("noun", entity.noun);
         row.SetField("showbodfl", entity.showbodfl);
         row.SetField("syncbodfl", entity.syncbodfl);
         row.SetField("showmaxcnt", entity.showmaxcnt);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("showmaxbodsize", entity.showmaxbodsize);
         row.SetField("processbodfl", entity.processbodfl);
         row.SetField("extradatalevel1", entity.extradatalevel1);
         row.SetField("extradatalevel2", entity.extradatalevel2);
         row.SetField("extradatalevel3", entity.extradatalevel3);
         row.SetField("extradataenablefl", entity.extradataenablefl);
         row.SetField("edenablelev1", entity.edenablelev1);
         row.SetField("edenablelev2", entity.edenablelev2);
         row.SetField("esbnounRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, EsbnounBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("noun", entity.noun);
         row.SetField("esbnounRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	