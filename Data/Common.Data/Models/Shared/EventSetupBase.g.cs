//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SHARED
{
   /// <summary>
   /// Event Manager - Event Setup
   /// </summary>
   
   public partial class EventSetupBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Event Name
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string eventname { get; set; }

      /// <summary>
      /// Short Description
      /// </summary>
      [StringValidationAttribute]
      public string shortdesc { get; set; }

      /// <summary>
      /// Long Description
      /// </summary>
      [StringValidationAttribute]
      public string longdesc { get; set; }

      /// <summary>
      /// Source Name
      /// </summary>
      [StringValidationAttribute]
      public string sourcename { get; set; }

      /// <summary>
      /// Whse Action Flag
      /// </summary>
      public bool whseactionfl { get; set; }

      /// <summary>
      /// Customer # Action Flag
      /// </summary>
      public bool custnoactionfl { get; set; }

      /// <summary>
      /// Vendor # Action Flag
      /// </summary>
      public bool vendnoactionfl { get; set; }

      /// <summary>
      /// Product Action Flag
      /// </summary>
      public bool prodactionfl { get; set; }

      /// <summary>
      /// Standard
      /// </summary>
      [StringValidationAttribute]
      public string standardty { get; set; }

      /// <summary>
      /// Trigger Name
      /// </summary>
      [StringValidationAttribute]
      public string triggername { get; set; }

      /// <summary>
      /// Region Action Flag
      /// </summary>
      public bool regionactionfl { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Last Changed By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// user6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// user7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildEventSetupBaseFromRow<T>(DataRow row) where T:EventSetupBase, new()
      {
         T entity = new T();
         entity.eventname = row.IsNull("eventname") ? string.Empty : row.Field<string>("eventname");
         entity.shortdesc = row.IsNull("shortdesc") ? string.Empty : row.Field<string>("shortdesc");
         entity.longdesc = row.IsNull("longdesc") ? string.Empty : row.Field<string>("longdesc");
         entity.sourcename = row.IsNull("sourcename") ? string.Empty : row.Field<string>("sourcename");
         entity.whseactionfl = row.Field<bool>("whseactionfl");
         entity.custnoactionfl = row.Field<bool>("custnoactionfl");
         entity.vendnoactionfl = row.Field<bool>("vendnoactionfl");
         entity.prodactionfl = row.Field<bool>("prodactionfl");
         entity.standardty = row.IsNull("standardty") ? string.Empty : row.Field<string>("standardty");
         entity.triggername = row.IsNull("triggername") ? string.Empty : row.Field<string>("triggername");
         entity.regionactionfl = row.Field<bool>("regionactionfl");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.rowID = row.Field<byte[]>("event_setupRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromEventSetupBase(ref DataRow row, EventSetupBase entity)
      {
         row.SetField("eventname", entity.eventname);
         row.SetField("shortdesc", entity.shortdesc);
         row.SetField("longdesc", entity.longdesc);
         row.SetField("sourcename", entity.sourcename);
         row.SetField("whseactionfl", entity.whseactionfl);
         row.SetField("custnoactionfl", entity.custnoactionfl);
         row.SetField("vendnoactionfl", entity.vendnoactionfl);
         row.SetField("prodactionfl", entity.prodactionfl);
         row.SetField("standardty", entity.standardty);
         row.SetField("triggername", entity.triggername);
         row.SetField("regionactionfl", entity.regionactionfl);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("operinit", entity.operinit);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("event_setupRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, EventSetupBase entity)
      {
         row.SetField("eventname", entity.eventname);
         row.SetField("event_setupRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	