//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SHARED
{
   /// <summary>
   /// Event Manager - Event Action Definition
   /// </summary>
   
   public partial class EventSetupActionBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Event Name
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string eventname { get; set; }

      /// <summary>
      /// Seq #
      /// </summary>
      [Key,Order]
      public int actionseqno { get; set; }

      /// <summary>
      /// Whse Range Type
      /// </summary>
      [StringValidationAttribute]
      public string whserangety { get; set; }

      /// <summary>
      /// Beginning Whse
      /// </summary>
      [StringValidationAttribute]
      public string whsebeg { get; set; }

      /// <summary>
      /// Ending Whse
      /// </summary>
      [StringValidationAttribute]
      public string whseend { get; set; }

      /// <summary>
      /// Customer # Range Type
      /// </summary>
      [StringValidationAttribute]
      public string custnorangety { get; set; }

      /// <summary>
      /// Beginning Customer #
      /// </summary>
      public decimal custnobeg { get; set; }

      /// <summary>
      /// Ending Customer #
      /// </summary>
      public decimal custnoend { get; set; }

      /// <summary>
      /// Vendor # Range Type
      /// </summary>
      [StringValidationAttribute]
      public string vendnorangety { get; set; }

      /// <summary>
      /// Beginning Vendor #
      /// </summary>
      public decimal vendnobeg { get; set; }

      /// <summary>
      /// Ending Vendor #
      /// </summary>
      public decimal vendnoend { get; set; }

      /// <summary>
      /// Product Range Type
      /// </summary>
      [StringValidationAttribute]
      public string prodrangety { get; set; }

      /// <summary>
      /// Beginning Product
      /// </summary>
      [StringValidationAttribute]
      public string prodbeg { get; set; }

      /// <summary>
      /// Ending Product
      /// </summary>
      [StringValidationAttribute]
      public string prodend { get; set; }

      /// <summary>
      /// Action Type
      /// </summary>
      [StringValidationAttribute]
      public string actiontype { get; set; }

      /// <summary>
      /// Action Subject Type (Who)
      /// </summary>
      [StringValidationAttribute]
      public string actionsubjectty { get; set; }

      /// <summary>
      /// Action Subject
      /// </summary>
      [StringValidationAttribute]
      public string actionsubjectval { get; set; }

      /// <summary>
      /// Email Subject
      /// </summary>
      [StringValidationAttribute]
      public string emailsubject { get; set; }

      /// <summary>
      /// Email Text
      /// </summary>
      [StringValidationAttribute]
      public string emailtext { get; set; }

      /// <summary>
      /// Contact ID
      /// </summary>
      public decimal contactid { get; set; }

      /// <summary>
      /// CAM Activity Code
      /// </summary>
      [StringValidationAttribute]
      public string camactivitycd { get; set; }

      /// <summary>
      /// CM Activity Code
      /// </summary>
      [StringValidationAttribute]
      public string cmactivitycd { get; set; }

      /// <summary>
      /// Prospect #
      /// </summary>
      public decimal prosno { get; set; }

      /// <summary>
      /// Comment
      /// </summary>
      [StringValidationAttribute]
      public string comment { get; set; }

      /// <summary>
      /// Region Range Type
      /// </summary>
      [StringValidationAttribute]
      public string regionrangety { get; set; }

      /// <summary>
      /// Beginning Region
      /// </summary>
      [StringValidationAttribute]
      public string regionbeg { get; set; }

      /// <summary>
      /// Ending Region
      /// </summary>
      [StringValidationAttribute]
      public string regionend { get; set; }

      /// <summary>
      /// Amount Field Selection Comparison
      /// </summary>
      [StringValidationAttribute]
      public string slctamountty { get; set; }

      /// <summary>
      /// Amount Field Selection Value
      /// </summary>
      public decimal slctamountval { get; set; }

      /// <summary>
      /// Amount Field Selection Array Pos
      /// </summary>
      public int slctamountary { get; set; }

      /// <summary>
      /// Price Field Selection Comparison
      /// </summary>
      [StringValidationAttribute]
      public string slctpricety { get; set; }

      /// <summary>
      /// Price Field Selection Value
      /// </summary>
      public decimal slctpriceval { get; set; }

      /// <summary>
      /// Price Field Selection Array Pos
      /// </summary>
      public int slctpriceary { get; set; }

      /// <summary>
      /// Date Field Selection Comparison
      /// </summary>
      [StringValidationAttribute]
      public string slctdatety { get; set; }

      /// <summary>
      /// Date Field Selection Value
      /// </summary>
      public int slctdateval { get; set; }

      /// <summary>
      /// Date Field Selection Array Pos
      /// </summary>
      public int slctdateary { get; set; }

      /// <summary>
      /// Character Field Selection Comparison
      /// </summary>
      [StringValidationAttribute]
      public string slctcharty { get; set; }

      /// <summary>
      /// Character Field Selection Value
      /// </summary>
      [StringValidationAttribute]
      public string slctcharval { get; set; }

      /// <summary>
      /// Character Field Selection Array Pos
      /// </summary>
      public int slctcharary { get; set; }

      /// <summary>
      /// Progress Program to Run
      /// </summary>
      [StringValidationAttribute]
      public string programtorun { get; set; }

      /// <summary>
      /// Product Category Range Type
      /// </summary>
      [StringValidationAttribute]
      public string prodcatrangety { get; set; }

      /// <summary>
      /// Beginning Product Category
      /// </summary>
      [StringValidationAttribute]
      public string prodcatbeg { get; set; }

      /// <summary>
      /// Ending Product Category
      /// </summary>
      [StringValidationAttribute]
      public string prodcatend { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Last Changed By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// user6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// user7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Status Type
      /// </summary>
      [StringValidationAttribute]
      public string statustype { get; set; }

      /// <summary>
      /// Expire Date
      /// </summary>
      public DateTime? expiredt { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildEventSetupActionBaseFromRow<T>(DataRow row) where T:EventSetupActionBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.eventname = row.IsNull("eventname") ? string.Empty : row.Field<string>("eventname");
         entity.actionseqno = row.IsNull("actionseqno") ? 0 : row.Field<int>("actionseqno");
         entity.whserangety = row.IsNull("whserangety") ? string.Empty : row.Field<string>("whserangety");
         entity.whsebeg = row.IsNull("whsebeg") ? string.Empty : row.Field<string>("whsebeg");
         entity.whseend = row.IsNull("whseend") ? string.Empty : row.Field<string>("whseend");
         entity.custnorangety = row.IsNull("custnorangety") ? string.Empty : row.Field<string>("custnorangety");
         entity.custnobeg = row.IsNull("custnobeg") ? decimal.Zero : row.Field<decimal>("custnobeg");
         entity.custnoend = row.IsNull("custnoend") ? decimal.Zero : row.Field<decimal>("custnoend");
         entity.vendnorangety = row.IsNull("vendnorangety") ? string.Empty : row.Field<string>("vendnorangety");
         entity.vendnobeg = row.IsNull("vendnobeg") ? decimal.Zero : row.Field<decimal>("vendnobeg");
         entity.vendnoend = row.IsNull("vendnoend") ? decimal.Zero : row.Field<decimal>("vendnoend");
         entity.prodrangety = row.IsNull("prodrangety") ? string.Empty : row.Field<string>("prodrangety");
         entity.prodbeg = row.IsNull("prodbeg") ? string.Empty : row.Field<string>("prodbeg");
         entity.prodend = row.IsNull("prodend") ? string.Empty : row.Field<string>("prodend");
         entity.actiontype = row.IsNull("actiontype") ? string.Empty : row.Field<string>("actiontype");
         entity.actionsubjectty = row.IsNull("actionsubjectty") ? string.Empty : row.Field<string>("actionsubjectty");
         entity.actionsubjectval = row.IsNull("actionsubjectval") ? string.Empty : row.Field<string>("actionsubjectval");
         entity.emailsubject = row.IsNull("emailsubject") ? string.Empty : row.Field<string>("emailsubject");
         entity.emailtext = row.IsNull("emailtext") ? string.Empty : row.Field<string>("emailtext");
         entity.contactid = row.IsNull("contactid") ? decimal.Zero : row.Field<decimal>("contactid");
         entity.camactivitycd = row.IsNull("camactivitycd") ? string.Empty : row.Field<string>("camactivitycd");
         entity.cmactivitycd = row.IsNull("cmactivitycd") ? string.Empty : row.Field<string>("cmactivitycd");
         entity.prosno = row.IsNull("prosno") ? decimal.Zero : row.Field<decimal>("prosno");
         entity.comment = row.IsNull("comment") ? string.Empty : row.Field<string>("comment");
         entity.regionrangety = row.IsNull("regionrangety") ? string.Empty : row.Field<string>("regionrangety");
         entity.regionbeg = row.IsNull("regionbeg") ? string.Empty : row.Field<string>("regionbeg");
         entity.regionend = row.IsNull("regionend") ? string.Empty : row.Field<string>("regionend");
         entity.slctamountty = row.IsNull("slctamountty") ? string.Empty : row.Field<string>("slctamountty");
         entity.slctamountval = row.IsNull("slctamountval") ? decimal.Zero : row.Field<decimal>("slctamountval");
         entity.slctamountary = row.IsNull("slctamountary") ? 0 : row.Field<int>("slctamountary");
         entity.slctpricety = row.IsNull("slctpricety") ? string.Empty : row.Field<string>("slctpricety");
         entity.slctpriceval = row.IsNull("slctpriceval") ? decimal.Zero : row.Field<decimal>("slctpriceval");
         entity.slctpriceary = row.IsNull("slctpriceary") ? 0 : row.Field<int>("slctpriceary");
         entity.slctdatety = row.IsNull("slctdatety") ? string.Empty : row.Field<string>("slctdatety");
         entity.slctdateval = row.IsNull("slctdateval") ? 0 : row.Field<int>("slctdateval");
         entity.slctdateary = row.IsNull("slctdateary") ? 0 : row.Field<int>("slctdateary");
         entity.slctcharty = row.IsNull("slctcharty") ? string.Empty : row.Field<string>("slctcharty");
         entity.slctcharval = row.IsNull("slctcharval") ? string.Empty : row.Field<string>("slctcharval");
         entity.slctcharary = row.IsNull("slctcharary") ? 0 : row.Field<int>("slctcharary");
         entity.programtorun = row.IsNull("programtorun") ? string.Empty : row.Field<string>("programtorun");
         entity.prodcatrangety = row.IsNull("prodcatrangety") ? string.Empty : row.Field<string>("prodcatrangety");
         entity.prodcatbeg = row.IsNull("prodcatbeg") ? string.Empty : row.Field<string>("prodcatbeg");
         entity.prodcatend = row.IsNull("prodcatend") ? string.Empty : row.Field<string>("prodcatend");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.statustype = row.IsNull("statustype") ? string.Empty : row.Field<string>("statustype");
         entity.expiredt = row.Field<DateTime?>("expiredt");
         entity.rowID = row.Field<byte[]>("event_setup_actionRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromEventSetupActionBase(ref DataRow row, EventSetupActionBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("eventname", entity.eventname);
         row.SetField("actionseqno", entity.actionseqno);
         row.SetField("whserangety", entity.whserangety);
         row.SetField("whsebeg", entity.whsebeg);
         row.SetField("whseend", entity.whseend);
         row.SetField("custnorangety", entity.custnorangety);
         row.SetField("custnobeg", entity.custnobeg);
         row.SetField("custnoend", entity.custnoend);
         row.SetField("vendnorangety", entity.vendnorangety);
         row.SetField("vendnobeg", entity.vendnobeg);
         row.SetField("vendnoend", entity.vendnoend);
         row.SetField("prodrangety", entity.prodrangety);
         row.SetField("prodbeg", entity.prodbeg);
         row.SetField("prodend", entity.prodend);
         row.SetField("actiontype", entity.actiontype);
         row.SetField("actionsubjectty", entity.actionsubjectty);
         row.SetField("actionsubjectval", entity.actionsubjectval);
         row.SetField("emailsubject", entity.emailsubject);
         row.SetField("emailtext", entity.emailtext);
         row.SetField("contactid", entity.contactid);
         row.SetField("camactivitycd", entity.camactivitycd);
         row.SetField("cmactivitycd", entity.cmactivitycd);
         row.SetField("prosno", entity.prosno);
         row.SetField("comment", entity.comment);
         row.SetField("regionrangety", entity.regionrangety);
         row.SetField("regionbeg", entity.regionbeg);
         row.SetField("regionend", entity.regionend);
         row.SetField("slctamountty", entity.slctamountty);
         row.SetField("slctamountval", entity.slctamountval);
         row.SetField("slctamountary", entity.slctamountary);
         row.SetField("slctpricety", entity.slctpricety);
         row.SetField("slctpriceval", entity.slctpriceval);
         row.SetField("slctpriceary", entity.slctpriceary);
         row.SetField("slctdatety", entity.slctdatety);
         row.SetField("slctdateval", entity.slctdateval);
         row.SetField("slctdateary", entity.slctdateary);
         row.SetField("slctcharty", entity.slctcharty);
         row.SetField("slctcharval", entity.slctcharval);
         row.SetField("slctcharary", entity.slctcharary);
         row.SetField("programtorun", entity.programtorun);
         row.SetField("prodcatrangety", entity.prodcatrangety);
         row.SetField("prodcatbeg", entity.prodcatbeg);
         row.SetField("prodcatend", entity.prodcatend);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("operinit", entity.operinit);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("statustype", entity.statustype);
         row.SetField("expiredt", entity.expiredt);
         row.SetField("event_setup_actionRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, EventSetupActionBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("eventname", entity.eventname);
         row.SetField("actionseqno", entity.actionseqno);
         row.SetField("event_setup_actionRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	