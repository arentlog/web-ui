//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SHARED
{
   /// <summary>
   /// SX patch conversion programs.
   /// </summary>
   
   public partial class ConvBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Version
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string version { get; set; }

      /// <summary>
      /// Program Name
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string prognm { get; set; }

      /// <summary>
      /// Sequence
      /// </summary>
      [Key,Order]
      public int seqno { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Start Date
      /// </summary>
      public DateTime? startdt { get; set; }

      /// <summary>
      /// End Date
      /// </summary>
      public DateTime? enddt { get; set; }

      /// <summary>
      /// Start Time
      /// </summary>
      [StringValidationAttribute]
      public string starttm { get; set; }

      /// <summary>
      /// End Time
      /// </summary>
      [StringValidationAttribute]
      public string endtm { get; set; }

      /// <summary>
      /// Patch Level
      /// </summary>
      public int patch { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string descrip { get; set; }

      /// <summary>
      /// Recovery Data
      /// </summary>
      [StringValidationAttribute]
      public string recoverydata { get; set; }

      /// <summary>
      /// Records Created
      /// </summary>
      public decimal reccreated { get; set; }

      /// <summary>
      /// Records Updated
      /// </summary>
      public decimal recupdated { get; set; }

      /// <summary>
      /// Records Deleted
      /// </summary>
      public decimal recdeleted { get; set; }

      /// <summary>
      /// Criteria
      /// </summary>
      [StringValidationAttribute]
      public string criteria { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildConvBaseFromRow<T>(DataRow row) where T:ConvBase, new()
      {
         T entity = new T();
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.startdt = row.Field<DateTime?>("startdt");
         entity.enddt = row.Field<DateTime?>("enddt");
         entity.starttm = row.IsNull("starttm") ? string.Empty : row.Field<string>("starttm");
         entity.endtm = row.IsNull("endtm") ? string.Empty : row.Field<string>("endtm");
         entity.patch = row.IsNull("patch") ? 0 : row.Field<int>("patch");
         entity.version = row.IsNull("version") ? string.Empty : row.Field<string>("version");
         entity.prognm = row.IsNull("prognm") ? string.Empty : row.Field<string>("prognm");
         entity.descrip = row.IsNull("descrip") ? string.Empty : row.Field<string>("descrip");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.recoverydata = row.IsNull("recoverydata") ? string.Empty : row.Field<string>("recoverydata");
         entity.reccreated = row.IsNull("reccreated") ? decimal.Zero : row.Field<decimal>("reccreated");
         entity.recupdated = row.IsNull("recupdated") ? decimal.Zero : row.Field<decimal>("recupdated");
         entity.recdeleted = row.IsNull("recdeleted") ? decimal.Zero : row.Field<decimal>("recdeleted");
         entity.criteria = row.IsNull("criteria") ? string.Empty : row.Field<string>("criteria");
         entity.rowID = row.Field<byte[]>("convRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromConvBase(ref DataRow row, ConvBase entity)
      {
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("startdt", entity.startdt);
         row.SetField("enddt", entity.enddt);
         row.SetField("starttm", entity.starttm);
         row.SetField("endtm", entity.endtm);
         row.SetField("patch", entity.patch);
         row.SetField("version", entity.version);
         row.SetField("prognm", entity.prognm);
         row.SetField("descrip", entity.descrip);
         row.SetField("seqno", entity.seqno);
         row.SetField("recoverydata", entity.recoverydata);
         row.SetField("reccreated", entity.reccreated);
         row.SetField("recupdated", entity.recupdated);
         row.SetField("recdeleted", entity.recdeleted);
         row.SetField("criteria", entity.criteria);
         row.SetField("convRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ConvBase entity)
      {
         row.SetField("version", entity.version);
         row.SetField("prognm", entity.prognm);
         row.SetField("seqno", entity.seqno);
         row.SetField("convRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	