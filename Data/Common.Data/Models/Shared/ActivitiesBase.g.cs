//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SHARED
{
   /// <summary>
   /// Activities Master
   /// </summary>
   
   public partial class ActivitiesBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Activity ID
      /// </summary>
      [Key,Order]
      public decimal activityid { get; set; }

      /// <summary>
      /// Operator Initials
      /// </summary>
      [StringValidationAttribute]
      public string oper2 { get; set; }

      /// <summary>
      /// Activity
      /// </summary>
      [StringValidationAttribute]
      public string activitycd { get; set; }

      /// <summary>
      /// Actual Start Date
      /// </summary>
      public DateTime? actstartdt { get; set; }

      /// <summary>
      /// Actual Start Time
      /// </summary>
      [StringValidationAttribute]
      public string actstarttm { get; set; }

      /// <summary>
      /// Actual Stop Date
      /// </summary>
      public DateTime? actstopdt { get; set; }

      /// <summary>
      /// Actual Stop Time
      /// </summary>
      [StringValidationAttribute]
      public string actstoptm { get; set; }

      /// <summary>
      /// Duration
      /// </summary>
      [StringValidationAttribute]
      public string durationtm { get; set; }

      /// <summary>
      /// Comment
      /// </summary>
      [StringValidationAttribute]
      public string comment { get; set; }

      /// <summary>
      /// Contact Name
      /// </summary>
      [StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Phone
      /// </summary>
      [StringValidationAttribute]
      public string phoneno { get; set; }

      /// <summary>
      /// Result
      /// </summary>
      [StringValidationAttribute]
      public string resultcd { get; set; }

      /// <summary>
      /// Scheduled Date
      /// </summary>
      public DateTime? schstartdt { get; set; }

      /// <summary>
      /// schstarttm
      /// </summary>
      [StringValidationAttribute]
      public string schstarttm { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [StringValidationAttribute]
      public string statuscd { get; set; }

      /// <summary>
      /// Priority
      /// </summary>
      public int priority { get; set; }

      /// <summary>
      /// Parent Activity ID
      /// </summary>
      public decimal parentactvid { get; set; }

      /// <summary>
      /// Contact ID
      /// </summary>
      public decimal contactid { get; set; }

      /// <summary>
      /// Subject Type
      /// </summary>
      [StringValidationAttribute]
      public string subjecttype { get; set; }

      /// <summary>
      /// Subject Primary Key
      /// </summary>
      [StringValidationAttribute]
      public string subjectprimarykey { get; set; }

      /// <summary>
      /// Subject Secondary Key
      /// </summary>
      [StringValidationAttribute]
      public string subjectsecondkey { get; set; }

      /// <summary>
      /// Document Type
      /// </summary>
      [StringValidationAttribute]
      public string doctype { get; set; }

      /// <summary>
      /// Order #
      /// </summary>
      public int docorderno { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      public int docordersuf { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Message Window Select Flag
      /// </summary>
      public bool msgwinselectfl { get; set; }

      /// <summary>
      /// Group Name
      /// </summary>
      [StringValidationAttribute]
      public string groupnm { get; set; }

      /// <summary>
      /// Group Instance Sequence #
      /// </summary>
      public int groupseqno { get; set; }

      /// <summary>
      /// Job Identifier
      /// </summary>
      [StringValidationAttribute]
      public string docjobid { get; set; }

      /// <summary>
      /// Revision #
      /// </summary>
      public int docjobrevno { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildActivitiesBaseFromRow<T>(DataRow row) where T:ActivitiesBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.activityid = row.IsNull("activityid") ? decimal.Zero : row.Field<decimal>("activityid");
         entity.oper2 = row.IsNull("oper2") ? string.Empty : row.Field<string>("oper2");
         entity.activitycd = row.IsNull("activitycd") ? string.Empty : row.Field<string>("activitycd");
         entity.actstartdt = row.Field<DateTime?>("actstartdt");
         entity.actstarttm = row.IsNull("actstarttm") ? string.Empty : row.Field<string>("actstarttm");
         entity.actstopdt = row.Field<DateTime?>("actstopdt");
         entity.actstoptm = row.IsNull("actstoptm") ? string.Empty : row.Field<string>("actstoptm");
         entity.durationtm = row.IsNull("durationtm") ? string.Empty : row.Field<string>("durationtm");
         entity.comment = row.IsNull("comment") ? string.Empty : row.Field<string>("comment");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.phoneno = row.IsNull("phoneno") ? string.Empty : row.Field<string>("phoneno");
         entity.resultcd = row.IsNull("resultcd") ? string.Empty : row.Field<string>("resultcd");
         entity.schstartdt = row.Field<DateTime?>("schstartdt");
         entity.schstarttm = row.IsNull("schstarttm") ? string.Empty : row.Field<string>("schstarttm");
         entity.statuscd = row.IsNull("statuscd") ? string.Empty : row.Field<string>("statuscd");
         entity.priority = row.IsNull("priority") ? 0 : row.Field<int>("priority");
         entity.parentactvid = row.IsNull("parentactvid") ? decimal.Zero : row.Field<decimal>("parentactvid");
         entity.contactid = row.IsNull("contactid") ? decimal.Zero : row.Field<decimal>("contactid");
         entity.subjecttype = row.IsNull("subjecttype") ? string.Empty : row.Field<string>("subjecttype");
         entity.subjectprimarykey = row.IsNull("subjectprimarykey") ? string.Empty : row.Field<string>("subjectprimarykey");
         entity.subjectsecondkey = row.IsNull("subjectsecondkey") ? string.Empty : row.Field<string>("subjectsecondkey");
         entity.doctype = row.IsNull("doctype") ? string.Empty : row.Field<string>("doctype");
         entity.docorderno = row.IsNull("docorderno") ? 0 : row.Field<int>("docorderno");
         entity.docordersuf = row.IsNull("docordersuf") ? 0 : row.Field<int>("docordersuf");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.msgwinselectfl = row.Field<bool>("msgwinselectfl");
         entity.groupnm = row.IsNull("groupnm") ? string.Empty : row.Field<string>("groupnm");
         entity.groupseqno = row.IsNull("groupseqno") ? 0 : row.Field<int>("groupseqno");
         entity.docjobid = row.IsNull("docjobid") ? string.Empty : row.Field<string>("docjobid");
         entity.docjobrevno = row.IsNull("docjobrevno") ? 0 : row.Field<int>("docjobrevno");
         entity.rowID = row.Field<byte[]>("activitiesRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromActivitiesBase(ref DataRow row, ActivitiesBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("activityid", entity.activityid);
         row.SetField("oper2", entity.oper2);
         row.SetField("activitycd", entity.activitycd);
         row.SetField("actstartdt", entity.actstartdt);
         row.SetField("actstarttm", entity.actstarttm);
         row.SetField("actstopdt", entity.actstopdt);
         row.SetField("actstoptm", entity.actstoptm);
         row.SetField("durationtm", entity.durationtm);
         row.SetField("comment", entity.comment);
         row.SetField("name", entity.name);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("phoneno", entity.phoneno);
         row.SetField("resultcd", entity.resultcd);
         row.SetField("schstartdt", entity.schstartdt);
         row.SetField("schstarttm", entity.schstarttm);
         row.SetField("statuscd", entity.statuscd);
         row.SetField("priority", entity.priority);
         row.SetField("parentactvid", entity.parentactvid);
         row.SetField("contactid", entity.contactid);
         row.SetField("subjecttype", entity.subjecttype);
         row.SetField("subjectprimarykey", entity.subjectprimarykey);
         row.SetField("subjectsecondkey", entity.subjectsecondkey);
         row.SetField("doctype", entity.doctype);
         row.SetField("docorderno", entity.docorderno);
         row.SetField("docordersuf", entity.docordersuf);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("whse", entity.whse);
         row.SetField("msgwinselectfl", entity.msgwinselectfl);
         row.SetField("groupnm", entity.groupnm);
         row.SetField("groupseqno", entity.groupseqno);
         row.SetField("docjobid", entity.docjobid);
         row.SetField("docjobrevno", entity.docjobrevno);
         row.SetField("activitiesRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ActivitiesBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("activityid", entity.activityid);
         row.SetField("activitiesRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	