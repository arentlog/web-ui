//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SHARED
{
   /// <summary>
   /// Parcel Management Shipping Request
   /// </summary>
   
   public partial class PmesBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Request #
      /// </summary>
      [Key,Order]
      public int shipreqno { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string zipcd { get; set; }

      /// <summary>
      /// Requested By
      /// </summary>
      [StringValidationAttribute]
      public string reqinit { get; set; }

      /// <summary>
      /// Approved By
      /// </summary>
      [StringValidationAttribute]
      public string apprinit { get; set; }

      /// <summary>
      /// Ship Via
      /// </summary>
      [StringValidationAttribute]
      public string shipviaty { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string descrip1 { get; set; }
      [StringValidationAttribute]
      public string descrip2 { get; set; }

      /// <summary>
      /// Shipped
      /// </summary>
      public DateTime? shipdt { get; set; }

      /// <summary>
      /// By
      /// </summary>
      [StringValidationAttribute]
      public string shipinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Shipped
      /// </summary>
      public bool shippedfl { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// # Packages
      /// </summary>
      public int nopackages { get; set; }

      /// <summary>
      /// Carrier
      /// </summary>
      [StringValidationAttribute]
      public string carrierid { get; set; }

      /// <summary>
      /// Service Type
      /// </summary>
      [StringValidationAttribute]
      public string servtype { get; set; }

      /// <summary>
      /// Zone
      /// </summary>
      [StringValidationAttribute]
      public string zone { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// Manual Zone Flag
      /// </summary>
      public bool manzonefl { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal totweight { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// Freight Charges
      /// </summary>
      public decimal totfreight { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// Shipping Point
      /// </summary>
      [StringValidationAttribute]
      public string shippingpt { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [StringValidationAttribute]
      public string sendtype { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// Sent To
      /// </summary>
      public decimal sendno { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// Open Initials
      /// </summary>
      [StringValidationAttribute]
      public string openinit { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr3 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.addr1 + "," + this.city + "," + this.state + "," + this.zipcd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildPmesBaseFromRow<T>(DataRow row) where T:PmesBase, new()
      {
         T entity = new T();
         entity.shipreqno = row.IsNull("shipreqno") ? 0 : row.Field<int>("shipreqno");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.reqinit = row.IsNull("reqinit") ? string.Empty : row.Field<string>("reqinit");
         entity.apprinit = row.IsNull("apprinit") ? string.Empty : row.Field<string>("apprinit");
         entity.shipviaty = row.IsNull("shipviaty") ? string.Empty : row.Field<string>("shipviaty");
         entity.descrip1 = row.IsNull("descrip1") ? string.Empty : row.Field<string>("descrip1");
         entity.descrip2 = row.IsNull("descrip2") ? string.Empty : row.Field<string>("descrip2");
         entity.shipdt = row.Field<DateTime?>("shipdt");
         entity.shipinit = row.IsNull("shipinit") ? string.Empty : row.Field<string>("shipinit");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.shippedfl = row.Field<bool>("shippedfl");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.nopackages = row.IsNull("nopackages") ? 0 : row.Field<int>("nopackages");
         entity.carrierid = row.IsNull("carrierid") ? string.Empty : row.Field<string>("carrierid");
         entity.servtype = row.IsNull("servtype") ? string.Empty : row.Field<string>("servtype");
         entity.zone = row.IsNull("zone") ? string.Empty : row.Field<string>("zone");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.manzonefl = row.Field<bool>("manzonefl");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.totweight = row.IsNull("totweight") ? decimal.Zero : row.Field<decimal>("totweight");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.totfreight = row.IsNull("totfreight") ? decimal.Zero : row.Field<decimal>("totfreight");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.shippingpt = row.IsNull("shippingpt") ? string.Empty : row.Field<string>("shippingpt");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.sendtype = row.IsNull("sendtype") ? string.Empty : row.Field<string>("sendtype");
         entity.user6 = row.Field<decimal?>("user6");
         entity.sendno = row.IsNull("sendno") ? decimal.Zero : row.Field<decimal>("sendno");
         entity.user7 = row.Field<decimal?>("user7");
         entity.openinit = row.IsNull("openinit") ? string.Empty : row.Field<string>("openinit");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.rowID = row.Field<byte[]>("pmesRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPmesBase(ref DataRow row, PmesBase entity)
      {
         row.SetField("shipreqno", entity.shipreqno);
         row.SetField("name", entity.name);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("reqinit", entity.reqinit);
         row.SetField("apprinit", entity.apprinit);
         row.SetField("shipviaty", entity.shipviaty);
         row.SetField("descrip1", entity.descrip1);
         row.SetField("descrip2", entity.descrip2);
         row.SetField("shipdt", entity.shipdt);
         row.SetField("shipinit", entity.shipinit);
         row.SetField("cono", entity.cono);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("shippedfl", entity.shippedfl);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("nopackages", entity.nopackages);
         row.SetField("carrierid", entity.carrierid);
         row.SetField("servtype", entity.servtype);
         row.SetField("zone", entity.zone);
         row.SetField("user1", entity.user1);
         row.SetField("manzonefl", entity.manzonefl);
         row.SetField("user2", entity.user2);
         row.SetField("totweight", entity.totweight);
         row.SetField("user3", entity.user3);
         row.SetField("totfreight", entity.totfreight);
         row.SetField("user4", entity.user4);
         row.SetField("shippingpt", entity.shippingpt);
         row.SetField("user5", entity.user5);
         row.SetField("sendtype", entity.sendtype);
         row.SetField("user6", entity.user6);
         row.SetField("sendno", entity.sendno);
         row.SetField("user7", entity.user7);
         row.SetField("openinit", entity.openinit);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("addr3", entity.addr3);
         row.SetField("pmesRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, PmesBase entity)
      {
         row.SetField("shipreqno", entity.shipreqno);
         row.SetField("cono", entity.cono);
         row.SetField("pmesRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	