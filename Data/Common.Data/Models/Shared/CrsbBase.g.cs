//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SHARED
{
   /// <summary>
   /// R&D Check Rec Setup Banks
   /// </summary>
   
   public partial class CrsbBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Bank #
      /// </summary>
      [Key,Order]
      public int bankno { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string zipcd { get; set; }

      /// <summary>
      /// Phone
      /// </summary>
      [StringValidationAttribute]
      public string phoneno { get; set; }

      /// <summary>
      /// Bank Account #
      /// </summary>
      [StringValidationAttribute]
      public string bankacct { get; set; }

      /// <summary>
      /// Div#
      /// </summary>
      public int gldivno { get; set; }

      /// <summary>
      /// Dept#
      /// </summary>
      public int gldeptno { get; set; }

      /// <summary>
      /// Acct#
      /// </summary>
      public int glacctno { get; set; }

      /// <summary>
      /// Sub#
      /// </summary>
      public int glsubno { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      public bool statustype { get; set; }

      /// <summary>
      /// Current Balance
      /// </summary>
      public decimal curbookbal { get; set; }

      /// <summary>
      /// Bank Balance
      /// </summary>
      public decimal lastbnkbal { get; set; }

      /// <summary>
      /// Last Verified Balance
      /// </summary>
      public decimal lastverbal { get; set; }

      /// <summary>
      /// Last Check
      /// </summary>
      public DateTime? lastchkdt { get; set; }

      /// <summary>
      /// Last Balance
      /// </summary>
      public DateTime? lastbaldt { get; set; }

      /// <summary>
      /// Check #
      /// </summary>
      public int lastchkno { get; set; }

      /// <summary>
      /// Adjustment #
      /// </summary>
      public int lastadjno { get; set; }

      /// <summary>
      /// Transfer Out #
      /// </summary>
      public int lastoutno { get; set; }

      /// <summary>
      /// Deposit #
      /// </summary>
      public int lastdepno { get; set; }

      /// <summary>
      /// Interest #
      /// </summary>
      public int lastintno { get; set; }

      /// <summary>
      /// Charge #
      /// </summary>
      public int lastchgeno { get; set; }

      /// <summary>
      /// Transfer In #
      /// </summary>
      public int lastinno { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Trial Bal #
      /// </summary>
      public int lasttrialno { get; set; }

      /// <summary>
      /// Last Bank Bal #
      /// </summary>
      public int lastbalno { get; set; }

      /// <summary>
      /// Currency
      /// </summary>
      [StringValidationAttribute]
      public string currencyty { get; set; }

      /// <summary>
      /// Division #
      /// </summary>
      public int divno { get; set; }

      /// <summary>
      /// Transit Routing #
      /// </summary>
      [StringValidationAttribute]
      public string transrouteno { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr3 { get; set; }

      /// <summary>
      /// Chk Open Init
      /// </summary>
      [StringValidationAttribute]
      public string chkopeninit { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// BACS Format
      /// </summary>
      [StringValidationAttribute]
      public string bacsfrmt { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }

      /// <summary>
      /// NACHA Batch No
      /// </summary>
      public int batchno { get; set; }

      /// <summary>
      /// NACHA Modifier
      /// </summary>
      public int modifier { get; set; }

      /// <summary>
      /// NACHA Company ID
      /// </summary>
      [StringValidationAttribute]
      public string companyid { get; set; }

      /// <summary>
      /// NACHA Modifier Date
      /// </summary>
      public DateTime? moddate { get; set; }

      /// <summary>
      /// Payment Type
      /// </summary>
      public int paymentty { get; set; }

      /// <summary>
      /// Merchant User ID
      /// </summary>
      [StringValidationAttribute]
      public string merchantuserid { get; set; }

      /// <summary>
      /// Merchant User Password
      /// </summary>
      [StringValidationAttribute]
      public string merchantuserpw { get; set; }

      /// <summary>
      /// Last ACH Number Used
      /// </summary>
      public int lastachno { get; set; }

      /// <summary>
      /// Last ACH Date
      /// </summary>
      public DateTime? lastachdt { get; set; }

      /// <summary>
      /// Merchant ID
      /// </summary>
      [StringValidationAttribute]
      public string merchantid { get; set; }

      /// <summary>
      /// Positive Pay Type
      /// </summary>
      [StringValidationAttribute]
      public string pospaytype { get; set; }

      /// <summary>
      /// Positive Pay Void
      /// </summary>
      [StringValidationAttribute]
      public string pospayvoid { get; set; }

      /// <summary>
      /// Positive Pay URL
      /// </summary>
      [StringValidationAttribute]
      public string pospayurl { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.addr1 + "," + this.city + "," + this.state + "," + this.zipcd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildCrsbBaseFromRow<T>(DataRow row) where T:CrsbBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.bankno = row.IsNull("bankno") ? 0 : row.Field<int>("bankno");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.phoneno = row.IsNull("phoneno") ? string.Empty : row.Field<string>("phoneno");
         entity.bankacct = row.IsNull("bankacct") ? string.Empty : row.Field<string>("bankacct");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.statustype = row.Field<bool>("statustype");
         entity.curbookbal = row.IsNull("curbookbal") ? decimal.Zero : row.Field<decimal>("curbookbal");
         entity.lastbnkbal = row.IsNull("lastbnkbal") ? decimal.Zero : row.Field<decimal>("lastbnkbal");
         entity.lastverbal = row.IsNull("lastverbal") ? decimal.Zero : row.Field<decimal>("lastverbal");
         entity.lastchkdt = row.Field<DateTime?>("lastchkdt");
         entity.lastbaldt = row.Field<DateTime?>("lastbaldt");
         entity.lastchkno = row.IsNull("lastchkno") ? 0 : row.Field<int>("lastchkno");
         entity.lastadjno = row.IsNull("lastadjno") ? 0 : row.Field<int>("lastadjno");
         entity.lastoutno = row.IsNull("lastoutno") ? 0 : row.Field<int>("lastoutno");
         entity.lastdepno = row.IsNull("lastdepno") ? 0 : row.Field<int>("lastdepno");
         entity.lastintno = row.IsNull("lastintno") ? 0 : row.Field<int>("lastintno");
         entity.lastchgeno = row.IsNull("lastchgeno") ? 0 : row.Field<int>("lastchgeno");
         entity.lastinno = row.IsNull("lastinno") ? 0 : row.Field<int>("lastinno");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.lasttrialno = row.IsNull("lasttrialno") ? 0 : row.Field<int>("lasttrialno");
         entity.lastbalno = row.IsNull("lastbalno") ? 0 : row.Field<int>("lastbalno");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.divno = row.IsNull("divno") ? 0 : row.Field<int>("divno");
         entity.transrouteno = row.IsNull("transrouteno") ? string.Empty : row.Field<string>("transrouteno");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.chkopeninit = row.IsNull("chkopeninit") ? string.Empty : row.Field<string>("chkopeninit");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.bacsfrmt = row.IsNull("bacsfrmt") ? string.Empty : row.Field<string>("bacsfrmt");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.batchno = row.IsNull("batchno") ? 0 : row.Field<int>("batchno");
         entity.modifier = row.IsNull("modifier") ? 0 : row.Field<int>("modifier");
         entity.companyid = row.IsNull("companyid") ? string.Empty : row.Field<string>("companyid");
         entity.moddate = row.Field<DateTime?>("moddate");
         entity.paymentty = row.IsNull("paymentty") ? 0 : row.Field<int>("paymentty");
         entity.merchantuserid = row.IsNull("merchantuserid") ? string.Empty : row.Field<string>("merchantuserid");
         entity.merchantuserpw = row.IsNull("merchantuserpw") ? string.Empty : row.Field<string>("merchantuserpw");
         entity.lastachno = row.IsNull("lastachno") ? 0 : row.Field<int>("lastachno");
         entity.lastachdt = row.Field<DateTime?>("lastachdt");
         entity.merchantid = row.IsNull("merchantid") ? string.Empty : row.Field<string>("merchantid");
         entity.pospaytype = row.IsNull("pospaytype") ? string.Empty : row.Field<string>("pospaytype");
         entity.pospayvoid = row.IsNull("pospayvoid") ? string.Empty : row.Field<string>("pospayvoid");
         entity.pospayurl = row.IsNull("pospayurl") ? string.Empty : row.Field<string>("pospayurl");
         entity.rowID = row.Field<byte[]>("crsbRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromCrsbBase(ref DataRow row, CrsbBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("bankno", entity.bankno);
         row.SetField("name", entity.name);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("phoneno", entity.phoneno);
         row.SetField("bankacct", entity.bankacct);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("statustype", entity.statustype);
         row.SetField("curbookbal", entity.curbookbal);
         row.SetField("lastbnkbal", entity.lastbnkbal);
         row.SetField("lastverbal", entity.lastverbal);
         row.SetField("lastchkdt", entity.lastchkdt);
         row.SetField("lastbaldt", entity.lastbaldt);
         row.SetField("lastchkno", entity.lastchkno);
         row.SetField("lastadjno", entity.lastadjno);
         row.SetField("lastoutno", entity.lastoutno);
         row.SetField("lastdepno", entity.lastdepno);
         row.SetField("lastintno", entity.lastintno);
         row.SetField("lastchgeno", entity.lastchgeno);
         row.SetField("lastinno", entity.lastinno);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("lasttrialno", entity.lasttrialno);
         row.SetField("lastbalno", entity.lastbalno);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("divno", entity.divno);
         row.SetField("transrouteno", entity.transrouteno);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("addr3", entity.addr3);
         row.SetField("chkopeninit", entity.chkopeninit);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("bacsfrmt", entity.bacsfrmt);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("batchno", entity.batchno);
         row.SetField("modifier", entity.modifier);
         row.SetField("companyid", entity.companyid);
         row.SetField("moddate", entity.moddate);
         row.SetField("paymentty", entity.paymentty);
         row.SetField("merchantuserid", entity.merchantuserid);
         row.SetField("merchantuserpw", entity.merchantuserpw);
         row.SetField("lastachno", entity.lastachno);
         row.SetField("lastachdt", entity.lastachdt);
         row.SetField("merchantid", entity.merchantid);
         row.SetField("pospaytype", entity.pospaytype);
         row.SetField("pospayvoid", entity.pospayvoid);
         row.SetField("pospayurl", entity.pospayurl);
         row.SetField("crsbRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, CrsbBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("bankno", entity.bankno);
         row.SetField("crsbRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	