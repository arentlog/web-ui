//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SHARED
{
   /// <summary>
   /// CC Transactions
   /// </summary>
   
   public partial class CctransBase: ModelBase
   {

      /// <summary>
      /// ID
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string recordid { get; set; }

      /// <summary>
      /// reqstream
      /// </summary>
      public string reqstream { get; set; }

      /// <summary>
      /// ansstream
      /// </summary>
      public string ansstream { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [StringValidationAttribute]
      public string statusty { get; set; }

      /// <summary>
      /// FileName
      /// </summary>
      [StringValidationAttribute]
      public string filename { get; set; }

      /// <summary>
      /// Entered
      /// </summary>
      public DateTime? enterdt { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildCctransBaseFromRow<T>(DataRow row) where T:CctransBase, new()
      {
         T entity = new T();
         entity.recordid = row.IsNull("recordid") ? string.Empty : row.Field<string>("recordid");
         entity.reqstream = row.IsNull("reqstream") ? string.Empty : row.Field<string>("reqstream");
         entity.ansstream = row.IsNull("ansstream") ? string.Empty : row.Field<string>("ansstream");
         entity.statusty = row.IsNull("statusty") ? string.Empty : row.Field<string>("statusty");
         entity.filename = row.IsNull("filename") ? string.Empty : row.Field<string>("filename");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("cctransRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromCctransBase(ref DataRow row, CctransBase entity)
      {
         row.SetField("recordid", entity.recordid);
         row.SetField("reqstream", entity.reqstream);
         row.SetField("ansstream", entity.ansstream);
         row.SetField("statusty", entity.statusty);
         row.SetField("filename", entity.filename);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("cctransRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, CctransBase entity)
      {
         row.SetField("recordid", entity.recordid);
         row.SetField("cctransRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	