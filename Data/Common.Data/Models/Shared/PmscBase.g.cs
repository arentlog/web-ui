//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SHARED
{
   /// <summary>
   /// Parcel Management Carrier
   /// </summary>
   
   public partial class PmscBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Carrier
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string carrierid { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string zipcd { get; set; }

      /// <summary>
      /// Manifest #
      /// </summary>
      public int manifestno { get; set; }

      /// <summary>
      /// Round Weights
      /// </summary>
      [StringValidationAttribute]
      public string roundtype { get; set; }

      /// <summary>
      /// Header
      /// </summary>
      [StringValidationAttribute]
      public string extrahdr1 { get; set; }
      [StringValidationAttribute]
      public string extrahdr2 { get; set; }
      [StringValidationAttribute]
      public string extrahdr3 { get; set; }
      [StringValidationAttribute]
      public string extrahdr4 { get; set; }
      [StringValidationAttribute]
      public string extrahdr5 { get; set; }
      [StringValidationAttribute]
      public string extrahdr6 { get; set; }
      [StringValidationAttribute]
      public string extrahdr7 { get; set; }
      [StringValidationAttribute]
      public string extrahdr8 { get; set; }
      [StringValidationAttribute]
      public string extrahdr9 { get; set; }
      [StringValidationAttribute]
      public string extrahdr10 { get; set; }
      [StringValidationAttribute]
      public string extrahdr11 { get; set; }
      [StringValidationAttribute]
      public string extrahdr12 { get; set; }
      [StringValidationAttribute]
      public string extrahdr13 { get; set; }
      [StringValidationAttribute]
      public string extrahdr14 { get; set; }
      [StringValidationAttribute]
      public string extrahdr15 { get; set; }
      [StringValidationAttribute]
      public string extrahdr16 { get; set; }
      [StringValidationAttribute]
      public string extrahdr17 { get; set; }
      [StringValidationAttribute]
      public string extrahdr18 { get; set; }
      [StringValidationAttribute]
      public string extrahdr19 { get; set; }
      [StringValidationAttribute]
      public string extrahdr20 { get; set; }

      /// <summary>
      /// Charge
      /// </summary>
      public decimal extraamt1 { get; set; }
      public decimal extraamt2 { get; set; }
      public decimal extraamt3 { get; set; }
      public decimal extraamt4 { get; set; }
      public decimal extraamt5 { get; set; }
      public decimal extraamt6 { get; set; }
      public decimal extraamt7 { get; set; }
      public decimal extraamt8 { get; set; }
      public decimal extraamt9 { get; set; }
      public decimal extraamt10 { get; set; }
      public decimal extraamt11 { get; set; }
      public decimal extraamt12 { get; set; }
      public decimal extraamt13 { get; set; }
      public decimal extraamt14 { get; set; }
      public decimal extraamt15 { get; set; }
      public decimal extraamt16 { get; set; }
      public decimal extraamt17 { get; set; }
      public decimal extraamt18 { get; set; }
      public decimal extraamt19 { get; set; }
      public decimal extraamt20 { get; set; }

      /// <summary>
      /// Source
      /// </summary>
      [StringValidationAttribute]
      public string inssource { get; set; }

      /// <summary>
      /// Insurance - Package Charge
      /// </summary>
      public decimal inspkgchg { get; set; }

      /// <summary>
      /// Minimum Value
      /// </summary>
      public decimal insminval { get; set; }

      /// <summary>
      /// Rate
      /// </summary>
      public decimal insrate { get; set; }

      /// <summary>
      /// Per
      /// </summary>
      public decimal insperamt { get; set; }

      /// <summary>
      /// Ending Pkg ID#
      /// </summary>
      [StringValidationAttribute]
      public string endpkgno { get; set; }

      /// <summary>
      /// Print Value on Manifest?
      /// </summary>
      public bool printvalfl { get; set; }

      /// <summary>
      /// Beginning Pkg ID#
      /// </summary>
      [StringValidationAttribute]
      public string begpkgno { get; set; }

      /// <summary>
      /// Maximum # Packages
      /// </summary>
      public int nomaxpkg { get; set; }

      /// <summary>
      /// 100wt Discount Calc
      /// </summary>
      public bool hundredwtfl { get; set; }

      /// <summary>
      /// specsvcfl1
      /// </summary>
      public bool specsvcfl1 { get; set; }
      public bool specsvcfl2 { get; set; }
      public bool specsvcfl3 { get; set; }

      /// <summary>
      /// COD Charge
      /// </summary>
      public decimal codchg { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// Package Comment
      /// </summary>
      public bool pkgcom { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// Maximum Weight
      /// </summary>
      public int maxwght { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// Maximum Dimen
      /// </summary>
      public int maxdimen { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// Next Pkg ID#
      /// </summary>
      [StringValidationAttribute]
      public string nextpkgno { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// Round Ins. Value
      /// </summary>
      [StringValidationAttribute]
      public string insroundty { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Standard
      /// </summary>
      [StringValidationAttribute]
      public string standardty { get; set; }

      /// <summary>
      /// Effective Date
      /// </summary>
      public DateTime? effdate { get; set; }

      /// <summary>
      /// Preferred Customer?
      /// </summary>
      [StringValidationAttribute]
      public string preferred { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr3 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildPmscBaseFromRow<T>(DataRow row) where T:PmscBase, new()
      {
         T entity = new T();
         entity.carrierid = row.IsNull("carrierid") ? string.Empty : row.Field<string>("carrierid");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.manifestno = row.IsNull("manifestno") ? 0 : row.Field<int>("manifestno");
         entity.roundtype = row.IsNull("roundtype") ? string.Empty : row.Field<string>("roundtype");
         entity.extrahdr1 = row.IsNull("extrahdr1") ? string.Empty : row.Field<string>("extrahdr1");
         entity.extrahdr2 = row.IsNull("extrahdr2") ? string.Empty : row.Field<string>("extrahdr2");
         entity.extrahdr3 = row.IsNull("extrahdr3") ? string.Empty : row.Field<string>("extrahdr3");
         entity.extrahdr4 = row.IsNull("extrahdr4") ? string.Empty : row.Field<string>("extrahdr4");
         entity.extrahdr5 = row.IsNull("extrahdr5") ? string.Empty : row.Field<string>("extrahdr5");
         entity.extrahdr6 = row.IsNull("extrahdr6") ? string.Empty : row.Field<string>("extrahdr6");
         entity.extrahdr7 = row.IsNull("extrahdr7") ? string.Empty : row.Field<string>("extrahdr7");
         entity.extrahdr8 = row.IsNull("extrahdr8") ? string.Empty : row.Field<string>("extrahdr8");
         entity.extrahdr9 = row.IsNull("extrahdr9") ? string.Empty : row.Field<string>("extrahdr9");
         entity.extrahdr10 = row.IsNull("extrahdr10") ? string.Empty : row.Field<string>("extrahdr10");
         entity.extrahdr11 = row.IsNull("extrahdr11") ? string.Empty : row.Field<string>("extrahdr11");
         entity.extrahdr12 = row.IsNull("extrahdr12") ? string.Empty : row.Field<string>("extrahdr12");
         entity.extrahdr13 = row.IsNull("extrahdr13") ? string.Empty : row.Field<string>("extrahdr13");
         entity.extrahdr14 = row.IsNull("extrahdr14") ? string.Empty : row.Field<string>("extrahdr14");
         entity.extrahdr15 = row.IsNull("extrahdr15") ? string.Empty : row.Field<string>("extrahdr15");
         entity.extrahdr16 = row.IsNull("extrahdr16") ? string.Empty : row.Field<string>("extrahdr16");
         entity.extrahdr17 = row.IsNull("extrahdr17") ? string.Empty : row.Field<string>("extrahdr17");
         entity.extrahdr18 = row.IsNull("extrahdr18") ? string.Empty : row.Field<string>("extrahdr18");
         entity.extrahdr19 = row.IsNull("extrahdr19") ? string.Empty : row.Field<string>("extrahdr19");
         entity.extrahdr20 = row.IsNull("extrahdr20") ? string.Empty : row.Field<string>("extrahdr20");
         entity.extraamt1 = row.IsNull("extraamt1") ? decimal.Zero : row.Field<decimal>("extraamt1");
         entity.extraamt2 = row.IsNull("extraamt2") ? decimal.Zero : row.Field<decimal>("extraamt2");
         entity.extraamt3 = row.IsNull("extraamt3") ? decimal.Zero : row.Field<decimal>("extraamt3");
         entity.extraamt4 = row.IsNull("extraamt4") ? decimal.Zero : row.Field<decimal>("extraamt4");
         entity.extraamt5 = row.IsNull("extraamt5") ? decimal.Zero : row.Field<decimal>("extraamt5");
         entity.extraamt6 = row.IsNull("extraamt6") ? decimal.Zero : row.Field<decimal>("extraamt6");
         entity.extraamt7 = row.IsNull("extraamt7") ? decimal.Zero : row.Field<decimal>("extraamt7");
         entity.extraamt8 = row.IsNull("extraamt8") ? decimal.Zero : row.Field<decimal>("extraamt8");
         entity.extraamt9 = row.IsNull("extraamt9") ? decimal.Zero : row.Field<decimal>("extraamt9");
         entity.extraamt10 = row.IsNull("extraamt10") ? decimal.Zero : row.Field<decimal>("extraamt10");
         entity.extraamt11 = row.IsNull("extraamt11") ? decimal.Zero : row.Field<decimal>("extraamt11");
         entity.extraamt12 = row.IsNull("extraamt12") ? decimal.Zero : row.Field<decimal>("extraamt12");
         entity.extraamt13 = row.IsNull("extraamt13") ? decimal.Zero : row.Field<decimal>("extraamt13");
         entity.extraamt14 = row.IsNull("extraamt14") ? decimal.Zero : row.Field<decimal>("extraamt14");
         entity.extraamt15 = row.IsNull("extraamt15") ? decimal.Zero : row.Field<decimal>("extraamt15");
         entity.extraamt16 = row.IsNull("extraamt16") ? decimal.Zero : row.Field<decimal>("extraamt16");
         entity.extraamt17 = row.IsNull("extraamt17") ? decimal.Zero : row.Field<decimal>("extraamt17");
         entity.extraamt18 = row.IsNull("extraamt18") ? decimal.Zero : row.Field<decimal>("extraamt18");
         entity.extraamt19 = row.IsNull("extraamt19") ? decimal.Zero : row.Field<decimal>("extraamt19");
         entity.extraamt20 = row.IsNull("extraamt20") ? decimal.Zero : row.Field<decimal>("extraamt20");
         entity.inssource = row.IsNull("inssource") ? string.Empty : row.Field<string>("inssource");
         entity.inspkgchg = row.IsNull("inspkgchg") ? decimal.Zero : row.Field<decimal>("inspkgchg");
         entity.insminval = row.IsNull("insminval") ? decimal.Zero : row.Field<decimal>("insminval");
         entity.insrate = row.IsNull("insrate") ? decimal.Zero : row.Field<decimal>("insrate");
         entity.insperamt = row.IsNull("insperamt") ? decimal.Zero : row.Field<decimal>("insperamt");
         entity.endpkgno = row.IsNull("endpkgno") ? string.Empty : row.Field<string>("endpkgno");
         entity.printvalfl = row.Field<bool>("printvalfl");
         entity.begpkgno = row.IsNull("begpkgno") ? string.Empty : row.Field<string>("begpkgno");
         entity.nomaxpkg = row.IsNull("nomaxpkg") ? 0 : row.Field<int>("nomaxpkg");
         entity.hundredwtfl = row.Field<bool>("hundredwtfl");
         entity.specsvcfl1 = row.Field<bool>("specsvcfl1");
         entity.specsvcfl2 = row.Field<bool>("specsvcfl2");
         entity.specsvcfl3 = row.Field<bool>("specsvcfl3");
         entity.codchg = row.IsNull("codchg") ? decimal.Zero : row.Field<decimal>("codchg");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.pkgcom = row.Field<bool>("pkgcom");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.maxwght = row.IsNull("maxwght") ? 0 : row.Field<int>("maxwght");
         entity.user6 = row.Field<decimal?>("user6");
         entity.maxdimen = row.IsNull("maxdimen") ? 0 : row.Field<int>("maxdimen");
         entity.user7 = row.Field<decimal?>("user7");
         entity.nextpkgno = row.IsNull("nextpkgno") ? string.Empty : row.Field<string>("nextpkgno");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.insroundty = row.IsNull("insroundty") ? string.Empty : row.Field<string>("insroundty");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.standardty = row.IsNull("standardty") ? string.Empty : row.Field<string>("standardty");
         entity.effdate = row.Field<DateTime?>("effdate");
         entity.preferred = row.IsNull("preferred") ? string.Empty : row.Field<string>("preferred");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.rowID = row.Field<byte[]>("pmscRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPmscBase(ref DataRow row, PmscBase entity)
      {
         row.SetField("carrierid", entity.carrierid);
         row.SetField("name", entity.name);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("manifestno", entity.manifestno);
         row.SetField("roundtype", entity.roundtype);
         row.SetField("extrahdr1", entity.extrahdr1);
         row.SetField("extrahdr2", entity.extrahdr2);
         row.SetField("extrahdr3", entity.extrahdr3);
         row.SetField("extrahdr4", entity.extrahdr4);
         row.SetField("extrahdr5", entity.extrahdr5);
         row.SetField("extrahdr6", entity.extrahdr6);
         row.SetField("extrahdr7", entity.extrahdr7);
         row.SetField("extrahdr8", entity.extrahdr8);
         row.SetField("extrahdr9", entity.extrahdr9);
         row.SetField("extrahdr10", entity.extrahdr10);
         row.SetField("extrahdr11", entity.extrahdr11);
         row.SetField("extrahdr12", entity.extrahdr12);
         row.SetField("extrahdr13", entity.extrahdr13);
         row.SetField("extrahdr14", entity.extrahdr14);
         row.SetField("extrahdr15", entity.extrahdr15);
         row.SetField("extrahdr16", entity.extrahdr16);
         row.SetField("extrahdr17", entity.extrahdr17);
         row.SetField("extrahdr18", entity.extrahdr18);
         row.SetField("extrahdr19", entity.extrahdr19);
         row.SetField("extrahdr20", entity.extrahdr20);
         row.SetField("extraamt1", entity.extraamt1);
         row.SetField("extraamt2", entity.extraamt2);
         row.SetField("extraamt3", entity.extraamt3);
         row.SetField("extraamt4", entity.extraamt4);
         row.SetField("extraamt5", entity.extraamt5);
         row.SetField("extraamt6", entity.extraamt6);
         row.SetField("extraamt7", entity.extraamt7);
         row.SetField("extraamt8", entity.extraamt8);
         row.SetField("extraamt9", entity.extraamt9);
         row.SetField("extraamt10", entity.extraamt10);
         row.SetField("extraamt11", entity.extraamt11);
         row.SetField("extraamt12", entity.extraamt12);
         row.SetField("extraamt13", entity.extraamt13);
         row.SetField("extraamt14", entity.extraamt14);
         row.SetField("extraamt15", entity.extraamt15);
         row.SetField("extraamt16", entity.extraamt16);
         row.SetField("extraamt17", entity.extraamt17);
         row.SetField("extraamt18", entity.extraamt18);
         row.SetField("extraamt19", entity.extraamt19);
         row.SetField("extraamt20", entity.extraamt20);
         row.SetField("inssource", entity.inssource);
         row.SetField("inspkgchg", entity.inspkgchg);
         row.SetField("insminval", entity.insminval);
         row.SetField("insrate", entity.insrate);
         row.SetField("insperamt", entity.insperamt);
         row.SetField("endpkgno", entity.endpkgno);
         row.SetField("printvalfl", entity.printvalfl);
         row.SetField("begpkgno", entity.begpkgno);
         row.SetField("nomaxpkg", entity.nomaxpkg);
         row.SetField("hundredwtfl", entity.hundredwtfl);
         row.SetField("specsvcfl1", entity.specsvcfl1);
         row.SetField("specsvcfl2", entity.specsvcfl2);
         row.SetField("specsvcfl3", entity.specsvcfl3);
         row.SetField("codchg", entity.codchg);
         row.SetField("user1", entity.user1);
         row.SetField("pkgcom", entity.pkgcom);
         row.SetField("user2", entity.user2);
         row.SetField("transdt", entity.transdt);
         row.SetField("user3", entity.user3);
         row.SetField("transtm", entity.transtm);
         row.SetField("user4", entity.user4);
         row.SetField("operinit", entity.operinit);
         row.SetField("user5", entity.user5);
         row.SetField("maxwght", entity.maxwght);
         row.SetField("user6", entity.user6);
         row.SetField("maxdimen", entity.maxdimen);
         row.SetField("user7", entity.user7);
         row.SetField("nextpkgno", entity.nextpkgno);
         row.SetField("user8", entity.user8);
         row.SetField("insroundty", entity.insroundty);
         row.SetField("user9", entity.user9);
         row.SetField("standardty", entity.standardty);
         row.SetField("effdate", entity.effdate);
         row.SetField("preferred", entity.preferred);
         row.SetField("transproc", entity.transproc);
         row.SetField("addr3", entity.addr3);
         row.SetField("pmscRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, PmscBase entity)
      {
         row.SetField("carrierid", entity.carrierid);
         row.SetField("pmscRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	