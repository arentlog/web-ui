//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SHARED
{
   /// <summary>
   /// Tax jurisdiction totals
   /// </summary>
   
   public partial class JurtaxBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Source Row Pointer
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string srcrowpointer { get; set; }

      /// <summary>
      /// Jurisdiction Type
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string jurtype { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Base Taxable Amount
      /// </summary>
      public decimal baseamt { get; set; }

      /// <summary>
      /// Calculated Tax Amount
      /// </summary>
      public decimal twetaxamt { get; set; }

      /// <summary>
      /// Distributor Tax Amount
      /// </summary>
      public decimal disttaxamt { get; set; }

      /// <summary>
      /// Vendor Tax Amount
      /// </summary>
      public decimal vendtaxamt { get; set; }

      /// <summary>
      /// Settlement Amount
      /// </summary>
      public decimal settamt { get; set; }

      /// <summary>
      /// Settlement Percent
      /// </summary>
      public decimal settpct { get; set; }

      /// <summary>
      /// Document ID
      /// </summary>
      [StringValidationAttribute]
      public string docid { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildJurtaxBaseFromRow<T>(DataRow row) where T:JurtaxBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.srcrowpointer = row.IsNull("srcrowpointer") ? string.Empty : row.Field<string>("srcrowpointer");
         entity.jurtype = row.IsNull("jurtype") ? string.Empty : row.Field<string>("jurtype");
         entity.baseamt = row.IsNull("baseamt") ? decimal.Zero : row.Field<decimal>("baseamt");
         entity.twetaxamt = row.IsNull("twetaxamt") ? decimal.Zero : row.Field<decimal>("twetaxamt");
         entity.disttaxamt = row.IsNull("disttaxamt") ? decimal.Zero : row.Field<decimal>("disttaxamt");
         entity.vendtaxamt = row.IsNull("vendtaxamt") ? decimal.Zero : row.Field<decimal>("vendtaxamt");
         entity.settamt = row.IsNull("settamt") ? decimal.Zero : row.Field<decimal>("settamt");
         entity.settpct = row.IsNull("settpct") ? decimal.Zero : row.Field<decimal>("settpct");
         entity.docid = row.IsNull("docid") ? string.Empty : row.Field<string>("docid");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.rowID = row.Field<byte[]>("jurtaxRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromJurtaxBase(ref DataRow row, JurtaxBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("srcrowpointer", entity.srcrowpointer);
         row.SetField("jurtype", entity.jurtype);
         row.SetField("baseamt", entity.baseamt);
         row.SetField("twetaxamt", entity.twetaxamt);
         row.SetField("disttaxamt", entity.disttaxamt);
         row.SetField("vendtaxamt", entity.vendtaxamt);
         row.SetField("settamt", entity.settamt);
         row.SetField("settpct", entity.settpct);
         row.SetField("docid", entity.docid);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("jurtaxRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, JurtaxBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("srcrowpointer", entity.srcrowpointer);
         row.SetField("jurtype", entity.jurtype);
         row.SetField("jurtaxRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	