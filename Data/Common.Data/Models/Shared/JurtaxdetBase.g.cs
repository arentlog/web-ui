//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SHARED
{
   /// <summary>
   /// Jurisdiction tax detail
   /// </summary>
   
   public partial class JurtaxdetBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Jurisdiction ID
      /// </summary>
      [Key,Order]
      public int jurid { get; set; }

      /// <summary>
      /// Source Row Pointer
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string srcrowpointer { get; set; }

      /// <summary>
      /// Display Jurisdiction Type
      /// </summary>
      [StringValidationAttribute]
      public string dispjurtype { get; set; }

      /// <summary>
      /// Jurisdiction Type
      /// </summary>
      public int jurty { get; set; }

      /// <summary>
      /// Jurisdiction Name
      /// </summary>
      [StringValidationAttribute]
      public string jurname { get; set; }

      /// <summary>
      /// Tax Exempt Amount
      /// </summary>
      public decimal exemptamt { get; set; }

      /// <summary>
      /// Base Taxable Amount
      /// </summary>
      public decimal taxableamt { get; set; }

      /// <summary>
      /// Distributor Tax Amount
      /// </summary>
      public decimal disttaxamt { get; set; }

      /// <summary>
      /// Calculated Tax Amount
      /// </summary>
      public decimal taxamt { get; set; }

      /// <summary>
      /// Tax Rate
      /// </summary>
      public decimal taxrate { get; set; }

      /// <summary>
      /// Tax ID
      /// </summary>
      public int taxid { get; set; }

      /// <summary>
      /// Tax Type
      /// </summary>
      public int taxtype { get; set; }

      /// <summary>
      /// Tax Name
      /// </summary>
      [StringValidationAttribute]
      public string taxname { get; set; }

      /// <summary>
      /// District Type
      /// </summary>
      public int districtty { get; set; }

      /// <summary>
      /// Ship From Geo Code
      /// </summary>
      public int shipfrgeocd { get; set; }

      /// <summary>
      /// Ship To Geo Code
      /// </summary>
      public int shiptogeocd { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildJurtaxdetBaseFromRow<T>(DataRow row) where T:JurtaxdetBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.dispjurtype = row.IsNull("dispjurtype") ? string.Empty : row.Field<string>("dispjurtype");
         entity.jurid = row.IsNull("jurid") ? 0 : row.Field<int>("jurid");
         entity.jurty = row.IsNull("jurty") ? 0 : row.Field<int>("jurty");
         entity.jurname = row.IsNull("jurname") ? string.Empty : row.Field<string>("jurname");
         entity.exemptamt = row.IsNull("exemptamt") ? decimal.Zero : row.Field<decimal>("exemptamt");
         entity.taxableamt = row.IsNull("taxableamt") ? decimal.Zero : row.Field<decimal>("taxableamt");
         entity.disttaxamt = row.IsNull("disttaxamt") ? decimal.Zero : row.Field<decimal>("disttaxamt");
         entity.taxamt = row.IsNull("taxamt") ? decimal.Zero : row.Field<decimal>("taxamt");
         entity.taxrate = row.IsNull("taxrate") ? decimal.Zero : row.Field<decimal>("taxrate");
         entity.taxid = row.IsNull("taxid") ? 0 : row.Field<int>("taxid");
         entity.taxtype = row.IsNull("taxtype") ? 0 : row.Field<int>("taxtype");
         entity.taxname = row.IsNull("taxname") ? string.Empty : row.Field<string>("taxname");
         entity.districtty = row.IsNull("districtty") ? 0 : row.Field<int>("districtty");
         entity.shipfrgeocd = row.IsNull("shipfrgeocd") ? 0 : row.Field<int>("shipfrgeocd");
         entity.shiptogeocd = row.IsNull("shiptogeocd") ? 0 : row.Field<int>("shiptogeocd");
         entity.srcrowpointer = row.IsNull("srcrowpointer") ? string.Empty : row.Field<string>("srcrowpointer");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.rowID = row.Field<byte[]>("jurtaxdetRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromJurtaxdetBase(ref DataRow row, JurtaxdetBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("dispjurtype", entity.dispjurtype);
         row.SetField("jurid", entity.jurid);
         row.SetField("jurty", entity.jurty);
         row.SetField("jurname", entity.jurname);
         row.SetField("exemptamt", entity.exemptamt);
         row.SetField("taxableamt", entity.taxableamt);
         row.SetField("disttaxamt", entity.disttaxamt);
         row.SetField("taxamt", entity.taxamt);
         row.SetField("taxrate", entity.taxrate);
         row.SetField("taxid", entity.taxid);
         row.SetField("taxtype", entity.taxtype);
         row.SetField("taxname", entity.taxname);
         row.SetField("districtty", entity.districtty);
         row.SetField("shipfrgeocd", entity.shipfrgeocd);
         row.SetField("shiptogeocd", entity.shiptogeocd);
         row.SetField("srcrowpointer", entity.srcrowpointer);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("jurtaxdetRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, JurtaxdetBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("jurid", entity.jurid);
         row.SetField("srcrowpointer", entity.srcrowpointer);
         row.SetField("jurtaxdetRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	