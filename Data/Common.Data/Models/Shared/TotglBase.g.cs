//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SHARED
{
   /// <summary>
   /// Totals for GL Posting - Temp File
   /// </summary>
   
   public partial class TotglBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      public int cono { get; set; }

      /// <summary>
      /// Jrnl #
      /// </summary>
      public int jrnlno { get; set; }

      /// <summary>
      /// Dept#
      /// </summary>
      public int gldeptno { get; set; }

      /// <summary>
      /// Acct#
      /// </summary>
      public int glacctno { get; set; }

      /// <summary>
      /// Sub#
      /// </summary>
      public int glsubno { get; set; }

      /// <summary>
      /// Amount
      /// </summary>
      public decimal amount { get; set; }

      /// <summary>
      /// Posting Type
      /// </summary>
      public bool baltype { get; set; }

      /// <summary>
      /// Last Inv #
      /// </summary>
      public int lastinvno { get; set; }

      /// <summary>
      /// Last Inv Suf
      /// </summary>
      public int lastinvsuf { get; set; }

      /// <summary>
      /// Div#
      /// </summary>
      public int gldivno { get; set; }

      /// <summary>
      /// GL Co #
      /// </summary>
      public int glcono { get; set; }

      /// <summary>
      /// Ref
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Order #
      /// </summary>
      public int orderno { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      public int ordersuf { get; set; }

      /// <summary>
      /// Exchange Rate
      /// </summary>
      public decimal exchgrate { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      public int setno { get; set; }

      /// <summary>
      /// Summary Type
      /// </summary>
      [StringValidationAttribute]
      public string sumtype { get; set; }

      /// <summary>
      /// Dom Curr Amt
      /// </summary>
      public decimal domamount { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      public decimal custno { get; set; }

      /// <summary>
      /// Invoice Cost
      /// </summary>
      public decimal kitamount { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildTotglBaseFromRow<T>(DataRow row) where T:TotglBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.amount = row.IsNull("amount") ? decimal.Zero : row.Field<decimal>("amount");
         entity.baltype = row.Field<bool>("baltype");
         entity.lastinvno = row.IsNull("lastinvno") ? 0 : row.Field<int>("lastinvno");
         entity.lastinvsuf = row.IsNull("lastinvsuf") ? 0 : row.Field<int>("lastinvsuf");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.glcono = row.IsNull("glcono") ? 0 : row.Field<int>("glcono");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.exchgrate = row.IsNull("exchgrate") ? decimal.Zero : row.Field<decimal>("exchgrate");
         entity.setno = row.IsNull("setno") ? 0 : row.Field<int>("setno");
         entity.sumtype = row.IsNull("sumtype") ? string.Empty : row.Field<string>("sumtype");
         entity.domamount = row.IsNull("domamount") ? decimal.Zero : row.Field<decimal>("domamount");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.kitamount = row.IsNull("kitamount") ? decimal.Zero : row.Field<decimal>("kitamount");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.rowID = row.Field<byte[]>("totglRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromTotglBase(ref DataRow row, TotglBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("amount", entity.amount);
         row.SetField("baltype", entity.baltype);
         row.SetField("lastinvno", entity.lastinvno);
         row.SetField("lastinvsuf", entity.lastinvsuf);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("glcono", entity.glcono);
         row.SetField("refer", entity.refer);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("exchgrate", entity.exchgrate);
         row.SetField("setno", entity.setno);
         row.SetField("sumtype", entity.sumtype);
         row.SetField("domamount", entity.domamount);
         row.SetField("custno", entity.custno);
         row.SetField("kitamount", entity.kitamount);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("totglRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, TotglBase entity)
      {
         row.SetField("totglRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	