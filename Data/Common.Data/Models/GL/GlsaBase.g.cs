//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.GL
{
   /// <summary>
   /// GL Setup Accounts
   /// </summary>
   [EntityType("GL Setup Accounts","glsa.detail","SourceSystemGLMovement")]
   public partial class GlsaBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Year
      /// </summary>
      [BodID(2,RequiredId.True),DrillbackParam("pk",1),Key,Order]
      public int yr { get; set; }

      /// <summary>
      /// Div#
      /// </summary>
      [BodID(3,RequiredId.True),DrillbackParam("pk2",2),Key,Order]
      public int gldivno { get; set; }

      /// <summary>
      /// Dept#
      /// </summary>
      [BodID(4,RequiredId.True),DrillbackParam("pk3",3),Key,Order]
      public int gldeptno { get; set; }

      /// <summary>
      /// Acct#
      /// </summary>
      [BodID(5,RequiredId.True),DrillbackParam("pk4",4),Key,Order]
      public int glacctno { get; set; }

      /// <summary>
      /// Sub#
      /// </summary>
      [BodID(6,RequiredId.True),DrillbackParam("pk5",5),Key,Order]
      public int glsubno { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      [BusContext(BusPart.AcctEntity),BodID(1,RequiredId.True),BodContext(BodPart.AcctEntity,""),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Title
      /// </summary>
      [ID(7),StringValidationAttribute]
      public string gltitle { get; set; }

      /// <summary>
      /// Lookup Name
      /// </summary>
      [StringValidationAttribute]
      public string lookupnm { get; set; }

      /// <summary>
      /// Account Type
      /// </summary>
      [StringValidationAttribute]
      public string accttype { get; set; }

      /// <summary>
      /// Normal Balance
      /// </summary>
      public bool baltype { get; set; }

      /// <summary>
      /// Print Type
      /// </summary>
      public bool printtype { get; set; }

      /// <summary>
      /// Forward Balance
      /// </summary>
      public decimal fwdbal { get; set; }

      /// <summary>
      /// Period Amount
      /// </summary>
      public decimal peramt1 { get; set; }
      public decimal peramt2 { get; set; }
      public decimal peramt3 { get; set; }
      public decimal peramt4 { get; set; }
      public decimal peramt5 { get; set; }
      public decimal peramt6 { get; set; }
      public decimal peramt7 { get; set; }
      public decimal peramt8 { get; set; }
      public decimal peramt9 { get; set; }
      public decimal peramt10 { get; set; }
      public decimal peramt11 { get; set; }
      public decimal peramt12 { get; set; }
      public decimal peramt13 { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Fiscal Century
      /// </summary>
      public int yrcn { get; set; }

      /// <summary>
      /// Account/Sub
      /// </summary>
      public decimal acctsub { get; set; }

      /// <summary>
      /// Report Group
      /// </summary>
      [StringValidationAttribute]
      public string glrptgroup { get; set; }

      /// <summary>
      /// Currency
      /// </summary>
      [StringValidationAttribute]
      public string currencyty { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Notes Flag
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Manual Post Flag
      /// </summary>
      public bool manpostfl { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Forward Balance
      /// </summary>
      public decimal cofwdbal { get; set; }

      /// <summary>
      /// Period Amount
      /// </summary>
      public decimal coperamt1 { get; set; }
      public decimal coperamt2 { get; set; }
      public decimal coperamt3 { get; set; }
      public decimal coperamt4 { get; set; }
      public decimal coperamt5 { get; set; }
      public decimal coperamt6 { get; set; }
      public decimal coperamt7 { get; set; }
      public decimal coperamt8 { get; set; }
      public decimal coperamt9 { get; set; }
      public decimal coperamt10 { get; set; }
      public decimal coperamt11 { get; set; }
      public decimal coperamt12 { get; set; }
      public decimal coperamt13 { get; set; }

      /// <summary>
      /// Additional Keywords
      /// </summary>
      [StringValidationAttribute]
      public string keywords { get; set; }

      /// <summary>
      /// Account Group
      /// </summary>
      [StringValidationAttribute]
      public string acctgrp { get; set; }

      /// <summary>
      /// Total Amount
      /// </summary>
      public decimal totamt { get; set; }

      /// <summary>
      /// Total Company Amount
      /// </summary>
      public decimal cototamt { get; set; }

      /// <summary>
      /// Use Average Exchange Rate
      /// </summary>
      public bool avgexratefl { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildGlsaBaseFromRow<T>(DataRow row) where T:GlsaBase, new()
      {
         T entity = new T();
         entity.yr = row.IsNull("yr") ? 0 : row.Field<int>("yr");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.gltitle = row.IsNull("gltitle") ? string.Empty : row.Field<string>("gltitle");
         entity.lookupnm = row.IsNull("lookupnm") ? string.Empty : row.Field<string>("lookupnm");
         entity.accttype = row.IsNull("accttype") ? string.Empty : row.Field<string>("accttype");
         entity.baltype = row.Field<bool>("baltype");
         entity.printtype = row.Field<bool>("printtype");
         entity.fwdbal = row.IsNull("fwdbal") ? decimal.Zero : row.Field<decimal>("fwdbal");
         entity.peramt1 = row.IsNull("peramt1") ? decimal.Zero : row.Field<decimal>("peramt1");
         entity.peramt2 = row.IsNull("peramt2") ? decimal.Zero : row.Field<decimal>("peramt2");
         entity.peramt3 = row.IsNull("peramt3") ? decimal.Zero : row.Field<decimal>("peramt3");
         entity.peramt4 = row.IsNull("peramt4") ? decimal.Zero : row.Field<decimal>("peramt4");
         entity.peramt5 = row.IsNull("peramt5") ? decimal.Zero : row.Field<decimal>("peramt5");
         entity.peramt6 = row.IsNull("peramt6") ? decimal.Zero : row.Field<decimal>("peramt6");
         entity.peramt7 = row.IsNull("peramt7") ? decimal.Zero : row.Field<decimal>("peramt7");
         entity.peramt8 = row.IsNull("peramt8") ? decimal.Zero : row.Field<decimal>("peramt8");
         entity.peramt9 = row.IsNull("peramt9") ? decimal.Zero : row.Field<decimal>("peramt9");
         entity.peramt10 = row.IsNull("peramt10") ? decimal.Zero : row.Field<decimal>("peramt10");
         entity.peramt11 = row.IsNull("peramt11") ? decimal.Zero : row.Field<decimal>("peramt11");
         entity.peramt12 = row.IsNull("peramt12") ? decimal.Zero : row.Field<decimal>("peramt12");
         entity.peramt13 = row.IsNull("peramt13") ? decimal.Zero : row.Field<decimal>("peramt13");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.yrcn = row.IsNull("yrcn") ? 0 : row.Field<int>("yrcn");
         entity.acctsub = row.IsNull("acctsub") ? decimal.Zero : row.Field<decimal>("acctsub");
         entity.glrptgroup = row.IsNull("glrptgroup") ? string.Empty : row.Field<string>("glrptgroup");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.manpostfl = row.Field<bool>("manpostfl");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.cofwdbal = row.IsNull("cofwdbal") ? decimal.Zero : row.Field<decimal>("cofwdbal");
         entity.coperamt1 = row.IsNull("coperamt1") ? decimal.Zero : row.Field<decimal>("coperamt1");
         entity.coperamt2 = row.IsNull("coperamt2") ? decimal.Zero : row.Field<decimal>("coperamt2");
         entity.coperamt3 = row.IsNull("coperamt3") ? decimal.Zero : row.Field<decimal>("coperamt3");
         entity.coperamt4 = row.IsNull("coperamt4") ? decimal.Zero : row.Field<decimal>("coperamt4");
         entity.coperamt5 = row.IsNull("coperamt5") ? decimal.Zero : row.Field<decimal>("coperamt5");
         entity.coperamt6 = row.IsNull("coperamt6") ? decimal.Zero : row.Field<decimal>("coperamt6");
         entity.coperamt7 = row.IsNull("coperamt7") ? decimal.Zero : row.Field<decimal>("coperamt7");
         entity.coperamt8 = row.IsNull("coperamt8") ? decimal.Zero : row.Field<decimal>("coperamt8");
         entity.coperamt9 = row.IsNull("coperamt9") ? decimal.Zero : row.Field<decimal>("coperamt9");
         entity.coperamt10 = row.IsNull("coperamt10") ? decimal.Zero : row.Field<decimal>("coperamt10");
         entity.coperamt11 = row.IsNull("coperamt11") ? decimal.Zero : row.Field<decimal>("coperamt11");
         entity.coperamt12 = row.IsNull("coperamt12") ? decimal.Zero : row.Field<decimal>("coperamt12");
         entity.coperamt13 = row.IsNull("coperamt13") ? decimal.Zero : row.Field<decimal>("coperamt13");
         entity.keywords = row.IsNull("keywords") ? string.Empty : row.Field<string>("keywords");
         entity.acctgrp = row.IsNull("acctgrp") ? string.Empty : row.Field<string>("acctgrp");
         entity.totamt = row.IsNull("totamt") ? decimal.Zero : row.Field<decimal>("totamt");
         entity.cototamt = row.IsNull("cototamt") ? decimal.Zero : row.Field<decimal>("cototamt");
         entity.avgexratefl = row.Field<bool>("avgexratefl");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.rowID = row.Field<byte[]>("glsaRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromGlsaBase(ref DataRow row, GlsaBase entity)
      {
         row.SetField("yr", entity.yr);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("gltitle", entity.gltitle);
         row.SetField("lookupnm", entity.lookupnm);
         row.SetField("accttype", entity.accttype);
         row.SetField("baltype", entity.baltype);
         row.SetField("printtype", entity.printtype);
         row.SetField("fwdbal", entity.fwdbal);
         row.SetField("peramt1", entity.peramt1);
         row.SetField("peramt2", entity.peramt2);
         row.SetField("peramt3", entity.peramt3);
         row.SetField("peramt4", entity.peramt4);
         row.SetField("peramt5", entity.peramt5);
         row.SetField("peramt6", entity.peramt6);
         row.SetField("peramt7", entity.peramt7);
         row.SetField("peramt8", entity.peramt8);
         row.SetField("peramt9", entity.peramt9);
         row.SetField("peramt10", entity.peramt10);
         row.SetField("peramt11", entity.peramt11);
         row.SetField("peramt12", entity.peramt12);
         row.SetField("peramt13", entity.peramt13);
         row.SetField("cono", entity.cono);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("yrcn", entity.yrcn);
         row.SetField("acctsub", entity.acctsub);
         row.SetField("glrptgroup", entity.glrptgroup);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("manpostfl", entity.manpostfl);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("cofwdbal", entity.cofwdbal);
         row.SetField("coperamt1", entity.coperamt1);
         row.SetField("coperamt2", entity.coperamt2);
         row.SetField("coperamt3", entity.coperamt3);
         row.SetField("coperamt4", entity.coperamt4);
         row.SetField("coperamt5", entity.coperamt5);
         row.SetField("coperamt6", entity.coperamt6);
         row.SetField("coperamt7", entity.coperamt7);
         row.SetField("coperamt8", entity.coperamt8);
         row.SetField("coperamt9", entity.coperamt9);
         row.SetField("coperamt10", entity.coperamt10);
         row.SetField("coperamt11", entity.coperamt11);
         row.SetField("coperamt12", entity.coperamt12);
         row.SetField("coperamt13", entity.coperamt13);
         row.SetField("keywords", entity.keywords);
         row.SetField("acctgrp", entity.acctgrp);
         row.SetField("totamt", entity.totamt);
         row.SetField("cototamt", entity.cototamt);
         row.SetField("avgexratefl", entity.avgexratefl);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("glsaRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, GlsaBase entity)
      {
         row.SetField("yr", entity.yr);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("cono", entity.cono);
         row.SetField("glsaRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	