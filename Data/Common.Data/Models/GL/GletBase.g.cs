//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.GL
{
   /// <summary>
   /// GL Transactions
   /// </summary>
   [EntityType("GL Transactions","TBD","SourcesSystemGlEntry")]
   public partial class GletBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [BusContext(BusPart.AcctEntity),BodContext(BodPart.AcctEntity,""),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Jrnl #
      /// </summary>
      [BodID(1,RequiredId.True),Key,Order]
      public int jrnlno { get; set; }

      /// <summary>
      /// Trans#
      /// </summary>
      [BusContext(BusPart.Name),Key,Order]
      public int transno { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      [Key,Order]
      public int setno { get; set; }

      /// <summary>
      /// Div#
      /// </summary>
      [ID(5)]
      public int gldivno { get; set; }

      /// <summary>
      /// Dept#
      /// </summary>
      [ID(8)]
      public int gldeptno { get; set; }

      /// <summary>
      /// Acct#
      /// </summary>
      [ID(7)]
      public int glacctno { get; set; }

      /// <summary>
      /// Sub#
      /// </summary>
      [ID(8)]
      public int glsubno { get; set; }

      /// <summary>
      /// Fiscal Period
      /// </summary>
      public int perfisc { get; set; }

      /// <summary>
      /// Date
      /// </summary>
      public DateTime? postdt { get; set; }

      /// <summary>
      /// Reference
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Calendar Period
      /// </summary>
      public int percal { get; set; }

      /// <summary>
      /// Extended Description
      /// </summary>
      public bool extendfl { get; set; }

      /// <summary>
      /// Amount
      /// </summary>
      public decimal amount { get; set; }

      /// <summary>
      /// Tran Type
      /// </summary>
      [ID(9)]
      public int transcd { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      [ID(10)]
      public decimal custno { get; set; }

      /// <summary>
      /// Check #
      /// </summary>
      [ID(11)]
      public decimal checkno { get; set; }

      /// <summary>
      /// Invoice#
      /// </summary>
      [ID(12)]
      public int invno { get; set; }

      /// <summary>
      /// invsuf
      /// </summary>
      [ID(13)]
      public int invsuf { get; set; }

      /// <summary>
      /// Function Name
      /// </summary>
      [StringValidationAttribute]
      public string currproc { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      [BusContext(BusPart.Descr)]
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Update
      /// </summary>
      [StringValidationAttribute]
      public string updglty { get; set; }

      /// <summary>
      /// Year
      /// </summary>
      public int yr { get; set; }

      /// <summary>
      /// disputefl
      /// </summary>
      public bool disputefl { get; set; }

      /// <summary>
      /// Add to Hash
      /// </summary>
      public bool hashfl { get; set; }

      /// <summary>
      /// AP Invoice #
      /// </summary>
      [StringValidationAttribute]
      public string apinvno { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// Reference Flag
      /// </summary>
      public bool referfl { get; set; }

      /// <summary>
      /// G/L Posting Exchange Rate
      /// </summary>
      public decimal exchgrate { get; set; }

      /// <summary>
      /// Payment Type
      /// </summary>
      public int mediacd { get; set; }

      /// <summary>
      /// Authorization
      /// </summary>
      public int mediaauth { get; set; }

      /// <summary>
      /// Company Amount
      /// </summary>
      public decimal coamount { get; set; }

      /// <summary>
      /// Authorization
      /// </summary>
      [StringValidationAttribute]
      public string charmediaauth { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildGletBaseFromRow<T>(DataRow row) where T:GletBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.perfisc = row.IsNull("perfisc") ? 0 : row.Field<int>("perfisc");
         entity.postdt = row.Field<DateTime?>("postdt");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.percal = row.IsNull("percal") ? 0 : row.Field<int>("percal");
         entity.extendfl = row.Field<bool>("extendfl");
         entity.amount = row.IsNull("amount") ? decimal.Zero : row.Field<decimal>("amount");
         entity.transno = row.IsNull("transno") ? 0 : row.Field<int>("transno");
         entity.transcd = row.IsNull("transcd") ? 0 : row.Field<int>("transcd");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.checkno = row.IsNull("checkno") ? decimal.Zero : row.Field<decimal>("checkno");
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.currproc = row.IsNull("currproc") ? string.Empty : row.Field<string>("currproc");
         entity.setno = row.IsNull("setno") ? 0 : row.Field<int>("setno");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.updglty = row.IsNull("updglty") ? string.Empty : row.Field<string>("updglty");
         entity.yr = row.IsNull("yr") ? 0 : row.Field<int>("yr");
         entity.disputefl = row.Field<bool>("disputefl");
         entity.hashfl = row.Field<bool>("hashfl");
         entity.apinvno = row.IsNull("apinvno") ? string.Empty : row.Field<string>("apinvno");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.referfl = row.Field<bool>("referfl");
         entity.exchgrate = row.IsNull("exchgrate") ? decimal.Zero : row.Field<decimal>("exchgrate");
         entity.mediacd = row.IsNull("mediacd") ? 0 : row.Field<int>("mediacd");
         entity.mediaauth = row.IsNull("mediaauth") ? 0 : row.Field<int>("mediaauth");
         entity.coamount = row.IsNull("coamount") ? decimal.Zero : row.Field<decimal>("coamount");
         entity.charmediaauth = row.IsNull("charmediaauth") ? string.Empty : row.Field<string>("charmediaauth");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.rowID = row.Field<byte[]>("gletRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromGletBase(ref DataRow row, GletBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("perfisc", entity.perfisc);
         row.SetField("postdt", entity.postdt);
         row.SetField("refer", entity.refer);
         row.SetField("percal", entity.percal);
         row.SetField("extendfl", entity.extendfl);
         row.SetField("amount", entity.amount);
         row.SetField("transno", entity.transno);
         row.SetField("transcd", entity.transcd);
         row.SetField("operinit", entity.operinit);
         row.SetField("custno", entity.custno);
         row.SetField("checkno", entity.checkno);
         row.SetField("invno", entity.invno);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("currproc", entity.currproc);
         row.SetField("setno", entity.setno);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("updglty", entity.updglty);
         row.SetField("yr", entity.yr);
         row.SetField("disputefl", entity.disputefl);
         row.SetField("hashfl", entity.hashfl);
         row.SetField("apinvno", entity.apinvno);
         row.SetField("vendno", entity.vendno);
         row.SetField("referfl", entity.referfl);
         row.SetField("exchgrate", entity.exchgrate);
         row.SetField("mediacd", entity.mediacd);
         row.SetField("mediaauth", entity.mediaauth);
         row.SetField("coamount", entity.coamount);
         row.SetField("charmediaauth", entity.charmediaauth);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("gletRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, GletBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("transno", entity.transno);
         row.SetField("setno", entity.setno);
         row.SetField("gletRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	