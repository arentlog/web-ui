//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.GL
{
   /// <summary>
   /// General Ledger Batch Transactions
   /// </summary>
   
   public partial class GlebtBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Batch
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string batchnm { get; set; }

      /// <summary>
      /// Seq#
      /// </summary>
      [Key,Order]
      public int seqno { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      public int setno { get; set; }

      /// <summary>
      /// Trans#
      /// </summary>
      public int transno { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Amount
      /// </summary>
      public decimal amount { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      public decimal custno { get; set; }

      /// <summary>
      /// Vendor Invoice #
      /// </summary>
      [StringValidationAttribute]
      public string apinvno { get; set; }

      /// <summary>
      /// Invoice#
      /// </summary>
      public int invno { get; set; }

      /// <summary>
      /// invsuf
      /// </summary>
      public int invsuf { get; set; }

      /// <summary>
      /// Check #
      /// </summary>
      public decimal checkno { get; set; }

      /// <summary>
      /// Bank #
      /// </summary>
      public int bankno { get; set; }

      /// <summary>
      /// Tran Type
      /// </summary>
      public int transcd { get; set; }

      /// <summary>
      /// Ref
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Date
      /// </summary>
      public DateTime? postdt { get; set; }

      /// <summary>
      /// gldivno
      /// </summary>
      public int gldivno { get; set; }

      /// <summary>
      /// gldeptno
      /// </summary>
      public int gldeptno { get; set; }

      /// <summary>
      /// glacctno
      /// </summary>
      public int glacctno { get; set; }

      /// <summary>
      /// glsubno
      /// </summary>
      public int glsubno { get; set; }

      /// <summary>
      /// Year
      /// </summary>
      public int yr { get; set; }

      /// <summary>
      /// crtype
      /// </summary>
      public int crtype { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [StringValidationAttribute]
      public string statuscd { get; set; }

      /// <summary>
      /// Cleared
      /// </summary>
      public bool clearfl { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Jrnl #
      /// </summary>
      public int fixjrnlno { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      public int fixsetno { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildGlebtBaseFromRow<T>(DataRow row) where T:GlebtBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.batchnm = row.IsNull("batchnm") ? string.Empty : row.Field<string>("batchnm");
         entity.setno = row.IsNull("setno") ? 0 : row.Field<int>("setno");
         entity.transno = row.IsNull("transno") ? 0 : row.Field<int>("transno");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.amount = row.IsNull("amount") ? decimal.Zero : row.Field<decimal>("amount");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.apinvno = row.IsNull("apinvno") ? string.Empty : row.Field<string>("apinvno");
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.checkno = row.IsNull("checkno") ? decimal.Zero : row.Field<decimal>("checkno");
         entity.bankno = row.IsNull("bankno") ? 0 : row.Field<int>("bankno");
         entity.transcd = row.IsNull("transcd") ? 0 : row.Field<int>("transcd");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.postdt = row.Field<DateTime?>("postdt");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.yr = row.IsNull("yr") ? 0 : row.Field<int>("yr");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.crtype = row.IsNull("crtype") ? 0 : row.Field<int>("crtype");
         entity.statuscd = row.IsNull("statuscd") ? string.Empty : row.Field<string>("statuscd");
         entity.clearfl = row.Field<bool>("clearfl");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.fixjrnlno = row.IsNull("fixjrnlno") ? 0 : row.Field<int>("fixjrnlno");
         entity.fixsetno = row.IsNull("fixsetno") ? 0 : row.Field<int>("fixsetno");
         entity.rowID = row.Field<byte[]>("glebtRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromGlebtBase(ref DataRow row, GlebtBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("batchnm", entity.batchnm);
         row.SetField("setno", entity.setno);
         row.SetField("transno", entity.transno);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("amount", entity.amount);
         row.SetField("vendno", entity.vendno);
         row.SetField("custno", entity.custno);
         row.SetField("apinvno", entity.apinvno);
         row.SetField("invno", entity.invno);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("checkno", entity.checkno);
         row.SetField("bankno", entity.bankno);
         row.SetField("transcd", entity.transcd);
         row.SetField("refer", entity.refer);
         row.SetField("postdt", entity.postdt);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("yr", entity.yr);
         row.SetField("seqno", entity.seqno);
         row.SetField("crtype", entity.crtype);
         row.SetField("statuscd", entity.statuscd);
         row.SetField("clearfl", entity.clearfl);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("fixjrnlno", entity.fixjrnlno);
         row.SetField("fixsetno", entity.fixsetno);
         row.SetField("glebtRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, GlebtBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("batchnm", entity.batchnm);
         row.SetField("seqno", entity.seqno);
         row.SetField("glebtRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	