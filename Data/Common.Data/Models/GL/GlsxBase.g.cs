//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.GL
{
   /// <summary>
   /// GL Monthly Exchange Rate   
   /// </summary>
   
   public partial class GlsxBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Year
      /// </summary>
      [Key,Order]
      public int yr { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Currency
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string currencyty { get; set; }

      /// <summary>
      /// Account Group
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string acctgrp { get; set; }

      /// <summary>
      /// Div#
      /// </summary>
      public int gldivno { get; set; }

      /// <summary>
      /// Dept#
      /// </summary>
      public int gldeptno { get; set; }

      /// <summary>
      /// Acct#
      /// </summary>
      public int glacctno { get; set; }

      /// <summary>
      /// Sub#
      /// </summary>
      public int glsubno { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Exchange Rate
      /// </summary>
      public decimal exchgrate1 { get; set; }
      public decimal exchgrate2 { get; set; }
      public decimal exchgrate3 { get; set; }
      public decimal exchgrate4 { get; set; }
      public decimal exchgrate5 { get; set; }
      public decimal exchgrate6 { get; set; }
      public decimal exchgrate7 { get; set; }
      public decimal exchgrate8 { get; set; }
      public decimal exchgrate9 { get; set; }
      public decimal exchgrate10 { get; set; }
      public decimal exchgrate11 { get; set; }
      public decimal exchgrate12 { get; set; }
      public decimal exchgrate13 { get; set; }

      /// <summary>
      /// Budget Exchange Rate
      /// </summary>
      public decimal budexrate1 { get; set; }
      public decimal budexrate2 { get; set; }
      public decimal budexrate3 { get; set; }
      public decimal budexrate4 { get; set; }
      public decimal budexrate5 { get; set; }
      public decimal budexrate6 { get; set; }
      public decimal budexrate7 { get; set; }
      public decimal budexrate8 { get; set; }
      public decimal budexrate9 { get; set; }
      public decimal budexrate10 { get; set; }
      public decimal budexrate11 { get; set; }
      public decimal budexrate12 { get; set; }
      public decimal budexrate13 { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildGlsxBaseFromRow<T>(DataRow row) where T:GlsxBase, new()
      {
         T entity = new T();
         entity.yr = row.IsNull("yr") ? 0 : row.Field<int>("yr");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.acctgrp = row.IsNull("acctgrp") ? string.Empty : row.Field<string>("acctgrp");
         entity.exchgrate1 = row.IsNull("exchgrate1") ? decimal.Zero : row.Field<decimal>("exchgrate1");
         entity.exchgrate2 = row.IsNull("exchgrate2") ? decimal.Zero : row.Field<decimal>("exchgrate2");
         entity.exchgrate3 = row.IsNull("exchgrate3") ? decimal.Zero : row.Field<decimal>("exchgrate3");
         entity.exchgrate4 = row.IsNull("exchgrate4") ? decimal.Zero : row.Field<decimal>("exchgrate4");
         entity.exchgrate5 = row.IsNull("exchgrate5") ? decimal.Zero : row.Field<decimal>("exchgrate5");
         entity.exchgrate6 = row.IsNull("exchgrate6") ? decimal.Zero : row.Field<decimal>("exchgrate6");
         entity.exchgrate7 = row.IsNull("exchgrate7") ? decimal.Zero : row.Field<decimal>("exchgrate7");
         entity.exchgrate8 = row.IsNull("exchgrate8") ? decimal.Zero : row.Field<decimal>("exchgrate8");
         entity.exchgrate9 = row.IsNull("exchgrate9") ? decimal.Zero : row.Field<decimal>("exchgrate9");
         entity.exchgrate10 = row.IsNull("exchgrate10") ? decimal.Zero : row.Field<decimal>("exchgrate10");
         entity.exchgrate11 = row.IsNull("exchgrate11") ? decimal.Zero : row.Field<decimal>("exchgrate11");
         entity.exchgrate12 = row.IsNull("exchgrate12") ? decimal.Zero : row.Field<decimal>("exchgrate12");
         entity.exchgrate13 = row.IsNull("exchgrate13") ? decimal.Zero : row.Field<decimal>("exchgrate13");
         entity.budexrate1 = row.IsNull("budexrate1") ? decimal.Zero : row.Field<decimal>("budexrate1");
         entity.budexrate2 = row.IsNull("budexrate2") ? decimal.Zero : row.Field<decimal>("budexrate2");
         entity.budexrate3 = row.IsNull("budexrate3") ? decimal.Zero : row.Field<decimal>("budexrate3");
         entity.budexrate4 = row.IsNull("budexrate4") ? decimal.Zero : row.Field<decimal>("budexrate4");
         entity.budexrate5 = row.IsNull("budexrate5") ? decimal.Zero : row.Field<decimal>("budexrate5");
         entity.budexrate6 = row.IsNull("budexrate6") ? decimal.Zero : row.Field<decimal>("budexrate6");
         entity.budexrate7 = row.IsNull("budexrate7") ? decimal.Zero : row.Field<decimal>("budexrate7");
         entity.budexrate8 = row.IsNull("budexrate8") ? decimal.Zero : row.Field<decimal>("budexrate8");
         entity.budexrate9 = row.IsNull("budexrate9") ? decimal.Zero : row.Field<decimal>("budexrate9");
         entity.budexrate10 = row.IsNull("budexrate10") ? decimal.Zero : row.Field<decimal>("budexrate10");
         entity.budexrate11 = row.IsNull("budexrate11") ? decimal.Zero : row.Field<decimal>("budexrate11");
         entity.budexrate12 = row.IsNull("budexrate12") ? decimal.Zero : row.Field<decimal>("budexrate12");
         entity.budexrate13 = row.IsNull("budexrate13") ? decimal.Zero : row.Field<decimal>("budexrate13");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.rowID = row.Field<byte[]>("glsxRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromGlsxBase(ref DataRow row, GlsxBase entity)
      {
         row.SetField("yr", entity.yr);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("cono", entity.cono);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("acctgrp", entity.acctgrp);
         row.SetField("exchgrate1", entity.exchgrate1);
         row.SetField("exchgrate2", entity.exchgrate2);
         row.SetField("exchgrate3", entity.exchgrate3);
         row.SetField("exchgrate4", entity.exchgrate4);
         row.SetField("exchgrate5", entity.exchgrate5);
         row.SetField("exchgrate6", entity.exchgrate6);
         row.SetField("exchgrate7", entity.exchgrate7);
         row.SetField("exchgrate8", entity.exchgrate8);
         row.SetField("exchgrate9", entity.exchgrate9);
         row.SetField("exchgrate10", entity.exchgrate10);
         row.SetField("exchgrate11", entity.exchgrate11);
         row.SetField("exchgrate12", entity.exchgrate12);
         row.SetField("exchgrate13", entity.exchgrate13);
         row.SetField("budexrate1", entity.budexrate1);
         row.SetField("budexrate2", entity.budexrate2);
         row.SetField("budexrate3", entity.budexrate3);
         row.SetField("budexrate4", entity.budexrate4);
         row.SetField("budexrate5", entity.budexrate5);
         row.SetField("budexrate6", entity.budexrate6);
         row.SetField("budexrate7", entity.budexrate7);
         row.SetField("budexrate8", entity.budexrate8);
         row.SetField("budexrate9", entity.budexrate9);
         row.SetField("budexrate10", entity.budexrate10);
         row.SetField("budexrate11", entity.budexrate11);
         row.SetField("budexrate12", entity.budexrate12);
         row.SetField("budexrate13", entity.budexrate13);
         row.SetField("operinit", entity.operinit);
         row.SetField("glsxRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, GlsxBase entity)
      {
         row.SetField("yr", entity.yr);
         row.SetField("cono", entity.cono);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("acctgrp", entity.acctgrp);
         row.SetField("glsxRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	