//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.GL
{
   /// <summary>
   /// Revaluation Transactions
   /// </summary>
   
   public partial class GletvBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Revaluation Number
      /// </summary>
      [Key,Order]
      public int revalno { get; set; }

      /// <summary>
      /// Reval Trans No
      /// </summary>
      [Key,Order]
      public int seqno { get; set; }

      /// <summary>
      /// Doc No
      /// </summary>
      [StringValidationAttribute]
      public string docno { get; set; }

      /// <summary>
      /// Doc Suf
      /// </summary>
      public int docsuf { get; set; }

      /// <summary>
      /// Doc Seq No
      /// </summary>
      public int docseqno { get; set; }

      /// <summary>
      /// Acct#
      /// </summary>
      public int glacctno { get; set; }

      /// <summary>
      /// Dept#
      /// </summary>
      public int gldeptno { get; set; }

      /// <summary>
      /// Div#
      /// </summary>
      public int gldivno { get; set; }

      /// <summary>
      /// Sub#
      /// </summary>
      public int glsubno { get; set; }

      /// <summary>
      /// GL Exchange Rate
      /// </summary>
      public decimal glexrate { get; set; }

      /// <summary>
      /// ID No
      /// </summary>
      public decimal idno { get; set; }

      /// <summary>
      /// Source Cd
      /// </summary>
      [StringValidationAttribute]
      public string sourcecd { get; set; }

      /// <summary>
      /// Journal No
      /// </summary>
      public int jrnlno { get; set; }

      /// <summary>
      /// New Exchange Rate
      /// </summary>
      public decimal newexrate { get; set; }

      /// <summary>
      /// Old Exchange Rate
      /// </summary>
      public decimal oldexrate { get; set; }

      /// <summary>
      /// Changed By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Set No
      /// </summary>
      public int setno { get; set; }

      /// <summary>
      /// Trans Cd
      /// </summary>
      public int transcd { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Reval Date
      /// </summary>
      public DateTime? revaldt { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildGletvBaseFromRow<T>(DataRow row) where T:GletvBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.docno = row.IsNull("docno") ? string.Empty : row.Field<string>("docno");
         entity.docsuf = row.IsNull("docsuf") ? 0 : row.Field<int>("docsuf");
         entity.docseqno = row.IsNull("docseqno") ? 0 : row.Field<int>("docseqno");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.glexrate = row.IsNull("glexrate") ? decimal.Zero : row.Field<decimal>("glexrate");
         entity.idno = row.IsNull("idno") ? decimal.Zero : row.Field<decimal>("idno");
         entity.sourcecd = row.IsNull("sourcecd") ? string.Empty : row.Field<string>("sourcecd");
         entity.revalno = row.IsNull("revalno") ? 0 : row.Field<int>("revalno");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.newexrate = row.IsNull("newexrate") ? decimal.Zero : row.Field<decimal>("newexrate");
         entity.oldexrate = row.IsNull("oldexrate") ? decimal.Zero : row.Field<decimal>("oldexrate");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.setno = row.IsNull("setno") ? 0 : row.Field<int>("setno");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.transcd = row.IsNull("transcd") ? 0 : row.Field<int>("transcd");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.revaldt = row.Field<DateTime?>("revaldt");
         entity.rowID = row.Field<byte[]>("gletvRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromGletvBase(ref DataRow row, GletvBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("docno", entity.docno);
         row.SetField("docsuf", entity.docsuf);
         row.SetField("docseqno", entity.docseqno);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("glexrate", entity.glexrate);
         row.SetField("idno", entity.idno);
         row.SetField("sourcecd", entity.sourcecd);
         row.SetField("revalno", entity.revalno);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("newexrate", entity.newexrate);
         row.SetField("oldexrate", entity.oldexrate);
         row.SetField("operinit", entity.operinit);
         row.SetField("setno", entity.setno);
         row.SetField("seqno", entity.seqno);
         row.SetField("transcd", entity.transcd);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("revaldt", entity.revaldt);
         row.SetField("gletvRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, GletvBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("revalno", entity.revalno);
         row.SetField("seqno", entity.seqno);
         row.SetField("gletvRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	