//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.BP
{
   /// <summary>
   /// Bid Prep Job Header
   /// </summary>
   
   public partial class BpehjBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Bid Identifier
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string bpid { get; set; }

      /// <summary>
      /// Job Identifier
      /// </summary>
      [StringValidationAttribute]
      public string jobid { get; set; }

      /// <summary>
      /// Name
      /// </summary>
      [StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Zipcode
      /// </summary>
      [StringValidationAttribute]
      public string zipcd { get; set; }

      /// <summary>
      /// Phone #
      /// </summary>
      [StringValidationAttribute]
      public string phoneno { get; set; }

      /// <summary>
      /// Fax Phone #
      /// </summary>
      [StringValidationAttribute]
      public string faxphoneno { get; set; }

      /// <summary>
      /// Contact Name
      /// </summary>
      [StringValidationAttribute]
      public string contactnm { get; set; }

      /// <summary>
      /// Contact Phone #
      /// </summary>
      [StringValidationAttribute]
      public string contactphno { get; set; }

      /// <summary>
      /// Owner Name
      /// </summary>
      [StringValidationAttribute]
      public string ownnm { get; set; }

      /// <summary>
      /// Owner Address
      /// </summary>
      [StringValidationAttribute]
      public string ownaddr1 { get; set; }
      [StringValidationAttribute]
      public string ownaddr2 { get; set; }

      /// <summary>
      /// Owner City
      /// </summary>
      [StringValidationAttribute]
      public string owncity { get; set; }

      /// <summary>
      /// Owner State
      /// </summary>
      [StringValidationAttribute]
      public string ownstate { get; set; }

      /// <summary>
      /// Owner Zipcode
      /// </summary>
      [StringValidationAttribute]
      public string ownzipcd { get; set; }

      /// <summary>
      /// Owner Phone
      /// </summary>
      [StringValidationAttribute]
      public string ownphoneno { get; set; }

      /// <summary>
      /// General Contractor Name
      /// </summary>
      [StringValidationAttribute]
      public string gennm { get; set; }

      /// <summary>
      /// General Address
      /// </summary>
      [StringValidationAttribute]
      public string genaddr1 { get; set; }
      [StringValidationAttribute]
      public string genaddr2 { get; set; }

      /// <summary>
      /// General City
      /// </summary>
      [StringValidationAttribute]
      public string gencity { get; set; }

      /// <summary>
      /// General State
      /// </summary>
      [StringValidationAttribute]
      public string genstate { get; set; }

      /// <summary>
      /// General Zipcode
      /// </summary>
      [StringValidationAttribute]
      public string genzipcd { get; set; }

      /// <summary>
      /// General Phone #
      /// </summary>
      [StringValidationAttribute]
      public string genphoneno { get; set; }

      /// <summary>
      /// Lendor Name
      /// </summary>
      [StringValidationAttribute]
      public string lennm { get; set; }

      /// <summary>
      /// Lendor Address
      /// </summary>
      [StringValidationAttribute]
      public string lenaddr1 { get; set; }
      [StringValidationAttribute]
      public string lenaddr2 { get; set; }

      /// <summary>
      /// Lendor City
      /// </summary>
      [StringValidationAttribute]
      public string lencity { get; set; }

      /// <summary>
      /// Lendor Stte
      /// </summary>
      [StringValidationAttribute]
      public string lenstate { get; set; }

      /// <summary>
      /// Lendor Zipcode
      /// </summary>
      [StringValidationAttribute]
      public string lenzipcd { get; set; }

      /// <summary>
      /// Lendor Phone #
      /// </summary>
      [StringValidationAttribute]
      public string lenphoneno { get; set; }

      /// <summary>
      /// Bonded
      /// </summary>
      public bool bondedfl { get; set; }

      /// <summary>
      /// Bond Identifier
      /// </summary>
      [StringValidationAttribute]
      public string bondid { get; set; }

      /// <summary>
      /// Last Changed By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Prelim Lien File Date
      /// </summary>
      public DateTime? lienpredt { get; set; }

      /// <summary>
      /// Prelim Lien Filed By
      /// </summary>
      [StringValidationAttribute]
      public string lienpreoper { get; set; }

      /// <summary>
      /// Prelim Lien Filed With
      /// </summary>
      [StringValidationAttribute]
      public string lienprewith { get; set; }

      /// <summary>
      /// Hold if Over:
      /// </summary>
      public bool holdfl { get; set; }

      /// <summary>
      /// Hold Days
      /// </summary>
      public int holddays { get; set; }

      /// <summary>
      /// Territory
      /// </summary>
      [StringValidationAttribute]
      public string salesterr { get; set; }

      /// <summary>
      /// Taxing State
      /// </summary>
      [StringValidationAttribute]
      public string statecd { get; set; }

      /// <summary>
      /// Taxing Authority
      /// </summary>
      [StringValidationAttribute]
      public string taxauth { get; set; }

      /// <summary>
      /// Non Tax Reason
      /// </summary>
      [StringValidationAttribute]
      public string nontaxtype { get; set; }

      /// <summary>
      /// Tax Exempt Certificate
      /// </summary>
      [StringValidationAttribute]
      public string taxcert { get; set; }

      /// <summary>
      /// Pre-lien Amount
      /// </summary>
      public decimal lienpreamt { get; set; }

      /// <summary>
      /// Taxable Type
      /// </summary>
      [StringValidationAttribute]
      public string taxablety { get; set; }

      /// <summary>
      /// user7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// user6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr3 { get; set; }

      /// <summary>
      /// General Address
      /// </summary>
      [StringValidationAttribute]
      public string genaddr3 { get; set; }

      /// <summary>
      /// Lendor Address
      /// </summary>
      [StringValidationAttribute]
      public string lenaddr3 { get; set; }

      /// <summary>
      /// Owner Address
      /// </summary>
      [StringValidationAttribute]
      public string ownaddr3 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.addr1 + "," + this.city + "," + this.state + "," + this.zipcd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildBpehjBaseFromRow<T>(DataRow row) where T:BpehjBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.bpid = row.IsNull("bpid") ? string.Empty : row.Field<string>("bpid");
         entity.jobid = row.IsNull("jobid") ? string.Empty : row.Field<string>("jobid");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.phoneno = row.IsNull("phoneno") ? string.Empty : row.Field<string>("phoneno");
         entity.faxphoneno = row.IsNull("faxphoneno") ? string.Empty : row.Field<string>("faxphoneno");
         entity.contactnm = row.IsNull("contactnm") ? string.Empty : row.Field<string>("contactnm");
         entity.contactphno = row.IsNull("contactphno") ? string.Empty : row.Field<string>("contactphno");
         entity.ownnm = row.IsNull("ownnm") ? string.Empty : row.Field<string>("ownnm");
         entity.ownaddr1 = row.IsNull("ownaddr1") ? string.Empty : row.Field<string>("ownaddr1");
         entity.ownaddr2 = row.IsNull("ownaddr2") ? string.Empty : row.Field<string>("ownaddr2");
         entity.owncity = row.IsNull("owncity") ? string.Empty : row.Field<string>("owncity");
         entity.ownstate = row.IsNull("ownstate") ? string.Empty : row.Field<string>("ownstate");
         entity.ownzipcd = row.IsNull("ownzipcd") ? string.Empty : row.Field<string>("ownzipcd");
         entity.ownphoneno = row.IsNull("ownphoneno") ? string.Empty : row.Field<string>("ownphoneno");
         entity.gennm = row.IsNull("gennm") ? string.Empty : row.Field<string>("gennm");
         entity.genaddr1 = row.IsNull("genaddr1") ? string.Empty : row.Field<string>("genaddr1");
         entity.genaddr2 = row.IsNull("genaddr2") ? string.Empty : row.Field<string>("genaddr2");
         entity.gencity = row.IsNull("gencity") ? string.Empty : row.Field<string>("gencity");
         entity.genstate = row.IsNull("genstate") ? string.Empty : row.Field<string>("genstate");
         entity.genzipcd = row.IsNull("genzipcd") ? string.Empty : row.Field<string>("genzipcd");
         entity.genphoneno = row.IsNull("genphoneno") ? string.Empty : row.Field<string>("genphoneno");
         entity.lennm = row.IsNull("lennm") ? string.Empty : row.Field<string>("lennm");
         entity.lenaddr1 = row.IsNull("lenaddr1") ? string.Empty : row.Field<string>("lenaddr1");
         entity.lenaddr2 = row.IsNull("lenaddr2") ? string.Empty : row.Field<string>("lenaddr2");
         entity.lencity = row.IsNull("lencity") ? string.Empty : row.Field<string>("lencity");
         entity.lenstate = row.IsNull("lenstate") ? string.Empty : row.Field<string>("lenstate");
         entity.lenzipcd = row.IsNull("lenzipcd") ? string.Empty : row.Field<string>("lenzipcd");
         entity.lenphoneno = row.IsNull("lenphoneno") ? string.Empty : row.Field<string>("lenphoneno");
         entity.bondedfl = row.Field<bool>("bondedfl");
         entity.bondid = row.IsNull("bondid") ? string.Empty : row.Field<string>("bondid");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.lienpredt = row.Field<DateTime?>("lienpredt");
         entity.lienpreoper = row.IsNull("lienpreoper") ? string.Empty : row.Field<string>("lienpreoper");
         entity.lienprewith = row.IsNull("lienprewith") ? string.Empty : row.Field<string>("lienprewith");
         entity.holdfl = row.Field<bool>("holdfl");
         entity.holddays = row.IsNull("holddays") ? 0 : row.Field<int>("holddays");
         entity.salesterr = row.IsNull("salesterr") ? string.Empty : row.Field<string>("salesterr");
         entity.statecd = row.IsNull("statecd") ? string.Empty : row.Field<string>("statecd");
         entity.taxauth = row.IsNull("taxauth") ? string.Empty : row.Field<string>("taxauth");
         entity.nontaxtype = row.IsNull("nontaxtype") ? string.Empty : row.Field<string>("nontaxtype");
         entity.taxcert = row.IsNull("taxcert") ? string.Empty : row.Field<string>("taxcert");
         entity.lienpreamt = row.IsNull("lienpreamt") ? decimal.Zero : row.Field<decimal>("lienpreamt");
         entity.taxablety = row.IsNull("taxablety") ? string.Empty : row.Field<string>("taxablety");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.genaddr3 = row.IsNull("genaddr3") ? string.Empty : row.Field<string>("genaddr3");
         entity.lenaddr3 = row.IsNull("lenaddr3") ? string.Empty : row.Field<string>("lenaddr3");
         entity.ownaddr3 = row.IsNull("ownaddr3") ? string.Empty : row.Field<string>("ownaddr3");
         entity.rowID = row.Field<byte[]>("bpehjRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromBpehjBase(ref DataRow row, BpehjBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("bpid", entity.bpid);
         row.SetField("jobid", entity.jobid);
         row.SetField("name", entity.name);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("phoneno", entity.phoneno);
         row.SetField("faxphoneno", entity.faxphoneno);
         row.SetField("contactnm", entity.contactnm);
         row.SetField("contactphno", entity.contactphno);
         row.SetField("ownnm", entity.ownnm);
         row.SetField("ownaddr1", entity.ownaddr1);
         row.SetField("ownaddr2", entity.ownaddr2);
         row.SetField("owncity", entity.owncity);
         row.SetField("ownstate", entity.ownstate);
         row.SetField("ownzipcd", entity.ownzipcd);
         row.SetField("ownphoneno", entity.ownphoneno);
         row.SetField("gennm", entity.gennm);
         row.SetField("genaddr1", entity.genaddr1);
         row.SetField("genaddr2", entity.genaddr2);
         row.SetField("gencity", entity.gencity);
         row.SetField("genstate", entity.genstate);
         row.SetField("genzipcd", entity.genzipcd);
         row.SetField("genphoneno", entity.genphoneno);
         row.SetField("lennm", entity.lennm);
         row.SetField("lenaddr1", entity.lenaddr1);
         row.SetField("lenaddr2", entity.lenaddr2);
         row.SetField("lencity", entity.lencity);
         row.SetField("lenstate", entity.lenstate);
         row.SetField("lenzipcd", entity.lenzipcd);
         row.SetField("lenphoneno", entity.lenphoneno);
         row.SetField("bondedfl", entity.bondedfl);
         row.SetField("bondid", entity.bondid);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("lienpredt", entity.lienpredt);
         row.SetField("lienpreoper", entity.lienpreoper);
         row.SetField("lienprewith", entity.lienprewith);
         row.SetField("holdfl", entity.holdfl);
         row.SetField("holddays", entity.holddays);
         row.SetField("salesterr", entity.salesterr);
         row.SetField("statecd", entity.statecd);
         row.SetField("taxauth", entity.taxauth);
         row.SetField("nontaxtype", entity.nontaxtype);
         row.SetField("taxcert", entity.taxcert);
         row.SetField("lienpreamt", entity.lienpreamt);
         row.SetField("taxablety", entity.taxablety);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("addr3", entity.addr3);
         row.SetField("genaddr3", entity.genaddr3);
         row.SetField("lenaddr3", entity.lenaddr3);
         row.SetField("ownaddr3", entity.ownaddr3);
         row.SetField("bpehjRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, BpehjBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("bpid", entity.bpid);
         row.SetField("bpehjRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	