//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.BP
{
   /// <summary>
   /// Bid Prep Detail Line
   /// </summary>
   
   public partial class BpelBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Bid Identifier
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string bpid { get; set; }

      /// <summary>
      /// Revision #
      /// </summary>
      [Key,Order]
      public int revno { get; set; }

      /// <summary>
      /// Line #
      /// </summary>
      [Key,Order]
      public int lineno { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Changed By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Line Type
      /// </summary>
      [StringValidationAttribute]
      public string linetype { get; set; }

      /// <summary>
      /// Product Description
      /// </summary>
      [StringValidationAttribute]
      public string prod { get; set; }

      /// <summary>
      /// Requested Product
      /// </summary>
      [StringValidationAttribute]
      public string reqprod { get; set; }

      /// <summary>
      /// Product Cross Reference
      /// </summary>
      [StringValidationAttribute]
      public string xrefprodty { get; set; }

      /// <summary>
      /// Item Identifier
      /// </summary>
      [StringValidationAttribute]
      public string itemid { get; set; }

      /// <summary>
      /// Non-stock Type
      /// </summary>
      [StringValidationAttribute]
      public string nonstockty { get; set; }

      /// <summary>
      /// Qty Ordered
      /// </summary>
      public decimal qtyord { get; set; }

      /// <summary>
      /// Units
      /// </summary>
      [StringValidationAttribute]
      public string unit { get; set; }

      /// <summary>
      /// Product Price
      /// </summary>
      public decimal price { get; set; }

      /// <summary>
      /// Base Price
      /// </summary>
      public decimal baseprice { get; set; }

      /// <summary>
      /// List Price
      /// </summary>
      public decimal listprice { get; set; }

      /// <summary>
      /// Award Price
      /// </summary>
      public decimal awardprice { get; set; }

      /// <summary>
      /// Pricing Cost
      /// </summary>
      public decimal pdcost { get; set; }

      /// <summary>
      /// Price Formula Type
      /// </summary>
      [StringValidationAttribute]
      public string prcformty { get; set; }

      /// <summary>
      /// Spec Rec Link
      /// </summary>
      public int icspecrecno { get; set; }

      /// <summary>
      /// Cost Formula Type
      /// </summary>
      [StringValidationAttribute]
      public string cstformty { get; set; }

      /// <summary>
      /// Product Line
      /// </summary>
      [StringValidationAttribute]
      public string prodline { get; set; }

      /// <summary>
      /// Extended Description
      /// </summary>
      [StringValidationAttribute]
      public string descrip1 { get; set; }
      [StringValidationAttribute]
      public string descrip2 { get; set; }
      [StringValidationAttribute]
      public string descrip3 { get; set; }
      [StringValidationAttribute]
      public string descrip4 { get; set; }
      [StringValidationAttribute]
      public string descrip5 { get; set; }

      /// <summary>
      /// Price Locked
      /// </summary>
      public bool lockprfl { get; set; }

      /// <summary>
      /// Cost Locked
      /// </summary>
      public bool lockcsfl { get; set; }

      /// <summary>
      /// Line Disposition
      /// </summary>
      [StringValidationAttribute]
      public string linestat { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// Vendor Lock
      /// </summary>
      public bool lockvnfl { get; set; }

      /// <summary>
      /// Min Margin
      /// </summary>
      public decimal minmargin { get; set; }

      /// <summary>
      /// Print Type
      /// </summary>
      [StringValidationAttribute]
      public string printtype { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// Cost
      /// </summary>
      public decimal cost { get; set; }

      /// <summary>
      /// Cost Formula
      /// </summary>
      public decimal cstform1 { get; set; }
      public decimal cstform2 { get; set; }
      public decimal cstform3 { get; set; }
      public decimal cstform4 { get; set; }
      public decimal cstform5 { get; set; }
      public decimal cstform6 { get; set; }
      public decimal cstform7 { get; set; }
      public decimal cstform8 { get; set; }
      public decimal cstform9 { get; set; }
      public decimal cstform10 { get; set; }
      public decimal cstform11 { get; set; }
      public decimal cstform12 { get; set; }
      public decimal cstform13 { get; set; }
      public decimal cstform14 { get; set; }
      public decimal cstform15 { get; set; }

      /// <summary>
      /// Price Formula
      /// </summary>
      public decimal prcform1 { get; set; }
      public decimal prcform2 { get; set; }
      public decimal prcform3 { get; set; }
      public decimal prcform4 { get; set; }
      public decimal prcform5 { get; set; }
      public decimal prcform6 { get; set; }
      public decimal prcform7 { get; set; }
      public decimal prcform8 { get; set; }
      public decimal prcform9 { get; set; }
      public decimal prcform10 { get; set; }
      public decimal prcform11 { get; set; }
      public decimal prcform12 { get; set; }
      public decimal prcform13 { get; set; }
      public decimal prcform14 { get; set; }
      public decimal prcform15 { get; set; }

      /// <summary>
      /// Price Type
      /// </summary>
      [StringValidationAttribute]
      public string pricetype { get; set; }

      /// <summary>
      /// Price Level
      /// </summary>
      public int pricecd { get; set; }

      /// <summary>
      /// Formulas
      /// </summary>
      public bool prcformfl { get; set; }

      /// <summary>
      /// Margin
      /// </summary>
      public decimal marginpct { get; set; }

      /// <summary>
      /// Price Over
      /// </summary>
      public bool priceoverfl { get; set; }

      /// <summary>
      /// Cost Over
      /// </summary>
      public bool costoverfl { get; set; }

      /// <summary>
      /// Tax Type
      /// </summary>
      [StringValidationAttribute]
      public string taxablety { get; set; }

      /// <summary>
      /// Spec/DO
      /// </summary>
      [StringValidationAttribute]
      public string specnstype { get; set; }

      /// <summary>
      /// Default Warehouse
      /// </summary>
      [StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// No Times Chgd
      /// </summary>
      public int notimeschg { get; set; }

      /// <summary>
      /// Convert Stage
      /// </summary>
      [StringValidationAttribute]
      public string convertstg { get; set; }

      /// <summary>
      /// Product Category
      /// </summary>
      [StringValidationAttribute]
      public string prodcat { get; set; }

      /// <summary>
      /// Comm Type
      /// </summary>
      [StringValidationAttribute]
      public string commtype { get; set; }

      /// <summary>
      /// Last Cost
      /// </summary>
      public decimal lastcost { get; set; }

      /// <summary>
      /// Last Price
      /// </summary>
      public decimal lastprice { get; set; }

      /// <summary>
      /// Last Margin
      /// </summary>
      public decimal lastmargin { get; set; }

      /// <summary>
      /// Award Type
      /// </summary>
      [StringValidationAttribute]
      public string awardty { get; set; }

      /// <summary>
      /// Disc Level
      /// </summary>
      public int disccd { get; set; }

      /// <summary>
      /// Price Calc
      /// </summary>
      [StringValidationAttribute]
      public string priceclty { get; set; }

      /// <summary>
      /// Kit
      /// </summary>
      public bool kitfl { get; set; }

      /// <summary>
      /// Kit Rollup
      /// </summary>
      [StringValidationAttribute]
      public string kitrollty { get; set; }

      /// <summary>
      /// PD Rec #
      /// </summary>
      public int pdrecno { get; set; }

      /// <summary>
      /// Last Cost Override
      /// </summary>
      public bool lastcstovfl { get; set; }

      /// <summary>
      /// Last Price Override
      /// </summary>
      public bool lastprcovfl { get; set; }

      /// <summary>
      /// Last Vendor
      /// </summary>
      public decimal lastvendno { get; set; }

      /// <summary>
      /// Qty Break Type
      /// </summary>
      [StringValidationAttribute]
      public string qtybreakty { get; set; }

      /// <summary>
      /// Comment
      /// </summary>
      public bool commentfl { get; set; }

      /// <summary>
      /// Promotional
      /// </summary>
      public bool promofl { get; set; }

      /// <summary>
      /// Ext Price
      /// </summary>
      public decimal extprice { get; set; }

      /// <summary>
      /// Ext Cost
      /// </summary>
      public decimal extcost { get; set; }

      /// <summary>
      /// Last Ext Prc
      /// </summary>
      public decimal lastextprc { get; set; }

      /// <summary>
      /// Last Ext Cst
      /// </summary>
      public decimal lastextcst { get; set; }

      /// <summary>
      /// # Stk Units
      /// </summary>
      public decimal unitconv { get; set; }

      /// <summary>
      /// G/L Cost
      /// </summary>
      public decimal prodcost { get; set; }

      /// <summary>
      /// Pricing Cost Type
      /// </summary>
      [StringValidationAttribute]
      public string pricecostty { get; set; }

      /// <summary>
      /// lastlocks
      /// </summary>
      [StringValidationAttribute]
      public string lastlockfl { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// user6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// user7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// Sequence ID
      /// </summary>
      [StringValidationAttribute]
      public string seqid { get; set; }

      /// <summary>
      /// Pricing Cost Type
      /// </summary>
      [StringValidationAttribute]
      public string prccostty { get; set; }

      /// <summary>
      /// Release Process
      /// </summary>
      public bool relprocessfl { get; set; }

      /// <summary>
      /// Accept
      /// </summary>
      [StringValidationAttribute]
      public string accepttype { get; set; }

      /// <summary>
      /// Line Reference
      /// </summary>
      [StringValidationAttribute]
      public string jobno { get; set; }

      /// <summary>
      /// Use Dollar Prices
      /// </summary>
      public bool usepricefl { get; set; }

      /// <summary>
      /// Maximum Qty
      /// </summary>
      public decimal maxqty { get; set; }

      /// <summary>
      /// Minimum Qty
      /// </summary>
      public decimal minqty { get; set; }

      /// <summary>
      /// Terms Disc
      /// </summary>
      public bool termsdiscfl { get; set; }

      /// <summary>
      /// Terms Discount %
      /// </summary>
      public decimal termspct { get; set; }

      /// <summary>
      /// PO/WT #
      /// </summary>
      [StringValidationAttribute]
      public string ordertype { get; set; }

      /// <summary>
      /// Create ICSP/ICSW for Catalog
      /// </summary>
      public bool cataddfl { get; set; }

      /// <summary>
      /// Requested Ship Date
      /// </summary>
      public DateTime? reqshipdt { get; set; }

      /// <summary>
      /// Promised Date
      /// </summary>
      public DateTime? promisedt { get; set; }

      /// <summary>
      /// Open Quantity
      /// </summary>
      public decimal qtyopen { get; set; }

      /// <summary>
      /// Quantity To Release
      /// </summary>
      public decimal qtyrel { get; set; }

      /// <summary>
      /// Blanket Release Quantity
      /// </summary>
      public decimal qtybr { get; set; }

      /// <summary>
      /// Spec/DO
      /// </summary>
      [StringValidationAttribute]
      public string speclinedo { get; set; }

      /// <summary>
      /// Due Date
      /// </summary>
      public DateTime? duedt { get; set; }

      /// <summary>
      /// Ship From
      /// </summary>
      public int shipfmno { get; set; }

      /// <summary>
      /// ARP Whse
      /// </summary>
      [StringValidationAttribute]
      public string arpwhse { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildBpelBaseFromRow<T>(DataRow row) where T:BpelBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.bpid = row.IsNull("bpid") ? string.Empty : row.Field<string>("bpid");
         entity.revno = row.IsNull("revno") ? 0 : row.Field<int>("revno");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.linetype = row.IsNull("linetype") ? string.Empty : row.Field<string>("linetype");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.reqprod = row.IsNull("reqprod") ? string.Empty : row.Field<string>("reqprod");
         entity.xrefprodty = row.IsNull("xrefprodty") ? string.Empty : row.Field<string>("xrefprodty");
         entity.itemid = row.IsNull("itemid") ? string.Empty : row.Field<string>("itemid");
         entity.nonstockty = row.IsNull("nonstockty") ? string.Empty : row.Field<string>("nonstockty");
         entity.qtyord = row.IsNull("qtyord") ? decimal.Zero : row.Field<decimal>("qtyord");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.price = row.IsNull("price") ? decimal.Zero : row.Field<decimal>("price");
         entity.baseprice = row.IsNull("baseprice") ? decimal.Zero : row.Field<decimal>("baseprice");
         entity.listprice = row.IsNull("listprice") ? decimal.Zero : row.Field<decimal>("listprice");
         entity.awardprice = row.IsNull("awardprice") ? decimal.Zero : row.Field<decimal>("awardprice");
         entity.pdcost = row.IsNull("pdcost") ? decimal.Zero : row.Field<decimal>("pdcost");
         entity.prcformty = row.IsNull("prcformty") ? string.Empty : row.Field<string>("prcformty");
         entity.icspecrecno = row.IsNull("icspecrecno") ? 0 : row.Field<int>("icspecrecno");
         entity.cstformty = row.IsNull("cstformty") ? string.Empty : row.Field<string>("cstformty");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.descrip1 = row.IsNull("descrip1") ? string.Empty : row.Field<string>("descrip1");
         entity.descrip2 = row.IsNull("descrip2") ? string.Empty : row.Field<string>("descrip2");
         entity.descrip3 = row.IsNull("descrip3") ? string.Empty : row.Field<string>("descrip3");
         entity.descrip4 = row.IsNull("descrip4") ? string.Empty : row.Field<string>("descrip4");
         entity.descrip5 = row.IsNull("descrip5") ? string.Empty : row.Field<string>("descrip5");
         entity.lockprfl = row.Field<bool>("lockprfl");
         entity.lockcsfl = row.Field<bool>("lockcsfl");
         entity.linestat = row.IsNull("linestat") ? string.Empty : row.Field<string>("linestat");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.lockvnfl = row.Field<bool>("lockvnfl");
         entity.minmargin = row.IsNull("minmargin") ? decimal.Zero : row.Field<decimal>("minmargin");
         entity.printtype = row.IsNull("printtype") ? string.Empty : row.Field<string>("printtype");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.cost = row.IsNull("cost") ? decimal.Zero : row.Field<decimal>("cost");
         entity.cstform1 = row.IsNull("cstform1") ? decimal.Zero : row.Field<decimal>("cstform1");
         entity.cstform2 = row.IsNull("cstform2") ? decimal.Zero : row.Field<decimal>("cstform2");
         entity.cstform3 = row.IsNull("cstform3") ? decimal.Zero : row.Field<decimal>("cstform3");
         entity.cstform4 = row.IsNull("cstform4") ? decimal.Zero : row.Field<decimal>("cstform4");
         entity.cstform5 = row.IsNull("cstform5") ? decimal.Zero : row.Field<decimal>("cstform5");
         entity.cstform6 = row.IsNull("cstform6") ? decimal.Zero : row.Field<decimal>("cstform6");
         entity.cstform7 = row.IsNull("cstform7") ? decimal.Zero : row.Field<decimal>("cstform7");
         entity.cstform8 = row.IsNull("cstform8") ? decimal.Zero : row.Field<decimal>("cstform8");
         entity.cstform9 = row.IsNull("cstform9") ? decimal.Zero : row.Field<decimal>("cstform9");
         entity.cstform10 = row.IsNull("cstform10") ? decimal.Zero : row.Field<decimal>("cstform10");
         entity.cstform11 = row.IsNull("cstform11") ? decimal.Zero : row.Field<decimal>("cstform11");
         entity.cstform12 = row.IsNull("cstform12") ? decimal.Zero : row.Field<decimal>("cstform12");
         entity.cstform13 = row.IsNull("cstform13") ? decimal.Zero : row.Field<decimal>("cstform13");
         entity.cstform14 = row.IsNull("cstform14") ? decimal.Zero : row.Field<decimal>("cstform14");
         entity.cstform15 = row.IsNull("cstform15") ? decimal.Zero : row.Field<decimal>("cstform15");
         entity.prcform1 = row.IsNull("prcform1") ? decimal.Zero : row.Field<decimal>("prcform1");
         entity.prcform2 = row.IsNull("prcform2") ? decimal.Zero : row.Field<decimal>("prcform2");
         entity.prcform3 = row.IsNull("prcform3") ? decimal.Zero : row.Field<decimal>("prcform3");
         entity.prcform4 = row.IsNull("prcform4") ? decimal.Zero : row.Field<decimal>("prcform4");
         entity.prcform5 = row.IsNull("prcform5") ? decimal.Zero : row.Field<decimal>("prcform5");
         entity.prcform6 = row.IsNull("prcform6") ? decimal.Zero : row.Field<decimal>("prcform6");
         entity.prcform7 = row.IsNull("prcform7") ? decimal.Zero : row.Field<decimal>("prcform7");
         entity.prcform8 = row.IsNull("prcform8") ? decimal.Zero : row.Field<decimal>("prcform8");
         entity.prcform9 = row.IsNull("prcform9") ? decimal.Zero : row.Field<decimal>("prcform9");
         entity.prcform10 = row.IsNull("prcform10") ? decimal.Zero : row.Field<decimal>("prcform10");
         entity.prcform11 = row.IsNull("prcform11") ? decimal.Zero : row.Field<decimal>("prcform11");
         entity.prcform12 = row.IsNull("prcform12") ? decimal.Zero : row.Field<decimal>("prcform12");
         entity.prcform13 = row.IsNull("prcform13") ? decimal.Zero : row.Field<decimal>("prcform13");
         entity.prcform14 = row.IsNull("prcform14") ? decimal.Zero : row.Field<decimal>("prcform14");
         entity.prcform15 = row.IsNull("prcform15") ? decimal.Zero : row.Field<decimal>("prcform15");
         entity.pricetype = row.IsNull("pricetype") ? string.Empty : row.Field<string>("pricetype");
         entity.pricecd = row.IsNull("pricecd") ? 0 : row.Field<int>("pricecd");
         entity.prcformfl = row.Field<bool>("prcformfl");
         entity.marginpct = row.IsNull("marginpct") ? decimal.Zero : row.Field<decimal>("marginpct");
         entity.priceoverfl = row.Field<bool>("priceoverfl");
         entity.costoverfl = row.Field<bool>("costoverfl");
         entity.taxablety = row.IsNull("taxablety") ? string.Empty : row.Field<string>("taxablety");
         entity.specnstype = row.IsNull("specnstype") ? string.Empty : row.Field<string>("specnstype");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.notimeschg = row.IsNull("notimeschg") ? 0 : row.Field<int>("notimeschg");
         entity.convertstg = row.IsNull("convertstg") ? string.Empty : row.Field<string>("convertstg");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.commtype = row.IsNull("commtype") ? string.Empty : row.Field<string>("commtype");
         entity.lastcost = row.IsNull("lastcost") ? decimal.Zero : row.Field<decimal>("lastcost");
         entity.lastprice = row.IsNull("lastprice") ? decimal.Zero : row.Field<decimal>("lastprice");
         entity.lastmargin = row.IsNull("lastmargin") ? decimal.Zero : row.Field<decimal>("lastmargin");
         entity.awardty = row.IsNull("awardty") ? string.Empty : row.Field<string>("awardty");
         entity.disccd = row.IsNull("disccd") ? 0 : row.Field<int>("disccd");
         entity.priceclty = row.IsNull("priceclty") ? string.Empty : row.Field<string>("priceclty");
         entity.kitfl = row.Field<bool>("kitfl");
         entity.kitrollty = row.IsNull("kitrollty") ? string.Empty : row.Field<string>("kitrollty");
         entity.pdrecno = row.IsNull("pdrecno") ? 0 : row.Field<int>("pdrecno");
         entity.lastcstovfl = row.Field<bool>("lastcstovfl");
         entity.lastprcovfl = row.Field<bool>("lastprcovfl");
         entity.lastvendno = row.IsNull("lastvendno") ? decimal.Zero : row.Field<decimal>("lastvendno");
         entity.qtybreakty = row.IsNull("qtybreakty") ? string.Empty : row.Field<string>("qtybreakty");
         entity.commentfl = row.Field<bool>("commentfl");
         entity.promofl = row.Field<bool>("promofl");
         entity.extprice = row.IsNull("extprice") ? decimal.Zero : row.Field<decimal>("extprice");
         entity.extcost = row.IsNull("extcost") ? decimal.Zero : row.Field<decimal>("extcost");
         entity.lastextprc = row.IsNull("lastextprc") ? decimal.Zero : row.Field<decimal>("lastextprc");
         entity.lastextcst = row.IsNull("lastextcst") ? decimal.Zero : row.Field<decimal>("lastextcst");
         entity.unitconv = row.IsNull("unitconv") ? decimal.Zero : row.Field<decimal>("unitconv");
         entity.prodcost = row.IsNull("prodcost") ? decimal.Zero : row.Field<decimal>("prodcost");
         entity.pricecostty = row.IsNull("pricecostty") ? string.Empty : row.Field<string>("pricecostty");
         entity.lastlockfl = row.IsNull("lastlockfl") ? string.Empty : row.Field<string>("lastlockfl");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.seqid = row.IsNull("seqid") ? string.Empty : row.Field<string>("seqid");
         entity.prccostty = row.IsNull("prccostty") ? string.Empty : row.Field<string>("prccostty");
         entity.relprocessfl = row.Field<bool>("relprocessfl");
         entity.accepttype = row.IsNull("accepttype") ? string.Empty : row.Field<string>("accepttype");
         entity.jobno = row.IsNull("jobno") ? string.Empty : row.Field<string>("jobno");
         entity.usepricefl = row.Field<bool>("usepricefl");
         entity.maxqty = row.IsNull("maxqty") ? decimal.Zero : row.Field<decimal>("maxqty");
         entity.minqty = row.IsNull("minqty") ? decimal.Zero : row.Field<decimal>("minqty");
         entity.termsdiscfl = row.Field<bool>("termsdiscfl");
         entity.termspct = row.IsNull("termspct") ? decimal.Zero : row.Field<decimal>("termspct");
         entity.ordertype = row.IsNull("ordertype") ? string.Empty : row.Field<string>("ordertype");
         entity.cataddfl = row.Field<bool>("cataddfl");
         entity.reqshipdt = row.Field<DateTime?>("reqshipdt");
         entity.promisedt = row.Field<DateTime?>("promisedt");
         entity.qtyopen = row.IsNull("qtyopen") ? decimal.Zero : row.Field<decimal>("qtyopen");
         entity.qtyrel = row.IsNull("qtyrel") ? decimal.Zero : row.Field<decimal>("qtyrel");
         entity.qtybr = row.IsNull("qtybr") ? decimal.Zero : row.Field<decimal>("qtybr");
         entity.speclinedo = row.IsNull("speclinedo") ? string.Empty : row.Field<string>("speclinedo");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.shipfmno = row.IsNull("shipfmno") ? 0 : row.Field<int>("shipfmno");
         entity.arpwhse = row.IsNull("arpwhse") ? string.Empty : row.Field<string>("arpwhse");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("bpelRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromBpelBase(ref DataRow row, BpelBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("bpid", entity.bpid);
         row.SetField("revno", entity.revno);
         row.SetField("user9", entity.user9);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("lineno", entity.lineno);
         row.SetField("linetype", entity.linetype);
         row.SetField("prod", entity.prod);
         row.SetField("reqprod", entity.reqprod);
         row.SetField("xrefprodty", entity.xrefprodty);
         row.SetField("itemid", entity.itemid);
         row.SetField("nonstockty", entity.nonstockty);
         row.SetField("qtyord", entity.qtyord);
         row.SetField("unit", entity.unit);
         row.SetField("price", entity.price);
         row.SetField("baseprice", entity.baseprice);
         row.SetField("listprice", entity.listprice);
         row.SetField("awardprice", entity.awardprice);
         row.SetField("pdcost", entity.pdcost);
         row.SetField("prcformty", entity.prcformty);
         row.SetField("icspecrecno", entity.icspecrecno);
         row.SetField("cstformty", entity.cstformty);
         row.SetField("prodline", entity.prodline);
         row.SetField("descrip1", entity.descrip1);
         row.SetField("descrip2", entity.descrip2);
         row.SetField("descrip3", entity.descrip3);
         row.SetField("descrip4", entity.descrip4);
         row.SetField("descrip5", entity.descrip5);
         row.SetField("lockprfl", entity.lockprfl);
         row.SetField("lockcsfl", entity.lockcsfl);
         row.SetField("linestat", entity.linestat);
         row.SetField("vendno", entity.vendno);
         row.SetField("lockvnfl", entity.lockvnfl);
         row.SetField("minmargin", entity.minmargin);
         row.SetField("printtype", entity.printtype);
         row.SetField("user5", entity.user5);
         row.SetField("cost", entity.cost);
         row.SetField("cstform1", entity.cstform1);
         row.SetField("cstform2", entity.cstform2);
         row.SetField("cstform3", entity.cstform3);
         row.SetField("cstform4", entity.cstform4);
         row.SetField("cstform5", entity.cstform5);
         row.SetField("cstform6", entity.cstform6);
         row.SetField("cstform7", entity.cstform7);
         row.SetField("cstform8", entity.cstform8);
         row.SetField("cstform9", entity.cstform9);
         row.SetField("cstform10", entity.cstform10);
         row.SetField("cstform11", entity.cstform11);
         row.SetField("cstform12", entity.cstform12);
         row.SetField("cstform13", entity.cstform13);
         row.SetField("cstform14", entity.cstform14);
         row.SetField("cstform15", entity.cstform15);
         row.SetField("prcform1", entity.prcform1);
         row.SetField("prcform2", entity.prcform2);
         row.SetField("prcform3", entity.prcform3);
         row.SetField("prcform4", entity.prcform4);
         row.SetField("prcform5", entity.prcform5);
         row.SetField("prcform6", entity.prcform6);
         row.SetField("prcform7", entity.prcform7);
         row.SetField("prcform8", entity.prcform8);
         row.SetField("prcform9", entity.prcform9);
         row.SetField("prcform10", entity.prcform10);
         row.SetField("prcform11", entity.prcform11);
         row.SetField("prcform12", entity.prcform12);
         row.SetField("prcform13", entity.prcform13);
         row.SetField("prcform14", entity.prcform14);
         row.SetField("prcform15", entity.prcform15);
         row.SetField("pricetype", entity.pricetype);
         row.SetField("pricecd", entity.pricecd);
         row.SetField("prcformfl", entity.prcformfl);
         row.SetField("marginpct", entity.marginpct);
         row.SetField("priceoverfl", entity.priceoverfl);
         row.SetField("costoverfl", entity.costoverfl);
         row.SetField("taxablety", entity.taxablety);
         row.SetField("specnstype", entity.specnstype);
         row.SetField("whse", entity.whse);
         row.SetField("notimeschg", entity.notimeschg);
         row.SetField("convertstg", entity.convertstg);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("commtype", entity.commtype);
         row.SetField("lastcost", entity.lastcost);
         row.SetField("lastprice", entity.lastprice);
         row.SetField("lastmargin", entity.lastmargin);
         row.SetField("awardty", entity.awardty);
         row.SetField("disccd", entity.disccd);
         row.SetField("priceclty", entity.priceclty);
         row.SetField("kitfl", entity.kitfl);
         row.SetField("kitrollty", entity.kitrollty);
         row.SetField("pdrecno", entity.pdrecno);
         row.SetField("lastcstovfl", entity.lastcstovfl);
         row.SetField("lastprcovfl", entity.lastprcovfl);
         row.SetField("lastvendno", entity.lastvendno);
         row.SetField("qtybreakty", entity.qtybreakty);
         row.SetField("commentfl", entity.commentfl);
         row.SetField("promofl", entity.promofl);
         row.SetField("extprice", entity.extprice);
         row.SetField("extcost", entity.extcost);
         row.SetField("lastextprc", entity.lastextprc);
         row.SetField("lastextcst", entity.lastextcst);
         row.SetField("unitconv", entity.unitconv);
         row.SetField("prodcost", entity.prodcost);
         row.SetField("pricecostty", entity.pricecostty);
         row.SetField("lastlockfl", entity.lastlockfl);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("seqid", entity.seqid);
         row.SetField("prccostty", entity.prccostty);
         row.SetField("relprocessfl", entity.relprocessfl);
         row.SetField("accepttype", entity.accepttype);
         row.SetField("jobno", entity.jobno);
         row.SetField("usepricefl", entity.usepricefl);
         row.SetField("maxqty", entity.maxqty);
         row.SetField("minqty", entity.minqty);
         row.SetField("termsdiscfl", entity.termsdiscfl);
         row.SetField("termspct", entity.termspct);
         row.SetField("ordertype", entity.ordertype);
         row.SetField("cataddfl", entity.cataddfl);
         row.SetField("reqshipdt", entity.reqshipdt);
         row.SetField("promisedt", entity.promisedt);
         row.SetField("qtyopen", entity.qtyopen);
         row.SetField("qtyrel", entity.qtyrel);
         row.SetField("qtybr", entity.qtybr);
         row.SetField("speclinedo", entity.speclinedo);
         row.SetField("duedt", entity.duedt);
         row.SetField("shipfmno", entity.shipfmno);
         row.SetField("arpwhse", entity.arpwhse);
         row.SetField("transproc", entity.transproc);
         row.SetField("bpelRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, BpelBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("bpid", entity.bpid);
         row.SetField("revno", entity.revno);
         row.SetField("lineno", entity.lineno);
         row.SetField("bpelRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	