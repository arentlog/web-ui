//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.JM
{
   /// <summary>
   /// Job Management Line Item
   /// </summary>
   
   public partial class JmeclBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      public int cono { get; set; }

      /// <summary>
      /// Job Identifier
      /// </summary>
      [StringValidationAttribute]
      public string jobid { get; set; }

      /// <summary>
      /// Revision #
      /// </summary>
      public int jobrevno { get; set; }

      /// <summary>
      /// Line #
      /// </summary>
      public int lineno { get; set; }

      /// <summary>
      /// Default Warehouse
      /// </summary>
      [StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Line Type
      /// </summary>
      [StringValidationAttribute]
      public string linetype { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [StringValidationAttribute]
      public string prod { get; set; }

      /// <summary>
      /// Qty Ordered
      /// </summary>
      public decimal qtyord { get; set; }

      /// <summary>
      /// Requested Product
      /// </summary>
      [StringValidationAttribute]
      public string reqprod { get; set; }

      /// <summary>
      /// Product Price
      /// </summary>
      public decimal price { get; set; }

      /// <summary>
      /// Product Cross Reference
      /// </summary>
      [StringValidationAttribute]
      public string xrefprodty { get; set; }

      /// <summary>
      /// Cost
      /// </summary>
      public decimal cost { get; set; }

      /// <summary>
      /// Spec Rec Link
      /// </summary>
      public int icspecrecno { get; set; }

      /// <summary>
      /// Margin
      /// </summary>
      public decimal marginpct { get; set; }

      /// <summary>
      /// Ext Price
      /// </summary>
      public decimal extprice { get; set; }

      /// <summary>
      /// Vendor #
      /// </summary>
      public decimal vendno { get; set; }

      /// <summary>
      /// Ext Cost
      /// </summary>
      public decimal extcost { get; set; }

      /// <summary>
      /// Product Line
      /// </summary>
      [StringValidationAttribute]
      public string prodline { get; set; }

      /// <summary>
      /// Ext Margin
      /// </summary>
      public decimal extmargin { get; set; }

      /// <summary>
      /// Tax Type
      /// </summary>
      [StringValidationAttribute]
      public string taxablety { get; set; }

      /// <summary>
      /// Last Cost
      /// </summary>
      public decimal lastcost { get; set; }

      /// <summary>
      /// Last Price
      /// </summary>
      public decimal lastprice { get; set; }

      /// <summary>
      /// Product Category
      /// </summary>
      [StringValidationAttribute]
      public string prodcat { get; set; }

      /// <summary>
      /// Last Margin %
      /// </summary>
      public decimal lastmarginpct { get; set; }

      /// <summary>
      /// Comm Type
      /// </summary>
      [StringValidationAttribute]
      public string commtype { get; set; }

      /// <summary>
      /// Last Ext Prc
      /// </summary>
      public decimal lastextprc { get; set; }

      /// <summary>
      /// Kit
      /// </summary>
      public bool kitfl { get; set; }

      /// <summary>
      /// Last Ext Cst
      /// </summary>
      public decimal lastextcst { get; set; }

      /// <summary>
      /// Kit Rollup
      /// </summary>
      [StringValidationAttribute]
      public string kitrollty { get; set; }

      /// <summary>
      /// Last Ext Margin
      /// </summary>
      public decimal lastextmrgn { get; set; }

      /// <summary>
      /// Qty Break Type
      /// </summary>
      [StringValidationAttribute]
      public string qtybreakty { get; set; }

      /// <summary>
      /// Extended Description
      /// </summary>
      [StringValidationAttribute]
      public string descrip1 { get; set; }
      [StringValidationAttribute]
      public string descrip2 { get; set; }

      /// <summary>
      /// Promotional
      /// </summary>
      public bool promofl { get; set; }

      /// <summary>
      /// Line Disposition
      /// </summary>
      [StringValidationAttribute]
      public string linestat { get; set; }

      /// <summary>
      /// Print Type
      /// </summary>
      [StringValidationAttribute]
      public string printtype { get; set; }

      /// <summary>
      /// No Times Chgd
      /// </summary>
      public int notimeschg { get; set; }

      /// <summary>
      /// Award Type
      /// </summary>
      [StringValidationAttribute]
      public string awardty { get; set; }

      /// <summary>
      /// Comment
      /// </summary>
      public bool commentfl { get; set; }

      /// <summary>
      /// Release Process
      /// </summary>
      public bool relprocessfl { get; set; }

      /// <summary>
      /// Units
      /// </summary>
      [StringValidationAttribute]
      public string unit { get; set; }

      /// <summary>
      /// Accept
      /// </summary>
      [StringValidationAttribute]
      public string relaccepttype { get; set; }

      /// <summary>
      /// # Stk Units
      /// </summary>
      public decimal unitconv { get; set; }

      /// <summary>
      /// PD Rec #
      /// </summary>
      public int pdrecno { get; set; }

      /// <summary>
      /// Price Over
      /// </summary>
      public bool priceoverfl { get; set; }

      /// <summary>
      /// Price Type
      /// </summary>
      [StringValidationAttribute]
      public string pricetype { get; set; }

      /// <summary>
      /// Base Price
      /// </summary>
      public decimal baseprice { get; set; }

      /// <summary>
      /// List Price
      /// </summary>
      public decimal listprice { get; set; }

      /// <summary>
      /// Award Price
      /// </summary>
      public decimal awardprice { get; set; }

      /// <summary>
      /// Pricing Cost
      /// </summary>
      public decimal pdcost { get; set; }

      /// <summary>
      /// G/L Cost
      /// </summary>
      public decimal prodcost { get; set; }

      /// <summary>
      /// Cost Over
      /// </summary>
      public bool costoverfl { get; set; }

      /// <summary>
      /// Price Locked
      /// </summary>
      public bool lockprfl { get; set; }

      /// <summary>
      /// Cost Locked
      /// </summary>
      public bool lockcsfl { get; set; }

      /// <summary>
      /// Vendor Lock
      /// </summary>
      public bool lockvnfl { get; set; }

      /// <summary>
      /// Last Cost Override
      /// </summary>
      public bool lastcstovfl { get; set; }

      /// <summary>
      /// Last Price Override
      /// </summary>
      public bool lastprcovfl { get; set; }

      /// <summary>
      /// Last Vendor
      /// </summary>
      public decimal lastvendno { get; set; }

      /// <summary>
      /// lastlocks
      /// </summary>
      [StringValidationAttribute]
      public string lastlockfl { get; set; }

      /// <summary>
      /// PO/WT
      /// </summary>
      [StringValidationAttribute]
      public string ordertype { get; set; }

      /// <summary>
      /// Create ICSP/ICSW for Catalog
      /// </summary>
      public bool cataddfl { get; set; }

      /// <summary>
      /// Requested Ship Date
      /// </summary>
      public DateTime? reqshipdt { get; set; }

      /// <summary>
      /// Promised Date
      /// </summary>
      public DateTime? promisedt { get; set; }

      /// <summary>
      /// Due Date
      /// </summary>
      public DateTime? duedt { get; set; }

      /// <summary>
      /// Ship From
      /// </summary>
      public int shipfmno { get; set; }

      /// <summary>
      /// ARP Whse
      /// </summary>
      [StringValidationAttribute]
      public string arpwhse { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Last Changed By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Order Type
      /// </summary>
      [StringValidationAttribute]
      public string transtype { get; set; }

      /// <summary>
      /// Auto Receive
      /// </summary>
      public bool autoreceiptfl { get; set; }

      /// <summary>
      /// Update Components
      /// </summary>
      public bool compupdtfl { get; set; }

      /// <summary>
      /// Orig Ln#
      /// </summary>
      public int origlineno { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// user6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// user7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Quantity To Release
      /// </summary>
      public decimal qtyrel { get; set; }

      /// <summary>
      /// N/S
      /// </summary>
      [StringValidationAttribute]
      public string specnstype { get; set; }

      /// <summary>
      /// Lost Business Type
      /// </summary>
      [StringValidationAttribute]
      public string lostbusty { get; set; }

      /// <summary>
      /// Net Ord
      /// </summary>
      public decimal netord { get; set; }

      /// <summary>
      /// Minimum Margin
      /// </summary>
      public decimal minmargin { get; set; }

      /// <summary>
      /// Related Order #
      /// </summary>
      public int orderaltno { get; set; }

      /// <summary>
      /// Line # Alternate
      /// </summary>
      public int linealtno { get; set; }

      /// <summary>
      /// Line Disc Level
      /// </summary>
      public int disccd { get; set; }

      /// <summary>
      /// Change Request #
      /// </summary>
      public int changereqno { get; set; }

      /// <summary>
      /// Discount
      /// </summary>
      public decimal discamt { get; set; }

      /// <summary>
      /// Change Type
      /// </summary>
      [StringValidationAttribute]
      public string changetype { get; set; }

      /// <summary>
      /// Discount %
      /// </summary>
      public decimal discpct { get; set; }

      /// <summary>
      /// Discount Type
      /// </summary>
      public bool disctype { get; set; }

      /// <summary>
      /// Price Level/C+ %
      /// </summary>
      public decimal pricecd { get; set; }

      /// <summary>
      /// Price Calc
      /// </summary>
      [StringValidationAttribute]
      public string priceclty { get; set; }

      /// <summary>
      /// Group Name
      /// </summary>
      [StringValidationAttribute]
      public string groupnm { get; set; }

      /// <summary>
      /// Cancel
      /// </summary>
      public DateTime? canceldt { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      public decimal custno { get; set; }

      /// <summary>
      /// Price Type?
      /// </summary>
      public bool pricetypefl { get; set; }

      /// <summary>
      /// PDSVC #
      /// </summary>
      public int pdsvcrecno { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildJmeclBaseFromRow<T>(DataRow row) where T:JmeclBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.jobid = row.IsNull("jobid") ? string.Empty : row.Field<string>("jobid");
         entity.jobrevno = row.IsNull("jobrevno") ? 0 : row.Field<int>("jobrevno");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.linetype = row.IsNull("linetype") ? string.Empty : row.Field<string>("linetype");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.qtyord = row.IsNull("qtyord") ? decimal.Zero : row.Field<decimal>("qtyord");
         entity.reqprod = row.IsNull("reqprod") ? string.Empty : row.Field<string>("reqprod");
         entity.price = row.IsNull("price") ? decimal.Zero : row.Field<decimal>("price");
         entity.xrefprodty = row.IsNull("xrefprodty") ? string.Empty : row.Field<string>("xrefprodty");
         entity.cost = row.IsNull("cost") ? decimal.Zero : row.Field<decimal>("cost");
         entity.icspecrecno = row.IsNull("icspecrecno") ? 0 : row.Field<int>("icspecrecno");
         entity.marginpct = row.IsNull("marginpct") ? decimal.Zero : row.Field<decimal>("marginpct");
         entity.extprice = row.IsNull("extprice") ? decimal.Zero : row.Field<decimal>("extprice");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.extcost = row.IsNull("extcost") ? decimal.Zero : row.Field<decimal>("extcost");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.extmargin = row.IsNull("extmargin") ? decimal.Zero : row.Field<decimal>("extmargin");
         entity.taxablety = row.IsNull("taxablety") ? string.Empty : row.Field<string>("taxablety");
         entity.lastcost = row.IsNull("lastcost") ? decimal.Zero : row.Field<decimal>("lastcost");
         entity.lastprice = row.IsNull("lastprice") ? decimal.Zero : row.Field<decimal>("lastprice");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.lastmarginpct = row.IsNull("lastmarginpct") ? decimal.Zero : row.Field<decimal>("lastmarginpct");
         entity.commtype = row.IsNull("commtype") ? string.Empty : row.Field<string>("commtype");
         entity.lastextprc = row.IsNull("lastextprc") ? decimal.Zero : row.Field<decimal>("lastextprc");
         entity.kitfl = row.Field<bool>("kitfl");
         entity.lastextcst = row.IsNull("lastextcst") ? decimal.Zero : row.Field<decimal>("lastextcst");
         entity.kitrollty = row.IsNull("kitrollty") ? string.Empty : row.Field<string>("kitrollty");
         entity.lastextmrgn = row.IsNull("lastextmrgn") ? decimal.Zero : row.Field<decimal>("lastextmrgn");
         entity.qtybreakty = row.IsNull("qtybreakty") ? string.Empty : row.Field<string>("qtybreakty");
         entity.descrip1 = row.IsNull("descrip1") ? string.Empty : row.Field<string>("descrip1");
         entity.descrip2 = row.IsNull("descrip2") ? string.Empty : row.Field<string>("descrip2");
         entity.promofl = row.Field<bool>("promofl");
         entity.linestat = row.IsNull("linestat") ? string.Empty : row.Field<string>("linestat");
         entity.printtype = row.IsNull("printtype") ? string.Empty : row.Field<string>("printtype");
         entity.notimeschg = row.IsNull("notimeschg") ? 0 : row.Field<int>("notimeschg");
         entity.awardty = row.IsNull("awardty") ? string.Empty : row.Field<string>("awardty");
         entity.commentfl = row.Field<bool>("commentfl");
         entity.relprocessfl = row.Field<bool>("relprocessfl");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.relaccepttype = row.IsNull("relaccepttype") ? string.Empty : row.Field<string>("relaccepttype");
         entity.unitconv = row.IsNull("unitconv") ? decimal.Zero : row.Field<decimal>("unitconv");
         entity.pdrecno = row.IsNull("pdrecno") ? 0 : row.Field<int>("pdrecno");
         entity.priceoverfl = row.Field<bool>("priceoverfl");
         entity.pricetype = row.IsNull("pricetype") ? string.Empty : row.Field<string>("pricetype");
         entity.baseprice = row.IsNull("baseprice") ? decimal.Zero : row.Field<decimal>("baseprice");
         entity.listprice = row.IsNull("listprice") ? decimal.Zero : row.Field<decimal>("listprice");
         entity.awardprice = row.IsNull("awardprice") ? decimal.Zero : row.Field<decimal>("awardprice");
         entity.pdcost = row.IsNull("pdcost") ? decimal.Zero : row.Field<decimal>("pdcost");
         entity.prodcost = row.IsNull("prodcost") ? decimal.Zero : row.Field<decimal>("prodcost");
         entity.costoverfl = row.Field<bool>("costoverfl");
         entity.lockprfl = row.Field<bool>("lockprfl");
         entity.lockcsfl = row.Field<bool>("lockcsfl");
         entity.lockvnfl = row.Field<bool>("lockvnfl");
         entity.lastcstovfl = row.Field<bool>("lastcstovfl");
         entity.lastprcovfl = row.Field<bool>("lastprcovfl");
         entity.lastvendno = row.IsNull("lastvendno") ? decimal.Zero : row.Field<decimal>("lastvendno");
         entity.lastlockfl = row.IsNull("lastlockfl") ? string.Empty : row.Field<string>("lastlockfl");
         entity.ordertype = row.IsNull("ordertype") ? string.Empty : row.Field<string>("ordertype");
         entity.cataddfl = row.Field<bool>("cataddfl");
         entity.reqshipdt = row.Field<DateTime?>("reqshipdt");
         entity.promisedt = row.Field<DateTime?>("promisedt");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.shipfmno = row.IsNull("shipfmno") ? 0 : row.Field<int>("shipfmno");
         entity.arpwhse = row.IsNull("arpwhse") ? string.Empty : row.Field<string>("arpwhse");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.autoreceiptfl = row.Field<bool>("autoreceiptfl");
         entity.compupdtfl = row.Field<bool>("compupdtfl");
         entity.origlineno = row.IsNull("origlineno") ? 0 : row.Field<int>("origlineno");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.qtyrel = row.IsNull("qtyrel") ? decimal.Zero : row.Field<decimal>("qtyrel");
         entity.specnstype = row.IsNull("specnstype") ? string.Empty : row.Field<string>("specnstype");
         entity.lostbusty = row.IsNull("lostbusty") ? string.Empty : row.Field<string>("lostbusty");
         entity.netord = row.IsNull("netord") ? decimal.Zero : row.Field<decimal>("netord");
         entity.minmargin = row.IsNull("minmargin") ? decimal.Zero : row.Field<decimal>("minmargin");
         entity.orderaltno = row.IsNull("orderaltno") ? 0 : row.Field<int>("orderaltno");
         entity.linealtno = row.IsNull("linealtno") ? 0 : row.Field<int>("linealtno");
         entity.disccd = row.IsNull("disccd") ? 0 : row.Field<int>("disccd");
         entity.changereqno = row.IsNull("changereqno") ? 0 : row.Field<int>("changereqno");
         entity.discamt = row.IsNull("discamt") ? decimal.Zero : row.Field<decimal>("discamt");
         entity.changetype = row.IsNull("changetype") ? string.Empty : row.Field<string>("changetype");
         entity.discpct = row.IsNull("discpct") ? decimal.Zero : row.Field<decimal>("discpct");
         entity.disctype = row.Field<bool>("disctype");
         entity.pricecd = row.IsNull("pricecd") ? decimal.Zero : row.Field<decimal>("pricecd");
         entity.priceclty = row.IsNull("priceclty") ? string.Empty : row.Field<string>("priceclty");
         entity.groupnm = row.IsNull("groupnm") ? string.Empty : row.Field<string>("groupnm");
         entity.canceldt = row.Field<DateTime?>("canceldt");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.pricetypefl = row.Field<bool>("pricetypefl");
         entity.pdsvcrecno = row.IsNull("pdsvcrecno") ? 0 : row.Field<int>("pdsvcrecno");
         entity.rowID = row.Field<byte[]>("jmeclRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromJmeclBase(ref DataRow row, JmeclBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("jobid", entity.jobid);
         row.SetField("jobrevno", entity.jobrevno);
         row.SetField("lineno", entity.lineno);
         row.SetField("whse", entity.whse);
         row.SetField("linetype", entity.linetype);
         row.SetField("prod", entity.prod);
         row.SetField("qtyord", entity.qtyord);
         row.SetField("reqprod", entity.reqprod);
         row.SetField("price", entity.price);
         row.SetField("xrefprodty", entity.xrefprodty);
         row.SetField("cost", entity.cost);
         row.SetField("icspecrecno", entity.icspecrecno);
         row.SetField("marginpct", entity.marginpct);
         row.SetField("extprice", entity.extprice);
         row.SetField("vendno", entity.vendno);
         row.SetField("extcost", entity.extcost);
         row.SetField("prodline", entity.prodline);
         row.SetField("extmargin", entity.extmargin);
         row.SetField("taxablety", entity.taxablety);
         row.SetField("lastcost", entity.lastcost);
         row.SetField("lastprice", entity.lastprice);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("lastmarginpct", entity.lastmarginpct);
         row.SetField("commtype", entity.commtype);
         row.SetField("lastextprc", entity.lastextprc);
         row.SetField("kitfl", entity.kitfl);
         row.SetField("lastextcst", entity.lastextcst);
         row.SetField("kitrollty", entity.kitrollty);
         row.SetField("lastextmrgn", entity.lastextmrgn);
         row.SetField("qtybreakty", entity.qtybreakty);
         row.SetField("descrip1", entity.descrip1);
         row.SetField("descrip2", entity.descrip2);
         row.SetField("promofl", entity.promofl);
         row.SetField("linestat", entity.linestat);
         row.SetField("printtype", entity.printtype);
         row.SetField("notimeschg", entity.notimeschg);
         row.SetField("awardty", entity.awardty);
         row.SetField("commentfl", entity.commentfl);
         row.SetField("relprocessfl", entity.relprocessfl);
         row.SetField("unit", entity.unit);
         row.SetField("relaccepttype", entity.relaccepttype);
         row.SetField("unitconv", entity.unitconv);
         row.SetField("pdrecno", entity.pdrecno);
         row.SetField("priceoverfl", entity.priceoverfl);
         row.SetField("pricetype", entity.pricetype);
         row.SetField("baseprice", entity.baseprice);
         row.SetField("listprice", entity.listprice);
         row.SetField("awardprice", entity.awardprice);
         row.SetField("pdcost", entity.pdcost);
         row.SetField("prodcost", entity.prodcost);
         row.SetField("costoverfl", entity.costoverfl);
         row.SetField("lockprfl", entity.lockprfl);
         row.SetField("lockcsfl", entity.lockcsfl);
         row.SetField("lockvnfl", entity.lockvnfl);
         row.SetField("lastcstovfl", entity.lastcstovfl);
         row.SetField("lastprcovfl", entity.lastprcovfl);
         row.SetField("lastvendno", entity.lastvendno);
         row.SetField("lastlockfl", entity.lastlockfl);
         row.SetField("ordertype", entity.ordertype);
         row.SetField("cataddfl", entity.cataddfl);
         row.SetField("reqshipdt", entity.reqshipdt);
         row.SetField("promisedt", entity.promisedt);
         row.SetField("duedt", entity.duedt);
         row.SetField("shipfmno", entity.shipfmno);
         row.SetField("arpwhse", entity.arpwhse);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("operinit", entity.operinit);
         row.SetField("transtype", entity.transtype);
         row.SetField("autoreceiptfl", entity.autoreceiptfl);
         row.SetField("compupdtfl", entity.compupdtfl);
         row.SetField("origlineno", entity.origlineno);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("qtyrel", entity.qtyrel);
         row.SetField("specnstype", entity.specnstype);
         row.SetField("lostbusty", entity.lostbusty);
         row.SetField("netord", entity.netord);
         row.SetField("minmargin", entity.minmargin);
         row.SetField("orderaltno", entity.orderaltno);
         row.SetField("linealtno", entity.linealtno);
         row.SetField("disccd", entity.disccd);
         row.SetField("changereqno", entity.changereqno);
         row.SetField("discamt", entity.discamt);
         row.SetField("changetype", entity.changetype);
         row.SetField("discpct", entity.discpct);
         row.SetField("disctype", entity.disctype);
         row.SetField("pricecd", entity.pricecd);
         row.SetField("priceclty", entity.priceclty);
         row.SetField("groupnm", entity.groupnm);
         row.SetField("canceldt", entity.canceldt);
         row.SetField("custno", entity.custno);
         row.SetField("pricetypefl", entity.pricetypefl);
         row.SetField("pdsvcrecno", entity.pdsvcrecno);
         row.SetField("jmeclRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, JmeclBase entity)
      {
         row.SetField("jmeclRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	