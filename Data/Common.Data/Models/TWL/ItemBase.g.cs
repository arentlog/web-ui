//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// The master item table 
   /// </summary>
   
   public partial class ItemBase: ModelBase
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// Item Number
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string absNum { get; set; }

      /// <summary>
      /// Product Group
      /// </summary>
      [StringValidationAttribute]
      public string prodGrp { get; set; }

      /// <summary>
      /// Product Line
      /// </summary>
      [StringValidationAttribute]
      public string prodLine { get; set; }

      /// <summary>
      /// Product Sub-line
      /// </summary>
      [StringValidationAttribute]
      public string prodSubline { get; set; }

      /// <summary>
      /// Returns Category
      /// </summary>
      [StringValidationAttribute]
      public string rtnCategory { get; set; }

      /// <summary>
      /// Alternate Item Number
      /// </summary>
      [StringValidationAttribute]
      public string itemNum { get; set; }

      /// <summary>
      /// UPC Number
      /// </summary>
      [StringValidationAttribute]
      public string upcNum { get; set; }

      /// <summary>
      /// Item Description
      /// </summary>
      [StringValidationAttribute]
      public string itemDesc { get; set; }

      /// <summary>
      /// Item Description
      /// </summary>
      [StringValidationAttribute]
      public string itemSecDesc { get; set; }

      /// <summary>
      /// item_long_desc
      /// </summary>
      [StringValidationAttribute]
      public string itemLongDesc { get; set; }

      /// <summary>
      /// Unit of Measure
      /// </summary>
      [StringValidationAttribute]
      public string uom { get; set; }

      /// <summary>
      /// Box Quantity
      /// </summary>
      public int boxQty { get; set; }

      /// <summary>
      /// Maximum Level
      /// </summary>
      public decimal maxLvl { get; set; }

      /// <summary>
      /// Minimum Level
      /// </summary>
      public decimal minLvl { get; set; }

      /// <summary>
      /// Reorder Quantity
      /// </summary>
      public decimal reoQty { get; set; }

      /// <summary>
      /// Warehouse Zone
      /// </summary>
      [StringValidationAttribute]
      public string whZone { get; set; }

      /// <summary>
      /// Aisle
      /// </summary>
      public int aisle { get; set; }

      /// <summary>
      /// Last Count
      /// </summary>
      [StringValidationAttribute]
      public string lastCount { get; set; }

      /// <summary>
      /// ABC
      /// </summary>
      [StringValidationAttribute]
      public string abc { get; set; }

      /// <summary>
      /// Item Type
      /// </summary>
      [StringValidationAttribute]
      public string itemType { get; set; }

      /// <summary>
      /// MSDS
      /// </summary>
      public bool msdsFlag { get; set; }

      /// <summary>
      /// Serialized Item
      /// </summary>
      public bool serialFlag { get; set; }

      /// <summary>
      /// By Location
      /// </summary>
      public bool serialByLocation { get; set; }

      /// <summary>
      /// Outbound
      /// </summary>
      public bool serialOutbound { get; set; }

      /// <summary>
      /// Inbound
      /// </summary>
      public bool serialInbound { get; set; }

      /// <summary>
      /// Lot Control
      /// </summary>
      public bool lotCtrl { get; set; }

      /// <summary>
      /// Kit
      /// </summary>
      public bool kitFlag { get; set; }

      /// <summary>
      /// Shelf Life Control
      /// </summary>
      public bool shelfLifeFlag { get; set; }

      /// <summary>
      /// Shelf Life
      /// </summary>
      public int shelfLife { get; set; }

      /// <summary>
      /// Length
      /// </summary>
      public decimal length { get; set; }

      /// <summary>
      /// Height
      /// </summary>
      public decimal height { get; set; }

      /// <summary>
      /// Width
      /// </summary>
      public decimal width { get; set; }

      /// <summary>
      /// Cube
      /// </summary>
      public decimal cube { get; set; }

      /// <summary>
      /// Item Weight
      /// </summary>
      public decimal weight { get; set; }

      /// <summary>
      /// Dimensional Weight
      /// </summary>
      public decimal dimWeight { get; set; }

      /// <summary>
      /// Acceptable Overage
      /// </summary>
      public int acceptableOver { get; set; }

      /// <summary>
      /// Self-Ship Item
      /// </summary>
      public bool selfShip { get; set; }

      /// <summary>
      /// Q/A Inspection
      /// </summary>
      public bool qaInspection { get; set; }

      /// <summary>
      /// Q/A Instructions
      /// </summary>
      [StringValidationAttribute]
      public string qaInstructions { get; set; }

      /// <summary>
      /// Drop Ship
      /// </summary>
      public bool dropShip { get; set; }

      /// <summary>
      /// Allow Force Ship
      /// </summary>
      public bool forceShip { get; set; }

      /// <summary>
      /// Exp. Date From
      /// </summary>
      [StringValidationAttribute]
      public string expirationFrom { get; set; }

      /// <summary>
      /// Receiving Threshold
      /// </summary>
      public int rcvThreshold { get; set; }

      /// <summary>
      /// Shipping Threshold
      /// </summary>
      public int shpThreshold { get; set; }

      /// <summary>
      /// Unavailable At
      /// </summary>
      [StringValidationAttribute]
      public string unavailableAt { get; set; }

      /// <summary>
      /// Same Lot
      /// </summary>
      public bool sameLot { get; set; }

      /// <summary>
      /// counter_zone
      /// </summary>
      [StringValidationAttribute]
      public string counterZone { get; set; }

      /// <summary>
      /// kit_build_zone
      /// </summary>
      [StringValidationAttribute]
      public string kitBuildZone { get; set; }

      /// <summary>
      /// MSDS Sheet
      /// </summary>
      [StringValidationAttribute]
      public string msdsSheet { get; set; }

      /// <summary>
      /// MSDS Sheet Location
      /// </summary>
      [StringValidationAttribute]
      public string msdsSheetBin { get; set; }

      /// <summary>
      /// Always send MSDS
      /// </summary>
      public bool msdsSendAlways { get; set; }

      /// <summary>
      /// Require Country
      /// </summary>
      public bool countryOfOrigin { get; set; }

      /// <summary>
      /// Customer Id
      /// </summary>
      [StringValidationAttribute]
      public string custCode { get; set; }

      /// <summary>
      /// Stacking Height
      /// </summary>
      public int stackHeight { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// Active
      /// </summary>
      public bool rowStatus { get; set; }

      /// <summary>
      /// Auto Ship Labor
      /// </summary>
      [StringValidationAttribute]
      public string laborAutoShip { get; set; }

      /// <summary>
      /// Case Quantity
      /// </summary>
      public decimal caseQuantity { get; set; }

      /// <summary>
      /// Pallet Quantity
      /// </summary>
      public decimal palletQuantity { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// ABC_Pend
      /// </summary>
      [StringValidationAttribute]
      public string abcPending { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }

      /// <summary>
      /// Putaway Group
      /// </summary>
      [StringValidationAttribute]
      public string putawayGroup { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildItemBaseFromRow<T>(DataRow row) where T:ItemBase, new()
      {
         T entity = new T();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.prodGrp = row.IsNull("prod_grp") ? string.Empty : row.Field<string>("prod_grp");
         entity.prodLine = row.IsNull("prod_line") ? string.Empty : row.Field<string>("prod_line");
         entity.prodSubline = row.IsNull("prod_subline") ? string.Empty : row.Field<string>("prod_subline");
         entity.rtnCategory = row.IsNull("rtn_category") ? string.Empty : row.Field<string>("rtn_category");
         entity.absNum = row.IsNull("abs_num") ? string.Empty : row.Field<string>("abs_num");
         entity.itemNum = row.IsNull("item_num") ? string.Empty : row.Field<string>("item_num");
         entity.upcNum = row.IsNull("upc_num") ? string.Empty : row.Field<string>("upc_num");
         entity.itemDesc = row.IsNull("item_desc") ? string.Empty : row.Field<string>("item_desc");
         entity.itemSecDesc = row.IsNull("item_sec_desc") ? string.Empty : row.Field<string>("item_sec_desc");
         entity.itemLongDesc = row.IsNull("item_long_desc") ? string.Empty : row.Field<string>("item_long_desc");
         entity.uom = row.IsNull("uom") ? string.Empty : row.Field<string>("uom");
         entity.boxQty = row.IsNull("box_qty") ? 0 : row.Field<int>("box_qty");
         entity.maxLvl = row.IsNull("max_lvl") ? decimal.Zero : row.Field<decimal>("max_lvl");
         entity.minLvl = row.IsNull("min_lvl") ? decimal.Zero : row.Field<decimal>("min_lvl");
         entity.reoQty = row.IsNull("reo_qty") ? decimal.Zero : row.Field<decimal>("reo_qty");
         entity.whZone = row.IsNull("wh_zone") ? string.Empty : row.Field<string>("wh_zone");
         entity.aisle = row.IsNull("aisle") ? 0 : row.Field<int>("aisle");
         entity.lastCount = row.IsNull("last_count") ? string.Empty : row.Field<string>("last_count");
         entity.abc = row.IsNull("abc") ? string.Empty : row.Field<string>("abc");
         entity.itemType = row.IsNull("item_type") ? string.Empty : row.Field<string>("item_type");
         entity.msdsFlag = row.Field<bool>("msds_flag");
         entity.serialFlag = row.Field<bool>("serial_flag");
         entity.serialByLocation = row.Field<bool>("serial_by_location");
         entity.serialOutbound = row.Field<bool>("serial_outbound");
         entity.serialInbound = row.Field<bool>("serial_inbound");
         entity.lotCtrl = row.Field<bool>("lot_ctrl");
         entity.kitFlag = row.Field<bool>("kit_flag");
         entity.shelfLifeFlag = row.Field<bool>("shelf_life_flag");
         entity.shelfLife = row.IsNull("shelf_life") ? 0 : row.Field<int>("shelf_life");
         entity.length = row.IsNull("length") ? decimal.Zero : row.Field<decimal>("length");
         entity.height = row.IsNull("height") ? decimal.Zero : row.Field<decimal>("height");
         entity.width = row.IsNull("width") ? decimal.Zero : row.Field<decimal>("width");
         entity.cube = row.IsNull("cube") ? decimal.Zero : row.Field<decimal>("cube");
         entity.weight = row.IsNull("weight") ? decimal.Zero : row.Field<decimal>("weight");
         entity.dimWeight = row.IsNull("dim_weight") ? decimal.Zero : row.Field<decimal>("dim_weight");
         entity.acceptableOver = row.IsNull("acceptable_over") ? 0 : row.Field<int>("acceptable_over");
         entity.selfShip = row.Field<bool>("self_ship");
         entity.qaInspection = row.Field<bool>("qa_inspection");
         entity.qaInstructions = row.IsNull("qa_instructions") ? string.Empty : row.Field<string>("qa_instructions");
         entity.dropShip = row.Field<bool>("drop_ship");
         entity.forceShip = row.Field<bool>("force_ship");
         entity.expirationFrom = row.IsNull("expiration_from") ? string.Empty : row.Field<string>("expiration_from");
         entity.rcvThreshold = row.IsNull("rcv_threshold") ? 0 : row.Field<int>("rcv_threshold");
         entity.shpThreshold = row.IsNull("shp_threshold") ? 0 : row.Field<int>("shp_threshold");
         entity.unavailableAt = row.IsNull("unavailable_at") ? string.Empty : row.Field<string>("unavailable_at");
         entity.sameLot = row.Field<bool>("same_lot");
         entity.counterZone = row.IsNull("counter_zone") ? string.Empty : row.Field<string>("counter_zone");
         entity.kitBuildZone = row.IsNull("kit_build_zone") ? string.Empty : row.Field<string>("kit_build_zone");
         entity.msdsSheet = row.IsNull("msds_sheet") ? string.Empty : row.Field<string>("msds_sheet");
         entity.msdsSheetBin = row.IsNull("msds_sheet_bin") ? string.Empty : row.Field<string>("msds_sheet_bin");
         entity.msdsSendAlways = row.Field<bool>("msds_send_always");
         entity.countryOfOrigin = row.Field<bool>("country_of_origin");
         entity.custCode = row.IsNull("cust_code") ? string.Empty : row.Field<string>("cust_code");
         entity.stackHeight = row.IsNull("stack_height") ? 0 : row.Field<int>("stack_height");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.rowStatus = row.Field<bool>("row_status");
         entity.laborAutoShip = row.IsNull("labor_auto_ship") ? string.Empty : row.Field<string>("labor_auto_ship");
         entity.caseQuantity = row.IsNull("case_quantity") ? decimal.Zero : row.Field<decimal>("case_quantity");
         entity.palletQuantity = row.IsNull("pallet_quantity") ? decimal.Zero : row.Field<decimal>("pallet_quantity");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.abcPending = row.IsNull("abc_pending") ? string.Empty : row.Field<string>("abc_pending");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.putawayGroup = row.IsNull("putaway_group") ? string.Empty : row.Field<string>("putaway_group");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.rowID = row.Field<byte[]>("itemRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromItemBase(ref DataRow row, ItemBase entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("prod_grp", entity.prodGrp);
         row.SetField("prod_line", entity.prodLine);
         row.SetField("prod_subline", entity.prodSubline);
         row.SetField("rtn_category", entity.rtnCategory);
         row.SetField("abs_num", entity.absNum);
         row.SetField("item_num", entity.itemNum);
         row.SetField("upc_num", entity.upcNum);
         row.SetField("item_desc", entity.itemDesc);
         row.SetField("item_sec_desc", entity.itemSecDesc);
         row.SetField("item_long_desc", entity.itemLongDesc);
         row.SetField("uom", entity.uom);
         row.SetField("box_qty", entity.boxQty);
         row.SetField("max_lvl", entity.maxLvl);
         row.SetField("min_lvl", entity.minLvl);
         row.SetField("reo_qty", entity.reoQty);
         row.SetField("wh_zone", entity.whZone);
         row.SetField("aisle", entity.aisle);
         row.SetField("last_count", entity.lastCount);
         row.SetField("abc", entity.abc);
         row.SetField("item_type", entity.itemType);
         row.SetField("msds_flag", entity.msdsFlag);
         row.SetField("serial_flag", entity.serialFlag);
         row.SetField("serial_by_location", entity.serialByLocation);
         row.SetField("serial_outbound", entity.serialOutbound);
         row.SetField("serial_inbound", entity.serialInbound);
         row.SetField("lot_ctrl", entity.lotCtrl);
         row.SetField("kit_flag", entity.kitFlag);
         row.SetField("shelf_life_flag", entity.shelfLifeFlag);
         row.SetField("shelf_life", entity.shelfLife);
         row.SetField("length", entity.length);
         row.SetField("height", entity.height);
         row.SetField("width", entity.width);
         row.SetField("cube", entity.cube);
         row.SetField("weight", entity.weight);
         row.SetField("dim_weight", entity.dimWeight);
         row.SetField("acceptable_over", entity.acceptableOver);
         row.SetField("self_ship", entity.selfShip);
         row.SetField("qa_inspection", entity.qaInspection);
         row.SetField("qa_instructions", entity.qaInstructions);
         row.SetField("drop_ship", entity.dropShip);
         row.SetField("force_ship", entity.forceShip);
         row.SetField("expiration_from", entity.expirationFrom);
         row.SetField("rcv_threshold", entity.rcvThreshold);
         row.SetField("shp_threshold", entity.shpThreshold);
         row.SetField("unavailable_at", entity.unavailableAt);
         row.SetField("same_lot", entity.sameLot);
         row.SetField("counter_zone", entity.counterZone);
         row.SetField("kit_build_zone", entity.kitBuildZone);
         row.SetField("msds_sheet", entity.msdsSheet);
         row.SetField("msds_sheet_bin", entity.msdsSheetBin);
         row.SetField("msds_send_always", entity.msdsSendAlways);
         row.SetField("country_of_origin", entity.countryOfOrigin);
         row.SetField("cust_code", entity.custCode);
         row.SetField("stack_height", entity.stackHeight);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("row_status", entity.rowStatus);
         row.SetField("labor_auto_ship", entity.laborAutoShip);
         row.SetField("case_quantity", entity.caseQuantity);
         row.SetField("pallet_quantity", entity.palletQuantity);
         row.SetField("trans_user", entity.transUser);
         row.SetField("abc_pending", entity.abcPending);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("putaway_group", entity.putawayGroup);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("itemRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ItemBase entity)
      {
         row.SetField("coNum", entity.coNum);
         row.SetField("whNum", entity.whNum);
         row.SetField("absNum", entity.absNum);
         row.SetField("itemRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	