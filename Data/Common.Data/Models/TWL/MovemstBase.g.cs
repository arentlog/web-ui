//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Table contains movement requests (for replenishments,production scheduling, etc.)
   /// </summary>
   
   public partial class MovemstBase: ModelBase
   {

      /// <summary>
      /// Id
      /// </summary>
      public int id { get; set; }

      /// <summary>
      /// Company
      /// </summary>
      [StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// Task Id
      /// </summary>
      public int taskId { get; set; }

      /// <summary>
      /// Machine
      /// </summary>
      [StringValidationAttribute]
      public string machine { get; set; }

      /// <summary>
      /// Pallet Id
      /// </summary>
      [StringValidationAttribute]
      public string palletId { get; set; }

      /// <summary>
      /// Item Number
      /// </summary>
      [StringValidationAttribute]
      public string absNum { get; set; }

      /// <summary>
      /// Lot
      /// </summary>
      [StringValidationAttribute]
      public string lot { get; set; }

      /// <summary>
      /// Quantity
      /// </summary>
      public decimal quantity { get; set; }

      /// <summary>
      /// Location
      /// </summary>
      [StringValidationAttribute]
      public string binFrom { get; set; }

      /// <summary>
      /// Location To
      /// </summary>
      [StringValidationAttribute]
      public string binTo { get; set; }

      /// <summary>
      /// Front Loading Zone
      /// </summary>
      [StringValidationAttribute]
      public string zoneTo { get; set; }

      /// <summary>
      /// Warehouse Number
      /// </summary>
      [StringValidationAttribute]
      public string toWhNum { get; set; }

      /// <summary>
      /// urgent
      /// </summary>
      public bool urgent { get; set; }

      /// <summary>
      /// Movement Type
      /// </summary>
      [StringValidationAttribute]
      public string movementType { get; set; }

      /// <summary>
      /// Production Id
      /// </summary>
      public int prodId { get; set; }

      /// <summary>
      /// Line
      /// </summary>
      public int prodLine { get; set; }

      /// <summary>
      /// Wave
      /// </summary>
      public int batch { get; set; }

      /// <summary>
      /// Warehouse Zone
      /// </summary>
      [StringValidationAttribute]
      public string whZone { get; set; }

      /// <summary>
      /// Department
      /// </summary>
      public int deptNum { get; set; }

      /// <summary>
      /// Truck Id
      /// </summary>
      [StringValidationAttribute]
      public string truckId { get; set; }

      /// <summary>
      /// Date and Time
      /// </summary>
      [StringValidationAttribute]
      public string dateTime { get; set; }

      /// <summary>
      /// Document ID
      /// </summary>
      [StringValidationAttribute]
      public string docId { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [StringValidationAttribute]
      public string rowStatus { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }

      /// <summary>
      /// Order
      /// </summary>
      [StringValidationAttribute]
      public string order { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      [StringValidationAttribute]
      public string orderSuffix { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildMovemstBaseFromRow<T>(DataRow row) where T:MovemstBase, new()
      {
         T entity = new T();
         entity.id = row.IsNull("id") ? 0 : row.Field<int>("id");
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.taskId = row.IsNull("task_id") ? 0 : row.Field<int>("task_id");
         entity.machine = row.IsNull("machine") ? string.Empty : row.Field<string>("machine");
         entity.palletId = row.IsNull("pallet_id") ? string.Empty : row.Field<string>("pallet_id");
         entity.absNum = row.IsNull("abs_num") ? string.Empty : row.Field<string>("abs_num");
         entity.lot = row.IsNull("lot") ? string.Empty : row.Field<string>("lot");
         entity.quantity = row.IsNull("quantity") ? decimal.Zero : row.Field<decimal>("quantity");
         entity.binFrom = row.IsNull("bin_from") ? string.Empty : row.Field<string>("bin_from");
         entity.binTo = row.IsNull("bin_to") ? string.Empty : row.Field<string>("bin_to");
         entity.zoneTo = row.IsNull("zone_to") ? string.Empty : row.Field<string>("zone_to");
         entity.toWhNum = row.IsNull("to_wh_num") ? string.Empty : row.Field<string>("to_wh_num");
         entity.urgent = row.Field<bool>("urgent");
         entity.movementType = row.IsNull("movement_type") ? string.Empty : row.Field<string>("movement_type");
         entity.prodId = row.IsNull("prod_id") ? 0 : row.Field<int>("prod_id");
         entity.prodLine = row.IsNull("prod_line") ? 0 : row.Field<int>("prod_line");
         entity.batch = row.IsNull("batch") ? 0 : row.Field<int>("batch");
         entity.whZone = row.IsNull("wh_zone") ? string.Empty : row.Field<string>("wh_zone");
         entity.deptNum = row.IsNull("dept_num") ? 0 : row.Field<int>("dept_num");
         entity.truckId = row.IsNull("truck_id") ? string.Empty : row.Field<string>("truck_id");
         entity.dateTime = row.IsNull("date_time") ? string.Empty : row.Field<string>("date_time");
         entity.docId = row.IsNull("doc_id") ? string.Empty : row.Field<string>("doc_id");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.rowStatus = row.IsNull("row_status") ? string.Empty : row.Field<string>("row_status");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.order = row.IsNull("order") ? string.Empty : row.Field<string>("order");
         entity.orderSuffix = row.IsNull("order_suffix") ? string.Empty : row.Field<string>("order_suffix");
         entity.rowID = row.Field<byte[]>("movemstRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromMovemstBase(ref DataRow row, MovemstBase entity)
      {
         row.SetField("id", entity.id);
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("task_id", entity.taskId);
         row.SetField("machine", entity.machine);
         row.SetField("pallet_id", entity.palletId);
         row.SetField("abs_num", entity.absNum);
         row.SetField("lot", entity.lot);
         row.SetField("quantity", entity.quantity);
         row.SetField("bin_from", entity.binFrom);
         row.SetField("bin_to", entity.binTo);
         row.SetField("zone_to", entity.zoneTo);
         row.SetField("to_wh_num", entity.toWhNum);
         row.SetField("urgent", entity.urgent);
         row.SetField("movement_type", entity.movementType);
         row.SetField("prod_id", entity.prodId);
         row.SetField("prod_line", entity.prodLine);
         row.SetField("batch", entity.batch);
         row.SetField("wh_zone", entity.whZone);
         row.SetField("dept_num", entity.deptNum);
         row.SetField("truck_id", entity.truckId);
         row.SetField("date_time", entity.dateTime);
         row.SetField("doc_id", entity.docId);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("row_status", entity.rowStatus);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("order", entity.order);
         row.SetField("order_suffix", entity.orderSuffix);
         row.SetField("movemstRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, MovemstBase entity)
      {
         row.SetField("movemstRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	