//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// License Information
   /// </summary>
   
   public partial class WllicenseBase: ModelBase
   {

      /// <summary>
      /// Application
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string appname { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [StringValidationAttribute]
      public string apptype { get; set; }

      /// <summary>
      /// License Date
      /// </summary>
      public DateTime? licensedt { get; set; }

      /// <summary>
      /// Security #
      /// </summary>
      public int secure { get; set; }

      /// <summary>
      /// Software Licensed To
      /// </summary>
      [StringValidationAttribute]
      public string licenseto { get; set; }

      /// <summary>
      /// Customer #
      /// </summary>
      public decimal custno { get; set; }

      /// <summary>
      /// License #
      /// </summary>
      [StringValidationAttribute]
      public string licenseno { get; set; }

      /// <summary>
      /// No of Users
      /// </summary>
      public int numusers { get; set; }

      /// <summary>
      /// Licensing Grace Period
      /// </summary>
      public int graceperiod { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildWllicenseBaseFromRow<T>(DataRow row) where T:WllicenseBase, new()
      {
         T entity = new T();
         entity.appname = row.IsNull("appname") ? string.Empty : row.Field<string>("appname");
         entity.apptype = row.IsNull("apptype") ? string.Empty : row.Field<string>("apptype");
         entity.licensedt = row.Field<DateTime?>("licensedt");
         entity.secure = row.IsNull("secure") ? 0 : row.Field<int>("secure");
         entity.licenseto = row.IsNull("licenseto") ? string.Empty : row.Field<string>("licenseto");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.licenseno = row.IsNull("licenseno") ? string.Empty : row.Field<string>("licenseno");
         entity.numusers = row.IsNull("numusers") ? 0 : row.Field<int>("numusers");
         entity.graceperiod = row.IsNull("graceperiod") ? 0 : row.Field<int>("graceperiod");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.rowID = row.Field<byte[]>("wllicenseRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromWllicenseBase(ref DataRow row, WllicenseBase entity)
      {
         row.SetField("appname", entity.appname);
         row.SetField("apptype", entity.apptype);
         row.SetField("licensedt", entity.licensedt);
         row.SetField("secure", entity.secure);
         row.SetField("licenseto", entity.licenseto);
         row.SetField("custno", entity.custno);
         row.SetField("licenseno", entity.licenseno);
         row.SetField("numusers", entity.numusers);
         row.SetField("graceperiod", entity.graceperiod);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("wllicenseRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, WllicenseBase entity)
      {
         row.SetField("appname", entity.appname);
         row.SetField("wllicenseRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	