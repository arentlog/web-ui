//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Vendor detail information
   /// </summary>
   
   public partial class VenddetailBase: ModelBase
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// Vendor ID
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string vendorId { get; set; }

      /// <summary>
      /// Vendor Item
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string vendItem { get; set; }

      /// <summary>
      /// Item Number
      /// </summary>
      [StringValidationAttribute]
      public string absNum { get; set; }

      /// <summary>
      /// Unit of Measure
      /// </summary>
      [StringValidationAttribute]
      public string uom { get; set; }

      /// <summary>
      /// Box Quantity
      /// </summary>
      public int boxQty { get; set; }

      /// <summary>
      /// Country Code
      /// </summary>
      [StringValidationAttribute]
      public string countryCode { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// Stacking Height
      /// </summary>
      public int stackHeight { get; set; }

      /// <summary>
      /// Ref Type
      /// </summary>
      [StringValidationAttribute]
      public string refType { get; set; }

      /// <summary>
      /// Create Date
      /// </summary>
      [StringValidationAttribute]
      public string dateTime { get; set; }

      /// <summary>
      /// Case Quantity
      /// </summary>
      public decimal caseQuantity { get; set; }

      /// <summary>
      /// Pallet Quantity
      /// </summary>
      public decimal palletQuantity { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildVenddetailBaseFromRow<T>(DataRow row) where T:VenddetailBase, new()
      {
         T entity = new T();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.vendorId = row.IsNull("vendor_id") ? string.Empty : row.Field<string>("vendor_id");
         entity.absNum = row.IsNull("abs_num") ? string.Empty : row.Field<string>("abs_num");
         entity.vendItem = row.IsNull("vend_item") ? string.Empty : row.Field<string>("vend_item");
         entity.uom = row.IsNull("uom") ? string.Empty : row.Field<string>("uom");
         entity.boxQty = row.IsNull("box_qty") ? 0 : row.Field<int>("box_qty");
         entity.countryCode = row.IsNull("country_code") ? string.Empty : row.Field<string>("country_code");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.stackHeight = row.IsNull("stack_height") ? 0 : row.Field<int>("stack_height");
         entity.refType = row.IsNull("ref_type") ? string.Empty : row.Field<string>("ref_type");
         entity.dateTime = row.IsNull("date_time") ? string.Empty : row.Field<string>("date_time");
         entity.caseQuantity = row.IsNull("case_quantity") ? decimal.Zero : row.Field<decimal>("case_quantity");
         entity.palletQuantity = row.IsNull("pallet_quantity") ? decimal.Zero : row.Field<decimal>("pallet_quantity");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.rowID = row.Field<byte[]>("venddetailRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromVenddetailBase(ref DataRow row, VenddetailBase entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("vendor_id", entity.vendorId);
         row.SetField("abs_num", entity.absNum);
         row.SetField("vend_item", entity.vendItem);
         row.SetField("uom", entity.uom);
         row.SetField("box_qty", entity.boxQty);
         row.SetField("country_code", entity.countryCode);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("stack_height", entity.stackHeight);
         row.SetField("ref_type", entity.refType);
         row.SetField("date_time", entity.dateTime);
         row.SetField("case_quantity", entity.caseQuantity);
         row.SetField("pallet_quantity", entity.palletQuantity);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("venddetailRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, VenddetailBase entity)
      {
         row.SetField("coNum", entity.coNum);
         row.SetField("whNum", entity.whNum);
         row.SetField("vendorId", entity.vendorId);
         row.SetField("vendItem", entity.vendItem);
         row.SetField("venddetailRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	