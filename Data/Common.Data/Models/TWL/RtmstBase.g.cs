//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// R/Ts are receipt transactions - Purchase Orders are one type of receipt transaction
   /// </summary>
   
   public partial class RtmstBase: ModelBase
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// RT Number
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string rtNum { get; set; }

      /// <summary>
      /// RT Id
      /// </summary>
      public int rtId { get; set; }

      /// <summary>
      /// Task Id
      /// </summary>
      public int taskId { get; set; }

      /// <summary>
      /// R/T Type
      /// </summary>
      [StringValidationAttribute]
      public string type { get; set; }

      /// <summary>
      /// Vendor ID
      /// </summary>
      [StringValidationAttribute]
      public string vendorId { get; set; }

      /// <summary>
      /// Comments
      /// </summary>
      [StringValidationAttribute]
      public string comments { get; set; }

      /// <summary>
      /// Delivery
      /// </summary>
      public DateTime? delivery { get; set; }

      /// <summary>
      /// Order
      /// </summary>
      [StringValidationAttribute]
      public string order { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      [StringValidationAttribute]
      public string orderSuffix { get; set; }

      /// <summary>
      /// packing_list
      /// </summary>
      public bool packingList { get; set; }

      /// <summary>
      /// Truck Id
      /// </summary>
      [StringValidationAttribute]
      public string truckId { get; set; }

      /// <summary>
      /// Carrier
      /// </summary>
      [StringValidationAttribute]
      public string carrier { get; set; }

      /// <summary>
      /// Clearance Code
      /// </summary>
      [StringValidationAttribute]
      public string clearanceCode { get; set; }

      /// <summary>
      /// Cargo Control
      /// </summary>
      [StringValidationAttribute]
      public string cargoControl { get; set; }

      /// <summary>
      /// Customs Hold
      /// </summary>
      public bool clearanceRequired { get; set; }

      /// <summary>
      /// release_id
      /// </summary>
      [StringValidationAttribute]
      public string releaseId { get; set; }

      /// <summary>
      /// unplanned
      /// </summary>
      public bool unplanned { get; set; }

      /// <summary>
      /// Created By
      /// </summary>
      [StringValidationAttribute]
      public string createdBy { get; set; }

      /// <summary>
      /// Number of Cartons
      /// </summary>
      public int numCartons { get; set; }

      /// <summary>
      /// Percent Fill
      /// </summary>
      public decimal percentFill { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [StringValidationAttribute]
      public string rowStatus { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildRtmstBaseFromRow<T>(DataRow row) where T:RtmstBase, new()
      {
         T entity = new T();
         entity.rtId = row.IsNull("rt_id") ? 0 : row.Field<int>("rt_id");
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.rtNum = row.IsNull("rt_num") ? string.Empty : row.Field<string>("rt_num");
         entity.taskId = row.IsNull("task_id") ? 0 : row.Field<int>("task_id");
         entity.type = row.IsNull("type") ? string.Empty : row.Field<string>("type");
         entity.vendorId = row.IsNull("vendor_id") ? string.Empty : row.Field<string>("vendor_id");
         entity.comments = row.IsNull("comments") ? string.Empty : row.Field<string>("comments");
         entity.delivery = row.Field<DateTime?>("delivery");
         entity.order = row.IsNull("order") ? string.Empty : row.Field<string>("order");
         entity.orderSuffix = row.IsNull("order_suffix") ? string.Empty : row.Field<string>("order_suffix");
         entity.packingList = row.Field<bool>("packing_list");
         entity.truckId = row.IsNull("truck_id") ? string.Empty : row.Field<string>("truck_id");
         entity.carrier = row.IsNull("carrier") ? string.Empty : row.Field<string>("carrier");
         entity.clearanceCode = row.IsNull("clearance_code") ? string.Empty : row.Field<string>("clearance_code");
         entity.cargoControl = row.IsNull("cargo_control") ? string.Empty : row.Field<string>("cargo_control");
         entity.clearanceRequired = row.Field<bool>("clearance_required");
         entity.releaseId = row.IsNull("release_id") ? string.Empty : row.Field<string>("release_id");
         entity.unplanned = row.Field<bool>("unplanned");
         entity.createdBy = row.IsNull("created_by") ? string.Empty : row.Field<string>("created_by");
         entity.numCartons = row.IsNull("num_cartons") ? 0 : row.Field<int>("num_cartons");
         entity.percentFill = row.IsNull("percent_fill") ? decimal.Zero : row.Field<decimal>("percent_fill");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.rowStatus = row.IsNull("row_status") ? string.Empty : row.Field<string>("row_status");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.rowID = row.Field<byte[]>("rtmstRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromRtmstBase(ref DataRow row, RtmstBase entity)
      {
         row.SetField("rt_id", entity.rtId);
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("rt_num", entity.rtNum);
         row.SetField("task_id", entity.taskId);
         row.SetField("type", entity.type);
         row.SetField("vendor_id", entity.vendorId);
         row.SetField("comments", entity.comments);
         row.SetField("delivery", entity.delivery);
         row.SetField("order", entity.order);
         row.SetField("order_suffix", entity.orderSuffix);
         row.SetField("packing_list", entity.packingList);
         row.SetField("truck_id", entity.truckId);
         row.SetField("carrier", entity.carrier);
         row.SetField("clearance_code", entity.clearanceCode);
         row.SetField("cargo_control", entity.cargoControl);
         row.SetField("clearance_required", entity.clearanceRequired);
         row.SetField("release_id", entity.releaseId);
         row.SetField("unplanned", entity.unplanned);
         row.SetField("created_by", entity.createdBy);
         row.SetField("num_cartons", entity.numCartons);
         row.SetField("percent_fill", entity.percentFill);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("row_status", entity.rowStatus);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("rtmstRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, RtmstBase entity)
      {
         row.SetField("coNum", entity.coNum);
         row.SetField("whNum", entity.whNum);
         row.SetField("rtNum", entity.rtNum);
         row.SetField("rtmstRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	