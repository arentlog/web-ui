//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Holds adjustments/corrections to inventory
   /// </summary>
   
   public partial class InvAdjBase: ModelBase
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// Adjustment Code
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string adjCode { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string adjDesc { get; set; }

      /// <summary>
      /// Location Required
      /// </summary>
      public bool enterLoc { get; set; }

      /// <summary>
      /// Transaction Types
      /// </summary>
      [StringValidationAttribute]
      public string tranTypes { get; set; }

      /// <summary>
      /// valid_status_1
      /// </summary>
      public bool validStatus1 { get; set; }

      /// <summary>
      /// valid_status_2
      /// </summary>
      public bool validStatus2 { get; set; }

      /// <summary>
      /// status_1
      /// </summary>
      [StringValidationAttribute]
      public string status1 { get; set; }

      /// <summary>
      /// status_2
      /// </summary>
      [StringValidationAttribute]
      public string status2 { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildInvAdjBaseFromRow<T>(DataRow row) where T:InvAdjBase, new()
      {
         T entity = new T();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.adjCode = row.IsNull("adj_code") ? string.Empty : row.Field<string>("adj_code");
         entity.adjDesc = row.IsNull("adj_desc") ? string.Empty : row.Field<string>("adj_desc");
         entity.enterLoc = row.Field<bool>("enter_loc");
         entity.tranTypes = row.IsNull("tran_types") ? string.Empty : row.Field<string>("tran_types");
         entity.validStatus1 = row.Field<bool>("valid_status_1");
         entity.validStatus2 = row.Field<bool>("valid_status_2");
         entity.status1 = row.IsNull("status_1") ? string.Empty : row.Field<string>("status_1");
         entity.status2 = row.IsNull("status_2") ? string.Empty : row.Field<string>("status_2");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.rowID = row.Field<byte[]>("inv_adjRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromInvAdjBase(ref DataRow row, InvAdjBase entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("adj_code", entity.adjCode);
         row.SetField("adj_desc", entity.adjDesc);
         row.SetField("enter_loc", entity.enterLoc);
         row.SetField("tran_types", entity.tranTypes);
         row.SetField("valid_status_1", entity.validStatus1);
         row.SetField("valid_status_2", entity.validStatus2);
         row.SetField("status_1", entity.status1);
         row.SetField("status_2", entity.status2);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("inv_adjRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, InvAdjBase entity)
      {
         row.SetField("coNum", entity.coNum);
         row.SetField("whNum", entity.whNum);
         row.SetField("adjCode", entity.adjCode);
         row.SetField("inv_adjRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	