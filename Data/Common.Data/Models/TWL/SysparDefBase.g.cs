//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Parameter Defininition describing the purpose of the parameter
   /// </summary>
   
   public partial class SysparDefBase: ModelBase
   {

      /// <summary>
      /// Parameter Type ID
      /// </summary>
      [Key,Order]
      public int typeId { get; set; }

      /// <summary>
      /// Parameter ID
      /// </summary>
      [Key,Order]
      public int parameterId { get; set; }

      /// <summary>
      /// user_settable
      /// </summary>
      public bool userSettable { get; set; }

      /// <summary>
      /// data_type
      /// </summary>
      [StringValidationAttribute]
      public string dataType { get; set; }

      /// <summary>
      /// column_format
      /// </summary>
      [StringValidationAttribute]
      public string columnFormat { get; set; }

      /// <summary>
      /// column_widget
      /// </summary>
      [StringValidationAttribute]
      public string columnWidget { get; set; }

      /// <summary>
      /// column_text
      /// </summary>
      [StringValidationAttribute]
      public string columnText { get; set; }

      /// <summary>
      /// text_values
      /// </summary>
      [StringValidationAttribute]
      public string textValues { get; set; }

      /// <summary>
      /// default_value
      /// </summary>
      [StringValidationAttribute]
      public string defaultValue { get; set; }

      /// <summary>
      /// name
      /// </summary>
      [StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// description
      /// </summary>
      [StringValidationAttribute]
      public string description { get; set; }

      /// <summary>
      /// options
      /// </summary>
      [StringValidationAttribute]
      public string options { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildSysparDefBaseFromRow<T>(DataRow row) where T:SysparDefBase, new()
      {
         T entity = new T();
         entity.typeId = row.IsNull("type_id") ? 0 : row.Field<int>("type_id");
         entity.parameterId = row.IsNull("parameter_id") ? 0 : row.Field<int>("parameter_id");
         entity.userSettable = row.Field<bool>("user_settable");
         entity.dataType = row.IsNull("data_type") ? string.Empty : row.Field<string>("data_type");
         entity.columnFormat = row.IsNull("column_format") ? string.Empty : row.Field<string>("column_format");
         entity.columnWidget = row.IsNull("column_widget") ? string.Empty : row.Field<string>("column_widget");
         entity.columnText = row.IsNull("column_text") ? string.Empty : row.Field<string>("column_text");
         entity.textValues = row.IsNull("text_values") ? string.Empty : row.Field<string>("text_values");
         entity.defaultValue = row.IsNull("default_value") ? string.Empty : row.Field<string>("default_value");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.description = row.IsNull("description") ? string.Empty : row.Field<string>("description");
         entity.options = row.IsNull("options") ? string.Empty : row.Field<string>("options");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.rowID = row.Field<byte[]>("syspar_defRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSysparDefBase(ref DataRow row, SysparDefBase entity)
      {
         row.SetField("type_id", entity.typeId);
         row.SetField("parameter_id", entity.parameterId);
         row.SetField("user_settable", entity.userSettable);
         row.SetField("data_type", entity.dataType);
         row.SetField("column_format", entity.columnFormat);
         row.SetField("column_widget", entity.columnWidget);
         row.SetField("column_text", entity.columnText);
         row.SetField("text_values", entity.textValues);
         row.SetField("default_value", entity.defaultValue);
         row.SetField("name", entity.name);
         row.SetField("description", entity.description);
         row.SetField("options", entity.options);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("syspar_defRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, SysparDefBase entity)
      {
         row.SetField("typeId", entity.typeId);
         row.SetField("parameterId", entity.parameterId);
         row.SetField("syspar_defRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	