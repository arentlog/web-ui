//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Everything important that happens in TWL is recorded in this table.  It can be purged through EOD, but it is one of the largest and most active tables in the database.
   /// </summary>
   
   public partial class TransactionsBase: ModelBase
   {

      /// <summary>
      /// Transaction Number
      /// </summary>
      public int transNum { get; set; }

      /// <summary>
      /// Transmission Number
      /// </summary>
      public int transmission { get; set; }

      /// <summary>
      /// Memo
      /// </summary>
      [StringValidationAttribute]
      public string memo { get; set; }

      /// <summary>
      /// Company
      /// </summary>
      [StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// Task Id
      /// </summary>
      public int taskId { get; set; }

      /// <summary>
      /// Pallet Id
      /// </summary>
      [StringValidationAttribute]
      public string palletId { get; set; }

      /// <summary>
      /// From Pallet
      /// </summary>
      [StringValidationAttribute]
      public string palletIdFrom { get; set; }

      /// <summary>
      /// Carton ID
      /// </summary>
      [StringValidationAttribute]
      public string cartonId { get; set; }

      /// <summary>
      /// Date and Time
      /// </summary>
      [StringValidationAttribute]
      public string dateTime { get; set; }

      /// <summary>
      /// Seconds Since Midnight
      /// </summary>
      public int transSecTime { get; set; }

      /// <summary>
      /// Transaction Type
      /// </summary>
      [StringValidationAttribute]
      public string transType { get; set; }

      /// <summary>
      /// Employee Number
      /// </summary>
      [StringValidationAttribute]
      public string empNum { get; set; }

      /// <summary>
      /// Absolute Item Number
      /// </summary>
      [StringValidationAttribute]
      public string absNum { get; set; }

      /// <summary>
      /// Non-Stock Comment
      /// </summary>
      [StringValidationAttribute]
      public string nsComment { get; set; }

      /// <summary>
      /// Expected Item
      /// </summary>
      [StringValidationAttribute]
      public string expAbs { get; set; }

      /// <summary>
      /// Serial Number
      /// </summary>
      [StringValidationAttribute]
      public string serialNum { get; set; }

      /// <summary>
      /// Catalog Number
      /// </summary>
      [StringValidationAttribute]
      public string itemNum { get; set; }

      /// <summary>
      /// Quantity
      /// </summary>
      public decimal itemQty { get; set; }

      /// <summary>
      /// Adjusted Quantity
      /// </summary>
      public decimal suggQty { get; set; }

      /// <summary>
      /// Location
      /// </summary>
      [StringValidationAttribute]
      public string binNum { get; set; }

      /// <summary>
      /// From Location
      /// </summary>
      [StringValidationAttribute]
      public string binFrom { get; set; }

      /// <summary>
      /// To Location
      /// </summary>
      [StringValidationAttribute]
      public string binTo { get; set; }

      /// <summary>
      /// Type of Cycle Count
      /// </summary>
      [StringValidationAttribute]
      public string ccType { get; set; }

      /// <summary>
      /// Level of Cycle Count
      /// </summary>
      [StringValidationAttribute]
      public string ccString { get; set; }

      /// <summary>
      /// Shift Number
      /// </summary>
      public int shfNum { get; set; }

      /// <summary>
      /// Adjustment Code
      /// </summary>
      [StringValidationAttribute]
      public string adjCode { get; set; }

      /// <summary>
      /// Item Type
      /// </summary>
      [StringValidationAttribute]
      public string itemType { get; set; }

      /// <summary>
      /// Unit of Measure
      /// </summary>
      [StringValidationAttribute]
      public string uom { get; set; }

      /// <summary>
      /// Stock Status
      /// </summary>
      [StringValidationAttribute]
      public string stockStat { get; set; }

      /// <summary>
      /// Old Stock Status
      /// </summary>
      [StringValidationAttribute]
      public string oldStockStat { get; set; }

      /// <summary>
      /// Lot
      /// </summary>
      [StringValidationAttribute]
      public string lot { get; set; }

      /// <summary>
      /// Department Number
      /// </summary>
      public int deptNum { get; set; }

      /// <summary>
      /// Machine Type
      /// </summary>
      [StringValidationAttribute]
      public string machType { get; set; }

      /// <summary>
      /// RT Number
      /// </summary>
      [StringValidationAttribute]
      public string rtNum { get; set; }

      /// <summary>
      /// PO Number
      /// </summary>
      [StringValidationAttribute]
      public string poNumber { get; set; }

      /// <summary>
      /// PO Suffix
      /// </summary>
      [StringValidationAttribute]
      public string poSuffix { get; set; }

      /// <summary>
      /// po_line
      /// </summary>
      public int poLine { get; set; }

      /// <summary>
      /// line_sequence
      /// </summary>
      public int lineSequence { get; set; }

      /// <summary>
      /// packer
      /// </summary>
      [StringValidationAttribute]
      public string packer { get; set; }

      /// <summary>
      /// Action Code
      /// </summary>
      [StringValidationAttribute]
      public string actionCode { get; set; }

      /// <summary>
      /// Result Code
      /// </summary>
      [StringValidationAttribute]
      public string resultCode { get; set; }

      /// <summary>
      /// Result Message
      /// </summary>
      [StringValidationAttribute]
      public string resultMsg { get; set; }

      /// <summary>
      /// Transaction Link
      /// </summary>
      public int transLink { get; set; }

      /// <summary>
      /// Record Type
      /// </summary>
      [StringValidationAttribute]
      public string recordType { get; set; }

      /// <summary>
      /// comments
      /// </summary>
      [StringValidationAttribute]
      public string comments { get; set; }

      /// <summary>
      /// Created by
      /// </summary>
      [StringValidationAttribute]
      public string procCreated { get; set; }

      /// <summary>
      /// Truck Id
      /// </summary>
      [StringValidationAttribute]
      public string truckId { get; set; }

      /// <summary>
      /// Wave
      /// </summary>
      public int batch { get; set; }

      /// <summary>
      /// Cargo Control
      /// </summary>
      [StringValidationAttribute]
      public string cargoControl { get; set; }

      /// <summary>
      /// release_id
      /// </summary>
      [StringValidationAttribute]
      public string releaseId { get; set; }

      /// <summary>
      /// Document ID
      /// </summary>
      [StringValidationAttribute]
      public string docId { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [StringValidationAttribute]
      public string rowStatus { get; set; }

      /// <summary>
      /// lot_chg_type
      /// </summary>
      [StringValidationAttribute]
      public string lotChgType { get; set; }

      /// <summary>
      /// Case Quantity
      /// </summary>
      public decimal caseQuantity { get; set; }

      /// <summary>
      /// Cycle Count Id
      /// </summary>
      public int ccId { get; set; }

      /// <summary>
      /// Order
      /// </summary>
      [StringValidationAttribute]
      public string order { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      [StringValidationAttribute]
      public string orderSuffix { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [StringValidationAttribute]
      public string orderType { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }

      /// <summary>
      /// Printer
      /// </summary>
      [StringValidationAttribute]
      public string printer { get; set; }

      /// <summary>
      /// Lot Before
      /// </summary>
      [StringValidationAttribute]
      public string lotBefore { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildTransactionsBaseFromRow<T>(DataRow row) where T:TransactionsBase, new()
      {
         T entity = new T();
         entity.transNum = row.IsNull("trans_num") ? 0 : row.Field<int>("trans_num");
         entity.transmission = row.IsNull("transmission") ? 0 : row.Field<int>("transmission");
         entity.memo = row.IsNull("memo") ? string.Empty : row.Field<string>("memo");
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.taskId = row.IsNull("task_id") ? 0 : row.Field<int>("task_id");
         entity.palletId = row.IsNull("pallet_id") ? string.Empty : row.Field<string>("pallet_id");
         entity.palletIdFrom = row.IsNull("pallet_id_from") ? string.Empty : row.Field<string>("pallet_id_from");
         entity.cartonId = row.IsNull("carton_id") ? string.Empty : row.Field<string>("carton_id");
         entity.dateTime = row.IsNull("date_time") ? string.Empty : row.Field<string>("date_time");
         entity.transSecTime = row.IsNull("trans_sec_time") ? 0 : row.Field<int>("trans_sec_time");
         entity.transType = row.IsNull("trans_type") ? string.Empty : row.Field<string>("trans_type");
         entity.empNum = row.IsNull("emp_num") ? string.Empty : row.Field<string>("emp_num");
         entity.absNum = row.IsNull("abs_num") ? string.Empty : row.Field<string>("abs_num");
         entity.nsComment = row.IsNull("ns_comment") ? string.Empty : row.Field<string>("ns_comment");
         entity.expAbs = row.IsNull("exp_abs") ? string.Empty : row.Field<string>("exp_abs");
         entity.serialNum = row.IsNull("serial_num") ? string.Empty : row.Field<string>("serial_num");
         entity.itemNum = row.IsNull("item_num") ? string.Empty : row.Field<string>("item_num");
         entity.itemQty = row.IsNull("item_qty") ? decimal.Zero : row.Field<decimal>("item_qty");
         entity.suggQty = row.IsNull("sugg_qty") ? decimal.Zero : row.Field<decimal>("sugg_qty");
         entity.binNum = row.IsNull("bin_num") ? string.Empty : row.Field<string>("bin_num");
         entity.binFrom = row.IsNull("bin_from") ? string.Empty : row.Field<string>("bin_from");
         entity.binTo = row.IsNull("bin_to") ? string.Empty : row.Field<string>("bin_to");
         entity.ccType = row.IsNull("cc_type") ? string.Empty : row.Field<string>("cc_type");
         entity.ccString = row.IsNull("cc_string") ? string.Empty : row.Field<string>("cc_string");
         entity.shfNum = row.IsNull("shf_num") ? 0 : row.Field<int>("shf_num");
         entity.adjCode = row.IsNull("adj_code") ? string.Empty : row.Field<string>("adj_code");
         entity.itemType = row.IsNull("item_type") ? string.Empty : row.Field<string>("item_type");
         entity.uom = row.IsNull("uom") ? string.Empty : row.Field<string>("uom");
         entity.stockStat = row.IsNull("stock_stat") ? string.Empty : row.Field<string>("stock_stat");
         entity.oldStockStat = row.IsNull("old_stock_stat") ? string.Empty : row.Field<string>("old_stock_stat");
         entity.lot = row.IsNull("lot") ? string.Empty : row.Field<string>("lot");
         entity.deptNum = row.IsNull("dept_num") ? 0 : row.Field<int>("dept_num");
         entity.machType = row.IsNull("mach_type") ? string.Empty : row.Field<string>("mach_type");
         entity.rtNum = row.IsNull("rt_num") ? string.Empty : row.Field<string>("rt_num");
         entity.poNumber = row.IsNull("po_number") ? string.Empty : row.Field<string>("po_number");
         entity.poSuffix = row.IsNull("po_suffix") ? string.Empty : row.Field<string>("po_suffix");
         entity.poLine = row.IsNull("po_line") ? 0 : row.Field<int>("po_line");
         entity.lineSequence = row.IsNull("line_sequence") ? 0 : row.Field<int>("line_sequence");
         entity.packer = row.IsNull("packer") ? string.Empty : row.Field<string>("packer");
         entity.actionCode = row.IsNull("action_code") ? string.Empty : row.Field<string>("action_code");
         entity.resultCode = row.IsNull("result_code") ? string.Empty : row.Field<string>("result_code");
         entity.resultMsg = row.IsNull("result_msg") ? string.Empty : row.Field<string>("result_msg");
         entity.transLink = row.IsNull("trans_link") ? 0 : row.Field<int>("trans_link");
         entity.recordType = row.IsNull("record_type") ? string.Empty : row.Field<string>("record_type");
         entity.comments = row.IsNull("comments") ? string.Empty : row.Field<string>("comments");
         entity.procCreated = row.IsNull("proc_created") ? string.Empty : row.Field<string>("proc_created");
         entity.truckId = row.IsNull("truck_id") ? string.Empty : row.Field<string>("truck_id");
         entity.batch = row.IsNull("batch") ? 0 : row.Field<int>("batch");
         entity.cargoControl = row.IsNull("cargo_control") ? string.Empty : row.Field<string>("cargo_control");
         entity.releaseId = row.IsNull("release_id") ? string.Empty : row.Field<string>("release_id");
         entity.docId = row.IsNull("doc_id") ? string.Empty : row.Field<string>("doc_id");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.rowStatus = row.IsNull("row_status") ? string.Empty : row.Field<string>("row_status");
         entity.lotChgType = row.IsNull("lot_chg_type") ? string.Empty : row.Field<string>("lot_chg_type");
         entity.caseQuantity = row.IsNull("case_quantity") ? decimal.Zero : row.Field<decimal>("case_quantity");
         entity.ccId = row.IsNull("cc_id") ? 0 : row.Field<int>("cc_id");
         entity.order = row.IsNull("order") ? string.Empty : row.Field<string>("order");
         entity.orderSuffix = row.IsNull("order_suffix") ? string.Empty : row.Field<string>("order_suffix");
         entity.orderType = row.IsNull("order_type") ? string.Empty : row.Field<string>("order_type");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.printer = row.IsNull("printer") ? string.Empty : row.Field<string>("printer");
         entity.lotBefore = row.IsNull("lot_before") ? string.Empty : row.Field<string>("lot_before");
         entity.rowID = row.Field<byte[]>("transactionsRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromTransactionsBase(ref DataRow row, TransactionsBase entity)
      {
         row.SetField("trans_num", entity.transNum);
         row.SetField("transmission", entity.transmission);
         row.SetField("memo", entity.memo);
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("task_id", entity.taskId);
         row.SetField("pallet_id", entity.palletId);
         row.SetField("pallet_id_from", entity.palletIdFrom);
         row.SetField("carton_id", entity.cartonId);
         row.SetField("date_time", entity.dateTime);
         row.SetField("trans_sec_time", entity.transSecTime);
         row.SetField("trans_type", entity.transType);
         row.SetField("emp_num", entity.empNum);
         row.SetField("abs_num", entity.absNum);
         row.SetField("ns_comment", entity.nsComment);
         row.SetField("exp_abs", entity.expAbs);
         row.SetField("serial_num", entity.serialNum);
         row.SetField("item_num", entity.itemNum);
         row.SetField("item_qty", entity.itemQty);
         row.SetField("sugg_qty", entity.suggQty);
         row.SetField("bin_num", entity.binNum);
         row.SetField("bin_from", entity.binFrom);
         row.SetField("bin_to", entity.binTo);
         row.SetField("cc_type", entity.ccType);
         row.SetField("cc_string", entity.ccString);
         row.SetField("shf_num", entity.shfNum);
         row.SetField("adj_code", entity.adjCode);
         row.SetField("item_type", entity.itemType);
         row.SetField("uom", entity.uom);
         row.SetField("stock_stat", entity.stockStat);
         row.SetField("old_stock_stat", entity.oldStockStat);
         row.SetField("lot", entity.lot);
         row.SetField("dept_num", entity.deptNum);
         row.SetField("mach_type", entity.machType);
         row.SetField("rt_num", entity.rtNum);
         row.SetField("po_number", entity.poNumber);
         row.SetField("po_suffix", entity.poSuffix);
         row.SetField("po_line", entity.poLine);
         row.SetField("line_sequence", entity.lineSequence);
         row.SetField("packer", entity.packer);
         row.SetField("action_code", entity.actionCode);
         row.SetField("result_code", entity.resultCode);
         row.SetField("result_msg", entity.resultMsg);
         row.SetField("trans_link", entity.transLink);
         row.SetField("record_type", entity.recordType);
         row.SetField("comments", entity.comments);
         row.SetField("proc_created", entity.procCreated);
         row.SetField("truck_id", entity.truckId);
         row.SetField("batch", entity.batch);
         row.SetField("cargo_control", entity.cargoControl);
         row.SetField("release_id", entity.releaseId);
         row.SetField("doc_id", entity.docId);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("row_status", entity.rowStatus);
         row.SetField("lot_chg_type", entity.lotChgType);
         row.SetField("case_quantity", entity.caseQuantity);
         row.SetField("cc_id", entity.ccId);
         row.SetField("order", entity.order);
         row.SetField("order_suffix", entity.orderSuffix);
         row.SetField("order_type", entity.orderType);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("printer", entity.printer);
         row.SetField("lot_before", entity.lotBefore);
         row.SetField("transactionsRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, TransactionsBase entity)
      {
         row.SetField("transactionsRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	