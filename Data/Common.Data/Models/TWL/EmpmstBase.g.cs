//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Contains information and access permissions for all employees (operators)
   /// </summary>
   
   public partial class EmpmstBase: ModelBase
   {

      /// <summary>
      /// Employee Number
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string empNum { get; set; }

      /// <summary>
      /// Company
      /// </summary>
      [StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// Password
      /// </summary>
      [StringValidationAttribute]
      public string password { get; set; }

      /// <summary>
      /// Employee Name
      /// </summary>
      [StringValidationAttribute]
      public string empName { get; set; }

      /// <summary>
      /// Department Number
      /// </summary>
      public int deptNum { get; set; }

      /// <summary>
      /// Shift Number
      /// </summary>
      public int shfNum { get; set; }

      /// <summary>
      /// Title
      /// </summary>
      [StringValidationAttribute]
      public string empTitle { get; set; }

      /// <summary>
      /// RF Logon
      /// </summary>
      public bool rfLogon { get; set; }

      /// <summary>
      /// RF Receipt
      /// </summary>
      public bool rfReceipt { get; set; }

      /// <summary>
      /// RF Put Away
      /// </summary>
      public bool rfPutaway { get; set; }

      /// <summary>
      /// RF Movements
      /// </summary>
      public bool rfMove { get; set; }

      /// <summary>
      /// RF Replenishments
      /// </summary>
      public bool rfStkMove { get; set; }

      /// <summary>
      /// RF Stock Adjustments
      /// </summary>
      public bool rfStkAdj { get; set; }

      /// <summary>
      /// RF Order Picking
      /// </summary>
      public bool rfPick { get; set; }

      /// <summary>
      /// RF Order Packing
      /// </summary>
      public bool rfPack { get; set; }

      /// <summary>
      /// RF Shipping
      /// </summary>
      public bool rfShip { get; set; }

      /// <summary>
      /// Cycle Count / Physical
      /// </summary>
      public bool rfInventory { get; set; }

      /// <summary>
      /// Report Master
      /// </summary>
      public bool rptMst { get; set; }

      /// <summary>
      /// Company Master
      /// </summary>
      public bool cmpMst { get; set; }

      /// <summary>
      /// Warehouse Master
      /// </summary>
      public bool whMst { get; set; }

      /// <summary>
      /// Department Master
      /// </summary>
      public bool depMst { get; set; }

      /// <summary>
      /// Shift Master
      /// </summary>
      public bool shfMst { get; set; }

      /// <summary>
      /// Employee Master
      /// </summary>
      [StringValidationAttribute]
      public string empMst { get; set; }

      /// <summary>
      /// Location Master
      /// </summary>
      public bool binMst { get; set; }

      /// <summary>
      /// Item Master
      /// </summary>
      public bool itmMst { get; set; }

      /// <summary>
      /// Inventory Master
      /// </summary>
      public bool invMst { get; set; }

      /// <summary>
      /// Vendor Master
      /// </summary>
      public bool vndMst { get; set; }

      /// <summary>
      /// Parameter Master
      /// </summary>
      public bool paramMst { get; set; }

      /// <summary>
      /// Station Master
      /// </summary>
      public bool stnMst { get; set; }

      /// <summary>
      /// Adjustment Master
      /// </summary>
      public bool adjMst { get; set; }

      /// <summary>
      /// Cycle Numbers
      /// </summary>
      [StringValidationAttribute]
      public string cycNum { get; set; }

      /// <summary>
      /// UOM Master
      /// </summary>
      public bool uomMst { get; set; }

      /// <summary>
      /// Cycle Count Master
      /// </summary>
      public bool cycMst { get; set; }

      /// <summary>
      /// Physical Inventory
      /// </summary>
      public bool physical { get; set; }

      /// <summary>
      /// Carrier Master
      /// </summary>
      public bool carrierMst { get; set; }

      /// <summary>
      /// Customer Master
      /// </summary>
      public bool custMst { get; set; }

      /// <summary>
      /// Order Master
      /// </summary>
      public bool ordMst { get; set; }

      /// <summary>
      /// Stage Master
      /// </summary>
      public bool stgMst { get; set; }

      /// <summary>
      /// System Setup
      /// </summary>
      public bool sysSetup { get; set; }

      /// <summary>
      /// Inventory Control
      /// </summary>
      public bool inventoryControl { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// Active
      /// </summary>
      public bool rowStatus { get; set; }

      /// <summary>
      /// Utility  Master
      /// </summary>
      [StringValidationAttribute]
      public string utilMst { get; set; }

      /// <summary>
      /// zone_pick_fl
      /// </summary>
      public bool zonePickFl { get; set; }

      /// <summary>
      /// rush_wh_zone
      /// </summary>
      [StringValidationAttribute]
      public string rushWhZone { get; set; }

      /// <summary>
      /// Printer
      /// </summary>
      [StringValidationAttribute]
      public string empPrinter { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }

      /// <summary>
      /// RF Pick Sorting
      /// </summary>
      public bool rfPicksort { get; set; }

      /// <summary>
      /// Discrepancy Master
      /// </summary>
      public bool discMastfl { get; set; }

      /// <summary>
      /// Replenishment Master
      /// </summary>
      public bool replMastfl { get; set; }

      /// <summary>
      /// Pack List Master
      /// </summary>
      public bool packlistMastfl { get; set; }

      /// <summary>
      /// Logon
      /// </summary>
      public bool onlineLogonfl { get; set; }

      /// <summary>
      /// Maximum Concurrent RF Logins
      /// </summary>
      public int rfLoginCnt { get; set; }

      /// <summary>
      /// Online Admin
      /// </summary>
      public bool onlineAdminfl { get; set; }

      /// <summary>
      /// RF Admin
      /// </summary>
      public bool rfAdminfl { get; set; }

      /// <summary>
      /// RF Note Create
      /// </summary>
      public bool rfnotesfl { get; set; }

      /// <summary>
      /// Password Changed
      /// </summary>
      public DateTime? pwlastchgdt { get; set; }

      /// <summary>
      /// Previous Password
      /// </summary>
      [StringValidationAttribute]
      public string pwprevious1 { get; set; }
      [StringValidationAttribute]
      public string pwprevious2 { get; set; }
      [StringValidationAttribute]
      public string pwprevious3 { get; set; }
      [StringValidationAttribute]
      public string pwprevious4 { get; set; }
      [StringValidationAttribute]
      public string pwprevious5 { get; set; }
      [StringValidationAttribute]
      public string pwprevious6 { get; set; }
      [StringValidationAttribute]
      public string pwprevious7 { get; set; }
      [StringValidationAttribute]
      public string pwprevious8 { get; set; }
      [StringValidationAttribute]
      public string pwprevious9 { get; set; }
      [StringValidationAttribute]
      public string pwprevious10 { get; set; }

      /// <summary>
      /// User Must Change Password at next Login
      /// </summary>
      public bool pwchangefl { get; set; }

      /// <summary>
      /// Delete Order Detail
      /// </summary>
      public bool rfdelorddtlfl { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildEmpmstBaseFromRow<T>(DataRow row) where T:EmpmstBase, new()
      {
         T entity = new T();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.empNum = row.IsNull("emp_num") ? string.Empty : row.Field<string>("emp_num");
         entity.password = row.IsNull("password") ? string.Empty : row.Field<string>("password");
         entity.empName = row.IsNull("emp_name") ? string.Empty : row.Field<string>("emp_name");
         entity.deptNum = row.IsNull("dept_num") ? 0 : row.Field<int>("dept_num");
         entity.shfNum = row.IsNull("shf_num") ? 0 : row.Field<int>("shf_num");
         entity.empTitle = row.IsNull("emp_title") ? string.Empty : row.Field<string>("emp_title");
         entity.rfLogon = row.Field<bool>("rf_logon");
         entity.rfReceipt = row.Field<bool>("rf_receipt");
         entity.rfPutaway = row.Field<bool>("rf_putaway");
         entity.rfMove = row.Field<bool>("rf_move");
         entity.rfStkMove = row.Field<bool>("rf_stk_move");
         entity.rfStkAdj = row.Field<bool>("rf_stk_adj");
         entity.rfPick = row.Field<bool>("rf_pick");
         entity.rfPack = row.Field<bool>("rf_pack");
         entity.rfShip = row.Field<bool>("rf_ship");
         entity.rfInventory = row.Field<bool>("rf_inventory");
         entity.rptMst = row.Field<bool>("rpt_mst");
         entity.cmpMst = row.Field<bool>("cmp_mst");
         entity.whMst = row.Field<bool>("wh_mst");
         entity.depMst = row.Field<bool>("dep_mst");
         entity.shfMst = row.Field<bool>("shf_mst");
         entity.empMst = row.IsNull("emp_mst") ? string.Empty : row.Field<string>("emp_mst");
         entity.binMst = row.Field<bool>("bin_mst");
         entity.itmMst = row.Field<bool>("itm_mst");
         entity.invMst = row.Field<bool>("inv_mst");
         entity.vndMst = row.Field<bool>("vnd_mst");
         entity.paramMst = row.Field<bool>("param_mst");
         entity.stnMst = row.Field<bool>("stn_mst");
         entity.adjMst = row.Field<bool>("adj_mst");
         entity.cycNum = row.IsNull("cyc_num") ? string.Empty : row.Field<string>("cyc_num");
         entity.uomMst = row.Field<bool>("uom_mst");
         entity.cycMst = row.Field<bool>("cyc_mst");
         entity.physical = row.Field<bool>("physical");
         entity.carrierMst = row.Field<bool>("carrier_mst");
         entity.custMst = row.Field<bool>("cust_mst");
         entity.ordMst = row.Field<bool>("ord_mst");
         entity.stgMst = row.Field<bool>("stg_mst");
         entity.sysSetup = row.Field<bool>("sys_setup");
         entity.inventoryControl = row.Field<bool>("inventory_control");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.rowStatus = row.Field<bool>("row_status");
         entity.utilMst = row.IsNull("util_mst") ? string.Empty : row.Field<string>("util_mst");
         entity.zonePickFl = row.Field<bool>("zone_pick_fl");
         entity.rushWhZone = row.IsNull("rush_wh_zone") ? string.Empty : row.Field<string>("rush_wh_zone");
         entity.empPrinter = row.IsNull("emp_printer") ? string.Empty : row.Field<string>("emp_printer");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.rfPicksort = row.Field<bool>("rf_picksort");
         entity.discMastfl = row.Field<bool>("disc_mastfl");
         entity.replMastfl = row.Field<bool>("repl_mastfl");
         entity.packlistMastfl = row.Field<bool>("packlist_mastfl");
         entity.onlineLogonfl = row.Field<bool>("online_logonfl");
         entity.rfLoginCnt = row.IsNull("rf_login_cnt") ? 0 : row.Field<int>("rf_login_cnt");
         entity.onlineAdminfl = row.Field<bool>("online_adminfl");
         entity.rfAdminfl = row.Field<bool>("rf_adminfl");
         entity.rfnotesfl = row.Field<bool>("rfnotesfl");
         entity.pwlastchgdt = row.Field<DateTime?>("pwlastchgdt");
         entity.pwprevious1 = row.IsNull("pwprevious1") ? string.Empty : row.Field<string>("pwprevious1");
         entity.pwprevious2 = row.IsNull("pwprevious2") ? string.Empty : row.Field<string>("pwprevious2");
         entity.pwprevious3 = row.IsNull("pwprevious3") ? string.Empty : row.Field<string>("pwprevious3");
         entity.pwprevious4 = row.IsNull("pwprevious4") ? string.Empty : row.Field<string>("pwprevious4");
         entity.pwprevious5 = row.IsNull("pwprevious5") ? string.Empty : row.Field<string>("pwprevious5");
         entity.pwprevious6 = row.IsNull("pwprevious6") ? string.Empty : row.Field<string>("pwprevious6");
         entity.pwprevious7 = row.IsNull("pwprevious7") ? string.Empty : row.Field<string>("pwprevious7");
         entity.pwprevious8 = row.IsNull("pwprevious8") ? string.Empty : row.Field<string>("pwprevious8");
         entity.pwprevious9 = row.IsNull("pwprevious9") ? string.Empty : row.Field<string>("pwprevious9");
         entity.pwprevious10 = row.IsNull("pwprevious10") ? string.Empty : row.Field<string>("pwprevious10");
         entity.pwchangefl = row.Field<bool>("pwchangefl");
         entity.rfdelorddtlfl = row.Field<bool>("rfdelorddtlfl");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.rowID = row.Field<byte[]>("empmstRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromEmpmstBase(ref DataRow row, EmpmstBase entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("emp_num", entity.empNum);
         row.SetField("password", entity.password);
         row.SetField("emp_name", entity.empName);
         row.SetField("dept_num", entity.deptNum);
         row.SetField("shf_num", entity.shfNum);
         row.SetField("emp_title", entity.empTitle);
         row.SetField("rf_logon", entity.rfLogon);
         row.SetField("rf_receipt", entity.rfReceipt);
         row.SetField("rf_putaway", entity.rfPutaway);
         row.SetField("rf_move", entity.rfMove);
         row.SetField("rf_stk_move", entity.rfStkMove);
         row.SetField("rf_stk_adj", entity.rfStkAdj);
         row.SetField("rf_pick", entity.rfPick);
         row.SetField("rf_pack", entity.rfPack);
         row.SetField("rf_ship", entity.rfShip);
         row.SetField("rf_inventory", entity.rfInventory);
         row.SetField("rpt_mst", entity.rptMst);
         row.SetField("cmp_mst", entity.cmpMst);
         row.SetField("wh_mst", entity.whMst);
         row.SetField("dep_mst", entity.depMst);
         row.SetField("shf_mst", entity.shfMst);
         row.SetField("emp_mst", entity.empMst);
         row.SetField("bin_mst", entity.binMst);
         row.SetField("itm_mst", entity.itmMst);
         row.SetField("inv_mst", entity.invMst);
         row.SetField("vnd_mst", entity.vndMst);
         row.SetField("param_mst", entity.paramMst);
         row.SetField("stn_mst", entity.stnMst);
         row.SetField("adj_mst", entity.adjMst);
         row.SetField("cyc_num", entity.cycNum);
         row.SetField("uom_mst", entity.uomMst);
         row.SetField("cyc_mst", entity.cycMst);
         row.SetField("physical", entity.physical);
         row.SetField("carrier_mst", entity.carrierMst);
         row.SetField("cust_mst", entity.custMst);
         row.SetField("ord_mst", entity.ordMst);
         row.SetField("stg_mst", entity.stgMst);
         row.SetField("sys_setup", entity.sysSetup);
         row.SetField("inventory_control", entity.inventoryControl);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("row_status", entity.rowStatus);
         row.SetField("util_mst", entity.utilMst);
         row.SetField("zone_pick_fl", entity.zonePickFl);
         row.SetField("rush_wh_zone", entity.rushWhZone);
         row.SetField("emp_printer", entity.empPrinter);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("rf_picksort", entity.rfPicksort);
         row.SetField("disc_mastfl", entity.discMastfl);
         row.SetField("repl_mastfl", entity.replMastfl);
         row.SetField("packlist_mastfl", entity.packlistMastfl);
         row.SetField("online_logonfl", entity.onlineLogonfl);
         row.SetField("rf_login_cnt", entity.rfLoginCnt);
         row.SetField("online_adminfl", entity.onlineAdminfl);
         row.SetField("rf_adminfl", entity.rfAdminfl);
         row.SetField("rfnotesfl", entity.rfnotesfl);
         row.SetField("pwlastchgdt", entity.pwlastchgdt);
         row.SetField("pwprevious1", entity.pwprevious1);
         row.SetField("pwprevious2", entity.pwprevious2);
         row.SetField("pwprevious3", entity.pwprevious3);
         row.SetField("pwprevious4", entity.pwprevious4);
         row.SetField("pwprevious5", entity.pwprevious5);
         row.SetField("pwprevious6", entity.pwprevious6);
         row.SetField("pwprevious7", entity.pwprevious7);
         row.SetField("pwprevious8", entity.pwprevious8);
         row.SetField("pwprevious9", entity.pwprevious9);
         row.SetField("pwprevious10", entity.pwprevious10);
         row.SetField("pwchangefl", entity.pwchangefl);
         row.SetField("rfdelorddtlfl", entity.rfdelorddtlfl);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("empmstRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, EmpmstBase entity)
      {
         row.SetField("empNum", entity.empNum);
         row.SetField("empmstRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	