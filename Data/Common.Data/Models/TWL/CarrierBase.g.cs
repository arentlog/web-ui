//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Carrier table
   /// </summary>
   
   public partial class CarrierBase: ModelBase
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// Carrier Id
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string carrierId { get; set; }

      /// <summary>
      /// Carrier Name
      /// </summary>
      [StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }
      [StringValidationAttribute]
      public string addr3 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string zip { get; set; }

      /// <summary>
      /// Country
      /// </summary>
      [StringValidationAttribute]
      public string country { get; set; }

      /// <summary>
      /// Contact Name
      /// </summary>
      [StringValidationAttribute]
      public string contact { get; set; }

      /// <summary>
      /// Phone Number
      /// </summary>
      [StringValidationAttribute]
      public string phone { get; set; }

      /// <summary>
      /// Use Pro Numbers
      /// </summary>
      public bool proUse { get; set; }

      /// <summary>
      /// Current Manifest Number
      /// </summary>
      public int currentManifest { get; set; }

      /// <summary>
      /// Shipper Id
      /// </summary>
      [StringValidationAttribute]
      public string shipperId { get; set; }

      /// <summary>
      /// Ship Amount
      /// </summary>
      [StringValidationAttribute]
      public string shipAmount { get; set; }

      /// <summary>
      /// P.M.
      /// </summary>
      [StringValidationAttribute]
      public string pmIrms { get; set; }

      /// <summary>
      /// Req Weight
      /// </summary>
      [StringValidationAttribute]
      public string reqWeight { get; set; }

      /// <summary>
      /// Req Size
      /// </summary>
      [StringValidationAttribute]
      public string reqSize { get; set; }

      /// <summary>
      /// Carrier Type
      /// </summary>
      [StringValidationAttribute]
      public string carrierType { get; set; }

      /// <summary>
      /// Print SX.e Packing List
      /// </summary>
      public bool printPacklist { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// Active
      /// </summary>
      public bool rowStatus { get; set; }

      /// <summary>
      /// pack_scm
      /// </summary>
      public bool packScm { get; set; }

      /// <summary>
      /// Req Trailer
      /// </summary>
      [StringValidationAttribute]
      public string trailerRequired { get; set; }

      /// <summary>
      /// SX.e Printer
      /// </summary>
      [StringValidationAttribute]
      public string sxPrinter { get; set; }

      /// <summary>
      /// SCM Printer
      /// </summary>
      [StringValidationAttribute]
      public string scmPrinter { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }

      /// <summary>
      /// Load Orders
      /// </summary>
      public bool loadOrderfl { get; set; }

      /// <summary>
      /// Load Order Classes
      /// </summary>
      [StringValidationAttribute]
      public string loadOrderClasses { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildCarrierBaseFromRow<T>(DataRow row) where T:CarrierBase, new()
      {
         T entity = new T();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.carrierId = row.IsNull("carrier_id") ? string.Empty : row.Field<string>("carrier_id");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zip = row.IsNull("zip") ? string.Empty : row.Field<string>("zip");
         entity.country = row.IsNull("country") ? string.Empty : row.Field<string>("country");
         entity.contact = row.IsNull("contact") ? string.Empty : row.Field<string>("contact");
         entity.phone = row.IsNull("phone") ? string.Empty : row.Field<string>("phone");
         entity.proUse = row.Field<bool>("pro_use");
         entity.currentManifest = row.IsNull("current_manifest") ? 0 : row.Field<int>("current_manifest");
         entity.shipperId = row.IsNull("shipper_id") ? string.Empty : row.Field<string>("shipper_id");
         entity.shipAmount = row.IsNull("ship_amount") ? string.Empty : row.Field<string>("ship_amount");
         entity.pmIrms = row.IsNull("pm_irms") ? string.Empty : row.Field<string>("pm_irms");
         entity.reqWeight = row.IsNull("req_weight") ? string.Empty : row.Field<string>("req_weight");
         entity.reqSize = row.IsNull("req_size") ? string.Empty : row.Field<string>("req_size");
         entity.carrierType = row.IsNull("carrier_type") ? string.Empty : row.Field<string>("carrier_type");
         entity.printPacklist = row.Field<bool>("print_packlist");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.rowStatus = row.Field<bool>("row_status");
         entity.packScm = row.Field<bool>("pack_scm");
         entity.trailerRequired = row.IsNull("trailer_required") ? string.Empty : row.Field<string>("trailer_required");
         entity.sxPrinter = row.IsNull("sx_printer") ? string.Empty : row.Field<string>("sx_printer");
         entity.scmPrinter = row.IsNull("scm_printer") ? string.Empty : row.Field<string>("scm_printer");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.loadOrderfl = row.Field<bool>("load_orderfl");
         entity.loadOrderClasses = row.IsNull("load_order_classes") ? string.Empty : row.Field<string>("load_order_classes");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.rowID = row.Field<byte[]>("carrierRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromCarrierBase(ref DataRow row, CarrierBase entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("carrier_id", entity.carrierId);
         row.SetField("name", entity.name);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("addr3", entity.addr3);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("zip", entity.zip);
         row.SetField("country", entity.country);
         row.SetField("contact", entity.contact);
         row.SetField("phone", entity.phone);
         row.SetField("pro_use", entity.proUse);
         row.SetField("current_manifest", entity.currentManifest);
         row.SetField("shipper_id", entity.shipperId);
         row.SetField("ship_amount", entity.shipAmount);
         row.SetField("pm_irms", entity.pmIrms);
         row.SetField("req_weight", entity.reqWeight);
         row.SetField("req_size", entity.reqSize);
         row.SetField("carrier_type", entity.carrierType);
         row.SetField("print_packlist", entity.printPacklist);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("row_status", entity.rowStatus);
         row.SetField("pack_scm", entity.packScm);
         row.SetField("trailer_required", entity.trailerRequired);
         row.SetField("sx_printer", entity.sxPrinter);
         row.SetField("scm_printer", entity.scmPrinter);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("load_orderfl", entity.loadOrderfl);
         row.SetField("load_order_classes", entity.loadOrderClasses);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("carrierRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, CarrierBase entity)
      {
         row.SetField("coNum", entity.coNum);
         row.SetField("whNum", entity.whNum);
         row.SetField("carrierId", entity.carrierId);
         row.SetField("carrierRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	