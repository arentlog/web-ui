//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Contain information about waves of orders released for picking together
   /// </summary>
   
   public partial class WaveBase: ModelBase
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// Order Batch
      /// </summary>
      [Key,Order]
      public int batch { get; set; }

      /// <summary>
      /// Task Id
      /// </summary>
      public int taskId { get; set; }

      /// <summary>
      /// Lines
      /// </summary>
      public int lineCount { get; set; }

      /// <summary>
      /// Orders
      /// </summary>
      public int orderCount { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal weight { get; set; }

      /// <summary>
      /// Cube
      /// </summary>
      public decimal cube { get; set; }

      /// <summary>
      /// Drop Time
      /// </summary>
      [StringValidationAttribute]
      public string dropDateTime { get; set; }

      /// <summary>
      /// Active Time
      /// </summary>
      [StringValidationAttribute]
      public string activeDateTime { get; set; }

      /// <summary>
      /// Ship Time
      /// </summary>
      [StringValidationAttribute]
      public string shipDateTime { get; set; }

      /// <summary>
      /// Drop Price
      /// </summary>
      public decimal dropPrice { get; set; }

      /// <summary>
      /// Ship Price
      /// </summary>
      public decimal shipPrice { get; set; }

      /// <summary>
      /// Single Line Orders
      /// </summary>
      public int singleLineOrders { get; set; }

      /// <summary>
      /// Cart
      /// </summary>
      [StringValidationAttribute]
      public string cart { get; set; }

      /// <summary>
      /// Host Wave
      /// </summary>
      [StringValidationAttribute]
      public string hostBatch { get; set; }

      /// <summary>
      /// Employee Number
      /// </summary>
      [StringValidationAttribute]
      public string empNum { get; set; }

      /// <summary>
      /// Ship Cube
      /// </summary>
      public decimal shipCube { get; set; }

      /// <summary>
      /// Ship Weight
      /// </summary>
      public decimal shipWeight { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [StringValidationAttribute]
      public string waveStatus { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildWaveBaseFromRow<T>(DataRow row) where T:WaveBase, new()
      {
         T entity = new T();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.batch = row.IsNull("batch") ? 0 : row.Field<int>("batch");
         entity.taskId = row.IsNull("task_id") ? 0 : row.Field<int>("task_id");
         entity.lineCount = row.IsNull("line_count") ? 0 : row.Field<int>("line_count");
         entity.orderCount = row.IsNull("order_count") ? 0 : row.Field<int>("order_count");
         entity.weight = row.IsNull("weight") ? decimal.Zero : row.Field<decimal>("weight");
         entity.cube = row.IsNull("cube") ? decimal.Zero : row.Field<decimal>("cube");
         entity.dropDateTime = row.IsNull("drop_date_time") ? string.Empty : row.Field<string>("drop_date_time");
         entity.activeDateTime = row.IsNull("active_date_time") ? string.Empty : row.Field<string>("active_date_time");
         entity.shipDateTime = row.IsNull("ship_date_time") ? string.Empty : row.Field<string>("ship_date_time");
         entity.dropPrice = row.IsNull("drop_price") ? decimal.Zero : row.Field<decimal>("drop_price");
         entity.shipPrice = row.IsNull("ship_price") ? decimal.Zero : row.Field<decimal>("ship_price");
         entity.singleLineOrders = row.IsNull("single_line_orders") ? 0 : row.Field<int>("single_line_orders");
         entity.cart = row.IsNull("cart") ? string.Empty : row.Field<string>("cart");
         entity.hostBatch = row.IsNull("host_batch") ? string.Empty : row.Field<string>("host_batch");
         entity.empNum = row.IsNull("emp_num") ? string.Empty : row.Field<string>("emp_num");
         entity.shipCube = row.IsNull("ship_cube") ? decimal.Zero : row.Field<decimal>("ship_cube");
         entity.shipWeight = row.IsNull("ship_weight") ? decimal.Zero : row.Field<decimal>("ship_weight");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.waveStatus = row.IsNull("wave_status") ? string.Empty : row.Field<string>("wave_status");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.rowID = row.Field<byte[]>("waveRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromWaveBase(ref DataRow row, WaveBase entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("batch", entity.batch);
         row.SetField("task_id", entity.taskId);
         row.SetField("line_count", entity.lineCount);
         row.SetField("order_count", entity.orderCount);
         row.SetField("weight", entity.weight);
         row.SetField("cube", entity.cube);
         row.SetField("drop_date_time", entity.dropDateTime);
         row.SetField("active_date_time", entity.activeDateTime);
         row.SetField("ship_date_time", entity.shipDateTime);
         row.SetField("drop_price", entity.dropPrice);
         row.SetField("ship_price", entity.shipPrice);
         row.SetField("single_line_orders", entity.singleLineOrders);
         row.SetField("cart", entity.cart);
         row.SetField("host_batch", entity.hostBatch);
         row.SetField("emp_num", entity.empNum);
         row.SetField("ship_cube", entity.shipCube);
         row.SetField("ship_weight", entity.shipWeight);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("wave_status", entity.waveStatus);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("waveRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, WaveBase entity)
      {
         row.SetField("coNum", entity.coNum);
         row.SetField("whNum", entity.whNum);
         row.SetField("batch", entity.batch);
         row.SetField("waveRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	