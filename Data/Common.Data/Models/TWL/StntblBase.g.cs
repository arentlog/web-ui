//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Data about all RF stations + console
   /// </summary>
   
   public partial class StntblBase: ModelBase
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// Station Id
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string stnNum { get; set; }

      /// <summary>
      /// Active
      /// </summary>
      public bool rowStatus { get; set; }

      /// <summary>
      /// Station Type
      /// </summary>
      [StringValidationAttribute]
      public string stnType { get; set; }

      /// <summary>
      /// Label Printer Type
      /// </summary>
      [StringValidationAttribute]
      public string labelPrinter { get; set; }

      /// <summary>
      /// Label Printer Queue
      /// </summary>
      [StringValidationAttribute]
      public string labelQueue { get; set; }

      /// <summary>
      /// Line Printer
      /// </summary>
      [StringValidationAttribute]
      public string linePrinter { get; set; }

      /// <summary>
      /// Report Printer Queue
      /// </summary>
      [StringValidationAttribute]
      public string lineQueue { get; set; }

      /// <summary>
      /// PID of latest login
      /// </summary>
      public int lastPid { get; set; }

      /// <summary>
      /// Most Recent Activation
      /// </summary>
      [StringValidationAttribute]
      public string lastActivation { get; set; }

      /// <summary>
      /// Last Employee
      /// </summary>
      [StringValidationAttribute]
      public string lastEmpNum { get; set; }

      /// <summary>
      /// Last Log In
      /// </summary>
      [StringValidationAttribute]
      public string lastLogin { get; set; }

      /// <summary>
      /// Last Log Out
      /// </summary>
      [StringValidationAttribute]
      public string lastLogout { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildStntblBaseFromRow<T>(DataRow row) where T:StntblBase, new()
      {
         T entity = new T();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.rowStatus = row.Field<bool>("row_status");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.stnNum = row.IsNull("stn_num") ? string.Empty : row.Field<string>("stn_num");
         entity.stnType = row.IsNull("stn_type") ? string.Empty : row.Field<string>("stn_type");
         entity.labelPrinter = row.IsNull("label_printer") ? string.Empty : row.Field<string>("label_printer");
         entity.labelQueue = row.IsNull("label_queue") ? string.Empty : row.Field<string>("label_queue");
         entity.linePrinter = row.IsNull("line_printer") ? string.Empty : row.Field<string>("line_printer");
         entity.lineQueue = row.IsNull("line_queue") ? string.Empty : row.Field<string>("line_queue");
         entity.lastPid = row.IsNull("last_pid") ? 0 : row.Field<int>("last_pid");
         entity.lastActivation = row.IsNull("last_activation") ? string.Empty : row.Field<string>("last_activation");
         entity.lastEmpNum = row.IsNull("last_emp_num") ? string.Empty : row.Field<string>("last_emp_num");
         entity.lastLogin = row.IsNull("last_login") ? string.Empty : row.Field<string>("last_login");
         entity.lastLogout = row.IsNull("last_logout") ? string.Empty : row.Field<string>("last_logout");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.rowID = row.Field<byte[]>("stntblRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromStntblBase(ref DataRow row, StntblBase entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("row_status", entity.rowStatus);
         row.SetField("wh_num", entity.whNum);
         row.SetField("stn_num", entity.stnNum);
         row.SetField("stn_type", entity.stnType);
         row.SetField("label_printer", entity.labelPrinter);
         row.SetField("label_queue", entity.labelQueue);
         row.SetField("line_printer", entity.linePrinter);
         row.SetField("line_queue", entity.lineQueue);
         row.SetField("last_pid", entity.lastPid);
         row.SetField("last_activation", entity.lastActivation);
         row.SetField("last_emp_num", entity.lastEmpNum);
         row.SetField("last_login", entity.lastLogin);
         row.SetField("last_logout", entity.lastLogout);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("stntblRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, StntblBase entity)
      {
         row.SetField("coNum", entity.coNum);
         row.SetField("whNum", entity.whNum);
         row.SetField("stnNum", entity.stnNum);
         row.SetField("stntblRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	