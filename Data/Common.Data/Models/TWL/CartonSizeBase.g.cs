//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// This table will be used to select a box or boxes best suited to ship an order
   /// </summary>
   
   public partial class CartonSizeBase: ModelBase
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// Carton Size
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string boxId { get; set; }

      /// <summary>
      /// Cube
      /// </summary>
      [Key,Order]
      public decimal cube { get; set; }

      /// <summary>
      /// Carrier Id
      /// </summary>
      [StringValidationAttribute]
      public string carrierId { get; set; }

      /// <summary>
      /// Length
      /// </summary>
      public decimal length { get; set; }

      /// <summary>
      /// Height
      /// </summary>
      public decimal height { get; set; }

      /// <summary>
      /// Width
      /// </summary>
      public decimal width { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal weight { get; set; }

      /// <summary>
      /// Preferred
      /// </summary>
      public bool preferred { get; set; }

      /// <summary>
      /// Size Factor
      /// </summary>
      public decimal sizeFactor { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// Oversized Carton
      /// </summary>
      public bool oversized { get; set; }

      /// <summary>
      /// Dimensional Weight
      /// </summary>
      public decimal dimWeight { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string description { get; set; }

      /// <summary>
      /// Package Code
      /// </summary>
      [StringValidationAttribute]
      public string packageCode { get; set; }

      /// <summary>
      /// Active
      /// </summary>
      public bool rowStatus { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildCartonSizeBaseFromRow<T>(DataRow row) where T:CartonSizeBase, new()
      {
         T entity = new T();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.boxId = row.IsNull("box_id") ? string.Empty : row.Field<string>("box_id");
         entity.carrierId = row.IsNull("carrier_id") ? string.Empty : row.Field<string>("carrier_id");
         entity.length = row.IsNull("length") ? decimal.Zero : row.Field<decimal>("length");
         entity.height = row.IsNull("height") ? decimal.Zero : row.Field<decimal>("height");
         entity.width = row.IsNull("width") ? decimal.Zero : row.Field<decimal>("width");
         entity.cube = row.IsNull("cube") ? decimal.Zero : row.Field<decimal>("cube");
         entity.weight = row.IsNull("weight") ? decimal.Zero : row.Field<decimal>("weight");
         entity.preferred = row.Field<bool>("preferred");
         entity.sizeFactor = row.IsNull("size_factor") ? decimal.Zero : row.Field<decimal>("size_factor");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.oversized = row.Field<bool>("oversized");
         entity.dimWeight = row.IsNull("dim_weight") ? decimal.Zero : row.Field<decimal>("dim_weight");
         entity.description = row.IsNull("description") ? string.Empty : row.Field<string>("description");
         entity.packageCode = row.IsNull("package_code") ? string.Empty : row.Field<string>("package_code");
         entity.rowStatus = row.Field<bool>("row_status");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.rowID = row.Field<byte[]>("carton_sizeRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromCartonSizeBase(ref DataRow row, CartonSizeBase entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("box_id", entity.boxId);
         row.SetField("carrier_id", entity.carrierId);
         row.SetField("length", entity.length);
         row.SetField("height", entity.height);
         row.SetField("width", entity.width);
         row.SetField("cube", entity.cube);
         row.SetField("weight", entity.weight);
         row.SetField("preferred", entity.preferred);
         row.SetField("size_factor", entity.sizeFactor);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("oversized", entity.oversized);
         row.SetField("dim_weight", entity.dimWeight);
         row.SetField("description", entity.description);
         row.SetField("package_code", entity.packageCode);
         row.SetField("row_status", entity.rowStatus);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("carton_sizeRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, CartonSizeBase entity)
      {
         row.SetField("coNum", entity.coNum);
         row.SetField("whNum", entity.whNum);
         row.SetField("boxId", entity.boxId);
         row.SetField("cube", entity.cube);
         row.SetField("carton_sizeRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	