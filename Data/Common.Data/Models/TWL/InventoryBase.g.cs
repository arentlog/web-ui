//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Contains all active inventory
   /// </summary>
   
   public partial class InventoryBase: ModelBase
   {

      /// <summary>
      /// Id
      /// </summary>
      public int id { get; set; }

      /// <summary>
      /// Company
      /// </summary>
      [StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// Pallet Id
      /// </summary>
      [StringValidationAttribute]
      public string palletId { get; set; }

      /// <summary>
      /// Item Number
      /// </summary>
      [StringValidationAttribute]
      public string absNum { get; set; }

      /// <summary>
      /// Non-Stock Comment
      /// </summary>
      [StringValidationAttribute]
      public string nsComment { get; set; }

      /// <summary>
      /// Unit of Measure
      /// </summary>
      [StringValidationAttribute]
      public string uom { get; set; }

      /// <summary>
      /// Location
      /// </summary>
      [StringValidationAttribute]
      public string binNum { get; set; }

      /// <summary>
      /// Received
      /// </summary>
      [StringValidationAttribute]
      public string dateTime { get; set; }

      /// <summary>
      /// Expiration Date
      /// </summary>
      public DateTime? expiration { get; set; }

      /// <summary>
      /// Total Qty
      /// </summary>
      public decimal totalQty { get; set; }

      /// <summary>
      /// Reserved
      /// </summary>
      public decimal reservedQty { get; set; }

      /// <summary>
      /// Truck Id
      /// </summary>
      [StringValidationAttribute]
      public string truckId { get; set; }

      /// <summary>
      /// Lot
      /// </summary>
      [StringValidationAttribute]
      public string lot { get; set; }

      /// <summary>
      /// Cycle Flag
      /// </summary>
      public bool cycleFlag { get; set; }

      /// <summary>
      /// Cycle Count Level
      /// </summary>
      [StringValidationAttribute]
      public string cycleLevel { get; set; }

      /// <summary>
      /// Employee Number
      /// </summary>
      [StringValidationAttribute]
      public string cycleEmpNum { get; set; }

      /// <summary>
      /// cycle_id
      /// </summary>
      public int cycleId { get; set; }

      /// <summary>
      /// Returns Category
      /// </summary>
      [StringValidationAttribute]
      public string rtnCategory { get; set; }

      /// <summary>
      /// rtn_pallet_full
      /// </summary>
      public bool rtnPalletFull { get; set; }

      /// <summary>
      /// attributes
      /// </summary>
      [StringValidationAttribute]
      public string attributes { get; set; }

      /// <summary>
      /// Task Id
      /// </summary>
      public int taskId { get; set; }

      /// <summary>
      /// Location
      /// </summary>
      [StringValidationAttribute]
      public string suggestedBin { get; set; }

      /// <summary>
      /// Employee Number
      /// </summary>
      [StringValidationAttribute]
      public string empNum { get; set; }

      /// <summary>
      /// Vendor ID
      /// </summary>
      [StringValidationAttribute]
      public string vendorId { get; set; }

      /// <summary>
      /// PO Number
      /// </summary>
      [StringValidationAttribute]
      public string poNumber { get; set; }

      /// <summary>
      /// PO Suffix
      /// </summary>
      [StringValidationAttribute]
      public string poSuffix { get; set; }

      /// <summary>
      /// Country Code
      /// </summary>
      [StringValidationAttribute]
      public string countryCode { get; set; }

      /// <summary>
      /// Order
      /// </summary>
      [StringValidationAttribute]
      public string order { get; set; }

      /// <summary>
      /// Order Suffix
      /// </summary>
      [StringValidationAttribute]
      public string orderSuffix { get; set; }

      /// <summary>
      /// Cargo Control
      /// </summary>
      [StringValidationAttribute]
      public string cargoControl { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// Stock Status
      /// </summary>
      [StringValidationAttribute]
      public string stockStat { get; set; }

      /// <summary>
      /// Cross Dock Order
      /// </summary>
      [StringValidationAttribute]
      public string crossDockOrder { get; set; }

      /// <summary>
      /// Cross Dock Order Suffix
      /// </summary>
      [StringValidationAttribute]
      public string crossDockOrderSuffix { get; set; }

      /// <summary>
      /// Case Quantity
      /// </summary>
      public decimal caseQuantity { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildInventoryBaseFromRow<T>(DataRow row) where T:InventoryBase, new()
      {
         T entity = new T();
         entity.id = row.IsNull("id") ? 0 : row.Field<int>("id");
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.palletId = row.IsNull("pallet_id") ? string.Empty : row.Field<string>("pallet_id");
         entity.absNum = row.IsNull("abs_num") ? string.Empty : row.Field<string>("abs_num");
         entity.nsComment = row.IsNull("ns_comment") ? string.Empty : row.Field<string>("ns_comment");
         entity.uom = row.IsNull("uom") ? string.Empty : row.Field<string>("uom");
         entity.binNum = row.IsNull("bin_num") ? string.Empty : row.Field<string>("bin_num");
         entity.dateTime = row.IsNull("date_time") ? string.Empty : row.Field<string>("date_time");
         entity.expiration = row.Field<DateTime?>("expiration");
         entity.totalQty = row.IsNull("total_qty") ? decimal.Zero : row.Field<decimal>("total_qty");
         entity.reservedQty = row.IsNull("reserved_qty") ? decimal.Zero : row.Field<decimal>("reserved_qty");
         entity.truckId = row.IsNull("truck_id") ? string.Empty : row.Field<string>("truck_id");
         entity.lot = row.IsNull("lot") ? string.Empty : row.Field<string>("lot");
         entity.cycleFlag = row.Field<bool>("cycle_flag");
         entity.cycleLevel = row.IsNull("cycle_level") ? string.Empty : row.Field<string>("cycle_level");
         entity.cycleEmpNum = row.IsNull("cycle_emp_num") ? string.Empty : row.Field<string>("cycle_emp_num");
         entity.cycleId = row.IsNull("cycle_id") ? 0 : row.Field<int>("cycle_id");
         entity.rtnCategory = row.IsNull("rtn_category") ? string.Empty : row.Field<string>("rtn_category");
         entity.rtnPalletFull = row.Field<bool>("rtn_pallet_full");
         entity.attributes = row.IsNull("attributes") ? string.Empty : row.Field<string>("attributes");
         entity.taskId = row.IsNull("task_id") ? 0 : row.Field<int>("task_id");
         entity.suggestedBin = row.IsNull("suggested_bin") ? string.Empty : row.Field<string>("suggested_bin");
         entity.empNum = row.IsNull("emp_num") ? string.Empty : row.Field<string>("emp_num");
         entity.vendorId = row.IsNull("vendor_id") ? string.Empty : row.Field<string>("vendor_id");
         entity.poNumber = row.IsNull("po_number") ? string.Empty : row.Field<string>("po_number");
         entity.poSuffix = row.IsNull("po_suffix") ? string.Empty : row.Field<string>("po_suffix");
         entity.countryCode = row.IsNull("country_code") ? string.Empty : row.Field<string>("country_code");
         entity.order = row.IsNull("order") ? string.Empty : row.Field<string>("order");
         entity.orderSuffix = row.IsNull("order_suffix") ? string.Empty : row.Field<string>("order_suffix");
         entity.cargoControl = row.IsNull("cargo_control") ? string.Empty : row.Field<string>("cargo_control");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.stockStat = row.IsNull("stock_stat") ? string.Empty : row.Field<string>("stock_stat");
         entity.crossDockOrder = row.IsNull("cross_dock_order") ? string.Empty : row.Field<string>("cross_dock_order");
         entity.crossDockOrderSuffix = row.IsNull("cross_dock_order_suffix") ? string.Empty : row.Field<string>("cross_dock_order_suffix");
         entity.caseQuantity = row.IsNull("case_quantity") ? decimal.Zero : row.Field<decimal>("case_quantity");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.rowID = row.Field<byte[]>("inventoryRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromInventoryBase(ref DataRow row, InventoryBase entity)
      {
         row.SetField("id", entity.id);
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("pallet_id", entity.palletId);
         row.SetField("abs_num", entity.absNum);
         row.SetField("ns_comment", entity.nsComment);
         row.SetField("uom", entity.uom);
         row.SetField("bin_num", entity.binNum);
         row.SetField("date_time", entity.dateTime);
         row.SetField("expiration", entity.expiration);
         row.SetField("total_qty", entity.totalQty);
         row.SetField("reserved_qty", entity.reservedQty);
         row.SetField("truck_id", entity.truckId);
         row.SetField("lot", entity.lot);
         row.SetField("cycle_flag", entity.cycleFlag);
         row.SetField("cycle_level", entity.cycleLevel);
         row.SetField("cycle_emp_num", entity.cycleEmpNum);
         row.SetField("cycle_id", entity.cycleId);
         row.SetField("rtn_category", entity.rtnCategory);
         row.SetField("rtn_pallet_full", entity.rtnPalletFull);
         row.SetField("attributes", entity.attributes);
         row.SetField("task_id", entity.taskId);
         row.SetField("suggested_bin", entity.suggestedBin);
         row.SetField("emp_num", entity.empNum);
         row.SetField("vendor_id", entity.vendorId);
         row.SetField("po_number", entity.poNumber);
         row.SetField("po_suffix", entity.poSuffix);
         row.SetField("country_code", entity.countryCode);
         row.SetField("order", entity.order);
         row.SetField("order_suffix", entity.orderSuffix);
         row.SetField("cargo_control", entity.cargoControl);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("stock_stat", entity.stockStat);
         row.SetField("cross_dock_order", entity.crossDockOrder);
         row.SetField("cross_dock_order_suffix", entity.crossDockOrderSuffix);
         row.SetField("case_quantity", entity.caseQuantity);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("inventoryRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, InventoryBase entity)
      {
         row.SetField("inventoryRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	