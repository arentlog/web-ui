//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Password Security Compliance Table
   /// </summary>
   
   public partial class WlpasswdBase: ModelBase
   {

      /// <summary>
      /// Password Expire Days
      /// </summary>
      public int pwmaxdays { get; set; }

      /// <summary>
      /// Password Change Days
      /// </summary>
      public int pwmindays { get; set; }

      /// <summary>
      /// Max Password
      /// </summary>
      public int pwmaxlength { get; set; }

      /// <summary>
      /// Min Password
      /// </summary>
      public int pwminlength { get; set; }

      /// <summary>
      /// Min Numeric Chars
      /// </summary>
      public int pwminnumeric { get; set; }

      /// <summary>
      /// Min Special Chars
      /// </summary>
      public int pwminspecial { get; set; }

      /// <summary>
      /// Prev Passwords Unusable
      /// </summary>
      public int pwminprev { get; set; }

      /// <summary>
      /// Min Alpha Chars
      /// </summary>
      public int pwminalpha { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }

      /// <summary>
      /// Employee Number
      /// </summary>
      [StringValidationAttribute]
      public string empNum { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildWlpasswdBaseFromRow<T>(DataRow row) where T:WlpasswdBase, new()
      {
         T entity = new T();
         entity.pwmaxdays = row.IsNull("pwmaxdays") ? 0 : row.Field<int>("pwmaxdays");
         entity.pwmindays = row.IsNull("pwmindays") ? 0 : row.Field<int>("pwmindays");
         entity.pwmaxlength = row.IsNull("pwmaxlength") ? 0 : row.Field<int>("pwmaxlength");
         entity.pwminlength = row.IsNull("pwminlength") ? 0 : row.Field<int>("pwminlength");
         entity.pwminnumeric = row.IsNull("pwminnumeric") ? 0 : row.Field<int>("pwminnumeric");
         entity.pwminspecial = row.IsNull("pwminspecial") ? 0 : row.Field<int>("pwminspecial");
         entity.pwminprev = row.IsNull("pwminprev") ? 0 : row.Field<int>("pwminprev");
         entity.pwminalpha = row.IsNull("pwminalpha") ? 0 : row.Field<int>("pwminalpha");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.empNum = row.IsNull("emp_num") ? string.Empty : row.Field<string>("emp_num");
         entity.rowID = row.Field<byte[]>("wlpasswdRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromWlpasswdBase(ref DataRow row, WlpasswdBase entity)
      {
         row.SetField("pwmaxdays", entity.pwmaxdays);
         row.SetField("pwmindays", entity.pwmindays);
         row.SetField("pwmaxlength", entity.pwmaxlength);
         row.SetField("pwminlength", entity.pwminlength);
         row.SetField("pwminnumeric", entity.pwminnumeric);
         row.SetField("pwminspecial", entity.pwminspecial);
         row.SetField("pwminprev", entity.pwminprev);
         row.SetField("pwminalpha", entity.pwminalpha);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("emp_num", entity.empNum);
         row.SetField("wlpasswdRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, WlpasswdBase entity)
      {
         row.SetField("wlpasswdRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	