//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Barcode Table
   /// </summary>
   
   public partial class BarcodemstBase: ModelBase
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// Barcode Id
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string barcodeId { get; set; }

      /// <summary>
      /// Vendor ID
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string vendorId { get; set; }

      /// <summary>
      /// Barcode Length
      /// </summary>
      public int barcodeLength { get; set; }

      /// <summary>
      /// Vendor Item Start
      /// </summary>
      public int vendorItemStart { get; set; }

      /// <summary>
      /// Vendor Item Length
      /// </summary>
      public int vendorItemLength { get; set; }

      /// <summary>
      /// Abs Num Start
      /// </summary>
      public int absNumStart { get; set; }

      /// <summary>
      /// Abs Num Length
      /// </summary>
      public int absNumLength { get; set; }

      /// <summary>
      /// Quantity Start
      /// </summary>
      public int quantityStart { get; set; }

      /// <summary>
      /// Quantity Length
      /// </summary>
      public int quantityLength { get; set; }

      /// <summary>
      /// Quantity Style
      /// </summary>
      [StringValidationAttribute]
      public string quantityStyle { get; set; }

      /// <summary>
      /// PO Start
      /// </summary>
      public int poStart { get; set; }

      /// <summary>
      /// Custom Data
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// po_length
      /// </summary>
      public int poLength { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildBarcodemstBaseFromRow<T>(DataRow row) where T:BarcodemstBase, new()
      {
         T entity = new T();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.barcodeId = row.IsNull("barcode_id") ? string.Empty : row.Field<string>("barcode_id");
         entity.vendorId = row.IsNull("vendor_id") ? string.Empty : row.Field<string>("vendor_id");
         entity.barcodeLength = row.IsNull("barcode_length") ? 0 : row.Field<int>("barcode_length");
         entity.vendorItemStart = row.IsNull("vendor_item_start") ? 0 : row.Field<int>("vendor_item_start");
         entity.vendorItemLength = row.IsNull("vendor_item_length") ? 0 : row.Field<int>("vendor_item_length");
         entity.absNumStart = row.IsNull("abs_num_start") ? 0 : row.Field<int>("abs_num_start");
         entity.absNumLength = row.IsNull("abs_num_length") ? 0 : row.Field<int>("abs_num_length");
         entity.quantityStart = row.IsNull("quantity_start") ? 0 : row.Field<int>("quantity_start");
         entity.quantityLength = row.IsNull("quantity_length") ? 0 : row.Field<int>("quantity_length");
         entity.quantityStyle = row.IsNull("quantity_style") ? string.Empty : row.Field<string>("quantity_style");
         entity.poStart = row.IsNull("po_start") ? 0 : row.Field<int>("po_start");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.poLength = row.IsNull("po_length") ? 0 : row.Field<int>("po_length");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.rowID = row.Field<byte[]>("barcodemstRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromBarcodemstBase(ref DataRow row, BarcodemstBase entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("barcode_id", entity.barcodeId);
         row.SetField("vendor_id", entity.vendorId);
         row.SetField("barcode_length", entity.barcodeLength);
         row.SetField("vendor_item_start", entity.vendorItemStart);
         row.SetField("vendor_item_length", entity.vendorItemLength);
         row.SetField("abs_num_start", entity.absNumStart);
         row.SetField("abs_num_length", entity.absNumLength);
         row.SetField("quantity_start", entity.quantityStart);
         row.SetField("quantity_length", entity.quantityLength);
         row.SetField("quantity_style", entity.quantityStyle);
         row.SetField("po_start", entity.poStart);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("po_length", entity.poLength);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("barcodemstRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, BarcodemstBase entity)
      {
         row.SetField("coNum", entity.coNum);
         row.SetField("whNum", entity.whNum);
         row.SetField("barcodeId", entity.barcodeId);
         row.SetField("vendorId", entity.vendorId);
         row.SetField("barcodemstRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	