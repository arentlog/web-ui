//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Shipping Detail Table used for generation of shipping manifests
   /// </summary>
   
   public partial class ShpdtlBase: ModelBase
   {

      /// <summary>
      /// Tracking ID
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string trackingId { get; set; }

      /// <summary>
      /// Manifest Id
      /// </summary>
      public int manifestId { get; set; }

      /// <summary>
      /// Pro Number
      /// </summary>
      [StringValidationAttribute]
      public string proNumId { get; set; }

      /// <summary>
      /// Invoice Number
      /// </summary>
      [StringValidationAttribute]
      public string invoiceNum { get; set; }

      /// <summary>
      /// Void
      /// </summary>
      public bool @void { get; set; }

      /// <summary>
      /// Package Type
      /// </summary>
      [StringValidationAttribute]
      public string packageType { get; set; }

      /// <summary>
      /// Consignee Name
      /// </summary>
      [StringValidationAttribute]
      public string consigneeName { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }

      /// <summary>
      /// City
      /// </summary>
      [StringValidationAttribute]
      public string city { get; set; }

      /// <summary>
      /// State
      /// </summary>
      [StringValidationAttribute]
      public string state { get; set; }

      /// <summary>
      /// Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string zip { get; set; }

      /// <summary>
      /// Zone
      /// </summary>
      public int zone { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal weight { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal actualWeight { get; set; }

      /// <summary>
      /// Residential Flag
      /// </summary>
      public bool residentialFlag { get; set; }

      /// <summary>
      /// Charges
      /// </summary>
      public decimal charges { get; set; }

      /// <summary>
      /// COD Amount
      /// </summary>
      public decimal codAmt { get; set; }

      /// <summary>
      /// Declared Value
      /// </summary>
      public decimal declaredValue { get; set; }

      /// <summary>
      /// UPS Ground Track
      /// </summary>
      public bool upsGroundTrack { get; set; }

      /// <summary>
      /// Add On Handling
      /// </summary>
      public bool addOnHandling { get; set; }

      /// <summary>
      /// Add On Cost
      /// </summary>
      public decimal addOnCost { get; set; }

      /// <summary>
      /// Call Tag
      /// </summary>
      public bool callTagIssued { get; set; }

      /// <summary>
      /// Oversized Item
      /// </summary>
      public bool oversized { get; set; }

      /// <summary>
      /// Shipped By IRMS
      /// </summary>
      public bool shpByIrms { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }

      /// <summary>
      /// Route
      /// </summary>
      [StringValidationAttribute]
      public string route { get; set; }

      /// <summary>
      /// Shipping Cust. Code
      /// </summary>
      [StringValidationAttribute]
      public string shipCustCode { get; set; }

      /// <summary>
      /// Address
      /// </summary>
      [StringValidationAttribute]
      public string addrExt1 { get; set; }
      [StringValidationAttribute]
      public string addrExt2 { get; set; }
      [StringValidationAttribute]
      public string addrExt3 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildShpdtlBaseFromRow<T>(DataRow row) where T:ShpdtlBase, new()
      {
         T entity = new T();
         entity.manifestId = row.IsNull("manifest_id") ? 0 : row.Field<int>("manifest_id");
         entity.proNumId = row.IsNull("pro_num_id") ? string.Empty : row.Field<string>("pro_num_id");
         entity.invoiceNum = row.IsNull("invoice_num") ? string.Empty : row.Field<string>("invoice_num");
         entity.trackingId = row.IsNull("tracking_id") ? string.Empty : row.Field<string>("tracking_id");
         entity.@void = row.Field<bool>("void");
         entity.packageType = row.IsNull("package_type") ? string.Empty : row.Field<string>("package_type");
         entity.consigneeName = row.IsNull("consignee_name") ? string.Empty : row.Field<string>("consignee_name");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zip = row.IsNull("zip") ? string.Empty : row.Field<string>("zip");
         entity.zone = row.IsNull("zone") ? 0 : row.Field<int>("zone");
         entity.weight = row.IsNull("weight") ? decimal.Zero : row.Field<decimal>("weight");
         entity.actualWeight = row.IsNull("actual_weight") ? decimal.Zero : row.Field<decimal>("actual_weight");
         entity.residentialFlag = row.Field<bool>("residential_flag");
         entity.charges = row.IsNull("charges") ? decimal.Zero : row.Field<decimal>("charges");
         entity.codAmt = row.IsNull("cod_amt") ? decimal.Zero : row.Field<decimal>("cod_amt");
         entity.declaredValue = row.IsNull("declared_value") ? decimal.Zero : row.Field<decimal>("declared_value");
         entity.upsGroundTrack = row.Field<bool>("ups_ground_track");
         entity.addOnHandling = row.Field<bool>("add_on_handling");
         entity.addOnCost = row.IsNull("add_on_cost") ? decimal.Zero : row.Field<decimal>("add_on_cost");
         entity.callTagIssued = row.Field<bool>("call_tag_issued");
         entity.oversized = row.Field<bool>("oversized");
         entity.shpByIrms = row.Field<bool>("shp_by_irms");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.route = row.IsNull("route") ? string.Empty : row.Field<string>("route");
         entity.shipCustCode = row.IsNull("ship_cust_code") ? string.Empty : row.Field<string>("ship_cust_code");
         entity.addrExt1 = row.IsNull("addr_ext1") ? string.Empty : row.Field<string>("addr_ext1");
         entity.addrExt2 = row.IsNull("addr_ext2") ? string.Empty : row.Field<string>("addr_ext2");
         entity.addrExt3 = row.IsNull("addr_ext3") ? string.Empty : row.Field<string>("addr_ext3");
         entity.rowID = row.Field<byte[]>("shpdtlRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromShpdtlBase(ref DataRow row, ShpdtlBase entity)
      {
         row.SetField("manifest_id", entity.manifestId);
         row.SetField("pro_num_id", entity.proNumId);
         row.SetField("invoice_num", entity.invoiceNum);
         row.SetField("tracking_id", entity.trackingId);
         row.SetField("void", entity.@void);
         row.SetField("package_type", entity.packageType);
         row.SetField("consignee_name", entity.consigneeName);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("zip", entity.zip);
         row.SetField("zone", entity.zone);
         row.SetField("weight", entity.weight);
         row.SetField("actual_weight", entity.actualWeight);
         row.SetField("residential_flag", entity.residentialFlag);
         row.SetField("charges", entity.charges);
         row.SetField("cod_amt", entity.codAmt);
         row.SetField("declared_value", entity.declaredValue);
         row.SetField("ups_ground_track", entity.upsGroundTrack);
         row.SetField("add_on_handling", entity.addOnHandling);
         row.SetField("add_on_cost", entity.addOnCost);
         row.SetField("call_tag_issued", entity.callTagIssued);
         row.SetField("oversized", entity.oversized);
         row.SetField("shp_by_irms", entity.shpByIrms);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("route", entity.route);
         row.SetField("ship_cust_code", entity.shipCustCode);
         row.SetField("addr_ext1", entity.addrExt1);
         row.SetField("addr_ext2", entity.addrExt2);
         row.SetField("addr_ext3", entity.addrExt3);
         row.SetField("shpdtlRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, ShpdtlBase entity)
      {
         row.SetField("trackingId", entity.trackingId);
         row.SetField("shpdtlRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	