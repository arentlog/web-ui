//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.TWL
{
   /// <summary>
   /// Label Table
   /// </summary>
   
   public partial class LabelmstBase: ModelBase
   {

      /// <summary>
      /// Company
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string coNum { get; set; }

      /// <summary>
      /// Warehouse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whNum { get; set; }

      /// <summary>
      /// System
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string sysName { get; set; }

      /// <summary>
      /// Program Name
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string programName { get; set; }

      /// <summary>
      /// Procedure Name
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string procName { get; set; }

      /// <summary>
      /// Label ID
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string labelId { get; set; }

      /// <summary>
      /// File
      /// </summary>
      [StringValidationAttribute]
      public string ddFile { get; set; }

      /// <summary>
      /// Label File
      /// </summary>
      [StringValidationAttribute]
      public string labelFile { get; set; }

      /// <summary>
      /// custom_data1
      /// </summary>
      [StringValidationAttribute]
      public string customData1 { get; set; }
      [StringValidationAttribute]
      public string customData2 { get; set; }
      [StringValidationAttribute]
      public string customData3 { get; set; }
      [StringValidationAttribute]
      public string customData4 { get; set; }
      [StringValidationAttribute]
      public string customData5 { get; set; }

      /// <summary>
      /// trans_user
      /// </summary>
      [StringValidationAttribute]
      public string transUser { get; set; }

      /// <summary>
      /// trans_date
      /// </summary>
      [StringValidationAttribute]
      public string transDate { get; set; }

      /// <summary>
      /// trans_proc
      /// </summary>
      [StringValidationAttribute]
      public string transProc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildLabelmstBaseFromRow<T>(DataRow row) where T:LabelmstBase, new()
      {
         T entity = new T();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.sysName = row.IsNull("sys_name") ? string.Empty : row.Field<string>("sys_name");
         entity.programName = row.IsNull("program_name") ? string.Empty : row.Field<string>("program_name");
         entity.procName = row.IsNull("proc_name") ? string.Empty : row.Field<string>("proc_name");
         entity.labelId = row.IsNull("label_id") ? string.Empty : row.Field<string>("label_id");
         entity.ddFile = row.IsNull("dd_file") ? string.Empty : row.Field<string>("dd_file");
         entity.labelFile = row.IsNull("label_file") ? string.Empty : row.Field<string>("label_file");
         entity.customData1 = row.IsNull("custom_data1") ? string.Empty : row.Field<string>("custom_data1");
         entity.customData2 = row.IsNull("custom_data2") ? string.Empty : row.Field<string>("custom_data2");
         entity.customData3 = row.IsNull("custom_data3") ? string.Empty : row.Field<string>("custom_data3");
         entity.customData4 = row.IsNull("custom_data4") ? string.Empty : row.Field<string>("custom_data4");
         entity.customData5 = row.IsNull("custom_data5") ? string.Empty : row.Field<string>("custom_data5");
         entity.transUser = row.IsNull("trans_user") ? string.Empty : row.Field<string>("trans_user");
         entity.transDate = row.IsNull("trans_date") ? string.Empty : row.Field<string>("trans_date");
         entity.transProc = row.IsNull("trans_proc") ? string.Empty : row.Field<string>("trans_proc");
         entity.rowID = row.Field<byte[]>("labelmstRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromLabelmstBase(ref DataRow row, LabelmstBase entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("sys_name", entity.sysName);
         row.SetField("program_name", entity.programName);
         row.SetField("proc_name", entity.procName);
         row.SetField("label_id", entity.labelId);
         row.SetField("dd_file", entity.ddFile);
         row.SetField("label_file", entity.labelFile);
         row.SetField("custom_data1", entity.customData1);
         row.SetField("custom_data2", entity.customData2);
         row.SetField("custom_data3", entity.customData3);
         row.SetField("custom_data4", entity.customData4);
         row.SetField("custom_data5", entity.customData5);
         row.SetField("trans_user", entity.transUser);
         row.SetField("trans_date", entity.transDate);
         row.SetField("trans_proc", entity.transProc);
         row.SetField("labelmstRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, LabelmstBase entity)
      {
         row.SetField("coNum", entity.coNum);
         row.SetField("whNum", entity.whNum);
         row.SetField("sysName", entity.sysName);
         row.SetField("programName", entity.programName);
         row.SetField("procName", entity.procName);
         row.SetField("labelId", entity.labelId);
         row.SetField("labelmstRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	