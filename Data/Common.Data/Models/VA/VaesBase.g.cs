//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.VA
{
   /// <summary>
   /// Value Add Entry Transaction Sections
   /// </summary>
   
   public partial class VaesBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// VA Order#
      /// </summary>
      [Key,Order]
      public int vano { get; set; }

      /// <summary>
      /// VA Order Suffix
      /// </summary>
      [Key,Order]
      public int vasuf { get; set; }

      /// <summary>
      /// Seq#
      /// </summary>
      [Key,Order]
      public int seqno { get; set; }

      /// <summary>
      /// Section Type
      /// </summary>
      [StringValidationAttribute]
      public string sctntype { get; set; }

      /// <summary>
      /// Section Code
      /// </summary>
      [StringValidationAttribute]
      public string sctncode { get; set; }

      /// <summary>
      /// Destination Vendor #
      /// </summary>
      public decimal destvendno { get; set; }

      /// <summary>
      /// Staging Area
      /// </summary>
      [StringValidationAttribute]
      public string stagearea { get; set; }

      /// <summary>
      /// Destination Whse
      /// </summary>
      [StringValidationAttribute]
      public string destwhse { get; set; }

      /// <summary>
      /// Destination Ship From
      /// </summary>
      public int destshipfmno { get; set; }

      /// <summary>
      /// Destination Name
      /// </summary>
      [StringValidationAttribute]
      public string destname { get; set; }

      /// <summary>
      /// Destination Address
      /// </summary>
      [StringValidationAttribute]
      public string destaddr1 { get; set; }
      [StringValidationAttribute]
      public string destaddr2 { get; set; }

      /// <summary>
      /// Destination City
      /// </summary>
      [StringValidationAttribute]
      public string destcity { get; set; }

      /// <summary>
      /// Destination State
      /// </summary>
      [StringValidationAttribute]
      public string deststate { get; set; }

      /// <summary>
      /// Destination Zip Code
      /// </summary>
      [StringValidationAttribute]
      public string destzipcd { get; set; }

      /// <summary>
      /// Instructions
      /// </summary>
      [StringValidationAttribute]
      public string shipinstr { get; set; }

      /// <summary>
      /// Ref
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Ship
      /// </summary>
      [StringValidationAttribute]
      public string shipviaty { get; set; }

      /// <summary>
      /// Req Ship Date
      /// </summary>
      public DateTime? reqshipdt { get; set; }

      /// <summary>
      /// Promised
      /// </summary>
      public DateTime? promisedt { get; set; }

      /// <summary>
      /// External Vendor #
      /// </summary>
      public decimal extrvendno { get; set; }

      /// <summary>
      /// External Ship From
      /// </summary>
      public int extrshipfmno { get; set; }

      /// <summary>
      /// Internal Whse
      /// </summary>
      [StringValidationAttribute]
      public string intrwhse { get; set; }

      /// <summary>
      /// Goal Product
      /// </summary>
      [StringValidationAttribute]
      public string goalprod { get; set; }

      /// <summary>
      /// Goal Description
      /// </summary>
      [StringValidationAttribute]
      public string goaldesc { get; set; }

      /// <summary>
      /// Goal Ordered
      /// </summary>
      public decimal goalqtyord { get; set; }

      /// <summary>
      /// Goal STK Ordered
      /// </summary>
      public decimal goalstkqtyord { get; set; }

      /// <summary>
      /// Goal Units
      /// </summary>
      [StringValidationAttribute]
      public string goalunit { get; set; }

      /// <summary>
      /// # Stk Units
      /// </summary>
      public decimal goalunitconv { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// WLET Set#
      /// </summary>
      [StringValidationAttribute]
      public string wletsetno { get; set; }

      /// <summary>
      /// # Rush Ln
      /// </summary>
      public int norushln { get; set; }

      /// <summary>
      /// BO
      /// </summary>
      public bool borelfl { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Specifications/Instructions
      /// </summary>
      [StringValidationAttribute]
      public string specdata { get; set; }

      /// <summary>
      /// Specifications Print Type
      /// </summary>
      [StringValidationAttribute]
      public string specprtty { get; set; }

      /// <summary>
      /// Stg
      /// </summary>
      public int stagecd { get; set; }

      /// <summary>
      /// Addons
      /// </summary>
      public int addonno1 { get; set; }
      public int addonno2 { get; set; }
      public int addonno3 { get; set; }
      public int addonno4 { get; set; }

      /// <summary>
      /// Addon Amt
      /// </summary>
      public decimal addonamt1 { get; set; }
      public decimal addonamt2 { get; set; }
      public decimal addonamt3 { get; set; }
      public decimal addonamt4 { get; set; }

      /// <summary>
      /// Destination Type
      /// </summary>
      [StringValidationAttribute]
      public string desttype { get; set; }

      /// <summary>
      /// Jrnl
      /// </summary>
      public int jrnlno { get; set; }

      /// <summary>
      /// Due Date
      /// </summary>
      public DateTime? duedt { get; set; }

      /// <summary>
      /// Print Flag
      /// </summary>
      public bool specprtfl { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      public int setno { get; set; }

      /// <summary>
      /// Route/Day/Stop
      /// </summary>
      [StringValidationAttribute]
      public string route { get; set; }

      /// <summary>
      /// # Pick Tickets Printed
      /// </summary>
      public int pickcnt { get; set; }

      /// <summary>
      /// Picked Date
      /// </summary>
      public DateTime? pickeddt { get; set; }

      /// <summary>
      /// Picked Time
      /// </summary>
      [StringValidationAttribute]
      public string pickedtm { get; set; }

      /// <summary>
      /// Picked Initials
      /// </summary>
      [StringValidationAttribute]
      public string pickinit { get; set; }

      /// <summary>
      /// Reprint Pick Ticket
      /// </summary>
      public bool printpckfl { get; set; }

      /// <summary>
      /// Shipped Date
      /// </summary>
      public DateTime? shipdt { get; set; }

      /// <summary>
      /// Shipped Time
      /// </summary>
      [StringValidationAttribute]
      public string shiptm { get; set; }

      /// <summary>
      /// Completed Flag
      /// </summary>
      public bool completefl { get; set; }

      /// <summary>
      /// On Line Processing Flag
      /// </summary>
      public bool processfl { get; set; }

      /// <summary>
      /// On Line Processing Initials
      /// </summary>
      [StringValidationAttribute]
      public string processinit { get; set; }

      /// <summary>
      /// On Line Processing Proc
      /// </summary>
      [StringValidationAttribute]
      public string processproc { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Disposition
      /// </summary>
      [StringValidationAttribute]
      public string orderdisp { get; set; }

      /// <summary>
      /// Zone
      /// </summary>
      [StringValidationAttribute]
      public string zone { get; set; }

      /// <summary>
      /// Shipping Point
      /// </summary>
      [StringValidationAttribute]
      public string shippingpt { get; set; }

      /// <summary>
      /// # Packages
      /// </summary>
      public int nopackages { get; set; }

      /// <summary>
      /// Package Label
      /// </summary>
      [StringValidationAttribute]
      public string pkglabel { get; set; }

      /// <summary>
      /// Manual Zone Flag
      /// </summary>
      public bool manzonefl { get; set; }

      /// <summary>
      /// Weight
      /// </summary>
      public decimal totweight { get; set; }

      /// <summary>
      /// Actual Freight Amount
      /// </summary>
      public decimal actfreight { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Destination Address
      /// </summary>
      [StringValidationAttribute]
      public string destaddr3 { get; set; }

      /// <summary>
      /// Configure VA
      /// </summary>
      public bool vacfgfl { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }


      /// <summary>
      /// string
      /// </summary>
      public string CompleteAddress { get { return this.destaddr1 + "," + this.destcity + "," + this.deststate + "," + this.destzipcd; } }


      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildVaesBaseFromRow<T>(DataRow row) where T:VaesBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.vano = row.IsNull("vano") ? 0 : row.Field<int>("vano");
         entity.vasuf = row.IsNull("vasuf") ? 0 : row.Field<int>("vasuf");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.sctntype = row.IsNull("sctntype") ? string.Empty : row.Field<string>("sctntype");
         entity.sctncode = row.IsNull("sctncode") ? string.Empty : row.Field<string>("sctncode");
         entity.destvendno = row.IsNull("destvendno") ? decimal.Zero : row.Field<decimal>("destvendno");
         entity.stagearea = row.IsNull("stagearea") ? string.Empty : row.Field<string>("stagearea");
         entity.destwhse = row.IsNull("destwhse") ? string.Empty : row.Field<string>("destwhse");
         entity.destshipfmno = row.IsNull("destshipfmno") ? 0 : row.Field<int>("destshipfmno");
         entity.destname = row.IsNull("destname") ? string.Empty : row.Field<string>("destname");
         entity.destaddr1 = row.IsNull("destaddr1") ? string.Empty : row.Field<string>("destaddr1");
         entity.destaddr2 = row.IsNull("destaddr2") ? string.Empty : row.Field<string>("destaddr2");
         entity.destcity = row.IsNull("destcity") ? string.Empty : row.Field<string>("destcity");
         entity.deststate = row.IsNull("deststate") ? string.Empty : row.Field<string>("deststate");
         entity.destzipcd = row.IsNull("destzipcd") ? string.Empty : row.Field<string>("destzipcd");
         entity.shipinstr = row.IsNull("shipinstr") ? string.Empty : row.Field<string>("shipinstr");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.shipviaty = row.IsNull("shipviaty") ? string.Empty : row.Field<string>("shipviaty");
         entity.reqshipdt = row.Field<DateTime?>("reqshipdt");
         entity.promisedt = row.Field<DateTime?>("promisedt");
         entity.extrvendno = row.IsNull("extrvendno") ? decimal.Zero : row.Field<decimal>("extrvendno");
         entity.extrshipfmno = row.IsNull("extrshipfmno") ? 0 : row.Field<int>("extrshipfmno");
         entity.intrwhse = row.IsNull("intrwhse") ? string.Empty : row.Field<string>("intrwhse");
         entity.goalprod = row.IsNull("goalprod") ? string.Empty : row.Field<string>("goalprod");
         entity.goaldesc = row.IsNull("goaldesc") ? string.Empty : row.Field<string>("goaldesc");
         entity.goalqtyord = row.IsNull("goalqtyord") ? decimal.Zero : row.Field<decimal>("goalqtyord");
         entity.goalstkqtyord = row.IsNull("goalstkqtyord") ? decimal.Zero : row.Field<decimal>("goalstkqtyord");
         entity.goalunit = row.IsNull("goalunit") ? string.Empty : row.Field<string>("goalunit");
         entity.goalunitconv = row.IsNull("goalunitconv") ? decimal.Zero : row.Field<decimal>("goalunitconv");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.wletsetno = row.IsNull("wletsetno") ? string.Empty : row.Field<string>("wletsetno");
         entity.norushln = row.IsNull("norushln") ? 0 : row.Field<int>("norushln");
         entity.borelfl = row.Field<bool>("borelfl");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.specdata = row.IsNull("specdata") ? string.Empty : row.Field<string>("specdata");
         entity.specprtty = row.IsNull("specprtty") ? string.Empty : row.Field<string>("specprtty");
         entity.stagecd = row.IsNull("stagecd") ? 0 : row.Field<int>("stagecd");
         entity.addonno1 = row.IsNull("addonno1") ? 0 : row.Field<int>("addonno1");
         entity.addonno2 = row.IsNull("addonno2") ? 0 : row.Field<int>("addonno2");
         entity.addonno3 = row.IsNull("addonno3") ? 0 : row.Field<int>("addonno3");
         entity.addonno4 = row.IsNull("addonno4") ? 0 : row.Field<int>("addonno4");
         entity.addonamt1 = row.IsNull("addonamt1") ? decimal.Zero : row.Field<decimal>("addonamt1");
         entity.addonamt2 = row.IsNull("addonamt2") ? decimal.Zero : row.Field<decimal>("addonamt2");
         entity.addonamt3 = row.IsNull("addonamt3") ? decimal.Zero : row.Field<decimal>("addonamt3");
         entity.addonamt4 = row.IsNull("addonamt4") ? decimal.Zero : row.Field<decimal>("addonamt4");
         entity.desttype = row.IsNull("desttype") ? string.Empty : row.Field<string>("desttype");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.specprtfl = row.Field<bool>("specprtfl");
         entity.setno = row.IsNull("setno") ? 0 : row.Field<int>("setno");
         entity.route = row.IsNull("route") ? string.Empty : row.Field<string>("route");
         entity.pickcnt = row.IsNull("pickcnt") ? 0 : row.Field<int>("pickcnt");
         entity.pickeddt = row.Field<DateTime?>("pickeddt");
         entity.pickedtm = row.IsNull("pickedtm") ? string.Empty : row.Field<string>("pickedtm");
         entity.pickinit = row.IsNull("pickinit") ? string.Empty : row.Field<string>("pickinit");
         entity.printpckfl = row.Field<bool>("printpckfl");
         entity.shipdt = row.Field<DateTime?>("shipdt");
         entity.shiptm = row.IsNull("shiptm") ? string.Empty : row.Field<string>("shiptm");
         entity.completefl = row.Field<bool>("completefl");
         entity.processfl = row.Field<bool>("processfl");
         entity.processinit = row.IsNull("processinit") ? string.Empty : row.Field<string>("processinit");
         entity.processproc = row.IsNull("processproc") ? string.Empty : row.Field<string>("processproc");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.orderdisp = row.IsNull("orderdisp") ? string.Empty : row.Field<string>("orderdisp");
         entity.zone = row.IsNull("zone") ? string.Empty : row.Field<string>("zone");
         entity.shippingpt = row.IsNull("shippingpt") ? string.Empty : row.Field<string>("shippingpt");
         entity.nopackages = row.IsNull("nopackages") ? 0 : row.Field<int>("nopackages");
         entity.pkglabel = row.IsNull("pkglabel") ? string.Empty : row.Field<string>("pkglabel");
         entity.manzonefl = row.Field<bool>("manzonefl");
         entity.totweight = row.IsNull("totweight") ? decimal.Zero : row.Field<decimal>("totweight");
         entity.actfreight = row.IsNull("actfreight") ? decimal.Zero : row.Field<decimal>("actfreight");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.destaddr3 = row.IsNull("destaddr3") ? string.Empty : row.Field<string>("destaddr3");
         entity.vacfgfl = row.Field<bool>("vacfgfl");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.rowID = row.Field<byte[]>("vaesRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromVaesBase(ref DataRow row, VaesBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vano", entity.vano);
         row.SetField("vasuf", entity.vasuf);
         row.SetField("seqno", entity.seqno);
         row.SetField("sctntype", entity.sctntype);
         row.SetField("sctncode", entity.sctncode);
         row.SetField("destvendno", entity.destvendno);
         row.SetField("stagearea", entity.stagearea);
         row.SetField("destwhse", entity.destwhse);
         row.SetField("destshipfmno", entity.destshipfmno);
         row.SetField("destname", entity.destname);
         row.SetField("destaddr1", entity.destaddr1);
         row.SetField("destaddr2", entity.destaddr2);
         row.SetField("destcity", entity.destcity);
         row.SetField("deststate", entity.deststate);
         row.SetField("destzipcd", entity.destzipcd);
         row.SetField("shipinstr", entity.shipinstr);
         row.SetField("refer", entity.refer);
         row.SetField("shipviaty", entity.shipviaty);
         row.SetField("reqshipdt", entity.reqshipdt);
         row.SetField("promisedt", entity.promisedt);
         row.SetField("extrvendno", entity.extrvendno);
         row.SetField("extrshipfmno", entity.extrshipfmno);
         row.SetField("intrwhse", entity.intrwhse);
         row.SetField("goalprod", entity.goalprod);
         row.SetField("goaldesc", entity.goaldesc);
         row.SetField("goalqtyord", entity.goalqtyord);
         row.SetField("goalstkqtyord", entity.goalstkqtyord);
         row.SetField("goalunit", entity.goalunit);
         row.SetField("goalunitconv", entity.goalunitconv);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("wletsetno", entity.wletsetno);
         row.SetField("norushln", entity.norushln);
         row.SetField("borelfl", entity.borelfl);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("specdata", entity.specdata);
         row.SetField("specprtty", entity.specprtty);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("addonno1", entity.addonno1);
         row.SetField("addonno2", entity.addonno2);
         row.SetField("addonno3", entity.addonno3);
         row.SetField("addonno4", entity.addonno4);
         row.SetField("addonamt1", entity.addonamt1);
         row.SetField("addonamt2", entity.addonamt2);
         row.SetField("addonamt3", entity.addonamt3);
         row.SetField("addonamt4", entity.addonamt4);
         row.SetField("desttype", entity.desttype);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("duedt", entity.duedt);
         row.SetField("specprtfl", entity.specprtfl);
         row.SetField("setno", entity.setno);
         row.SetField("route", entity.route);
         row.SetField("pickcnt", entity.pickcnt);
         row.SetField("pickeddt", entity.pickeddt);
         row.SetField("pickedtm", entity.pickedtm);
         row.SetField("pickinit", entity.pickinit);
         row.SetField("printpckfl", entity.printpckfl);
         row.SetField("shipdt", entity.shipdt);
         row.SetField("shiptm", entity.shiptm);
         row.SetField("completefl", entity.completefl);
         row.SetField("processfl", entity.processfl);
         row.SetField("processinit", entity.processinit);
         row.SetField("processproc", entity.processproc);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("orderdisp", entity.orderdisp);
         row.SetField("zone", entity.zone);
         row.SetField("shippingpt", entity.shippingpt);
         row.SetField("nopackages", entity.nopackages);
         row.SetField("pkglabel", entity.pkglabel);
         row.SetField("manzonefl", entity.manzonefl);
         row.SetField("totweight", entity.totweight);
         row.SetField("actfreight", entity.actfreight);
         row.SetField("transproc", entity.transproc);
         row.SetField("destaddr3", entity.destaddr3);
         row.SetField("vacfgfl", entity.vacfgfl);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("vaesRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, VaesBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vano", entity.vano);
         row.SetField("vasuf", entity.vasuf);
         row.SetField("seqno", entity.seqno);
         row.SetField("vaesRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	