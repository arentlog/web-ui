//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.VA
{
   /// <summary>
   /// Value Add Entry Header
   /// </summary>
   [EntityType("Value Add Entry Header","vaif.detail","")]
   public partial class VaehBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [BusContext(BusPart.AcctEntity),Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// VA Order#
      /// </summary>
      [DrillbackParam("pk",1),Key,Order]
      public int vano { get; set; }

      /// <summary>
      /// VA Order Suffix
      /// </summary>
      [DrillbackParam("pk2",2),Key,Order]
      public int vasuf { get; set; }

      /// <summary>
      /// Type
      /// </summary>
      [ID(4),StringValidationAttribute]
      public string transtype { get; set; }

      /// <summary>
      /// Default Whse
      /// </summary>
      [ID(5),BusContext(BusPart.Location),StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// Ref
      /// </summary>
      [StringValidationAttribute]
      public string refer { get; set; }

      /// <summary>
      /// Placed By
      /// </summary>
      [StringValidationAttribute]
      public string placedby { get; set; }

      /// <summary>
      /// Taken By
      /// </summary>
      [ID(7),StringValidationAttribute]
      public string takenby { get; set; }

      /// <summary>
      /// Stg
      /// </summary>
      [ID(6)]
      public int stagecd { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Req Ship
      /// </summary>
      public DateTime? reqshipdt { get; set; }

      /// <summary>
      /// Promised
      /// </summary>
      public DateTime? promisedt { get; set; }

      /// <summary>
      /// Cancel
      /// </summary>
      public DateTime? canceldt { get; set; }

      /// <summary>
      /// Entered
      /// </summary>
      public DateTime? enterdt { get; set; }

      /// <summary>
      /// Enter Time
      /// </summary>
      [StringValidationAttribute]
      public string entertm { get; set; }

      /// <summary>
      /// Created Date
      /// </summary>
      public DateTime? createdt { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// # Times Chg
      /// </summary>
      public int notimeschg { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      [ID(11)]
      public int setno { get; set; }

      /// <summary>
      /// Receiving Jrnl
      /// </summary>
      [ID(10)]
      public int jrnlno { get; set; }

      /// <summary>
      /// Division #
      /// </summary>
      public int divno { get; set; }

      /// <summary>
      /// Open Initials
      /// </summary>
      [StringValidationAttribute]
      public string openinit { get; set; }

      /// <summary>
      /// Non Stock
      /// </summary>
      [StringValidationAttribute]
      public string nonstockty { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [ID(8),StringValidationAttribute]
      public string shipprod { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [ID(9)]
      public bool statustype { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string proddesc { get; set; }

      /// <summary>
      /// Ordered
      /// </summary>
      public decimal qtyord { get; set; }

      /// <summary>
      /// Qty Ship
      /// </summary>
      public decimal qtyship { get; set; }

      /// <summary>
      /// Stk Qty Ord
      /// </summary>
      public decimal stkqtyord { get; set; }

      /// <summary>
      /// Ship Qty
      /// </summary>
      public decimal stkqtyship { get; set; }

      /// <summary>
      /// Units
      /// </summary>
      [StringValidationAttribute]
      public string unit { get; set; }

      /// <summary>
      /// # Stk Units
      /// </summary>
      public decimal unitconv { get; set; }

      /// <summary>
      /// Pending Inventory Amount
      /// </summary>
      public decimal pndinvamt { get; set; }

      /// <summary>
      /// WIP Inventory Amount
      /// </summary>
      public decimal wipinvamt { get; set; }

      /// <summary>
      /// WIP External Charges
      /// </summary>
      public decimal wipextrnamt { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Created By
      /// </summary>
      [StringValidationAttribute]
      public string createdby { get; set; }

      /// <summary>
      /// Description 2
      /// </summary>
      [StringValidationAttribute]
      public string proddesc2 { get; set; }

      /// <summary>
      /// Pending Addons
      /// </summary>
      public decimal pndaddons { get; set; }

      /// <summary>
      /// WIP Addons
      /// </summary>
      public decimal wipaddons { get; set; }

      /// <summary>
      /// BO Exists
      /// </summary>
      public bool boexistsfl { get; set; }

      /// <summary>
      /// Create BO Flag
      /// </summary>
      public bool createbofl { get; set; }

      /// <summary>
      /// BO #
      /// </summary>
      public int bono { get; set; }

      /// <summary>
      /// BO
      /// </summary>
      public bool borelfl { get; set; }

      /// <summary>
      /// Customer Product#
      /// </summary>
      [StringValidationAttribute]
      public string custprod { get; set; }

      /// <summary>
      /// Estimated Cost
      /// </summary>
      public decimal estcost { get; set; }

      /// <summary>
      /// Write Off Flag
      /// </summary>
      public bool writeofffl { get; set; }

      /// <summary>
      /// Revision #
      /// </summary>
      [StringValidationAttribute]
      public string revno { get; set; }

      /// <summary>
      /// Previous VA Order#
      /// </summary>
      public int prevvano { get; set; }

      /// <summary>
      /// Approval Type
      /// </summary>
      [StringValidationAttribute]
      public string approvty { get; set; }

      /// <summary>
      /// Pending External Charges
      /// </summary>
      public decimal pndextrnamt { get; set; }

      /// <summary>
      /// Pending Internal Charges
      /// </summary>
      public decimal pndintrnamt { get; set; }

      /// <summary>
      /// Pending Internal Estimated
      /// </summary>
      public decimal pndintrnest { get; set; }

      /// <summary>
      /// Pending Inventory In
      /// </summary>
      public decimal pndinvinamt { get; set; }

      /// <summary>
      /// WIP Internal Charges
      /// </summary>
      public decimal wipintrnamt { get; set; }

      /// <summary>
      /// WIP Inventory In
      /// </summary>
      public decimal wipinvinamt { get; set; }

      /// <summary>
      /// Cost
      /// </summary>
      public decimal prodcost { get; set; }

      /// <summary>
      /// Est. Completion
      /// </summary>
      public DateTime? estcompdt { get; set; }

      /// <summary>
      /// Cube
      /// </summary>
      public decimal cubes { get; set; }

      /// <summary>
      /// weight
      /// </summary>
      public decimal weight { get; set; }

      /// <summary>
      /// Extended Cubes
      /// </summary>
      public decimal extcubes { get; set; }

      /// <summary>
      /// Extended Weight
      /// </summary>
      public decimal extweight { get; set; }

      /// <summary>
      /// Lost Business Reason
      /// </summary>
      [StringValidationAttribute]
      public string lostbusty { get; set; }

      /// <summary>
      /// ARP Line
      /// </summary>
      [StringValidationAttribute]
      public string arpprodline { get; set; }

      /// <summary>
      /// ARP Vendor #
      /// </summary>
      public decimal arpvendno { get; set; }

      /// <summary>
      /// ARP Whse
      /// </summary>
      [StringValidationAttribute]
      public string arpwhse { get; set; }

      /// <summary>
      /// Category
      /// </summary>
      [StringValidationAttribute]
      public string prodcat { get; set; }

      /// <summary>
      /// Net GL Amount
      /// </summary>
      public decimal netglamt { get; set; }

      /// <summary>
      /// Receipt
      /// </summary>
      public DateTime? receiptdt { get; set; }

      /// <summary>
      /// Spec Rec Link
      /// </summary>
      public int icspecrecno { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [BusContext(BusPart.Descr),StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// EDI 867 VA Components
      /// </summary>
      public bool edi867compfl { get; set; }

      /// <summary>
      /// Row Pointer
      /// </summary>
      [StringValidationAttribute]
      public string rowpointer { get; set; }

      /// <summary>
      /// Assembly Length
      /// </summary>
      public decimal assemlgth { get; set; }

      /// <summary>
      /// Version #
      /// </summary>
      public int verno { get; set; }

      /// <summary>
      /// Configure VA
      /// </summary>
      public bool vacfgfl { get; set; }

      /// <summary>
      /// transdttmz
      /// </summary>
      public DateTime? transdttmz { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildVaehBaseFromRow<T>(DataRow row) where T:VaehBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.vano = row.IsNull("vano") ? 0 : row.Field<int>("vano");
         entity.vasuf = row.IsNull("vasuf") ? 0 : row.Field<int>("vasuf");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.placedby = row.IsNull("placedby") ? string.Empty : row.Field<string>("placedby");
         entity.takenby = row.IsNull("takenby") ? string.Empty : row.Field<string>("takenby");
         entity.stagecd = row.IsNull("stagecd") ? 0 : row.Field<int>("stagecd");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.reqshipdt = row.Field<DateTime?>("reqshipdt");
         entity.promisedt = row.Field<DateTime?>("promisedt");
         entity.canceldt = row.Field<DateTime?>("canceldt");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.entertm = row.IsNull("entertm") ? string.Empty : row.Field<string>("entertm");
         entity.createdt = row.Field<DateTime?>("createdt");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.notimeschg = row.IsNull("notimeschg") ? 0 : row.Field<int>("notimeschg");
         entity.setno = row.IsNull("setno") ? 0 : row.Field<int>("setno");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.divno = row.IsNull("divno") ? 0 : row.Field<int>("divno");
         entity.openinit = row.IsNull("openinit") ? string.Empty : row.Field<string>("openinit");
         entity.nonstockty = row.IsNull("nonstockty") ? string.Empty : row.Field<string>("nonstockty");
         entity.shipprod = row.IsNull("shipprod") ? string.Empty : row.Field<string>("shipprod");
         entity.statustype = row.Field<bool>("statustype");
         entity.proddesc = row.IsNull("proddesc") ? string.Empty : row.Field<string>("proddesc");
         entity.qtyord = row.IsNull("qtyord") ? decimal.Zero : row.Field<decimal>("qtyord");
         entity.qtyship = row.IsNull("qtyship") ? decimal.Zero : row.Field<decimal>("qtyship");
         entity.stkqtyord = row.IsNull("stkqtyord") ? decimal.Zero : row.Field<decimal>("stkqtyord");
         entity.stkqtyship = row.IsNull("stkqtyship") ? decimal.Zero : row.Field<decimal>("stkqtyship");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.unitconv = row.IsNull("unitconv") ? decimal.Zero : row.Field<decimal>("unitconv");
         entity.pndinvamt = row.IsNull("pndinvamt") ? decimal.Zero : row.Field<decimal>("pndinvamt");
         entity.wipinvamt = row.IsNull("wipinvamt") ? decimal.Zero : row.Field<decimal>("wipinvamt");
         entity.wipextrnamt = row.IsNull("wipextrnamt") ? decimal.Zero : row.Field<decimal>("wipextrnamt");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.createdby = row.IsNull("createdby") ? string.Empty : row.Field<string>("createdby");
         entity.proddesc2 = row.IsNull("proddesc2") ? string.Empty : row.Field<string>("proddesc2");
         entity.pndaddons = row.IsNull("pndaddons") ? decimal.Zero : row.Field<decimal>("pndaddons");
         entity.wipaddons = row.IsNull("wipaddons") ? decimal.Zero : row.Field<decimal>("wipaddons");
         entity.boexistsfl = row.Field<bool>("boexistsfl");
         entity.createbofl = row.Field<bool>("createbofl");
         entity.bono = row.IsNull("bono") ? 0 : row.Field<int>("bono");
         entity.borelfl = row.Field<bool>("borelfl");
         entity.custprod = row.IsNull("custprod") ? string.Empty : row.Field<string>("custprod");
         entity.estcost = row.IsNull("estcost") ? decimal.Zero : row.Field<decimal>("estcost");
         entity.writeofffl = row.Field<bool>("writeofffl");
         entity.revno = row.IsNull("revno") ? string.Empty : row.Field<string>("revno");
         entity.prevvano = row.IsNull("prevvano") ? 0 : row.Field<int>("prevvano");
         entity.approvty = row.IsNull("approvty") ? string.Empty : row.Field<string>("approvty");
         entity.pndextrnamt = row.IsNull("pndextrnamt") ? decimal.Zero : row.Field<decimal>("pndextrnamt");
         entity.pndintrnamt = row.IsNull("pndintrnamt") ? decimal.Zero : row.Field<decimal>("pndintrnamt");
         entity.pndintrnest = row.IsNull("pndintrnest") ? decimal.Zero : row.Field<decimal>("pndintrnest");
         entity.pndinvinamt = row.IsNull("pndinvinamt") ? decimal.Zero : row.Field<decimal>("pndinvinamt");
         entity.wipintrnamt = row.IsNull("wipintrnamt") ? decimal.Zero : row.Field<decimal>("wipintrnamt");
         entity.wipinvinamt = row.IsNull("wipinvinamt") ? decimal.Zero : row.Field<decimal>("wipinvinamt");
         entity.prodcost = row.IsNull("prodcost") ? decimal.Zero : row.Field<decimal>("prodcost");
         entity.estcompdt = row.Field<DateTime?>("estcompdt");
         entity.cubes = row.IsNull("cubes") ? decimal.Zero : row.Field<decimal>("cubes");
         entity.weight = row.IsNull("weight") ? decimal.Zero : row.Field<decimal>("weight");
         entity.extcubes = row.IsNull("extcubes") ? decimal.Zero : row.Field<decimal>("extcubes");
         entity.extweight = row.IsNull("extweight") ? decimal.Zero : row.Field<decimal>("extweight");
         entity.lostbusty = row.IsNull("lostbusty") ? string.Empty : row.Field<string>("lostbusty");
         entity.arpprodline = row.IsNull("arpprodline") ? string.Empty : row.Field<string>("arpprodline");
         entity.arpvendno = row.IsNull("arpvendno") ? decimal.Zero : row.Field<decimal>("arpvendno");
         entity.arpwhse = row.IsNull("arpwhse") ? string.Empty : row.Field<string>("arpwhse");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.netglamt = row.IsNull("netglamt") ? decimal.Zero : row.Field<decimal>("netglamt");
         entity.receiptdt = row.Field<DateTime?>("receiptdt");
         entity.icspecrecno = row.IsNull("icspecrecno") ? 0 : row.Field<int>("icspecrecno");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.edi867compfl = row.Field<bool>("edi867compfl");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.assemlgth = row.IsNull("assemlgth") ? decimal.Zero : row.Field<decimal>("assemlgth");
         entity.verno = row.IsNull("verno") ? 0 : row.Field<int>("verno");
         entity.vacfgfl = row.Field<bool>("vacfgfl");
         entity.transdttmz = row.Field<DateTime?>("transdttmz");
         entity.rowID = row.Field<byte[]>("vaehRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromVaehBase(ref DataRow row, VaehBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vano", entity.vano);
         row.SetField("vasuf", entity.vasuf);
         row.SetField("transtype", entity.transtype);
         row.SetField("whse", entity.whse);
         row.SetField("refer", entity.refer);
         row.SetField("placedby", entity.placedby);
         row.SetField("takenby", entity.takenby);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("reqshipdt", entity.reqshipdt);
         row.SetField("promisedt", entity.promisedt);
         row.SetField("canceldt", entity.canceldt);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("entertm", entity.entertm);
         row.SetField("createdt", entity.createdt);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("notimeschg", entity.notimeschg);
         row.SetField("setno", entity.setno);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("divno", entity.divno);
         row.SetField("openinit", entity.openinit);
         row.SetField("nonstockty", entity.nonstockty);
         row.SetField("shipprod", entity.shipprod);
         row.SetField("statustype", entity.statustype);
         row.SetField("proddesc", entity.proddesc);
         row.SetField("qtyord", entity.qtyord);
         row.SetField("qtyship", entity.qtyship);
         row.SetField("stkqtyord", entity.stkqtyord);
         row.SetField("stkqtyship", entity.stkqtyship);
         row.SetField("unit", entity.unit);
         row.SetField("unitconv", entity.unitconv);
         row.SetField("pndinvamt", entity.pndinvamt);
         row.SetField("wipinvamt", entity.wipinvamt);
         row.SetField("wipextrnamt", entity.wipextrnamt);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("createdby", entity.createdby);
         row.SetField("proddesc2", entity.proddesc2);
         row.SetField("pndaddons", entity.pndaddons);
         row.SetField("wipaddons", entity.wipaddons);
         row.SetField("boexistsfl", entity.boexistsfl);
         row.SetField("createbofl", entity.createbofl);
         row.SetField("bono", entity.bono);
         row.SetField("borelfl", entity.borelfl);
         row.SetField("custprod", entity.custprod);
         row.SetField("estcost", entity.estcost);
         row.SetField("writeofffl", entity.writeofffl);
         row.SetField("revno", entity.revno);
         row.SetField("prevvano", entity.prevvano);
         row.SetField("approvty", entity.approvty);
         row.SetField("pndextrnamt", entity.pndextrnamt);
         row.SetField("pndintrnamt", entity.pndintrnamt);
         row.SetField("pndintrnest", entity.pndintrnest);
         row.SetField("pndinvinamt", entity.pndinvinamt);
         row.SetField("wipintrnamt", entity.wipintrnamt);
         row.SetField("wipinvinamt", entity.wipinvinamt);
         row.SetField("prodcost", entity.prodcost);
         row.SetField("estcompdt", entity.estcompdt);
         row.SetField("cubes", entity.cubes);
         row.SetField("weight", entity.weight);
         row.SetField("extcubes", entity.extcubes);
         row.SetField("extweight", entity.extweight);
         row.SetField("lostbusty", entity.lostbusty);
         row.SetField("arpprodline", entity.arpprodline);
         row.SetField("arpvendno", entity.arpvendno);
         row.SetField("arpwhse", entity.arpwhse);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("netglamt", entity.netglamt);
         row.SetField("receiptdt", entity.receiptdt);
         row.SetField("icspecrecno", entity.icspecrecno);
         row.SetField("transproc", entity.transproc);
         row.SetField("edi867compfl", entity.edi867compfl);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("assemlgth", entity.assemlgth);
         row.SetField("verno", entity.verno);
         row.SetField("vacfgfl", entity.vacfgfl);
         row.SetField("transdttmz", entity.transdttmz);
         row.SetField("vaehRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, VaehBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vano", entity.vano);
         row.SetField("vasuf", entity.vasuf);
         row.SetField("vaehRowID", entity.rowID.ToByteArray());
         row.SetField("rowpointer", entity.rowpointer);

      }   
   }
}
#pragma warning restore 1591
	