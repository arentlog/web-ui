//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.CM
{
   /// <summary>
   /// R&D (C/M Campaign Scripts)
   /// </summary>
   
   public partial class CmscsBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Campaign
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string campaigncd { get; set; }

      /// <summary>
      /// Script
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string scriptcd { get; set; }

      /// <summary>
      /// Page #
      /// </summary>
      [Key,Order]
      public int pageno { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string description { get; set; }

      /// <summary>
      /// Campaign Script
      /// </summary>
      [StringValidationAttribute]
      public string notes1 { get; set; }
      [StringValidationAttribute]
      public string notes2 { get; set; }
      [StringValidationAttribute]
      public string notes3 { get; set; }
      [StringValidationAttribute]
      public string notes4 { get; set; }
      [StringValidationAttribute]
      public string notes5 { get; set; }
      [StringValidationAttribute]
      public string notes6 { get; set; }
      [StringValidationAttribute]
      public string notes7 { get; set; }
      [StringValidationAttribute]
      public string notes8 { get; set; }
      [StringValidationAttribute]
      public string notes9 { get; set; }
      [StringValidationAttribute]
      public string notes10 { get; set; }
      [StringValidationAttribute]
      public string notes11 { get; set; }
      [StringValidationAttribute]
      public string notes12 { get; set; }
      [StringValidationAttribute]
      public string notes13 { get; set; }
      [StringValidationAttribute]
      public string notes14 { get; set; }
      [StringValidationAttribute]
      public string notes15 { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildCmscsBaseFromRow<T>(DataRow row) where T:CmscsBase, new()
      {
         T entity = new T();
         entity.campaigncd = row.IsNull("campaigncd") ? string.Empty : row.Field<string>("campaigncd");
         entity.scriptcd = row.IsNull("scriptcd") ? string.Empty : row.Field<string>("scriptcd");
         entity.description = row.IsNull("description") ? string.Empty : row.Field<string>("description");
         entity.notes1 = row.IsNull("notes1") ? string.Empty : row.Field<string>("notes1");
         entity.notes2 = row.IsNull("notes2") ? string.Empty : row.Field<string>("notes2");
         entity.notes3 = row.IsNull("notes3") ? string.Empty : row.Field<string>("notes3");
         entity.notes4 = row.IsNull("notes4") ? string.Empty : row.Field<string>("notes4");
         entity.notes5 = row.IsNull("notes5") ? string.Empty : row.Field<string>("notes5");
         entity.notes6 = row.IsNull("notes6") ? string.Empty : row.Field<string>("notes6");
         entity.notes7 = row.IsNull("notes7") ? string.Empty : row.Field<string>("notes7");
         entity.notes8 = row.IsNull("notes8") ? string.Empty : row.Field<string>("notes8");
         entity.notes9 = row.IsNull("notes9") ? string.Empty : row.Field<string>("notes9");
         entity.notes10 = row.IsNull("notes10") ? string.Empty : row.Field<string>("notes10");
         entity.notes11 = row.IsNull("notes11") ? string.Empty : row.Field<string>("notes11");
         entity.notes12 = row.IsNull("notes12") ? string.Empty : row.Field<string>("notes12");
         entity.notes13 = row.IsNull("notes13") ? string.Empty : row.Field<string>("notes13");
         entity.notes14 = row.IsNull("notes14") ? string.Empty : row.Field<string>("notes14");
         entity.notes15 = row.IsNull("notes15") ? string.Empty : row.Field<string>("notes15");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.pageno = row.IsNull("pageno") ? 0 : row.Field<int>("pageno");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("cmscsRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromCmscsBase(ref DataRow row, CmscsBase entity)
      {
         row.SetField("campaigncd", entity.campaigncd);
         row.SetField("scriptcd", entity.scriptcd);
         row.SetField("description", entity.description);
         row.SetField("notes1", entity.notes1);
         row.SetField("notes2", entity.notes2);
         row.SetField("notes3", entity.notes3);
         row.SetField("notes4", entity.notes4);
         row.SetField("notes5", entity.notes5);
         row.SetField("notes6", entity.notes6);
         row.SetField("notes7", entity.notes7);
         row.SetField("notes8", entity.notes8);
         row.SetField("notes9", entity.notes9);
         row.SetField("notes10", entity.notes10);
         row.SetField("notes11", entity.notes11);
         row.SetField("notes12", entity.notes12);
         row.SetField("notes13", entity.notes13);
         row.SetField("notes14", entity.notes14);
         row.SetField("notes15", entity.notes15);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("pageno", entity.pageno);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("cmscsRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, CmscsBase entity)
      {
         row.SetField("campaigncd", entity.campaigncd);
         row.SetField("scriptcd", entity.scriptcd);
         row.SetField("pageno", entity.pageno);
         row.SetField("cmscsRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	