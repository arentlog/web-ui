//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.CM
{
   /// <summary>
   /// R&D (T/M Activity)
   /// </summary>
   
   public partial class CmetBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Prospect #
      /// </summary>
      [Key,Order]
      public decimal prosno { get; set; }

      /// <summary>
      /// 
      /// </summary>
      [Key,Order]
      public int sequenceno { get; set; }

      /// <summary>
      /// Salesrep
      /// </summary>
      [StringValidationAttribute]
      public string slsrep { get; set; }

      /// <summary>
      /// Status
      /// </summary>
      [StringValidationAttribute]
      public string statuscd { get; set; }

      /// <summary>
      /// Must Do
      /// </summary>
      public bool mustdo { get; set; }

      /// <summary>
      /// Start
      /// </summary>
      public DateTime? actstartdt { get; set; }

      /// <summary>
      /// Start Time
      /// </summary>
      [StringValidationAttribute]
      public string actstarttm { get; set; }

      /// <summary>
      /// Stop
      /// </summary>
      public DateTime? actstopdt { get; set; }

      /// <summary>
      /// Stop Time
      /// </summary>
      [StringValidationAttribute]
      public string actstoptm { get; set; }

      /// <summary>
      /// Duration
      /// </summary>
      [StringValidationAttribute]
      public string durationtm { get; set; }

      /// <summary>
      /// Activity
      /// </summary>
      [StringValidationAttribute]
      public string activitycd { get; set; }

      /// <summary>
      /// Result
      /// </summary>
      [StringValidationAttribute]
      public string resultcd { get; set; }

      /// <summary>
      /// Script
      /// </summary>
      [StringValidationAttribute]
      public string scriptcd { get; set; }

      /// <summary>
      /// Contact
      /// </summary>
      [StringValidationAttribute]
      public string name { get; set; }

      /// <summary>
      /// Campaign
      /// </summary>
      [StringValidationAttribute]
      public string campaigncd { get; set; }

      /// <summary>
      /// Notes
      /// </summary>
      [StringValidationAttribute]
      public string notesfl { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Sched
      /// </summary>
      public DateTime? schstartdt { get; set; }

      /// <summary>
      /// schstarttm
      /// </summary>
      [StringValidationAttribute]
      public string schstarttm { get; set; }

      /// <summary>
      /// Comment
      /// </summary>
      [StringValidationAttribute]
      public string comment { get; set; }

      /// <summary>
      /// newrec
      /// </summary>
      public bool newrec { get; set; }

      /// <summary>
      /// Phone
      /// </summary>
      [StringValidationAttribute]
      public string phoneno { get; set; }

      /// <summary>
      /// autoactfl
      /// </summary>
      public bool autoactfl { get; set; }

      /// <summary>
      /// Billable
      /// </summary>
      public bool billfl { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildCmetBaseFromRow<T>(DataRow row) where T:CmetBase, new()
      {
         T entity = new T();
         entity.prosno = row.IsNull("prosno") ? decimal.Zero : row.Field<decimal>("prosno");
         entity.slsrep = row.IsNull("slsrep") ? string.Empty : row.Field<string>("slsrep");
         entity.statuscd = row.IsNull("statuscd") ? string.Empty : row.Field<string>("statuscd");
         entity.mustdo = row.Field<bool>("mustdo");
         entity.actstartdt = row.Field<DateTime?>("actstartdt");
         entity.actstarttm = row.IsNull("actstarttm") ? string.Empty : row.Field<string>("actstarttm");
         entity.actstopdt = row.Field<DateTime?>("actstopdt");
         entity.actstoptm = row.IsNull("actstoptm") ? string.Empty : row.Field<string>("actstoptm");
         entity.durationtm = row.IsNull("durationtm") ? string.Empty : row.Field<string>("durationtm");
         entity.activitycd = row.IsNull("activitycd") ? string.Empty : row.Field<string>("activitycd");
         entity.resultcd = row.IsNull("resultcd") ? string.Empty : row.Field<string>("resultcd");
         entity.scriptcd = row.IsNull("scriptcd") ? string.Empty : row.Field<string>("scriptcd");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.campaigncd = row.IsNull("campaigncd") ? string.Empty : row.Field<string>("campaigncd");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.schstartdt = row.Field<DateTime?>("schstartdt");
         entity.schstarttm = row.IsNull("schstarttm") ? string.Empty : row.Field<string>("schstarttm");
         entity.comment = row.IsNull("comment") ? string.Empty : row.Field<string>("comment");
         entity.sequenceno = row.IsNull("sequenceno") ? 0 : row.Field<int>("sequenceno");
         entity.newrec = row.Field<bool>("newrec");
         entity.phoneno = row.IsNull("phoneno") ? string.Empty : row.Field<string>("phoneno");
         entity.autoactfl = row.Field<bool>("autoactfl");
         entity.billfl = row.Field<bool>("billfl");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("cmetRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromCmetBase(ref DataRow row, CmetBase entity)
      {
         row.SetField("prosno", entity.prosno);
         row.SetField("slsrep", entity.slsrep);
         row.SetField("statuscd", entity.statuscd);
         row.SetField("mustdo", entity.mustdo);
         row.SetField("actstartdt", entity.actstartdt);
         row.SetField("actstarttm", entity.actstarttm);
         row.SetField("actstopdt", entity.actstopdt);
         row.SetField("actstoptm", entity.actstoptm);
         row.SetField("durationtm", entity.durationtm);
         row.SetField("activitycd", entity.activitycd);
         row.SetField("resultcd", entity.resultcd);
         row.SetField("scriptcd", entity.scriptcd);
         row.SetField("name", entity.name);
         row.SetField("campaigncd", entity.campaigncd);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("schstartdt", entity.schstartdt);
         row.SetField("schstarttm", entity.schstarttm);
         row.SetField("comment", entity.comment);
         row.SetField("sequenceno", entity.sequenceno);
         row.SetField("newrec", entity.newrec);
         row.SetField("phoneno", entity.phoneno);
         row.SetField("autoactfl", entity.autoactfl);
         row.SetField("billfl", entity.billfl);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("transproc", entity.transproc);
         row.SetField("cmetRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, CmetBase entity)
      {
         row.SetField("prosno", entity.prosno);
         row.SetField("sequenceno", entity.sequenceno);
         row.SetField("cmetRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	