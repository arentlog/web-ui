//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SW
{
   /// <summary>
   /// Service Warranty Warehouse Description File
   /// </summary>
   
   public partial class SwicsdBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Whse
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string whse { get; set; }

      /// <summary>
      /// SRO #
      /// </summary>
      public int begsrono { get; set; }

      /// <summary>
      /// Next SRO #
      /// </summary>
      public int nextsrono { get; set; }

      /// <summary>
      /// Ending SRO #
      /// </summary>
      public int endsrono { get; set; }

      /// <summary>
      /// Claim #
      /// </summary>
      public int begclmno { get; set; }

      /// <summary>
      /// Next Claim #
      /// </summary>
      public int nextclmno { get; set; }

      /// <summary>
      /// Ending Claim #
      /// </summary>
      public int endclmno { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// Doubletime Hours
      /// </summary>
      public decimal dthrs { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Doubletime Hours Per
      /// </summary>
      public bool dthrsperfl { get; set; }

      /// <summary>
      /// Overtime Hours Per
      /// </summary>
      public bool othrsperfl { get; set; }

      /// <summary>
      /// Overtime Hours
      /// </summary>
      public decimal othrs { get; set; }

      /// <summary>
      /// In/Out Grace Period Minutes
      /// </summary>
      public int inoutgrcmin { get; set; }

      /// <summary>
      /// Level of Error Processing
      /// </summary>
      public bool levelerrorfl { get; set; }

      /// <summary>
      /// Lunch Grace Period Minutes
      /// </summary>
      public int lunchgrcmin { get; set; }

      /// <summary>
      /// Non-Shift OT
      /// </summary>
      public bool nonshiftotfl { get; set; }

      /// <summary>
      /// Rate Adjustment Amount
      /// </summary>
      public decimal rateamt1 { get; set; }
      public decimal rateamt2 { get; set; }
      public decimal rateamt3 { get; set; }
      public decimal rateamt4 { get; set; }
      public decimal rateamt5 { get; set; }
      public decimal rateamt6 { get; set; }
      public decimal rateamt7 { get; set; }
      public decimal rateamt8 { get; set; }
      public decimal rateamt9 { get; set; }

      /// <summary>
      /// Repl/Incr
      /// </summary>
      public bool rateimpactfl1 { get; set; }
      public bool rateimpactfl2 { get; set; }
      public bool rateimpactfl3 { get; set; }
      public bool rateimpactfl4 { get; set; }
      public bool rateimpactfl5 { get; set; }
      public bool rateimpactfl6 { get; set; }
      public bool rateimpactfl7 { get; set; }
      public bool rateimpactfl8 { get; set; }
      public bool rateimpactfl9 { get; set; }

      /// <summary>
      /// Rate Adjustment Code Option
      /// </summary>
      [StringValidationAttribute]
      public string ratetype1 { get; set; }
      [StringValidationAttribute]
      public string ratetype2 { get; set; }
      [StringValidationAttribute]
      public string ratetype3 { get; set; }
      [StringValidationAttribute]
      public string ratetype4 { get; set; }
      [StringValidationAttribute]
      public string ratetype5 { get; set; }
      [StringValidationAttribute]
      public string ratetype6 { get; set; }
      [StringValidationAttribute]
      public string ratetype7 { get; set; }
      [StringValidationAttribute]
      public string ratetype8 { get; set; }
      [StringValidationAttribute]
      public string ratetype9 { get; set; }

      /// <summary>
      /// Require Tech on SRO
      /// </summary>
      public bool rqrtechsrofl { get; set; }

      /// <summary>
      /// Time Zone Adjustment Hours
      /// </summary>
      public int tmzoneadjhrs { get; set; }

      /// <summary>
      /// Union Ship
      /// </summary>
      public bool unionfl { get; set; }

      /// <summary>
      /// Shift Increment Amount
      /// </summary>
      public decimal shiftamt1 { get; set; }
      public decimal shiftamt2 { get; set; }
      public decimal shiftamt3 { get; set; }
      public decimal shiftamt4 { get; set; }
      public decimal shiftamt5 { get; set; }
      public decimal shiftamt6 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildSwicsdBaseFromRow<T>(DataRow row) where T:SwicsdBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.begsrono = row.IsNull("begsrono") ? 0 : row.Field<int>("begsrono");
         entity.nextsrono = row.IsNull("nextsrono") ? 0 : row.Field<int>("nextsrono");
         entity.endsrono = row.IsNull("endsrono") ? 0 : row.Field<int>("endsrono");
         entity.begclmno = row.IsNull("begclmno") ? 0 : row.Field<int>("begclmno");
         entity.nextclmno = row.IsNull("nextclmno") ? 0 : row.Field<int>("nextclmno");
         entity.endclmno = row.IsNull("endclmno") ? 0 : row.Field<int>("endclmno");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.dthrs = row.IsNull("dthrs") ? decimal.Zero : row.Field<decimal>("dthrs");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.dthrsperfl = row.Field<bool>("dthrsperfl");
         entity.othrsperfl = row.Field<bool>("othrsperfl");
         entity.othrs = row.IsNull("othrs") ? decimal.Zero : row.Field<decimal>("othrs");
         entity.inoutgrcmin = row.IsNull("inoutgrcmin") ? 0 : row.Field<int>("inoutgrcmin");
         entity.levelerrorfl = row.Field<bool>("levelerrorfl");
         entity.lunchgrcmin = row.IsNull("lunchgrcmin") ? 0 : row.Field<int>("lunchgrcmin");
         entity.nonshiftotfl = row.Field<bool>("nonshiftotfl");
         entity.rateamt1 = row.IsNull("rateamt1") ? decimal.Zero : row.Field<decimal>("rateamt1");
         entity.rateamt2 = row.IsNull("rateamt2") ? decimal.Zero : row.Field<decimal>("rateamt2");
         entity.rateamt3 = row.IsNull("rateamt3") ? decimal.Zero : row.Field<decimal>("rateamt3");
         entity.rateamt4 = row.IsNull("rateamt4") ? decimal.Zero : row.Field<decimal>("rateamt4");
         entity.rateamt5 = row.IsNull("rateamt5") ? decimal.Zero : row.Field<decimal>("rateamt5");
         entity.rateamt6 = row.IsNull("rateamt6") ? decimal.Zero : row.Field<decimal>("rateamt6");
         entity.rateamt7 = row.IsNull("rateamt7") ? decimal.Zero : row.Field<decimal>("rateamt7");
         entity.rateamt8 = row.IsNull("rateamt8") ? decimal.Zero : row.Field<decimal>("rateamt8");
         entity.rateamt9 = row.IsNull("rateamt9") ? decimal.Zero : row.Field<decimal>("rateamt9");
         entity.rateimpactfl1 = row.Field<bool>("rateimpactfl1");
         entity.rateimpactfl2 = row.Field<bool>("rateimpactfl2");
         entity.rateimpactfl3 = row.Field<bool>("rateimpactfl3");
         entity.rateimpactfl4 = row.Field<bool>("rateimpactfl4");
         entity.rateimpactfl5 = row.Field<bool>("rateimpactfl5");
         entity.rateimpactfl6 = row.Field<bool>("rateimpactfl6");
         entity.rateimpactfl7 = row.Field<bool>("rateimpactfl7");
         entity.rateimpactfl8 = row.Field<bool>("rateimpactfl8");
         entity.rateimpactfl9 = row.Field<bool>("rateimpactfl9");
         entity.ratetype1 = row.IsNull("ratetype1") ? string.Empty : row.Field<string>("ratetype1");
         entity.ratetype2 = row.IsNull("ratetype2") ? string.Empty : row.Field<string>("ratetype2");
         entity.ratetype3 = row.IsNull("ratetype3") ? string.Empty : row.Field<string>("ratetype3");
         entity.ratetype4 = row.IsNull("ratetype4") ? string.Empty : row.Field<string>("ratetype4");
         entity.ratetype5 = row.IsNull("ratetype5") ? string.Empty : row.Field<string>("ratetype5");
         entity.ratetype6 = row.IsNull("ratetype6") ? string.Empty : row.Field<string>("ratetype6");
         entity.ratetype7 = row.IsNull("ratetype7") ? string.Empty : row.Field<string>("ratetype7");
         entity.ratetype8 = row.IsNull("ratetype8") ? string.Empty : row.Field<string>("ratetype8");
         entity.ratetype9 = row.IsNull("ratetype9") ? string.Empty : row.Field<string>("ratetype9");
         entity.rqrtechsrofl = row.Field<bool>("rqrtechsrofl");
         entity.tmzoneadjhrs = row.IsNull("tmzoneadjhrs") ? 0 : row.Field<int>("tmzoneadjhrs");
         entity.unionfl = row.Field<bool>("unionfl");
         entity.shiftamt1 = row.IsNull("shiftamt1") ? decimal.Zero : row.Field<decimal>("shiftamt1");
         entity.shiftamt2 = row.IsNull("shiftamt2") ? decimal.Zero : row.Field<decimal>("shiftamt2");
         entity.shiftamt3 = row.IsNull("shiftamt3") ? decimal.Zero : row.Field<decimal>("shiftamt3");
         entity.shiftamt4 = row.IsNull("shiftamt4") ? decimal.Zero : row.Field<decimal>("shiftamt4");
         entity.shiftamt5 = row.IsNull("shiftamt5") ? decimal.Zero : row.Field<decimal>("shiftamt5");
         entity.shiftamt6 = row.IsNull("shiftamt6") ? decimal.Zero : row.Field<decimal>("shiftamt6");
         entity.rowID = row.Field<byte[]>("swicsdRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSwicsdBase(ref DataRow row, SwicsdBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("whse", entity.whse);
         row.SetField("begsrono", entity.begsrono);
         row.SetField("nextsrono", entity.nextsrono);
         row.SetField("endsrono", entity.endsrono);
         row.SetField("begclmno", entity.begclmno);
         row.SetField("nextclmno", entity.nextclmno);
         row.SetField("endclmno", entity.endclmno);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("dthrs", entity.dthrs);
         row.SetField("transproc", entity.transproc);
         row.SetField("dthrsperfl", entity.dthrsperfl);
         row.SetField("othrsperfl", entity.othrsperfl);
         row.SetField("othrs", entity.othrs);
         row.SetField("inoutgrcmin", entity.inoutgrcmin);
         row.SetField("levelerrorfl", entity.levelerrorfl);
         row.SetField("lunchgrcmin", entity.lunchgrcmin);
         row.SetField("nonshiftotfl", entity.nonshiftotfl);
         row.SetField("rateamt1", entity.rateamt1);
         row.SetField("rateamt2", entity.rateamt2);
         row.SetField("rateamt3", entity.rateamt3);
         row.SetField("rateamt4", entity.rateamt4);
         row.SetField("rateamt5", entity.rateamt5);
         row.SetField("rateamt6", entity.rateamt6);
         row.SetField("rateamt7", entity.rateamt7);
         row.SetField("rateamt8", entity.rateamt8);
         row.SetField("rateamt9", entity.rateamt9);
         row.SetField("rateimpactfl1", entity.rateimpactfl1);
         row.SetField("rateimpactfl2", entity.rateimpactfl2);
         row.SetField("rateimpactfl3", entity.rateimpactfl3);
         row.SetField("rateimpactfl4", entity.rateimpactfl4);
         row.SetField("rateimpactfl5", entity.rateimpactfl5);
         row.SetField("rateimpactfl6", entity.rateimpactfl6);
         row.SetField("rateimpactfl7", entity.rateimpactfl7);
         row.SetField("rateimpactfl8", entity.rateimpactfl8);
         row.SetField("rateimpactfl9", entity.rateimpactfl9);
         row.SetField("ratetype1", entity.ratetype1);
         row.SetField("ratetype2", entity.ratetype2);
         row.SetField("ratetype3", entity.ratetype3);
         row.SetField("ratetype4", entity.ratetype4);
         row.SetField("ratetype5", entity.ratetype5);
         row.SetField("ratetype6", entity.ratetype6);
         row.SetField("ratetype7", entity.ratetype7);
         row.SetField("ratetype8", entity.ratetype8);
         row.SetField("ratetype9", entity.ratetype9);
         row.SetField("rqrtechsrofl", entity.rqrtechsrofl);
         row.SetField("tmzoneadjhrs", entity.tmzoneadjhrs);
         row.SetField("unionfl", entity.unionfl);
         row.SetField("shiftamt1", entity.shiftamt1);
         row.SetField("shiftamt2", entity.shiftamt2);
         row.SetField("shiftamt3", entity.shiftamt3);
         row.SetField("shiftamt4", entity.shiftamt4);
         row.SetField("shiftamt5", entity.shiftamt5);
         row.SetField("shiftamt6", entity.shiftamt6);
         row.SetField("swicsdRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, SwicsdBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("whse", entity.whse);
         row.SetField("swicsdRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	