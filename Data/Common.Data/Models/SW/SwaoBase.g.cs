//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SW
{
   /// <summary>
   /// Service Warranty Administrative Options
   /// </summary>
   
   public partial class SwaoBase: ModelBase
   {

      /// <summary>
      /// Company #
      /// </summary>
      public int cono { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// Repair Order#
      /// </summary>
      public int nextorderno { get; set; }

      /// <summary>
      /// Internal Claim #
      /// </summary>
      public int nextclaimno { get; set; }

      /// <summary>
      /// setup
      /// </summary>
      public bool setup { get; set; }

      /// <summary>
      /// Bill Type
      /// </summary>
      public bool billtype { get; set; }

      /// <summary>
      /// Category Default
      /// </summary>
      [StringValidationAttribute]
      public string prodcat { get; set; }

      /// <summary>
      /// Acct#
      /// </summary>
      public int glacctno { get; set; }

      /// <summary>
      /// Div#
      /// </summary>
      public int gldivno { get; set; }

      /// <summary>
      /// Dept#
      /// </summary>
      public int gldeptno { get; set; }

      /// <summary>
      /// Sub#
      /// </summary>
      public int glsubno { get; set; }

      /// <summary>
      /// Write Off Limit
      /// </summary>
      public decimal wolimit { get; set; }

      /// <summary>
      /// Claim Type
      /// </summary>
      [StringValidationAttribute]
      public string claimtype { get; set; }

      /// <summary>
      /// Claim Print Default Format
      /// </summary>
      [StringValidationAttribute]
      public string claimform { get; set; }

      /// <summary>
      /// Job Type
      /// </summary>
      [StringValidationAttribute]
      public string jobtype { get; set; }

      /// <summary>
      /// Additional Req Days
      /// </summary>
      public int reqdays { get; set; }

      /// <summary>
      /// Additional Promessed days
      /// </summary>
      public int promdays { get; set; }

      /// <summary>
      /// Release Date
      /// </summary>
      public DateTime? reldate { get; set; }

      /// <summary>
      /// Original Purchaser
      /// </summary>
      public bool origcustfl { get; set; }

      /// <summary>
      /// Print Format
      /// </summary>
      public int prtfrmt { get; set; }

      /// <summary>
      /// Print Headings
      /// </summary>
      public bool repairheadfl { get; set; }

      /// <summary>
      /// BOM Required Type
      /// </summary>
      [StringValidationAttribute]
      public string bomtype { get; set; }

      /// <summary>
      /// Doubletime Rate Factor
      /// </summary>
      public decimal dtratemult { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Overtime Rate Factor
      /// </summary>
      public decimal otratemult { get; set; }

      /// <summary>
      /// Payroll Cycle Begin Day
      /// </summary>
      [StringValidationAttribute]
      public string prcyclebegdy { get; set; }

      /// <summary>
      /// Payroll Cycle Begin Time
      /// </summary>
      [StringValidationAttribute]
      public string prcyclebegtm { get; set; }

      /// <summary>
      /// Payroll Flat File Directory
      /// </summary>
      [StringValidationAttribute]
      public string prfiledir { get; set; }

      /// <summary>
      /// Payroll Flat File Format
      /// </summary>
      public int prfilefrmt { get; set; }

      /// <summary>
      /// Probationary Period Days
      /// </summary>
      public int probationdys { get; set; }

      /// <summary>
      /// Require SRO for Time Entry
      /// </summary>
      [StringValidationAttribute]
      public string rqrsrofl { get; set; }

      /// <summary>
      /// Allow SRO Over-Tendering
      /// </summary>
      public bool overtendfl { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildSwaoBaseFromRow<T>(DataRow row) where T:SwaoBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.nextorderno = row.IsNull("nextorderno") ? 0 : row.Field<int>("nextorderno");
         entity.nextclaimno = row.IsNull("nextclaimno") ? 0 : row.Field<int>("nextclaimno");
         entity.setup = row.Field<bool>("setup");
         entity.billtype = row.Field<bool>("billtype");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.wolimit = row.IsNull("wolimit") ? decimal.Zero : row.Field<decimal>("wolimit");
         entity.claimtype = row.IsNull("claimtype") ? string.Empty : row.Field<string>("claimtype");
         entity.claimform = row.IsNull("claimform") ? string.Empty : row.Field<string>("claimform");
         entity.jobtype = row.IsNull("jobtype") ? string.Empty : row.Field<string>("jobtype");
         entity.reqdays = row.IsNull("reqdays") ? 0 : row.Field<int>("reqdays");
         entity.promdays = row.IsNull("promdays") ? 0 : row.Field<int>("promdays");
         entity.reldate = row.Field<DateTime?>("reldate");
         entity.origcustfl = row.Field<bool>("origcustfl");
         entity.prtfrmt = row.IsNull("prtfrmt") ? 0 : row.Field<int>("prtfrmt");
         entity.repairheadfl = row.Field<bool>("repairheadfl");
         entity.bomtype = row.IsNull("bomtype") ? string.Empty : row.Field<string>("bomtype");
         entity.dtratemult = row.IsNull("dtratemult") ? decimal.Zero : row.Field<decimal>("dtratemult");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.otratemult = row.IsNull("otratemult") ? decimal.Zero : row.Field<decimal>("otratemult");
         entity.prcyclebegdy = row.IsNull("prcyclebegdy") ? string.Empty : row.Field<string>("prcyclebegdy");
         entity.prcyclebegtm = row.IsNull("prcyclebegtm") ? string.Empty : row.Field<string>("prcyclebegtm");
         entity.prfiledir = row.IsNull("prfiledir") ? string.Empty : row.Field<string>("prfiledir");
         entity.prfilefrmt = row.IsNull("prfilefrmt") ? 0 : row.Field<int>("prfilefrmt");
         entity.probationdys = row.IsNull("probationdys") ? 0 : row.Field<int>("probationdys");
         entity.rqrsrofl = row.IsNull("rqrsrofl") ? string.Empty : row.Field<string>("rqrsrofl");
         entity.overtendfl = row.Field<bool>("overtendfl");
         entity.rowID = row.Field<byte[]>("swaoRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSwaoBase(ref DataRow row, SwaoBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("nextorderno", entity.nextorderno);
         row.SetField("nextclaimno", entity.nextclaimno);
         row.SetField("setup", entity.setup);
         row.SetField("billtype", entity.billtype);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("wolimit", entity.wolimit);
         row.SetField("claimtype", entity.claimtype);
         row.SetField("claimform", entity.claimform);
         row.SetField("jobtype", entity.jobtype);
         row.SetField("reqdays", entity.reqdays);
         row.SetField("promdays", entity.promdays);
         row.SetField("reldate", entity.reldate);
         row.SetField("origcustfl", entity.origcustfl);
         row.SetField("prtfrmt", entity.prtfrmt);
         row.SetField("repairheadfl", entity.repairheadfl);
         row.SetField("bomtype", entity.bomtype);
         row.SetField("dtratemult", entity.dtratemult);
         row.SetField("transproc", entity.transproc);
         row.SetField("otratemult", entity.otratemult);
         row.SetField("prcyclebegdy", entity.prcyclebegdy);
         row.SetField("prcyclebegtm", entity.prcyclebegtm);
         row.SetField("prfiledir", entity.prfiledir);
         row.SetField("prfilefrmt", entity.prfilefrmt);
         row.SetField("probationdys", entity.probationdys);
         row.SetField("rqrsrofl", entity.rqrsrofl);
         row.SetField("overtendfl", entity.overtendfl);
         row.SetField("swaoRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, SwaoBase entity)
      {
         row.SetField("swaoRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	