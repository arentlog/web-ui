//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SW
{
   /// <summary>
   /// Service Warranty Enter Warranty Claim Detail Line
   /// </summary>
   
   public partial class SwewlBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Line Number
      /// </summary>
      [Key,Order]
      public int lineno { get; set; }

      /// <summary>
      /// Internal Claim #
      /// </summary>
      [Key,Order]
      public int intclaimno { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Description 2
      /// </summary>
      [StringValidationAttribute]
      public string proddesc2 { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string proddesc { get; set; }

      /// <summary>
      /// Claim Amount
      /// </summary>
      public decimal claimamt { get; set; }

      /// <summary>
      /// Credit Amount
      /// </summary>
      public decimal creditamt { get; set; }

      /// <summary>
      /// Line Comment
      /// </summary>
      [StringValidationAttribute]
      public string linecomment { get; set; }

      /// <summary>
      /// Print Comment Flag
      /// </summary>
      public bool printcommentfl { get; set; }

      /// <summary>
      /// Quantity
      /// </summary>
      public decimal qty { get; set; }

      /// <summary>
      /// Extended Claim Amount
      /// </summary>
      public decimal extclaimamt { get; set; }

      /// <summary>
      /// Product
      /// </summary>
      [StringValidationAttribute]
      public string prod { get; set; }

      /// <summary>
      /// Extended Credit Amount
      /// </summary>
      public decimal extcramt { get; set; }

      /// <summary>
      /// SRT Quantity Multiplier
      /// </summary>
      public decimal srtqty { get; set; }

      /// <summary>
      /// SRT Hours Overridden
      /// </summary>
      public bool srtoverfl { get; set; }

      /// <summary>
      /// Damage Code
      /// </summary>
      [StringValidationAttribute]
      public string damagecd { get; set; }

      /// <summary>
      /// # Stk Units
      /// </summary>
      public decimal unitconv { get; set; }

      /// <summary>
      /// Spec Rec Link
      /// </summary>
      public int icspecrecno { get; set; }

      /// <summary>
      /// Original Claim #
      /// </summary>
      public int origclaimno { get; set; }

      /// <summary>
      /// Journal #
      /// </summary>
      public int subjrnlno { get; set; }

      /// <summary>
      /// Set #
      /// </summary>
      public int subsetno { get; set; }

      /// <summary>
      /// Resubmitted Amount
      /// </summary>
      public decimal resubamt { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// User 10
      /// </summary>
      [StringValidationAttribute]
      public string user10 { get; set; }

      /// <summary>
      /// User 11
      /// </summary>
      [StringValidationAttribute]
      public string user11 { get; set; }

      /// <summary>
      /// User 12
      /// </summary>
      [StringValidationAttribute]
      public string user12 { get; set; }

      /// <summary>
      /// User 13
      /// </summary>
      [StringValidationAttribute]
      public string user13 { get; set; }

      /// <summary>
      /// User 14
      /// </summary>
      [StringValidationAttribute]
      public string user14 { get; set; }

      /// <summary>
      /// User 15
      /// </summary>
      [StringValidationAttribute]
      public string user15 { get; set; }

      /// <summary>
      /// User 16
      /// </summary>
      [StringValidationAttribute]
      public string user16 { get; set; }

      /// <summary>
      /// User 17
      /// </summary>
      [StringValidationAttribute]
      public string user17 { get; set; }

      /// <summary>
      /// User 18
      /// </summary>
      [StringValidationAttribute]
      public string user18 { get; set; }

      /// <summary>
      /// User 19
      /// </summary>
      [StringValidationAttribute]
      public string user19 { get; set; }

      /// <summary>
      /// User 20
      /// </summary>
      [StringValidationAttribute]
      public string user20 { get; set; }

      /// <summary>
      /// User 21
      /// </summary>
      [StringValidationAttribute]
      public string user21 { get; set; }

      /// <summary>
      /// User 22
      /// </summary>
      [StringValidationAttribute]
      public string user22 { get; set; }

      /// <summary>
      /// User 23
      /// </summary>
      [StringValidationAttribute]
      public string user23 { get; set; }

      /// <summary>
      /// User 24
      /// </summary>
      [StringValidationAttribute]
      public string user24 { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildSwewlBaseFromRow<T>(DataRow row) where T:SwewlBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.proddesc2 = row.IsNull("proddesc2") ? string.Empty : row.Field<string>("proddesc2");
         entity.proddesc = row.IsNull("proddesc") ? string.Empty : row.Field<string>("proddesc");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.claimamt = row.IsNull("claimamt") ? decimal.Zero : row.Field<decimal>("claimamt");
         entity.creditamt = row.IsNull("creditamt") ? decimal.Zero : row.Field<decimal>("creditamt");
         entity.linecomment = row.IsNull("linecomment") ? string.Empty : row.Field<string>("linecomment");
         entity.printcommentfl = row.Field<bool>("printcommentfl");
         entity.qty = row.IsNull("qty") ? decimal.Zero : row.Field<decimal>("qty");
         entity.extclaimamt = row.IsNull("extclaimamt") ? decimal.Zero : row.Field<decimal>("extclaimamt");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.intclaimno = row.IsNull("intclaimno") ? 0 : row.Field<int>("intclaimno");
         entity.extcramt = row.IsNull("extcramt") ? decimal.Zero : row.Field<decimal>("extcramt");
         entity.srtqty = row.IsNull("srtqty") ? decimal.Zero : row.Field<decimal>("srtqty");
         entity.srtoverfl = row.Field<bool>("srtoverfl");
         entity.damagecd = row.IsNull("damagecd") ? string.Empty : row.Field<string>("damagecd");
         entity.unitconv = row.IsNull("unitconv") ? decimal.Zero : row.Field<decimal>("unitconv");
         entity.icspecrecno = row.IsNull("icspecrecno") ? 0 : row.Field<int>("icspecrecno");
         entity.origclaimno = row.IsNull("origclaimno") ? 0 : row.Field<int>("origclaimno");
         entity.subjrnlno = row.IsNull("subjrnlno") ? 0 : row.Field<int>("subjrnlno");
         entity.subsetno = row.IsNull("subsetno") ? 0 : row.Field<int>("subsetno");
         entity.resubamt = row.IsNull("resubamt") ? decimal.Zero : row.Field<decimal>("resubamt");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.user10 = row.IsNull("user10") ? string.Empty : row.Field<string>("user10");
         entity.user11 = row.IsNull("user11") ? string.Empty : row.Field<string>("user11");
         entity.user12 = row.IsNull("user12") ? string.Empty : row.Field<string>("user12");
         entity.user13 = row.IsNull("user13") ? string.Empty : row.Field<string>("user13");
         entity.user14 = row.IsNull("user14") ? string.Empty : row.Field<string>("user14");
         entity.user15 = row.IsNull("user15") ? string.Empty : row.Field<string>("user15");
         entity.user16 = row.IsNull("user16") ? string.Empty : row.Field<string>("user16");
         entity.user17 = row.IsNull("user17") ? string.Empty : row.Field<string>("user17");
         entity.user18 = row.IsNull("user18") ? string.Empty : row.Field<string>("user18");
         entity.user19 = row.IsNull("user19") ? string.Empty : row.Field<string>("user19");
         entity.user20 = row.IsNull("user20") ? string.Empty : row.Field<string>("user20");
         entity.user21 = row.IsNull("user21") ? string.Empty : row.Field<string>("user21");
         entity.user22 = row.IsNull("user22") ? string.Empty : row.Field<string>("user22");
         entity.user23 = row.IsNull("user23") ? string.Empty : row.Field<string>("user23");
         entity.user24 = row.IsNull("user24") ? string.Empty : row.Field<string>("user24");
         entity.rowID = row.Field<byte[]>("swewlRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSwewlBase(ref DataRow row, SwewlBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("proddesc2", entity.proddesc2);
         row.SetField("proddesc", entity.proddesc);
         row.SetField("lineno", entity.lineno);
         row.SetField("claimamt", entity.claimamt);
         row.SetField("creditamt", entity.creditamt);
         row.SetField("linecomment", entity.linecomment);
         row.SetField("printcommentfl", entity.printcommentfl);
         row.SetField("qty", entity.qty);
         row.SetField("extclaimamt", entity.extclaimamt);
         row.SetField("prod", entity.prod);
         row.SetField("intclaimno", entity.intclaimno);
         row.SetField("extcramt", entity.extcramt);
         row.SetField("srtqty", entity.srtqty);
         row.SetField("srtoverfl", entity.srtoverfl);
         row.SetField("damagecd", entity.damagecd);
         row.SetField("unitconv", entity.unitconv);
         row.SetField("icspecrecno", entity.icspecrecno);
         row.SetField("origclaimno", entity.origclaimno);
         row.SetField("subjrnlno", entity.subjrnlno);
         row.SetField("subsetno", entity.subsetno);
         row.SetField("resubamt", entity.resubamt);
         row.SetField("transproc", entity.transproc);
         row.SetField("user10", entity.user10);
         row.SetField("user11", entity.user11);
         row.SetField("user12", entity.user12);
         row.SetField("user13", entity.user13);
         row.SetField("user14", entity.user14);
         row.SetField("user15", entity.user15);
         row.SetField("user16", entity.user16);
         row.SetField("user17", entity.user17);
         row.SetField("user18", entity.user18);
         row.SetField("user19", entity.user19);
         row.SetField("user20", entity.user20);
         row.SetField("user21", entity.user21);
         row.SetField("user22", entity.user22);
         row.SetField("user23", entity.user23);
         row.SetField("user24", entity.user24);
         row.SetField("swewlRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, SwewlBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("lineno", entity.lineno);
         row.SetField("intclaimno", entity.intclaimno);
         row.SetField("swewlRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	