//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SW
{
   /// <summary>
   /// Service Warranty Setup Job Type
   /// </summary>
   
   public partial class SwsjBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Company #
      /// </summary>
      [Key,Order]
      public int cono { get; set; }

      /// <summary>
      /// Job Type
      /// </summary>
      [Key,Order,StringValidationAttribute]
      public string jobtype { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// Claim Type
      /// </summary>
      [StringValidationAttribute]
      public string claimtype { get; set; }

      /// <summary>
      /// Description
      /// </summary>
      [StringValidationAttribute]
      public string descrip { get; set; }

      /// <summary>
      /// Category
      /// </summary>
      [StringValidationAttribute]
      public string prodcat { get; set; }

      /// <summary>
      /// Classification Code
      /// </summary>
      [StringValidationAttribute]
      public string classcd { get; set; }

      /// <summary>
      /// TQM Survey
      /// </summary>
      [StringValidationAttribute]
      public string activitycd { get; set; }

      /// <summary>
      /// Order Type to Generate
      /// </summary>
      public bool gentype { get; set; }

      /// <summary>
      /// Warranty Code
      /// </summary>
      [StringValidationAttribute]
      public string warrantycd { get; set; }

      /// <summary>
      /// Appears On
      /// </summary>
      [StringValidationAttribute]
      public string invclaimcd { get; set; }

      /// <summary>
      /// Appr
      /// </summary>
      [StringValidationAttribute]
      public string approvty { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }

      /// <summary>
      /// Print Invoice Price
      /// </summary>
      public bool printpricefl { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildSwsjBaseFromRow<T>(DataRow row) where T:SwsjBase, new()
      {
         T entity = new T();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.claimtype = row.IsNull("claimtype") ? string.Empty : row.Field<string>("claimtype");
         entity.jobtype = row.IsNull("jobtype") ? string.Empty : row.Field<string>("jobtype");
         entity.descrip = row.IsNull("descrip") ? string.Empty : row.Field<string>("descrip");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.classcd = row.IsNull("classcd") ? string.Empty : row.Field<string>("classcd");
         entity.activitycd = row.IsNull("activitycd") ? string.Empty : row.Field<string>("activitycd");
         entity.gentype = row.Field<bool>("gentype");
         entity.warrantycd = row.IsNull("warrantycd") ? string.Empty : row.Field<string>("warrantycd");
         entity.invclaimcd = row.IsNull("invclaimcd") ? string.Empty : row.Field<string>("invclaimcd");
         entity.approvty = row.IsNull("approvty") ? string.Empty : row.Field<string>("approvty");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.printpricefl = row.Field<bool>("printpricefl");
         entity.rowID = row.Field<byte[]>("swsjRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSwsjBase(ref DataRow row, SwsjBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("claimtype", entity.claimtype);
         row.SetField("jobtype", entity.jobtype);
         row.SetField("descrip", entity.descrip);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("classcd", entity.classcd);
         row.SetField("activitycd", entity.activitycd);
         row.SetField("gentype", entity.gentype);
         row.SetField("warrantycd", entity.warrantycd);
         row.SetField("invclaimcd", entity.invclaimcd);
         row.SetField("approvty", entity.approvty);
         row.SetField("transproc", entity.transproc);
         row.SetField("printpricefl", entity.printpricefl);
         row.SetField("swsjRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, SwsjBase entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("jobtype", entity.jobtype);
         row.SetField("swsjRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	