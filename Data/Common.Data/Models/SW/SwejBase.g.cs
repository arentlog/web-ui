//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 12700 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;
       
namespace Infor.Sxe.Common.Data.Models.SW
{
   /// <summary>
   /// Service Activity
   /// </summary>
   
   public partial class SwejBase: ModelBase, IUserFields
   {

      /// <summary>
      /// Prospect #
      /// </summary>
      public decimal prosno { get; set; }

      /// <summary>
      /// Lead Technician
      /// </summary>
      [StringValidationAttribute]
      public string leadtech { get; set; }

      /// <summary>
      /// Start
      /// </summary>
      public DateTime? workdt { get; set; }

      /// <summary>
      /// Activity
      /// </summary>
      [StringValidationAttribute]
      public string activitycd { get; set; }

      /// <summary>
      /// Campaign
      /// </summary>
      [StringValidationAttribute]
      public string jobcd { get; set; }

      /// <summary>
      /// Last Change By
      /// </summary>
      [StringValidationAttribute]
      public string operinit { get; set; }

      /// <summary>
      /// Last Change Date
      /// </summary>
      public DateTime? transdt { get; set; }

      /// <summary>
      /// Last Change Time
      /// </summary>
      [StringValidationAttribute]
      public string transtm { get; set; }

      /// <summary>
      /// Repair Order #
      /// </summary>
      public int repairordno { get; set; }

      /// <summary>
      /// Comment
      /// </summary>
      [StringValidationAttribute]
      public string comment { get; set; }

      /// <summary>
      /// sequenceno
      /// </summary>
      public int sequenceno { get; set; }

      /// <summary>
      /// Billable
      /// </summary>
      public bool billfl { get; set; }

      /// <summary>
      /// Elapsed Time
      /// </summary>
      public int elapsedtm { get; set; }

      /// <summary>
      /// User 1
      /// </summary>
      [StringValidationAttribute]
      public string user1 { get; set; }

      /// <summary>
      /// User 2
      /// </summary>
      [StringValidationAttribute]
      public string user2 { get; set; }

      /// <summary>
      /// User 3
      /// </summary>
      [StringValidationAttribute]
      public string user3 { get; set; }

      /// <summary>
      /// User 4
      /// </summary>
      [StringValidationAttribute]
      public string user4 { get; set; }

      /// <summary>
      /// User 5
      /// </summary>
      [StringValidationAttribute]
      public string user5 { get; set; }

      /// <summary>
      /// User 6
      /// </summary>
      public decimal? user6 { get; set; }

      /// <summary>
      /// User 7
      /// </summary>
      public decimal? user7 { get; set; }

      /// <summary>
      /// User 8
      /// </summary>
      public DateTime? user8 { get; set; }

      /// <summary>
      /// User 9
      /// </summary>
      public DateTime? user9 { get; set; }

      /// <summary>
      /// repairordsuf
      /// </summary>
      public int repairordsuf { get; set; }

      /// <summary>
      /// Company #
      /// </summary>
      public int cono { get; set; }

      /// <summary>
      /// Trans Proc
      /// </summary>
      [StringValidationAttribute]
      public string transproc { get; set; }
      
      /// <summary>
      /// Row ID
      /// </summary>
      [Key,StringValidationAttribute]
      public string rowID { get; set; }



      /// <summary>
      /// Build a class from a database row
      /// </summary>
      public static T BuildSwejBaseFromRow<T>(DataRow row) where T:SwejBase, new()
      {
         T entity = new T();
         entity.prosno = row.IsNull("prosno") ? decimal.Zero : row.Field<decimal>("prosno");
         entity.leadtech = row.IsNull("leadtech") ? string.Empty : row.Field<string>("leadtech");
         entity.workdt = row.Field<DateTime?>("workdt");
         entity.activitycd = row.IsNull("activitycd") ? string.Empty : row.Field<string>("activitycd");
         entity.jobcd = row.IsNull("jobcd") ? string.Empty : row.Field<string>("jobcd");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.repairordno = row.IsNull("repairordno") ? 0 : row.Field<int>("repairordno");
         entity.comment = row.IsNull("comment") ? string.Empty : row.Field<string>("comment");
         entity.sequenceno = row.IsNull("sequenceno") ? 0 : row.Field<int>("sequenceno");
         entity.billfl = row.Field<bool>("billfl");
         entity.elapsedtm = row.IsNull("elapsedtm") ? 0 : row.Field<int>("elapsedtm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.repairordsuf = row.IsNull("repairordsuf") ? 0 : row.Field<int>("repairordsuf");
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.rowID = row.Field<byte[]>("swejRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSwejBase(ref DataRow row, SwejBase entity)
      {
         row.SetField("prosno", entity.prosno);
         row.SetField("leadtech", entity.leadtech);
         row.SetField("workdt", entity.workdt);
         row.SetField("activitycd", entity.activitycd);
         row.SetField("jobcd", entity.jobcd);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("repairordno", entity.repairordno);
         row.SetField("comment", entity.comment);
         row.SetField("sequenceno", entity.sequenceno);
         row.SetField("billfl", entity.billfl);
         row.SetField("elapsedtm", entity.elapsedtm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("repairordsuf", entity.repairordsuf);
         row.SetField("cono", entity.cono);
         row.SetField("transproc", entity.transproc);
         row.SetField("swejRowID", entity.rowID.ToByteArray());
      }   
      
      /// <summary>
      /// Build a minimal row from a class (key fields only)
      /// </summary>
      public static void BuildMinimalRow(ref DataRow row, SwejBase entity)
      {
         row.SetField("swejRowID", entity.rowID.ToByteArray());
      }   
   }
}
#pragma warning restore 1591
	