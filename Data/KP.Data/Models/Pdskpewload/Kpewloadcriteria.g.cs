//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.KP.Data.Models.Pdskpewload
{
   [ModelName("Infor.Sxe.KP.Data.Models.Pdskpewload.Kpewloadcriteria")]
   public partial class Kpewloadcriteria : ModelBase
   {
      public int recordlimit { get; set; }
      public int wono { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      [StringValidationAttribute]
      public string rrarinit { get; set; }
      [StringValidationAttribute]
      public string shipprod { get; set; }
      public int stagecd { get; set; }
      [StringValidationAttribute]
      public string searchstatuscd { get; set; }
      [StringValidationAttribute]
      public string sortorder { get; set; }
      public bool tiedonlyfl { get; set; }
      public bool returnfl { get; set; }
      public int verno { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Kpewloadcriteria BuildKpewloadcriteriaFromRow(DataRow row)
      {
         Kpewloadcriteria entity = new Kpewloadcriteria();
         entity.recordlimit = row.IsNull("recordlimit") ? 0 : row.Field<int>("recordlimit");
         entity.wono = row.IsNull("wono") ? 0 : row.Field<int>("wono");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.rrarinit = row.IsNull("rrarinit") ? string.Empty : row.Field<string>("rrarinit");
         entity.shipprod = row.IsNull("shipprod") ? string.Empty : row.Field<string>("shipprod");
         entity.stagecd = row.IsNull("stagecd") ? 0 : row.Field<int>("stagecd");
         entity.searchstatuscd = row.IsNull("searchstatuscd") ? string.Empty : row.Field<string>("searchstatuscd");
         entity.sortorder = row.IsNull("sortorder") ? string.Empty : row.Field<string>("sortorder");
         entity.tiedonlyfl = row.Field<bool>("tiedonlyfl");
         entity.returnfl = row.Field<bool>("returnfl");
         entity.verno = row.IsNull("verno") ? 0 : row.Field<int>("verno");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromKpewloadcriteria(ref DataRow row, Kpewloadcriteria entity)
      {
         row.SetField("recordlimit", entity.recordlimit);
         row.SetField("wono", entity.wono);
         row.SetField("whse", entity.whse);
         row.SetField("rrarinit", entity.rrarinit);
         row.SetField("shipprod", entity.shipprod);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("searchstatuscd", entity.searchstatuscd);
         row.SetField("sortorder", entity.sortorder);
         row.SetField("tiedonlyfl", entity.tiedonlyfl);
         row.SetField("returnfl", entity.returnfl);
         row.SetField("verno", entity.verno);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
