//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.KP.Data.Repositories
{
   using Infor.Sxe.KP.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdskpcomponentprocess;
   using Models.Pdsmessaging;
   using Models.Complex;

   public partial class AskpsetupRepository : RepositoryBase
   {
      private AskpsetupAdapter adapter;
  
      public AskpsetupRepository(IProgressConnection connection)
      {
         this.adapter = new AskpsetupAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public void KPCopySubstitutes(AskpsetupKPCopySubstitutesRequestAPI AskpsetupKPCopySubstitutesRequestAPI)
      {
         this.adapter.KPCopySubstitutes(AskpsetupKPCopySubstitutesRequestAPI);
      }
  
      public AskpsetupKPCreateUpdateComponentResponseAPI KPCreateUpdateComponent(IEnumerable<Kpcomponentprocess> kpcomponentprocess)
      {
         return this.adapter.KPCreateUpdateComponent(kpcomponentprocess);
      }
  
      public int KPCreateNewVersion(string pvProd, int pvOldverno)
      {
         return this.adapter.KPCreateNewVersion(pvProd, pvOldverno);
      }
  
      public int KPGetLastVerno(AskpsetupKPGetLastVernoRequestAPI AskpsetupKPGetLastVernoRequestAPI)
      {
         return this.adapter.KPGetLastVerno(AskpsetupKPGetLastVernoRequestAPI);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  