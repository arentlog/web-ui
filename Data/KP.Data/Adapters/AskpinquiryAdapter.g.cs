//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using NLog;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.KP.Data.Adapters
{
   using com.infor.sxproxy.kpproxy;
   using com.infor.sxproxy.kpproxy.StrongTypesNS;
    
   using Models.PdsContext;
   using Models.Pdscreatewolisttt;
   using Models.Pdskpiwloadheader;
   using Models.Complex;

   public partial class AskpinquiryAdapter : AdapterBase<pdsContextDataSet>
   {
      private KPProxyAppObject proxyAppObject;
      
      public AskpinquiryAdapter(IProgressConnection connection) : base(connection)
      {
         try 
         {
            this.proxyAppObject = new KPProxyAppObject(connection.Connection);
            this.pdsContext = new pdsContextDataSet();
            
            this.OnCreated();
         }
         catch (Exception ex)
         {
            NLogLogger.ErrorException("Failed in adapter ", ex);
            ErrorReportingHelper.ReportProgramErrors($"Error in AskpinquiryAdapter constructor - {ex.Message}");
         }
      }
  
      partial void OnCreated();
    
      public AskpinquiryCreateWOListTTResponseAPI CreateWOListTT(Createwolistttcriteria createwolistttcriteria)
      {   
         var result = new AskpinquiryCreateWOListTTResponseAPI();
         
         var pdscreatewolisttt = new pdscreatewolistttDataSet();
            
         DataRow ttblcreatewolistttcriteriaCriteria = pdscreatewolisttt.ttblcreatewolistttcriteria.NewttblcreatewolistttcriteriaRow();
         Createwolistttcriteria.UpdateRowFromCreatewolistttcriteria(ref ttblcreatewolistttcriteriaCriteria, createwolistttcriteria);
         pdscreatewolisttt.ttblcreatewolistttcriteria.AddttblcreatewolistttcriteriaRow((pdscreatewolistttDataSet.ttblcreatewolistttcriteriaRow)ttblcreatewolistttcriteriaCriteria);
            
         string cErrorMessage = string.Empty;
         bool lMoreRecords = false;
   
         
         NLogLoggerP.Trace("CreateWOListTT - Askpinquiry - Before Call");
         StopwatchUtil.Time(
         () =>
            {
               using (var poAskpinquiryproxy = this.proxyAppObject.CreatePO_askpinquiryproxy())
               {
                   this.SetRequiredContextParameters();
                   poAskpinquiryproxy.CreateWOListTT(ref pdsContext, ref pdscreatewolisttt, out cErrorMessage, out lMoreRecords);
               }
            });
         NLogLoggerP.Info("CreateWOListTT - Askpinquiry - After Call");

         
         this.ReportErrors(cErrorMessage);
         this.ReportErrors(this.pdsContext);
         this.ReportErrors(pdscreatewolisttt); 
    
         foreach (DataRow row in pdscreatewolisttt.ttblcreatewolistttresults)
         {
            result.createwolistttresults.Add(Createwolistttresults.BuildCreatewolistttresultsFromRow(row));
         }     
         result.lMoreRecords = lMoreRecords;
          
         return result;
          
      }

      public Kpiwloadheaderresults KPIWLoadHeader(Kpiwloadheadercriteria kpiwloadheadercriteria)
      {   
         var result = new Kpiwloadheaderresults();
         
         var pdskpiwloadheader = new pdskpiwloadheaderDataSet();
            
         DataRow ttblkpiwloadheadercriteriaCriteria = pdskpiwloadheader.ttblkpiwloadheadercriteria.NewttblkpiwloadheadercriteriaRow();
         Kpiwloadheadercriteria.UpdateRowFromKpiwloadheadercriteria(ref ttblkpiwloadheadercriteriaCriteria, kpiwloadheadercriteria);
         pdskpiwloadheader.ttblkpiwloadheadercriteria.AddttblkpiwloadheadercriteriaRow((pdskpiwloadheaderDataSet.ttblkpiwloadheadercriteriaRow)ttblkpiwloadheadercriteriaCriteria);
            
         string cErrorMessage = string.Empty;
   
         
         NLogLoggerP.Trace("KPIWLoadHeader - Askpinquiry - Before Call");
         StopwatchUtil.Time(
         () =>
            {
               using (var poAskpinquiryproxy = this.proxyAppObject.CreatePO_askpinquiryproxy())
               {
                   this.SetRequiredContextParameters();
                   poAskpinquiryproxy.KPIWLoadHeader(ref pdsContext, ref pdskpiwloadheader, out cErrorMessage);
               }
            });
         NLogLoggerP.Info("KPIWLoadHeader - Askpinquiry - After Call");

         
         this.ReportErrors(cErrorMessage);
         this.ReportErrors(this.pdsContext);
         this.ReportErrors(pdskpiwloadheader); 
    
         if (pdskpiwloadheader.ttblkpiwloadheaderresults.Count > 0) 
         { 
             result = Kpiwloadheaderresults.BuildKpiwloadheaderresultsFromRow(pdskpiwloadheader.ttblkpiwloadheaderresults[0]);
         } 
              
          
         return result;
          
      }

      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }	
         this.proxyAppObject?.Dispose();

         base.Dispose(true);
      }
  
   }
}
#pragma warning restore 1591
  