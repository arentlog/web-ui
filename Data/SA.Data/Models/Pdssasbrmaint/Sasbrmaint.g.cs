//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.SA.Data.Models.Pdssasbrmaint
{
   [ModelName("Infor.Sxe.SA.Data.Models.Pdssasbrmaint.Sasbrmaint")]
   public partial class Sasbrmaint : ModelBase
   {
      [StringValidationAttribute]
      public string cfunction { get; set; }
      [StringValidationAttribute]
      public string cbCategory { get; set; }
      [StringValidationAttribute]
      public string cbRule { get; set; }
      public bool cbCategorySensitive { get; set; }
      public bool cbRuleSensitive { get; set; }
      public bool tgGlobal { get; set; }
      public bool tgGlobalSensitive { get; set; }
      public bool tgCompany { get; set; }
      public bool tgCompanySensitive { get; set; }
      [StringValidationAttribute]
      public string tradingPartnervalues { get; set; }
      public bool tradingPartnerSensitive { get; set; }
      public bool conoSensitive { get; set; }
      public bool conoHidden { get; set; }
      public bool lookupConoSensitive { get; set; }
      public decimal custVend { get; set; }
      public bool custVendSensitive { get; set; }
      public bool custVendHidden { get; set; }
      [StringValidationAttribute]
      public string custVendLabel { get; set; }
      [StringValidationAttribute]
      public string custVendName { get; set; }
      public bool lookupCustnoSensitive { get; set; }
      [StringValidationAttribute]
      public string shipFromTo { get; set; }
      public bool shipFromToSensitive { get; set; }
      public bool shipFromToHidden { get; set; }
      [StringValidationAttribute]
      public string shipFromToLabel { get; set; }
      [StringValidationAttribute]
      public string shipFromToName { get; set; }
      public bool lookupShiptoSensitive { get; set; }
      public bool lookupShiptoHidden { get; set; }
      public bool docHandlerSensitive { get; set; }
      public bool directionSensitive { get; set; }
      public bool nodeNameSensitive { get; set; }
      public bool attrNameSensitive { get; set; }
      public bool ruleTypeSensitive { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Sasbrmaint BuildSasbrmaintFromRow(DataRow row)
      {
         Sasbrmaint entity = new Sasbrmaint();
         entity.cfunction = row.IsNull("cfunction") ? string.Empty : row.Field<string>("cfunction");
         entity.cbCategory = row.IsNull("cbCategory") ? string.Empty : row.Field<string>("cbCategory");
         entity.cbRule = row.IsNull("cbRule") ? string.Empty : row.Field<string>("cbRule");
         entity.cbCategorySensitive = row.Field<bool>("cbCategory_sensitive");
         entity.cbRuleSensitive = row.Field<bool>("cbRule_sensitive");
         entity.tgGlobal = row.Field<bool>("tgGlobal");
         entity.tgGlobalSensitive = row.Field<bool>("tgGlobal_sensitive");
         entity.tgCompany = row.Field<bool>("tgCompany");
         entity.tgCompanySensitive = row.Field<bool>("tgCompany_sensitive");
         entity.tradingPartnervalues = row.IsNull("TradingPartnervalues") ? string.Empty : row.Field<string>("TradingPartnervalues");
         entity.tradingPartnerSensitive = row.Field<bool>("TradingPartner_sensitive");
         entity.conoSensitive = row.Field<bool>("Cono_sensitive");
         entity.conoHidden = row.Field<bool>("Cono_hidden");
         entity.lookupConoSensitive = row.Field<bool>("LookupCono_sensitive");
         entity.custVend = row.IsNull("CustVend") ? decimal.Zero : row.Field<decimal>("CustVend");
         entity.custVendSensitive = row.Field<bool>("CustVend_sensitive");
         entity.custVendHidden = row.Field<bool>("CustVend_hidden");
         entity.custVendLabel = row.IsNull("CustVend_label") ? string.Empty : row.Field<string>("CustVend_label");
         entity.custVendName = row.IsNull("CustVendName") ? string.Empty : row.Field<string>("CustVendName");
         entity.lookupCustnoSensitive = row.Field<bool>("LookupCustno_sensitive");
         entity.shipFromTo = row.IsNull("ShipFromTo") ? string.Empty : row.Field<string>("ShipFromTo");
         entity.shipFromToSensitive = row.Field<bool>("ShipFromTo_sensitive");
         entity.shipFromToHidden = row.Field<bool>("ShipFromTo_hidden");
         entity.shipFromToLabel = row.IsNull("ShipFromTo_label") ? string.Empty : row.Field<string>("ShipFromTo_label");
         entity.shipFromToName = row.IsNull("ShipFromToName") ? string.Empty : row.Field<string>("ShipFromToName");
         entity.lookupShiptoSensitive = row.Field<bool>("LookupShipto_sensitive");
         entity.lookupShiptoHidden = row.Field<bool>("LookupShipto_hidden");
         entity.docHandlerSensitive = row.Field<bool>("DocHandler_sensitive");
         entity.directionSensitive = row.Field<bool>("Direction_sensitive");
         entity.nodeNameSensitive = row.Field<bool>("NodeName_sensitive");
         entity.attrNameSensitive = row.Field<bool>("AttrName_sensitive");
         entity.ruleTypeSensitive = row.Field<bool>("RuleType_sensitive");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSasbrmaint(ref DataRow row, Sasbrmaint entity)
      {
         row.SetField("cfunction", entity.cfunction);
         row.SetField("cbCategory", entity.cbCategory);
         row.SetField("cbRule", entity.cbRule);
         row.SetField("cbCategory_sensitive", entity.cbCategorySensitive);
         row.SetField("cbRule_sensitive", entity.cbRuleSensitive);
         row.SetField("tgGlobal", entity.tgGlobal);
         row.SetField("tgGlobal_sensitive", entity.tgGlobalSensitive);
         row.SetField("tgCompany", entity.tgCompany);
         row.SetField("tgCompany_sensitive", entity.tgCompanySensitive);
         row.SetField("TradingPartnervalues", entity.tradingPartnervalues);
         row.SetField("TradingPartner_sensitive", entity.tradingPartnerSensitive);
         row.SetField("Cono_sensitive", entity.conoSensitive);
         row.SetField("Cono_hidden", entity.conoHidden);
         row.SetField("LookupCono_sensitive", entity.lookupConoSensitive);
         row.SetField("CustVend", entity.custVend);
         row.SetField("CustVend_sensitive", entity.custVendSensitive);
         row.SetField("CustVend_hidden", entity.custVendHidden);
         row.SetField("CustVend_label", entity.custVendLabel);
         row.SetField("CustVendName", entity.custVendName);
         row.SetField("LookupCustno_sensitive", entity.lookupCustnoSensitive);
         row.SetField("ShipFromTo", entity.shipFromTo);
         row.SetField("ShipFromTo_sensitive", entity.shipFromToSensitive);
         row.SetField("ShipFromTo_hidden", entity.shipFromToHidden);
         row.SetField("ShipFromTo_label", entity.shipFromToLabel);
         row.SetField("ShipFromToName", entity.shipFromToName);
         row.SetField("LookupShipto_sensitive", entity.lookupShiptoSensitive);
         row.SetField("LookupShipto_hidden", entity.lookupShiptoHidden);
         row.SetField("DocHandler_sensitive", entity.docHandlerSensitive);
         row.SetField("Direction_sensitive", entity.directionSensitive);
         row.SetField("NodeName_sensitive", entity.nodeNameSensitive);
         row.SetField("AttrName_sensitive", entity.attrNameSensitive);
         row.SetField("RuleType_sensitive", entity.ruleTypeSensitive);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
