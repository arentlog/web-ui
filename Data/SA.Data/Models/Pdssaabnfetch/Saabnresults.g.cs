//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.SA.Data.Models.Pdssaabnfetch
{
   [ModelName("Infor.Sxe.SA.Data.Models.Pdssaabnfetch.Saabnresults")]
   public partial class Saabnresults : ModelBase, IUserFields
   {
      public int cono { get; set; }
      [StringValidationAttribute]
      public string noun { get; set; }
      public bool syncbodfl { get; set; }
      public bool processbodfl { get; set; }
      public bool level1Allowfl { get; set; }
      [StringValidationAttribute]
      public string edenablelev1 { get; set; }
      [StringValidationAttribute]
      public string extradatalevel1 { get; set; }
      public bool level2Allowfl { get; set; }
      [StringValidationAttribute]
      public string edenablelev2 { get; set; }
      [StringValidationAttribute]
      public string extradatalevel2 { get; set; }
      [StringValidationAttribute]
      public string operinit { get; set; }
      public DateTime? transdt { get; set; }
      [StringValidationAttribute]
      public string transtm { get; set; }
      [StringValidationAttribute]
      public string transproc { get; set; }
      [StringValidationAttribute]
      public string user1 { get; set; }
      [StringValidationAttribute]
      public string user2 { get; set; }
      [StringValidationAttribute]
      public string user3 { get; set; }
      [StringValidationAttribute]
      public string user4 { get; set; }
      [StringValidationAttribute]
      public string user5 { get; set; }
      public decimal? user6 { get; set; }
      public decimal? user7 { get; set; }
      public DateTime? user8 { get; set; }
      public DateTime? user9 { get; set; }
      [StringValidationAttribute]
      public string rowID { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Saabnresults BuildSaabnresultsFromRow(DataRow row)
      {
         Saabnresults entity = new Saabnresults();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.noun = row.IsNull("noun") ? string.Empty : row.Field<string>("noun");
         entity.syncbodfl = row.Field<bool>("syncbodfl");
         entity.processbodfl = row.Field<bool>("processbodfl");
         entity.level1Allowfl = row.Field<bool>("level1-allowfl");
         entity.edenablelev1 = row.IsNull("edenablelev1") ? string.Empty : row.Field<string>("edenablelev1");
         entity.extradatalevel1 = row.IsNull("extradatalevel1") ? string.Empty : row.Field<string>("extradatalevel1");
         entity.level2Allowfl = row.Field<bool>("level2-allowfl");
         entity.edenablelev2 = row.IsNull("edenablelev2") ? string.Empty : row.Field<string>("edenablelev2");
         entity.extradatalevel2 = row.IsNull("extradatalevel2") ? string.Empty : row.Field<string>("extradatalevel2");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.rowID = row.Field<byte[]>("rowID").ToStringEncoded();
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSaabnresults(ref DataRow row, Saabnresults entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("noun", entity.noun);
         row.SetField("syncbodfl", entity.syncbodfl);
         row.SetField("processbodfl", entity.processbodfl);
         row.SetField("level1-allowfl", entity.level1Allowfl);
         row.SetField("edenablelev1", entity.edenablelev1);
         row.SetField("extradatalevel1", entity.extradatalevel1);
         row.SetField("level2-allowfl", entity.level2Allowfl);
         row.SetField("edenablelev2", entity.edenablelev2);
         row.SetField("extradatalevel2", entity.extradatalevel2);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("rowID", entity.rowID.ToByteArray());
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
