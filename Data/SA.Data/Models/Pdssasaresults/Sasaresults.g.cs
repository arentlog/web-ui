//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.SA.Data.Models.Pdssasaresults
{
   [ModelName("Infor.Sxe.SA.Data.Models.Pdssasaresults.Sasaresults")]
   public partial class Sasaresults : ModelBase, IUserFields
   {
      public bool forcelogin { get; set; }
      public bool monitorfl { get; set; }
      [StringValidationAttribute]
      public string docdir { get; set; }
      [StringValidationAttribute]
      public string sysdir { get; set; }
      public int timeout { get; set; }
      public int begwtno { get; set; }
      public int nextwtno { get; set; }
      public int endwtno { get; set; }
      [StringValidationAttribute]
      public string licenseno { get; set; }
      [StringValidationAttribute]
      public string licenseto { get; set; }
      public int nousers { get; set; }
      public decimal rdcustno { get; set; }
      public DateTime? licensedt { get; set; }
      public bool modapfl { get; set; }
      public bool modarfl { get; set; }
      public bool modbpfl { get; set; }
      public bool modcmfl { get; set; }
      public bool modedfl { get; set; }
      public bool modglfl { get; set; }
      public bool modibfl { get; set; }
      public bool modicfl { get; set; }
      public bool modisfl { get; set; }
      public bool modjmfl { get; set; }
      public bool modkpfl { get; set; }
      public bool modoefl { get; set; }
      public bool modogfl { get; set; }
      public bool modoifl { get; set; }
      public bool modotfl { get; set; }
      public bool modpmfl { get; set; }
      public bool modpofl { get; set; }
      public bool modrsfl { get; set; }
      public bool modslfl { get; set; }
      public bool modsvfl { get; set; }
      public bool modswfl { get; set; }
      public bool modtqfl { get; set; }
      public bool modvafl { get; set; }
      public bool modvtfl { get; set; }
      public bool modwlfl { get; set; }
      public bool modwmfl { get; set; }
      public bool modwtfl { get; set; }
      [StringValidationAttribute]
      public string operinit { get; set; }
      public DateTime? transdt { get; set; }
      [StringValidationAttribute]
      public string transproc { get; set; }
      [StringValidationAttribute]
      public string transtm { get; set; }
      [StringValidationAttribute]
      public string user1 { get; set; }
      [StringValidationAttribute]
      public string user2 { get; set; }
      [StringValidationAttribute]
      public string user3 { get; set; }
      [StringValidationAttribute]
      public string user4 { get; set; }
      [StringValidationAttribute]
      public string user5 { get; set; }
      public decimal? user6 { get; set; }
      public decimal? user7 { get; set; }
      public DateTime? user8 { get; set; }
      public DateTime? user9 { get; set; }
      public bool ptxsensitive { get; set; }
      public int ptxcono { get; set; }
      [StringValidationAttribute]
      public string ptxfeewhse { get; set; }
      [StringValidationAttribute]
      public string ptxwhse { get; set; }
      public bool multitenantfl { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }
      [StringValidationAttribute]
      public string sasaRowID { get; set; }


      public static Sasaresults BuildSasaresultsFromRow(DataRow row)
      {
         Sasaresults entity = new Sasaresults();
         entity.forcelogin = row.Field<bool>("forcelogin");
         entity.monitorfl = row.Field<bool>("monitorfl");
         entity.docdir = row.IsNull("docdir") ? string.Empty : row.Field<string>("docdir");
         entity.sysdir = row.IsNull("sysdir") ? string.Empty : row.Field<string>("sysdir");
         entity.timeout = row.IsNull("timeout") ? 0 : row.Field<int>("timeout");
         entity.begwtno = row.IsNull("begwtno") ? 0 : row.Field<int>("begwtno");
         entity.nextwtno = row.IsNull("nextwtno") ? 0 : row.Field<int>("nextwtno");
         entity.endwtno = row.IsNull("endwtno") ? 0 : row.Field<int>("endwtno");
         entity.licenseno = row.IsNull("licenseno") ? string.Empty : row.Field<string>("licenseno");
         entity.licenseto = row.IsNull("licenseto") ? string.Empty : row.Field<string>("licenseto");
         entity.nousers = row.IsNull("nousers") ? 0 : row.Field<int>("nousers");
         entity.rdcustno = row.IsNull("rdcustno") ? decimal.Zero : row.Field<decimal>("rdcustno");
         entity.licensedt = row.Field<DateTime?>("licensedt");
         entity.modapfl = row.Field<bool>("modapfl");
         entity.modarfl = row.Field<bool>("modarfl");
         entity.modbpfl = row.Field<bool>("modbpfl");
         entity.modcmfl = row.Field<bool>("modcmfl");
         entity.modedfl = row.Field<bool>("modedfl");
         entity.modglfl = row.Field<bool>("modglfl");
         entity.modibfl = row.Field<bool>("modibfl");
         entity.modicfl = row.Field<bool>("modicfl");
         entity.modisfl = row.Field<bool>("modisfl");
         entity.modjmfl = row.Field<bool>("modjmfl");
         entity.modkpfl = row.Field<bool>("modkpfl");
         entity.modoefl = row.Field<bool>("modoefl");
         entity.modogfl = row.Field<bool>("modogfl");
         entity.modoifl = row.Field<bool>("modoifl");
         entity.modotfl = row.Field<bool>("modotfl");
         entity.modpmfl = row.Field<bool>("modpmfl");
         entity.modpofl = row.Field<bool>("modpofl");
         entity.modrsfl = row.Field<bool>("modrsfl");
         entity.modslfl = row.Field<bool>("modslfl");
         entity.modsvfl = row.Field<bool>("modsvfl");
         entity.modswfl = row.Field<bool>("modswfl");
         entity.modtqfl = row.Field<bool>("modtqfl");
         entity.modvafl = row.Field<bool>("modvafl");
         entity.modvtfl = row.Field<bool>("modvtfl");
         entity.modwlfl = row.Field<bool>("modwlfl");
         entity.modwmfl = row.Field<bool>("modwmfl");
         entity.modwtfl = row.Field<bool>("modwtfl");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.ptxsensitive = row.Field<bool>("ptxsensitive");
         entity.ptxcono = row.IsNull("ptxcono") ? 0 : row.Field<int>("ptxcono");
         entity.ptxfeewhse = row.IsNull("ptxfeewhse") ? string.Empty : row.Field<string>("ptxfeewhse");
         entity.ptxwhse = row.IsNull("ptxwhse") ? string.Empty : row.Field<string>("ptxwhse");
         entity.multitenantfl = row.Field<bool>("multitenantfl");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         entity.sasaRowID = row.Field<byte[]>("sasaRowID").ToStringEncoded();
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSasaresults(ref DataRow row, Sasaresults entity)
      {
         row.SetField("forcelogin", entity.forcelogin);
         row.SetField("monitorfl", entity.monitorfl);
         row.SetField("docdir", entity.docdir);
         row.SetField("sysdir", entity.sysdir);
         row.SetField("timeout", entity.timeout);
         row.SetField("begwtno", entity.begwtno);
         row.SetField("nextwtno", entity.nextwtno);
         row.SetField("endwtno", entity.endwtno);
         row.SetField("licenseno", entity.licenseno);
         row.SetField("licenseto", entity.licenseto);
         row.SetField("nousers", entity.nousers);
         row.SetField("rdcustno", entity.rdcustno);
         row.SetField("licensedt", entity.licensedt);
         row.SetField("modapfl", entity.modapfl);
         row.SetField("modarfl", entity.modarfl);
         row.SetField("modbpfl", entity.modbpfl);
         row.SetField("modcmfl", entity.modcmfl);
         row.SetField("modedfl", entity.modedfl);
         row.SetField("modglfl", entity.modglfl);
         row.SetField("modibfl", entity.modibfl);
         row.SetField("modicfl", entity.modicfl);
         row.SetField("modisfl", entity.modisfl);
         row.SetField("modjmfl", entity.modjmfl);
         row.SetField("modkpfl", entity.modkpfl);
         row.SetField("modoefl", entity.modoefl);
         row.SetField("modogfl", entity.modogfl);
         row.SetField("modoifl", entity.modoifl);
         row.SetField("modotfl", entity.modotfl);
         row.SetField("modpmfl", entity.modpmfl);
         row.SetField("modpofl", entity.modpofl);
         row.SetField("modrsfl", entity.modrsfl);
         row.SetField("modslfl", entity.modslfl);
         row.SetField("modsvfl", entity.modsvfl);
         row.SetField("modswfl", entity.modswfl);
         row.SetField("modtqfl", entity.modtqfl);
         row.SetField("modvafl", entity.modvafl);
         row.SetField("modvtfl", entity.modvtfl);
         row.SetField("modwlfl", entity.modwlfl);
         row.SetField("modwmfl", entity.modwmfl);
         row.SetField("modwtfl", entity.modwtfl);
         row.SetField("operinit", entity.operinit);
         row.SetField("transdt", entity.transdt);
         row.SetField("transproc", entity.transproc);
         row.SetField("transtm", entity.transtm);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("ptxsensitive", entity.ptxsensitive);
         row.SetField("ptxcono", entity.ptxcono);
         row.SetField("ptxfeewhse", entity.ptxfeewhse);
         row.SetField("ptxwhse", entity.ptxwhse);
         row.SetField("multitenantfl", entity.multitenantfl);
         row.SetField("userfield", entity.userfield);
         row.SetField("sasaRowID", entity.sasaRowID.ToByteArray());

      }
   
   }
}
#pragma warning restore 1591
