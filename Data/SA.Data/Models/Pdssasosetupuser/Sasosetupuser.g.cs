//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.SA.Data.Models.Pdssasosetupuser
{
   [ModelName("Infor.Sxe.SA.Data.Models.Pdssasosetupuser.Sasosetupuser")]
   public partial class Sasosetupuser : ModelBase, IUserFields
   {
      [StringValidationAttribute]
      public string activityOtherOperFl { get; set; }
      public int activitySecrLev { get; set; }
      [StringValidationAttribute]
      public string addFavorites { get; set; }
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }
      public bool addrenabled { get; set; }
      [StringValidationAttribute]
      public string addr3 { get; set; }
      public bool addr3enabled { get; set; }
      public bool aOSecurityset { get; set; }
      [StringValidationAttribute]
      public string apeiaddonfl { get; set; }
      [StringValidationAttribute]
      public string apeiexpensefl { get; set; }
      [StringValidationAttribute]
      public string apeiovertolfl { get; set; }
      [StringValidationAttribute]
      public string apeitradefl { get; set; }
      [StringValidationAttribute]
      public string apeiusecostfl { get; set; }
      [StringValidationAttribute]
      public string arrangeCols { get; set; }
      [StringValidationAttribute]
      public string cannotChange { get; set; }
      [StringValidationAttribute]
      public string cellph { get; set; }
      public bool cellphenabled { get; set; }
      [StringValidationAttribute]
      public string changeAppServer { get; set; }
      [StringValidationAttribute]
      public string changeProfiles { get; set; }
      [StringValidationAttribute]
      public string city { get; set; }
      public bool cityenabled { get; set; }
      public int contactMgmntSecrLev { get; set; }
      [StringValidationAttribute]
      public string dept { get; set; }
      [StringValidationAttribute]
      public string disabled { get; set; }
      public bool divnoallowlistset { get; set; }
      [StringValidationAttribute]
      public string divnorestrictapfl { get; set; }
      [StringValidationAttribute]
      public string divnorestrictarfl { get; set; }
      [StringValidationAttribute]
      public string divnorestrictcrfl { get; set; }
      [StringValidationAttribute]
      public string divnorestrictglfl { get; set; }
      [StringValidationAttribute]
      public string divnorestricticfl { get; set; }
      [StringValidationAttribute]
      public string divnorestrictoefl { get; set; }
      [StringValidationAttribute]
      public string divnorestrictpofl { get; set; }
      [StringValidationAttribute]
      public string divnorestrictwtallfl { get; set; }
      [StringValidationAttribute]
      public string divnorestrictwtfl { get; set; }
      [StringValidationAttribute]
      public string dropboxkey { get; set; }
      public bool dropboxkeyvisible { get; set; }
      [StringValidationAttribute]
      public string email { get; set; }
      [StringValidationAttribute]
      public string entryLayout { get; set; }
      public bool etsecurityset { get; set; }
      [StringValidationAttribute]
      public string faxph { get; set; }
      [StringValidationAttribute]
      public string homeph { get; set; }
      public bool homephenabled { get; set; }
      [StringValidationAttribute]
      public string jobTitle { get; set; }
      public int maxwindows { get; set; }
      [StringValidationAttribute]
      public string menuSet { get; set; }
      public bool menuSetenabled { get; set; }
      [StringValidationAttribute]
      public string mustChange { get; set; }
      [StringValidationAttribute]
      public string operinit { get; set; }
      [StringValidationAttribute]
      public string oereassignarfl { get; set; }
      [StringValidationAttribute]
      public string pagerph { get; set; }
      [StringValidationAttribute]
      public string webprofilename { get; set; }
      public bool webprofilenameenabled { get; set; }
      [StringValidationAttribute]
      public string profileuserset { get; set; }
      public bool profileusersetenabled { get; set; }
      [StringValidationAttribute]
      public string queueD { get; set; }
      public bool queueDset { get; set; }
      [StringValidationAttribute]
      public string queueS { get; set; }
      public bool queueSset { get; set; }
      [StringValidationAttribute]
      public string queuefl { get; set; }
      [StringValidationAttribute]
      public string restricteditapfl { get; set; }
      [StringValidationAttribute]
      public string restricteditarfl { get; set; }
      [StringValidationAttribute]
      public string seccredmgrfl { get; set; }
      [StringValidationAttribute]
      public string state { get; set; }
      public bool stateenabled { get; set; }
      [StringValidationAttribute]
      public string toolbarLayout { get; set; }
      public DateTime? transdt { get; set; }
      [StringValidationAttribute]
      public string transproc { get; set; }
      [StringValidationAttribute]
      public string transtm { get; set; }
      [StringValidationAttribute]
      public string twlwhse { get; set; }
      [StringValidationAttribute]
      public string twlrestrictwhsefl { get; set; }
      public DateTime? twllastuseddt { get; set; }
      [StringValidationAttribute]
      public string unlimitedWebAccess { get; set; }
      [StringValidationAttribute]
      public string updategltrans { get; set; }
      [StringValidationAttribute]
      public string user1 { get; set; }
      [StringValidationAttribute]
      public string user2 { get; set; }
      [StringValidationAttribute]
      public string user3 { get; set; }
      [StringValidationAttribute]
      public string user4 { get; set; }
      [StringValidationAttribute]
      public string user5 { get; set; }
      public decimal? user6 { get; set; }
      public decimal? user7 { get; set; }
      public DateTime? user8 { get; set; }
      public DateTime? user9 { get; set; }
      [StringValidationAttribute]
      public string workph { get; set; }
      [StringValidationAttribute]
      public string webextensiontype { get; set; }
      [StringValidationAttribute]
      public string webmodificationaccesslevel { get; set; }
      [StringValidationAttribute]
      public string websettingaccesslevel { get; set; }
      [StringValidationAttribute]
      public string zipcd { get; set; }
      public bool zipcdenabled { get; set; }
      [StringValidationAttribute]
      public string password { get; set; }
      [StringValidationAttribute]
      public string userName { get; set; }
      public bool userNameenabled { get; set; }
      [StringValidationAttribute]
      public string userid { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Sasosetupuser BuildSasosetupuserFromRow(DataRow row)
      {
         Sasosetupuser entity = new Sasosetupuser();
         entity.activityOtherOperFl = row.IsNull("ActivityOtherOperFl") ? string.Empty : row.Field<string>("ActivityOtherOperFl");
         entity.activitySecrLev = row.IsNull("ActivitySecrLev") ? 0 : row.Field<int>("ActivitySecrLev");
         entity.addFavorites = row.IsNull("AddFavorites") ? string.Empty : row.Field<string>("AddFavorites");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.addrenabled = row.Field<bool>("addrenabled");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.addr3enabled = row.Field<bool>("addr3enabled");
         entity.aOSecurityset = row.Field<bool>("AOSecurityset");
         entity.apeiaddonfl = row.IsNull("apeiaddonfl") ? string.Empty : row.Field<string>("apeiaddonfl");
         entity.apeiexpensefl = row.IsNull("apeiexpensefl") ? string.Empty : row.Field<string>("apeiexpensefl");
         entity.apeiovertolfl = row.IsNull("apeiovertolfl") ? string.Empty : row.Field<string>("apeiovertolfl");
         entity.apeitradefl = row.IsNull("apeitradefl") ? string.Empty : row.Field<string>("apeitradefl");
         entity.apeiusecostfl = row.IsNull("apeiusecostfl") ? string.Empty : row.Field<string>("apeiusecostfl");
         entity.arrangeCols = row.IsNull("ArrangeCols") ? string.Empty : row.Field<string>("ArrangeCols");
         entity.cannotChange = row.IsNull("CannotChange") ? string.Empty : row.Field<string>("CannotChange");
         entity.cellph = row.IsNull("cellph") ? string.Empty : row.Field<string>("cellph");
         entity.cellphenabled = row.Field<bool>("cellphenabled");
         entity.changeAppServer = row.IsNull("ChangeAppServer") ? string.Empty : row.Field<string>("ChangeAppServer");
         entity.changeProfiles = row.IsNull("ChangeProfiles") ? string.Empty : row.Field<string>("ChangeProfiles");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.cityenabled = row.Field<bool>("cityenabled");
         entity.contactMgmntSecrLev = row.IsNull("ContactMgmntSecrLev") ? 0 : row.Field<int>("ContactMgmntSecrLev");
         entity.dept = row.IsNull("Dept") ? string.Empty : row.Field<string>("Dept");
         entity.disabled = row.IsNull("Disabled") ? string.Empty : row.Field<string>("Disabled");
         entity.divnoallowlistset = row.Field<bool>("divnoallowlistset");
         entity.divnorestrictapfl = row.IsNull("divnorestrictapfl") ? string.Empty : row.Field<string>("divnorestrictapfl");
         entity.divnorestrictarfl = row.IsNull("divnorestrictarfl") ? string.Empty : row.Field<string>("divnorestrictarfl");
         entity.divnorestrictcrfl = row.IsNull("divnorestrictcrfl") ? string.Empty : row.Field<string>("divnorestrictcrfl");
         entity.divnorestrictglfl = row.IsNull("divnorestrictglfl") ? string.Empty : row.Field<string>("divnorestrictglfl");
         entity.divnorestricticfl = row.IsNull("divnorestricticfl") ? string.Empty : row.Field<string>("divnorestricticfl");
         entity.divnorestrictoefl = row.IsNull("divnorestrictoefl") ? string.Empty : row.Field<string>("divnorestrictoefl");
         entity.divnorestrictpofl = row.IsNull("divnorestrictpofl") ? string.Empty : row.Field<string>("divnorestrictpofl");
         entity.divnorestrictwtallfl = row.IsNull("divnorestrictwtallfl") ? string.Empty : row.Field<string>("divnorestrictwtallfl");
         entity.divnorestrictwtfl = row.IsNull("divnorestrictwtfl") ? string.Empty : row.Field<string>("divnorestrictwtfl");
         entity.dropboxkey = row.IsNull("dropboxkey") ? string.Empty : row.Field<string>("dropboxkey");
         entity.dropboxkeyvisible = row.Field<bool>("dropboxkeyvisible");
         entity.email = row.IsNull("email") ? string.Empty : row.Field<string>("email");
         entity.entryLayout = row.IsNull("EntryLayout") ? string.Empty : row.Field<string>("EntryLayout");
         entity.etsecurityset = row.Field<bool>("etsecurityset");
         entity.faxph = row.IsNull("faxph") ? string.Empty : row.Field<string>("faxph");
         entity.homeph = row.IsNull("homeph") ? string.Empty : row.Field<string>("homeph");
         entity.homephenabled = row.Field<bool>("homephenabled");
         entity.jobTitle = row.IsNull("JobTitle") ? string.Empty : row.Field<string>("JobTitle");
         entity.maxwindows = row.IsNull("maxwindows") ? 0 : row.Field<int>("maxwindows");
         entity.menuSet = row.IsNull("MenuSet") ? string.Empty : row.Field<string>("MenuSet");
         entity.menuSetenabled = row.Field<bool>("MenuSetenabled");
         entity.mustChange = row.IsNull("MustChange") ? string.Empty : row.Field<string>("MustChange");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.oereassignarfl = row.IsNull("oereassignarfl") ? string.Empty : row.Field<string>("oereassignarfl");
         entity.pagerph = row.IsNull("pagerph") ? string.Empty : row.Field<string>("pagerph");
         entity.webprofilename = row.IsNull("webprofilename") ? string.Empty : row.Field<string>("webprofilename");
         entity.webprofilenameenabled = row.Field<bool>("webprofilenameenabled");
         entity.profileuserset = row.IsNull("profileuserset") ? string.Empty : row.Field<string>("profileuserset");
         entity.profileusersetenabled = row.Field<bool>("profileusersetenabled");
         entity.queueD = row.IsNull("queue-d") ? string.Empty : row.Field<string>("queue-d");
         entity.queueDset = row.Field<bool>("queue-dset");
         entity.queueS = row.IsNull("queue-s") ? string.Empty : row.Field<string>("queue-s");
         entity.queueSset = row.Field<bool>("queue-sset");
         entity.queuefl = row.IsNull("queuefl") ? string.Empty : row.Field<string>("queuefl");
         entity.restricteditapfl = row.IsNull("restricteditapfl") ? string.Empty : row.Field<string>("restricteditapfl");
         entity.restricteditarfl = row.IsNull("restricteditarfl") ? string.Empty : row.Field<string>("restricteditarfl");
         entity.seccredmgrfl = row.IsNull("seccredmgrfl") ? string.Empty : row.Field<string>("seccredmgrfl");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.stateenabled = row.Field<bool>("stateenabled");
         entity.toolbarLayout = row.IsNull("ToolbarLayout") ? string.Empty : row.Field<string>("ToolbarLayout");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.twlwhse = row.IsNull("twlwhse") ? string.Empty : row.Field<string>("twlwhse");
         entity.twlrestrictwhsefl = row.IsNull("twlrestrictwhsefl") ? string.Empty : row.Field<string>("twlrestrictwhsefl");
         entity.twllastuseddt = row.Field<DateTime?>("twllastuseddt");
         entity.unlimitedWebAccess = row.IsNull("UnlimitedWebAccess") ? string.Empty : row.Field<string>("UnlimitedWebAccess");
         entity.updategltrans = row.IsNull("updategltrans") ? string.Empty : row.Field<string>("updategltrans");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.workph = row.IsNull("workph") ? string.Empty : row.Field<string>("workph");
         entity.webextensiontype = row.IsNull("webextensiontype") ? string.Empty : row.Field<string>("webextensiontype");
         entity.webmodificationaccesslevel = row.IsNull("webmodificationaccesslevel") ? string.Empty : row.Field<string>("webmodificationaccesslevel");
         entity.websettingaccesslevel = row.IsNull("websettingaccesslevel") ? string.Empty : row.Field<string>("websettingaccesslevel");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.zipcdenabled = row.Field<bool>("zipcdenabled");
         entity.password = row.IsNull("_Password") ? string.Empty : row.Field<string>("_Password");
         entity.userName = row.IsNull("_User-Name") ? string.Empty : row.Field<string>("_User-Name");
         entity.userNameenabled = row.Field<bool>("_User-Nameenabled");
         entity.userid = row.IsNull("_Userid") ? string.Empty : row.Field<string>("_Userid");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSasosetupuser(ref DataRow row, Sasosetupuser entity)
      {
         row.SetField("ActivityOtherOperFl", entity.activityOtherOperFl);
         row.SetField("ActivitySecrLev", entity.activitySecrLev);
         row.SetField("AddFavorites", entity.addFavorites);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("addrenabled", entity.addrenabled);
         row.SetField("addr3", entity.addr3);
         row.SetField("addr3enabled", entity.addr3enabled);
         row.SetField("AOSecurityset", entity.aOSecurityset);
         row.SetField("apeiaddonfl", entity.apeiaddonfl);
         row.SetField("apeiexpensefl", entity.apeiexpensefl);
         row.SetField("apeiovertolfl", entity.apeiovertolfl);
         row.SetField("apeitradefl", entity.apeitradefl);
         row.SetField("apeiusecostfl", entity.apeiusecostfl);
         row.SetField("ArrangeCols", entity.arrangeCols);
         row.SetField("CannotChange", entity.cannotChange);
         row.SetField("cellph", entity.cellph);
         row.SetField("cellphenabled", entity.cellphenabled);
         row.SetField("ChangeAppServer", entity.changeAppServer);
         row.SetField("ChangeProfiles", entity.changeProfiles);
         row.SetField("city", entity.city);
         row.SetField("cityenabled", entity.cityenabled);
         row.SetField("ContactMgmntSecrLev", entity.contactMgmntSecrLev);
         row.SetField("Dept", entity.dept);
         row.SetField("Disabled", entity.disabled);
         row.SetField("divnoallowlistset", entity.divnoallowlistset);
         row.SetField("divnorestrictapfl", entity.divnorestrictapfl);
         row.SetField("divnorestrictarfl", entity.divnorestrictarfl);
         row.SetField("divnorestrictcrfl", entity.divnorestrictcrfl);
         row.SetField("divnorestrictglfl", entity.divnorestrictglfl);
         row.SetField("divnorestricticfl", entity.divnorestricticfl);
         row.SetField("divnorestrictoefl", entity.divnorestrictoefl);
         row.SetField("divnorestrictpofl", entity.divnorestrictpofl);
         row.SetField("divnorestrictwtallfl", entity.divnorestrictwtallfl);
         row.SetField("divnorestrictwtfl", entity.divnorestrictwtfl);
         row.SetField("dropboxkey", entity.dropboxkey);
         row.SetField("dropboxkeyvisible", entity.dropboxkeyvisible);
         row.SetField("email", entity.email);
         row.SetField("EntryLayout", entity.entryLayout);
         row.SetField("etsecurityset", entity.etsecurityset);
         row.SetField("faxph", entity.faxph);
         row.SetField("homeph", entity.homeph);
         row.SetField("homephenabled", entity.homephenabled);
         row.SetField("JobTitle", entity.jobTitle);
         row.SetField("maxwindows", entity.maxwindows);
         row.SetField("MenuSet", entity.menuSet);
         row.SetField("MenuSetenabled", entity.menuSetenabled);
         row.SetField("MustChange", entity.mustChange);
         row.SetField("operinit", entity.operinit);
         row.SetField("oereassignarfl", entity.oereassignarfl);
         row.SetField("pagerph", entity.pagerph);
         row.SetField("webprofilename", entity.webprofilename);
         row.SetField("webprofilenameenabled", entity.webprofilenameenabled);
         row.SetField("profileuserset", entity.profileuserset);
         row.SetField("profileusersetenabled", entity.profileusersetenabled);
         row.SetField("queue-d", entity.queueD);
         row.SetField("queue-dset", entity.queueDset);
         row.SetField("queue-s", entity.queueS);
         row.SetField("queue-sset", entity.queueSset);
         row.SetField("queuefl", entity.queuefl);
         row.SetField("restricteditapfl", entity.restricteditapfl);
         row.SetField("restricteditarfl", entity.restricteditarfl);
         row.SetField("seccredmgrfl", entity.seccredmgrfl);
         row.SetField("state", entity.state);
         row.SetField("stateenabled", entity.stateenabled);
         row.SetField("ToolbarLayout", entity.toolbarLayout);
         row.SetField("transdt", entity.transdt);
         row.SetField("transproc", entity.transproc);
         row.SetField("transtm", entity.transtm);
         row.SetField("twlwhse", entity.twlwhse);
         row.SetField("twlrestrictwhsefl", entity.twlrestrictwhsefl);
         row.SetField("twllastuseddt", entity.twllastuseddt);
         row.SetField("UnlimitedWebAccess", entity.unlimitedWebAccess);
         row.SetField("updategltrans", entity.updategltrans);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("workph", entity.workph);
         row.SetField("webextensiontype", entity.webextensiontype);
         row.SetField("webmodificationaccesslevel", entity.webmodificationaccesslevel);
         row.SetField("websettingaccesslevel", entity.websettingaccesslevel);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("zipcdenabled", entity.zipcdenabled);
         row.SetField("_Password", entity.password);
         row.SetField("_User-Name", entity.userName);
         row.SetField("_User-Nameenabled", entity.userNameenabled);
         row.SetField("_Userid", entity.userid);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
