//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.SA.Data.Models.Pdssasttsastn
{
   [ModelName("Infor.Sxe.SA.Data.Models.Pdssasttsastn.Sasttsastn")]
   public partial class Sasttsastn : ModelBase
   {
      [StringValidationAttribute]
      public string addtaxfl { get; set; }
      [StringValidationAttribute]
      public string preauthppt { get; set; }
      [StringValidationAttribute]
      public string catppt { get; set; }
      [StringValidationAttribute]
      public string ccidppt { get; set; }
      [StringValidationAttribute]
      public string addveri { get; set; }
      public decimal cccust { get; set; }
      [StringValidationAttribute]
      public string chgcat { get; set; }
      public decimal ccaddon { get; set; }
      public decimal addonmin { get; set; }
      [StringValidationAttribute]
      public string arpost { get; set; }
      public decimal boappdays { get; set; }
      [StringValidationAttribute]
      public string ccaddontype { get; set; }
      [StringValidationAttribute]
      public string acct1 { get; set; }
      public int ccedit { get; set; }
      [StringValidationAttribute]
      public string processor { get; set; }
      public int refundtype { get; set; }
      public int bankno { get; set; }
      [StringValidationAttribute]
      public string merchantid { get; set; }
      public bool lccinstalled { get; set; }
      public bool lCenPos { get; set; }
      public bool ehffl { get; set; }
      [StringValidationAttribute]
      public string name { get; set; }
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }
      [StringValidationAttribute]
      public string city { get; set; }
      [StringValidationAttribute]
      public string state { get; set; }
      [StringValidationAttribute]
      public string zipcd { get; set; }
      [StringValidationAttribute]
      public string fedtaxid { get; set; }
      [StringValidationAttribute]
      public string glacct { get; set; }
      public bool inoutfl { get; set; }
      public bool glpostfl { get; set; }
      [StringValidationAttribute]
      public string eDIAddoncd { get; set; }
      [StringValidationAttribute]
      public string frtaddonfl { get; set; }
      public int tiedoeaddonno { get; set; }
      [StringValidationAttribute]
      public string acct2 { get; set; }
      [StringValidationAttribute]
      public string chkauth { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Sasttsastn BuildSasttsastnFromRow(DataRow row)
      {
         Sasttsastn entity = new Sasttsastn();
         entity.addtaxfl = row.IsNull("addtaxfl") ? string.Empty : row.Field<string>("addtaxfl");
         entity.preauthppt = row.IsNull("preauthppt") ? string.Empty : row.Field<string>("preauthppt");
         entity.catppt = row.IsNull("catppt") ? string.Empty : row.Field<string>("catppt");
         entity.ccidppt = row.IsNull("ccidppt") ? string.Empty : row.Field<string>("ccidppt");
         entity.addveri = row.IsNull("addveri") ? string.Empty : row.Field<string>("addveri");
         entity.cccust = row.IsNull("cccust") ? decimal.Zero : row.Field<decimal>("cccust");
         entity.chgcat = row.IsNull("chgcat") ? string.Empty : row.Field<string>("chgcat");
         entity.ccaddon = row.IsNull("ccaddon") ? decimal.Zero : row.Field<decimal>("ccaddon");
         entity.addonmin = row.IsNull("addonmin") ? decimal.Zero : row.Field<decimal>("addonmin");
         entity.arpost = row.IsNull("arpost") ? string.Empty : row.Field<string>("arpost");
         entity.boappdays = row.IsNull("boappdays") ? decimal.Zero : row.Field<decimal>("boappdays");
         entity.ccaddontype = row.IsNull("ccaddontype") ? string.Empty : row.Field<string>("ccaddontype");
         entity.acct1 = row.IsNull("acct1") ? string.Empty : row.Field<string>("acct1");
         entity.ccedit = row.IsNull("ccedit") ? 0 : row.Field<int>("ccedit");
         entity.processor = row.IsNull("processor") ? string.Empty : row.Field<string>("processor");
         entity.refundtype = row.IsNull("refundtype") ? 0 : row.Field<int>("refundtype");
         entity.bankno = row.IsNull("bankno") ? 0 : row.Field<int>("bankno");
         entity.merchantid = row.IsNull("merchantid") ? string.Empty : row.Field<string>("merchantid");
         entity.lccinstalled = row.Field<bool>("lccinstalled");
         entity.lCenPos = row.Field<bool>("lCenPos");
         entity.ehffl = row.Field<bool>("ehffl");
         entity.name = row.IsNull("name") ? string.Empty : row.Field<string>("name");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.fedtaxid = row.IsNull("fedtaxid") ? string.Empty : row.Field<string>("fedtaxid");
         entity.glacct = row.IsNull("glacct") ? string.Empty : row.Field<string>("glacct");
         entity.inoutfl = row.Field<bool>("inoutfl");
         entity.glpostfl = row.Field<bool>("glpostfl");
         entity.eDIAddoncd = row.IsNull("EDIAddoncd") ? string.Empty : row.Field<string>("EDIAddoncd");
         entity.frtaddonfl = row.IsNull("frtaddonfl") ? string.Empty : row.Field<string>("frtaddonfl");
         entity.tiedoeaddonno = row.IsNull("tiedoeaddonno") ? 0 : row.Field<int>("tiedoeaddonno");
         entity.acct2 = row.IsNull("acct2") ? string.Empty : row.Field<string>("acct2");
         entity.chkauth = row.IsNull("chkauth") ? string.Empty : row.Field<string>("chkauth");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSasttsastn(ref DataRow row, Sasttsastn entity)
      {
         row.SetField("addtaxfl", entity.addtaxfl);
         row.SetField("preauthppt", entity.preauthppt);
         row.SetField("catppt", entity.catppt);
         row.SetField("ccidppt", entity.ccidppt);
         row.SetField("addveri", entity.addveri);
         row.SetField("cccust", entity.cccust);
         row.SetField("chgcat", entity.chgcat);
         row.SetField("ccaddon", entity.ccaddon);
         row.SetField("addonmin", entity.addonmin);
         row.SetField("arpost", entity.arpost);
         row.SetField("boappdays", entity.boappdays);
         row.SetField("ccaddontype", entity.ccaddontype);
         row.SetField("acct1", entity.acct1);
         row.SetField("ccedit", entity.ccedit);
         row.SetField("processor", entity.processor);
         row.SetField("refundtype", entity.refundtype);
         row.SetField("bankno", entity.bankno);
         row.SetField("merchantid", entity.merchantid);
         row.SetField("lccinstalled", entity.lccinstalled);
         row.SetField("lCenPos", entity.lCenPos);
         row.SetField("ehffl", entity.ehffl);
         row.SetField("name", entity.name);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("city", entity.city);
         row.SetField("state", entity.state);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("fedtaxid", entity.fedtaxid);
         row.SetField("glacct", entity.glacct);
         row.SetField("inoutfl", entity.inoutfl);
         row.SetField("glpostfl", entity.glpostfl);
         row.SetField("EDIAddoncd", entity.eDIAddoncd);
         row.SetField("frtaddonfl", entity.frtaddonfl);
         row.SetField("tiedoeaddonno", entity.tiedoeaddonno);
         row.SetField("acct2", entity.acct2);
         row.SetField("chkauth", entity.chkauth);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
