//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.SA.Data.Models.Pdsjournallookup
{
   [ModelName("Infor.Sxe.SA.Data.Models.Pdsjournallookup.Journallookupcriteria")]
   public partial class Journallookupcriteria : ModelBase
   {
      [StringValidationAttribute]
      public string oper2 { get; set; }
      public int jrnlno { get; set; }
      [StringValidationAttribute]
      public string ourproc { get; set; }
      public DateTime? opendtstart { get; set; }
      public DateTime? opendtend { get; set; }
      public bool unprintedonlyfl { get; set; }
      public bool openonlyfl { get; set; }
      public int recordcountlimit { get; set; }


      public static Journallookupcriteria BuildJournallookupcriteriaFromRow(DataRow row)
      {
         Journallookupcriteria entity = new Journallookupcriteria();
         entity.oper2 = row.IsNull("oper2") ? string.Empty : row.Field<string>("oper2");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.ourproc = row.IsNull("ourproc") ? string.Empty : row.Field<string>("ourproc");
         entity.opendtstart = row.Field<DateTime?>("opendtstart");
         entity.opendtend = row.Field<DateTime?>("opendtend");
         entity.unprintedonlyfl = row.Field<bool>("unprintedonlyfl");
         entity.openonlyfl = row.Field<bool>("openonlyfl");
         entity.recordcountlimit = row.IsNull("recordcountlimit") ? 0 : row.Field<int>("recordcountlimit");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromJournallookupcriteria(ref DataRow row, Journallookupcriteria entity)
      {
         row.SetField("oper2", entity.oper2);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("ourproc", entity.ourproc);
         row.SetField("opendtstart", entity.opendtstart);
         row.SetField("opendtend", entity.opendtend);
         row.SetField("unprintedonlyfl", entity.unprintedonlyfl);
         row.SetField("openonlyfl", entity.openonlyfl);
         row.SetField("recordcountlimit", entity.recordcountlimit);

      }
   
   }
}
#pragma warning restore 1591
