//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.SA.Data.Repositories
{
   using Infor.Sxe.SA.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdssaegoper;
   using Models.Pdssaeggroup;
   using Models.Pdssaeaevents;
   using Models.Pdssaeaactionsummary;
   using Models.Pdssaeaaction;
   using Models.Pdssaeaflds;
   using Models.Pdssaealistcust;
   using Models.Pdssaealistreg;
   using Models.Pdssaealistprod;
   using Models.Pdssaealistpcat;
   using Models.Pdssaealistvend;
   using Models.Pdssaealistwhse;
   using Models.Pdssaeawho;
   using Models.Pdsmessaging;
   using Models.Complex;

   public partial class AssaentryRepository : RepositoryBase
   {
      private AssaentryAdapter adapter;
  
      public AssaentryRepository(IProgressConnection connection)
      {
         this.adapter = new AssaentryAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public IEnumerable<Saegoperresults> SAEGOperatorList(Saegopercriteria saegopercriteria)
      {
         return this.adapter.SAEGOperatorList(saegopercriteria);
      }
  
      public IEnumerable<Saeggroups> SAEGOperatorGroups(string cOperator)
      {
         return this.adapter.SAEGOperatorGroups(cOperator);
      }
  
      public void SAEGAddGroupOper(string cOperList, string cGroupNm, string cDescrip)
      {
         this.adapter.SAEGAddGroupOper(cOperList, cGroupNm, cDescrip);
      }
  
      public void SAEGDeleteGroup(string cGroupNm)
      {
         this.adapter.SAEGDeleteGroup(cGroupNm);
      }
  
      public void SAEGDeleteGroupOper(string cGroupNm, string cOper)
      {
         this.adapter.SAEGDeleteGroupOper(cGroupNm, cOper);
      }
  
      public IEnumerable<Saeaevents> SAEAEventsLoad(AssaentrySAEAEventsLoadRequestAPI AssaentrySAEAEventsLoadRequestAPI)
      {
         return this.adapter.SAEAEventsLoad(AssaentrySAEAEventsLoadRequestAPI);
      }
  
      public IEnumerable<Saeaevents> SAEAEventsUpdate(AssaentrySAEAEventsUpdateRequestAPI AssaentrySAEAEventsUpdateRequestAPI)
      {
         return this.adapter.SAEAEventsUpdate(AssaentrySAEAEventsUpdateRequestAPI);
      }
  
      public IEnumerable<Saeaactionsummary> SAEAActionSummaryLoad(string cEventName)
      {
         return this.adapter.SAEAActionSummaryLoad(cEventName);
      }
  
      public void SAEAActionDelete(IEnumerable<Saeaactionsummary> saeaactionsummary)
      {
         this.adapter.SAEAActionDelete(saeaactionsummary);
      }
  
      public AssaentrySAEAActionSetupResponseAPI SAEAActionSetup(Saeaaction saeaaction)
      {
         return this.adapter.SAEAActionSetup(saeaaction);
      }
  
      public IEnumerable<Messaging> SAEAActionUpdate(AssaentrySAEAActionUpdateRequestAPI AssaentrySAEAActionUpdateRequestAPI)
      {
         return this.adapter.SAEAActionUpdate(AssaentrySAEAActionUpdateRequestAPI);
      }
  
      public IEnumerable<Saeaactionsummary> SAEAActionSummaryUpdate(AssaentrySAEAActionSummaryUpdateRequestAPI AssaentrySAEAActionSummaryUpdateRequestAPI)
      {
         return this.adapter.SAEAActionSummaryUpdate(AssaentrySAEAActionSummaryUpdateRequestAPI);
      }
  
      public string SAEAGetListNameDesc(string cListType, string cListValue, string cListValue2)
      {
         return this.adapter.SAEAGetListNameDesc(cListType, cListValue, cListValue2);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  