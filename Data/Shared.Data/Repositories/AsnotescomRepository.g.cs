//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.Shared.Data.Repositories
{
   using Infor.Sxe.Shared.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdsnotesmnt;
   using Models.Pdscommentsmnt;
   using Models.Pdsgetnotelist;
   using Models.Pdsnotecreatetext;
   using Models.Pdsnotecreatefile;
   using Models.Pdsnotecreateurl;
   using Models.Pdsnoteupdatetext;
   using Models.Pdsnoteupdatefile;
   using Models.Pdsnoteupdateurl;
   using Models.Pdsnoteflagsettings;
   using Models.Pdsnotemovepageno;
   using Models.Pdsgeticetnotesidbyrowid;
   using Models.Complex;

   public partial class AsnotescomRepository : RepositoryBase
   {
      private AsnotescomAdapter adapter;
  
      public AsnotescomRepository(IProgressConnection connection)
      {
         this.adapter = new AsnotescomAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public IEnumerable<Notesmnt> NotesCreate(IEnumerable<Notesmnt> notesmnt)
      {
         return this.adapter.NotesCreate(notesmnt);
      }
  
      public IEnumerable<Notesmnt> NotesUpdate(IEnumerable<Notesmnt> notesmnt)
      {
         return this.adapter.NotesUpdate(notesmnt);
      }
  
      public IEnumerable<Notesmnt> NotesDelete(IEnumerable<Notesmnt> notesmnt)
      {
         return this.adapter.NotesDelete(notesmnt);
      }
  
      public IEnumerable<Commentsmnt> CommentsCreate(IEnumerable<Commentsmnt> commentsmnt)
      {
         return this.adapter.CommentsCreate(commentsmnt);
      }
  
      public IEnumerable<Commentsmnt> CommentsUpdate(IEnumerable<Commentsmnt> commentsmnt)
      {
         return this.adapter.CommentsUpdate(commentsmnt);
      }
  
      public IEnumerable<Commentsmnt> CommentsDelete(IEnumerable<Commentsmnt> commentsmnt)
      {
         return this.adapter.CommentsDelete(commentsmnt);
      }
  
      public AsnotescomGetNoteListResponseAPI GetNoteList(Getnotelistcriteria getnotelistcriteria)
      {
         return this.adapter.GetNoteList(getnotelistcriteria);
      }
  
      public void NoteCreateText(Notecreatetext notecreatetext)
      {
         this.adapter.NoteCreateText(notecreatetext);
      }
  
      public void NoteCreateFile(IEnumerable<Notecreatefile> notecreatefile)
      {
         this.adapter.NoteCreateFile(notecreatefile);
      }
  
      public void NoteCreateURL(Notecreateurl notecreateurl)
      {
         this.adapter.NoteCreateURL(notecreateurl);
      }
  
      public void NoteUpdateText(Noteupdatetext noteupdatetext)
      {
         this.adapter.NoteUpdateText(noteupdatetext);
      }
  
      public void NoteUpdateFile(Noteupdatefile noteupdatefile)
      {
         this.adapter.NoteUpdateFile(noteupdatefile);
      }
  
      public void NoteUpdateURL(Noteupdateurl noteupdateurl)
      {
         this.adapter.NoteUpdateURL(noteupdateurl);
      }
  
      public void NoteDeleteAllTypes(Noteupdatetext noteupdatetext)
      {
         this.adapter.NoteDeleteAllTypes(noteupdatetext);
      }
  
      public Noteflagsettings NoteGetFlagSettings(Noteflagsettings noteflagsettings)
      {
         return this.adapter.NoteGetFlagSettings(noteflagsettings);
      }
  
      public IEnumerable<Notemovepagenoresults> NoteMovePageNumber(Notemovepageno notemovepageno)
      {
         return this.adapter.NoteMovePageNumber(notemovepageno);
      }
  
      public int GetIcetNotesId(string cIcetRowId, bool lCreateNoteIdFl)
      {
         return this.adapter.GetIcetNotesId(cIcetRowId, lCreateNoteIdFl);
      }
  
      public Geticetnotesidbyrowid GetIcetNotesIdByRowId(Geticetnotesidbyrowid geticetnotesidbyrowid)
      {
         return this.adapter.GetIcetNotesIdByRowId(geticetnotesidbyrowid);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  