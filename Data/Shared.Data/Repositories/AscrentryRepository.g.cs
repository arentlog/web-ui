//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.Shared.Data.Repositories
{
   using Infor.Sxe.Shared.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdscrec;
   using Models.Pdscrectrans;
   using Models.Pdscrecqc;
   using Models.Pdscrectransap;
   using Models.Pdscrectransar;
   using Models.Pdscrecqe;
   using Models.Pdsmessaging;
   using Models.Pdscrecqevoid;
   using Models.Complex;

   public partial class AscrentryRepository : RepositoryBase
   {
      private AscrentryAdapter adapter;
  
      public AscrentryRepository(IProgressConnection connection)
      {
         this.adapter = new AscrentryAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public AscrentryCRECReconcileResponseAPI CRECReconcile(Creccriteria creccriteria)
      {
         return this.adapter.CRECReconcile(creccriteria);
      }
  
      public AscrentryCRECTransResponseAPI CRECTrans(Crectranscriteria crectranscriteria)
      {
         return this.adapter.CRECTrans(crectranscriteria);
      }
  
      public IEnumerable<Crecreconcile> CRECClearReset(AscrentryCRECClearResetRequestAPI AscrentryCRECClearResetRequestAPI)
      {
         return this.adapter.CRECClearReset(AscrentryCRECClearResetRequestAPI);
      }
  
      public Crecqc CRECQuickClear(Crecqc crecqc)
      {
         return this.adapter.CRECQuickClear(crecqc);
      }
  
      public Crecqc CRECCretInfo(Crecqc crecqc)
      {
         return this.adapter.CRECCretInfo(crecqc);
      }
  
      public IEnumerable<Crectransap> CRECTransAP(int iJrnlno, int iSetno)
      {
         return this.adapter.CRECTransAP(iJrnlno, iSetno);
      }
  
      public IEnumerable<Crectransar> CRECTransAR(int iJrnlno, int iSetno)
      {
         return this.adapter.CRECTransAR(iJrnlno, iSetno);
      }
  
      public Crecqe CRECQEinit(AscrentryCRECQEinitRequestAPI AscrentryCRECQEinitRequestAPI)
      {
         return this.adapter.CRECQEinit(AscrentryCRECQEinitRequestAPI);
      }
  
      public AscrentryCRECQEchecknoResponseAPI CRECQEcheckno(Crecqe crecqe)
      {
         return this.adapter.CRECQEcheckno(crecqe);
      }
  
      public AscrentryCRECQEupdateResponseAPI CRECQEupdate(Crecqe crecqe)
      {
         return this.adapter.CRECQEupdate(crecqe);
      }
  
      public AscrentryCRECQEVOIDinitResponseAPI CRECQEVOIDinit(Crecqevoidcriteria crecqevoidcriteria)
      {
         return this.adapter.CRECQEVOIDinit(crecqevoidcriteria);
      }
  
      public AscrentryCRECQEVOIDupdateResponseAPI CRECQEVOIDupdate(AscrentryCRECQEVOIDupdateRequestAPI AscrentryCRECQEVOIDupdateRequestAPI)
      {
         return this.adapter.CRECQEVOIDupdate(AscrentryCRECQEVOIDupdateRequestAPI);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  