//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.Shared.Data.Models.Pdssharedpvregistry
{
   [ModelName("Infor.Sxe.Shared.Data.Models.Pdssharedpvregistry.Sharedpvregistry")]
   public partial class Sharedpvregistry : ModelBase
   {
      [StringValidationAttribute]
      public string pvfunction { get; set; }
      [StringValidationAttribute]
      public string pvsection { get; set; }
      [StringValidationAttribute]
      public string pvsubsection { get; set; }
      [StringValidationAttribute]
      public string pvobject { get; set; }
      [StringValidationAttribute]
      public string pvkeyname { get; set; }
      [StringValidationAttribute]
      public string pvcharvalue { get; set; }
      public int pvintvalue { get; set; }
      public decimal pvdecvalue { get; set; }
      public DateTime? pvdatevalue { get; set; }
      public bool pvlogvalue { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Sharedpvregistry BuildSharedpvregistryFromRow(DataRow row)
      {
         Sharedpvregistry entity = new Sharedpvregistry();
         entity.pvfunction = row.IsNull("pvfunction") ? string.Empty : row.Field<string>("pvfunction");
         entity.pvsection = row.IsNull("pvsection") ? string.Empty : row.Field<string>("pvsection");
         entity.pvsubsection = row.IsNull("pvsubsection") ? string.Empty : row.Field<string>("pvsubsection");
         entity.pvobject = row.IsNull("pvobject") ? string.Empty : row.Field<string>("pvobject");
         entity.pvkeyname = row.IsNull("pvkeyname") ? string.Empty : row.Field<string>("pvkeyname");
         entity.pvcharvalue = row.IsNull("pvcharvalue") ? string.Empty : row.Field<string>("pvcharvalue");
         entity.pvintvalue = row.IsNull("pvintvalue") ? 0 : row.Field<int>("pvintvalue");
         entity.pvdecvalue = row.IsNull("pvdecvalue") ? decimal.Zero : row.Field<decimal>("pvdecvalue");
         entity.pvdatevalue = row.Field<DateTime?>("pvdatevalue");
         entity.pvlogvalue = row.Field<bool>("pvlogvalue");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSharedpvregistry(ref DataRow row, Sharedpvregistry entity)
      {
         row.SetField("pvfunction", entity.pvfunction);
         row.SetField("pvsection", entity.pvsection);
         row.SetField("pvsubsection", entity.pvsubsection);
         row.SetField("pvobject", entity.pvobject);
         row.SetField("pvkeyname", entity.pvkeyname);
         row.SetField("pvcharvalue", entity.pvcharvalue);
         row.SetField("pvintvalue", entity.pvintvalue);
         row.SetField("pvdecvalue", entity.pvdecvalue);
         row.SetField("pvdatevalue", entity.pvdatevalue);
         row.SetField("pvlogvalue", entity.pvlogvalue);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
