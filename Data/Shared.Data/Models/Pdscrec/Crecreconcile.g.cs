//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.Shared.Data.Models.Pdscrec
{
   [ModelName("Infor.Sxe.Shared.Data.Models.Pdscrec.Crecreconcile")]
   public partial class Crecreconcile : ModelBase
   {
      public bool clearfl { get; set; }
      public decimal checkno { get; set; }
      public decimal amount { get; set; }
      [StringValidationAttribute]
      public string cSource { get; set; }
      public DateTime? enterdt { get; set; }
      [StringValidationAttribute]
      public string refer { get; set; }
      public bool voidfl { get; set; }
      public DateTime? cleardt { get; set; }
      [StringValidationAttribute]
      public string bacsref { get; set; }
      [StringValidationAttribute]
      public string pospaydttm { get; set; }
      [StringValidationAttribute]
      public string cretrowid { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Crecreconcile BuildCrecreconcileFromRow(DataRow row)
      {
         Crecreconcile entity = new Crecreconcile();
         entity.clearfl = row.Field<bool>("clearfl");
         entity.checkno = row.IsNull("checkno") ? decimal.Zero : row.Field<decimal>("checkno");
         entity.amount = row.IsNull("amount") ? decimal.Zero : row.Field<decimal>("amount");
         entity.cSource = row.IsNull("cSource") ? string.Empty : row.Field<string>("cSource");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.voidfl = row.Field<bool>("voidfl");
         entity.cleardt = row.Field<DateTime?>("cleardt");
         entity.bacsref = row.IsNull("bacsref") ? string.Empty : row.Field<string>("bacsref");
         entity.pospaydttm = row.IsNull("pospaydttm") ? string.Empty : row.Field<string>("pospaydttm");
         entity.cretrowid = row.Field<byte[]>("cretrowid").ToStringEncoded();
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromCrecreconcile(ref DataRow row, Crecreconcile entity)
      {
         row.SetField("clearfl", entity.clearfl);
         row.SetField("checkno", entity.checkno);
         row.SetField("amount", entity.amount);
         row.SetField("cSource", entity.cSource);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("refer", entity.refer);
         row.SetField("voidfl", entity.voidfl);
         row.SetField("cleardt", entity.cleardt);
         row.SetField("bacsref", entity.bacsref);
         row.SetField("pospaydttm", entity.pospaydttm);
         row.SetField("cretrowid", entity.cretrowid.ToByteArray());
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
