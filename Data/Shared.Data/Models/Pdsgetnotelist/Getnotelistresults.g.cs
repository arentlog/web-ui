//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.Shared.Data.Models.Pdsgetnotelist
{
   [ModelName("Infor.Sxe.Shared.Data.Models.Pdsgetnotelist.Getnotelistresults")]
   public partial class Getnotelistresults : ModelBase
   {
      public int pageno { get; set; }
      [StringValidationAttribute]
      public string type { get; set; }
      [StringValidationAttribute]
      public string firstline { get; set; }
      public DateTime? transdt { get; set; }
      [StringValidationAttribute]
      public string transtm { get; set; }
      [StringValidationAttribute]
      public string operinit { get; set; }
      [StringValidationAttribute]
      public string flags { get; set; }
      [StringValidationAttribute]
      public string textreference { get; set; }
      [StringValidationAttribute]
      public string filedesc { get; set; }
      [StringValidationAttribute]
      public string filereference { get; set; }
      [StringValidationAttribute]
      public string urldesc { get; set; }
      [StringValidationAttribute]
      public string urlreference { get; set; }
      public bool printfl { get; set; }
      public bool printfl2 { get; set; }
      public bool printfl3 { get; set; }
      public bool printfl4 { get; set; }
      public bool printfl5 { get; set; }
      public bool securefl { get; set; }
      public bool requirefl { get; set; }
      [StringValidationAttribute]
      public string notesRowid { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }
      [StringValidationAttribute]
      public string notecategory { get; set; }
      public bool headerfl { get; set; }


      public static Getnotelistresults BuildGetnotelistresultsFromRow(DataRow row)
      {
         Getnotelistresults entity = new Getnotelistresults();
         entity.pageno = row.IsNull("pageno") ? 0 : row.Field<int>("pageno");
         entity.type = row.IsNull("type") ? string.Empty : row.Field<string>("type");
         entity.firstline = row.IsNull("firstline") ? string.Empty : row.Field<string>("firstline");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.flags = row.IsNull("flags") ? string.Empty : row.Field<string>("flags");
         entity.textreference = row.IsNull("textreference") ? string.Empty : row.Field<string>("textreference");
         entity.filedesc = row.IsNull("filedesc") ? string.Empty : row.Field<string>("filedesc");
         entity.filereference = row.IsNull("filereference") ? string.Empty : row.Field<string>("filereference");
         entity.urldesc = row.IsNull("urldesc") ? string.Empty : row.Field<string>("urldesc");
         entity.urlreference = row.IsNull("urlreference") ? string.Empty : row.Field<string>("urlreference");
         entity.printfl = row.Field<bool>("printfl");
         entity.printfl2 = row.Field<bool>("printfl2");
         entity.printfl3 = row.Field<bool>("printfl3");
         entity.printfl4 = row.Field<bool>("printfl4");
         entity.printfl5 = row.Field<bool>("printfl5");
         entity.securefl = row.Field<bool>("securefl");
         entity.requirefl = row.Field<bool>("requirefl");
         entity.notesRowid = row.Field<byte[]>("notes-rowid").ToStringEncoded();
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         entity.notecategory = row.IsNull("notecategory") ? string.Empty : row.Field<string>("notecategory");
         entity.headerfl = row.Field<bool>("headerfl");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromGetnotelistresults(ref DataRow row, Getnotelistresults entity)
      {
         row.SetField("pageno", entity.pageno);
         row.SetField("type", entity.type);
         row.SetField("firstline", entity.firstline);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("flags", entity.flags);
         row.SetField("textreference", entity.textreference);
         row.SetField("filedesc", entity.filedesc);
         row.SetField("filereference", entity.filereference);
         row.SetField("urldesc", entity.urldesc);
         row.SetField("urlreference", entity.urlreference);
         row.SetField("printfl", entity.printfl);
         row.SetField("printfl2", entity.printfl2);
         row.SetField("printfl3", entity.printfl3);
         row.SetField("printfl4", entity.printfl4);
         row.SetField("printfl5", entity.printfl5);
         row.SetField("securefl", entity.securefl);
         row.SetField("requirefl", entity.requirefl);
         row.SetField("notes-rowid", entity.notesRowid.ToByteArray());
         row.SetField("userfield", entity.userfield);
         row.SetField("notecategory", entity.notecategory);
         row.SetField("headerfl", entity.headerfl);

      }
   
   }
}
#pragma warning restore 1591
