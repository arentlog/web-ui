//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.Shared.Data.Models.Pdswebextendcriteria
{
   [ModelName("Infor.Sxe.Shared.Data.Models.Pdswebextendcriteria.Webextendcriteria")]
   public partial class Webextendcriteria : ModelBase
   {
      public int cono { get; set; }
      [StringValidationAttribute]
      public string functionname { get; set; }
      [StringValidationAttribute]
      public string screenname { get; set; }
      [StringValidationAttribute]
      public string extensiontype { get; set; }
      [StringValidationAttribute]
      public string tag { get; set; }
      [StringValidationAttribute]
      public string descrip { get; set; }
      [StringValidationAttribute]
      public string settingvalue { get; set; }
      [StringValidationAttribute]
      public string statustype { get; set; }
      public bool latestrevisiononly { get; set; }
      [StringValidationAttribute]
      public string level { get; set; }
      [StringValidationAttribute]
      public string webextensionrowid { get; set; }
      public int recordcountlimit { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Webextendcriteria BuildWebextendcriteriaFromRow(DataRow row)
      {
         Webextendcriteria entity = new Webextendcriteria();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.functionname = row.IsNull("functionname") ? string.Empty : row.Field<string>("functionname");
         entity.screenname = row.IsNull("screenname") ? string.Empty : row.Field<string>("screenname");
         entity.extensiontype = row.IsNull("extensiontype") ? string.Empty : row.Field<string>("extensiontype");
         entity.tag = row.IsNull("tag") ? string.Empty : row.Field<string>("tag");
         entity.descrip = row.IsNull("descrip") ? string.Empty : row.Field<string>("descrip");
         entity.settingvalue = row.IsNull("settingvalue") ? string.Empty : row.Field<string>("settingvalue");
         entity.statustype = row.IsNull("statustype") ? string.Empty : row.Field<string>("statustype");
         entity.latestrevisiononly = row.Field<bool>("latestrevisiononly");
         entity.level = row.IsNull("level") ? string.Empty : row.Field<string>("level");
         entity.webextensionrowid = row.Field<byte[]>("webextensionrowid").ToStringEncoded();
         entity.recordcountlimit = row.IsNull("recordcountlimit") ? 0 : row.Field<int>("recordcountlimit");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromWebextendcriteria(ref DataRow row, Webextendcriteria entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("functionname", entity.functionname);
         row.SetField("screenname", entity.screenname);
         row.SetField("extensiontype", entity.extensiontype);
         row.SetField("tag", entity.tag);
         row.SetField("descrip", entity.descrip);
         row.SetField("settingvalue", entity.settingvalue);
         row.SetField("statustype", entity.statustype);
         row.SetField("latestrevisiononly", entity.latestrevisiononly);
         row.SetField("level", entity.level);
         row.SetField("webextensionrowid", entity.webextensionrowid.ToByteArray());
         row.SetField("recordcountlimit", entity.recordcountlimit);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
