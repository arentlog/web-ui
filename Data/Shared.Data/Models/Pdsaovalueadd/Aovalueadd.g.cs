//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.Shared.Data.Models.Pdsaovalueadd
{
   [ModelName("Infor.Sxe.Shared.Data.Models.Pdsaovalueadd.Aovalueadd")]
   public partial class Aovalueadd : ModelBase
   {
      public int cono { get; set; }
      [StringValidationAttribute]
      public string vaextrncstty { get; set; }
      [StringValidationAttribute]
      public string vaintrncstty { get; set; }
      [StringValidationAttribute]
      public string vainvntcstty { get; set; }
      [StringValidationAttribute]
      public string vastkadjty { get; set; }
      [StringValidationAttribute]
      public string vaautoboty { get; set; }
      public bool vaprcsheetfl { get; set; }
      public decimal vaprevvertol { get; set; }
      [StringValidationAttribute]
      public string vaprevvertolty { get; set; }
      [StringValidationAttribute]
      public string vaconfigprodty { get; set; }
      public int vapckfrmt { get; set; }
      public bool vapckheadfl { get; set; }
      public int vaintrnfrmt { get; set; }
      public bool vaintrnheadfl { get; set; }
      [StringValidationAttribute]
      public string sascRowid { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }
      [StringValidationAttribute]
      public string pickTicketOutputType { get; set; }
      [StringValidationAttribute]
      public string pickTicketExtraDataLevel1 { get; set; }
      [StringValidationAttribute]
      public string pickTicketExtraDataLevel2 { get; set; }
      [StringValidationAttribute]
      public string pickTicketIDMDocTypeID { get; set; }
      [StringValidationAttribute]
      public string pickTicketIDMTemplateName { get; set; }
      [StringValidationAttribute]
      public string pickTicketIDMFromEmailAddr { get; set; }
      [StringValidationAttribute]
      public string pickTicketIDMFromEmailName { get; set; }
      [StringValidationAttribute]
      public string bulkPickTicketIDMDocTypeID { get; set; }
      [StringValidationAttribute]
      public string bulkPickTicketIDMTemplateName { get; set; }


      public static Aovalueadd BuildAovalueaddFromRow(DataRow row)
      {
         Aovalueadd entity = new Aovalueadd();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.vaextrncstty = row.IsNull("vaextrncstty") ? string.Empty : row.Field<string>("vaextrncstty");
         entity.vaintrncstty = row.IsNull("vaintrncstty") ? string.Empty : row.Field<string>("vaintrncstty");
         entity.vainvntcstty = row.IsNull("vainvntcstty") ? string.Empty : row.Field<string>("vainvntcstty");
         entity.vastkadjty = row.IsNull("vastkadjty") ? string.Empty : row.Field<string>("vastkadjty");
         entity.vaautoboty = row.IsNull("vaautoboty") ? string.Empty : row.Field<string>("vaautoboty");
         entity.vaprcsheetfl = row.Field<bool>("vaprcsheetfl");
         entity.vaprevvertol = row.IsNull("vaprevvertol") ? decimal.Zero : row.Field<decimal>("vaprevvertol");
         entity.vaprevvertolty = row.IsNull("vaprevvertolty") ? string.Empty : row.Field<string>("vaprevvertolty");
         entity.vaconfigprodty = row.IsNull("vaconfigprodty") ? string.Empty : row.Field<string>("vaconfigprodty");
         entity.vapckfrmt = row.IsNull("vapckfrmt") ? 0 : row.Field<int>("vapckfrmt");
         entity.vapckheadfl = row.Field<bool>("vapckheadfl");
         entity.vaintrnfrmt = row.IsNull("vaintrnfrmt") ? 0 : row.Field<int>("vaintrnfrmt");
         entity.vaintrnheadfl = row.Field<bool>("vaintrnheadfl");
         entity.sascRowid = row.Field<byte[]>("sasc-rowid").ToStringEncoded();
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         entity.pickTicketOutputType = row.IsNull("PickTicketOutputType") ? string.Empty : row.Field<string>("PickTicketOutputType");
         entity.pickTicketExtraDataLevel1 = row.IsNull("PickTicketExtraDataLevel1") ? string.Empty : row.Field<string>("PickTicketExtraDataLevel1");
         entity.pickTicketExtraDataLevel2 = row.IsNull("PickTicketExtraDataLevel2") ? string.Empty : row.Field<string>("PickTicketExtraDataLevel2");
         entity.pickTicketIDMDocTypeID = row.IsNull("PickTicketIDMDocTypeID") ? string.Empty : row.Field<string>("PickTicketIDMDocTypeID");
         entity.pickTicketIDMTemplateName = row.IsNull("PickTicketIDMTemplateName") ? string.Empty : row.Field<string>("PickTicketIDMTemplateName");
         entity.pickTicketIDMFromEmailAddr = row.IsNull("PickTicketIDMFromEmailAddr") ? string.Empty : row.Field<string>("PickTicketIDMFromEmailAddr");
         entity.pickTicketIDMFromEmailName = row.IsNull("PickTicketIDMFromEmailName") ? string.Empty : row.Field<string>("PickTicketIDMFromEmailName");
         entity.bulkPickTicketIDMDocTypeID = row.IsNull("BulkPickTicketIDMDocTypeID") ? string.Empty : row.Field<string>("BulkPickTicketIDMDocTypeID");
         entity.bulkPickTicketIDMTemplateName = row.IsNull("BulkPickTicketIDMTemplateName") ? string.Empty : row.Field<string>("BulkPickTicketIDMTemplateName");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromAovalueadd(ref DataRow row, Aovalueadd entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("vaextrncstty", entity.vaextrncstty);
         row.SetField("vaintrncstty", entity.vaintrncstty);
         row.SetField("vainvntcstty", entity.vainvntcstty);
         row.SetField("vastkadjty", entity.vastkadjty);
         row.SetField("vaautoboty", entity.vaautoboty);
         row.SetField("vaprcsheetfl", entity.vaprcsheetfl);
         row.SetField("vaprevvertol", entity.vaprevvertol);
         row.SetField("vaprevvertolty", entity.vaprevvertolty);
         row.SetField("vaconfigprodty", entity.vaconfigprodty);
         row.SetField("vapckfrmt", entity.vapckfrmt);
         row.SetField("vapckheadfl", entity.vapckheadfl);
         row.SetField("vaintrnfrmt", entity.vaintrnfrmt);
         row.SetField("vaintrnheadfl", entity.vaintrnheadfl);
         row.SetField("sasc-rowid", entity.sascRowid.ToByteArray());
         row.SetField("userfield", entity.userfield);
         row.SetField("PickTicketOutputType", entity.pickTicketOutputType);
         row.SetField("PickTicketExtraDataLevel1", entity.pickTicketExtraDataLevel1);
         row.SetField("PickTicketExtraDataLevel2", entity.pickTicketExtraDataLevel2);
         row.SetField("PickTicketIDMDocTypeID", entity.pickTicketIDMDocTypeID);
         row.SetField("PickTicketIDMTemplateName", entity.pickTicketIDMTemplateName);
         row.SetField("PickTicketIDMFromEmailAddr", entity.pickTicketIDMFromEmailAddr);
         row.SetField("PickTicketIDMFromEmailName", entity.pickTicketIDMFromEmailName);
         row.SetField("BulkPickTicketIDMDocTypeID", entity.bulkPickTicketIDMDocTypeID);
         row.SetField("BulkPickTicketIDMTemplateName", entity.bulkPickTicketIDMTemplateName);

      }
   
   }
}
#pragma warning restore 1591
