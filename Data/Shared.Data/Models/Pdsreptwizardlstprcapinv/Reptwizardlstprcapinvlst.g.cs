//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.Shared.Data.Models.Pdsreptwizardlstprcapinv
{
   [ModelName("Infor.Sxe.Shared.Data.Models.Pdsreptwizardlstprcapinv.Reptwizardlstprcapinvlst")]
   public partial class Reptwizardlstprcapinvlst : ModelBase
   {
      public bool includefl { get; set; }
      [StringValidationAttribute]
      public string apinvno { get; set; }
      public int seqno { get; set; }
      public int seqno2 { get; set; }
      public decimal amount { get; set; }
      public DateTime? invdt { get; set; }
      public DateTime? duedt { get; set; }
      public bool disputefl { get; set; }
      [StringValidationAttribute]
      public string refer { get; set; }
      [StringValidationAttribute]
      public string statusdisplay { get; set; }
      [StringValidationAttribute]
      public string transtype { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Reptwizardlstprcapinvlst BuildReptwizardlstprcapinvlstFromRow(DataRow row)
      {
         Reptwizardlstprcapinvlst entity = new Reptwizardlstprcapinvlst();
         entity.includefl = row.Field<bool>("includefl");
         entity.apinvno = row.IsNull("apinvno") ? string.Empty : row.Field<string>("apinvno");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.seqno2 = row.IsNull("seqno2") ? 0 : row.Field<int>("seqno2");
         entity.amount = row.IsNull("amount") ? decimal.Zero : row.Field<decimal>("amount");
         entity.invdt = row.Field<DateTime?>("invdt");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.disputefl = row.Field<bool>("disputefl");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.statusdisplay = row.IsNull("statusdisplay") ? string.Empty : row.Field<string>("statusdisplay");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromReptwizardlstprcapinvlst(ref DataRow row, Reptwizardlstprcapinvlst entity)
      {
         row.SetField("includefl", entity.includefl);
         row.SetField("apinvno", entity.apinvno);
         row.SetField("seqno", entity.seqno);
         row.SetField("seqno2", entity.seqno2);
         row.SetField("amount", entity.amount);
         row.SetField("invdt", entity.invdt);
         row.SetField("duedt", entity.duedt);
         row.SetField("disputefl", entity.disputefl);
         row.SetField("refer", entity.refer);
         row.SetField("statusdisplay", entity.statusdisplay);
         row.SetField("transtype", entity.transtype);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
