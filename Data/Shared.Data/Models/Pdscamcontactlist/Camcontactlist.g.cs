//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.Shared.Data.Models.Pdscamcontactlist
{
   [ModelName("Infor.Sxe.Shared.Data.Models.Pdscamcontactlist.Camcontactlist")]
   public partial class Camcontactlist : ModelBase
   {
      public decimal contactid { get; set; }
      [StringValidationAttribute]
      public string firstnm { get; set; }
      [StringValidationAttribute]
      public string notesfl { get; set; }
      [StringValidationAttribute]
      public string middlenm { get; set; }
      [StringValidationAttribute]
      public string lastnm { get; set; }
      [StringValidationAttribute]
      public string cotitle { get; set; }
      [StringValidationAttribute]
      public string comment { get; set; }
      public int priority { get; set; }
      [StringValidationAttribute]
      public string salutation { get; set; }
      [StringValidationAttribute]
      public string groupcd { get; set; }
      [StringValidationAttribute]
      public string contacttype { get; set; }
      [StringValidationAttribute]
      public string contacttypedesc { get; set; }
      [StringValidationAttribute]
      public string phoneno { get; set; }
      [StringValidationAttribute]
      public string phonenoformatted { get; set; }
      [StringValidationAttribute]
      public string emailaddr { get; set; }
      [StringValidationAttribute]
      public string addr1 { get; set; }
      [StringValidationAttribute]
      public string addr2 { get; set; }
      [StringValidationAttribute]
      public string addr3 { get; set; }
      [StringValidationAttribute]
      public string city { get; set; }
      [StringValidationAttribute]
      public string faxphoneno { get; set; }
      [StringValidationAttribute]
      public string state { get; set; }
      [StringValidationAttribute]
      public string zipcd { get; set; }
      [StringValidationAttribute]
      public string countrycd { get; set; }
      [StringValidationAttribute]
      public string others { get; set; }
      [StringValidationAttribute]
      public string cName { get; set; }
      [StringValidationAttribute]
      public string cAddr { get; set; }
      [StringValidationAttribute]
      public string cCityStateZip { get; set; }
      [StringValidationAttribute]
      public string cCountrycd { get; set; }
      [StringValidationAttribute]
      public string cSubject { get; set; }
      public long contactsrecid { get; set; }
      public bool removefromsubject { get; set; }
      public bool deletecontact { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Camcontactlist BuildCamcontactlistFromRow(DataRow row)
      {
         Camcontactlist entity = new Camcontactlist();
         entity.contactid = row.IsNull("contactid") ? decimal.Zero : row.Field<decimal>("contactid");
         entity.firstnm = row.IsNull("firstnm") ? string.Empty : row.Field<string>("firstnm");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.middlenm = row.IsNull("middlenm") ? string.Empty : row.Field<string>("middlenm");
         entity.lastnm = row.IsNull("lastnm") ? string.Empty : row.Field<string>("lastnm");
         entity.cotitle = row.IsNull("cotitle") ? string.Empty : row.Field<string>("cotitle");
         entity.comment = row.IsNull("comment") ? string.Empty : row.Field<string>("comment");
         entity.priority = row.IsNull("priority") ? 0 : row.Field<int>("priority");
         entity.salutation = row.IsNull("salutation") ? string.Empty : row.Field<string>("salutation");
         entity.groupcd = row.IsNull("groupcd") ? string.Empty : row.Field<string>("groupcd");
         entity.contacttype = row.IsNull("contacttype") ? string.Empty : row.Field<string>("contacttype");
         entity.contacttypedesc = row.IsNull("contacttypedesc") ? string.Empty : row.Field<string>("contacttypedesc");
         entity.phoneno = row.IsNull("phoneno") ? string.Empty : row.Field<string>("phoneno");
         entity.phonenoformatted = row.IsNull("phonenoformatted") ? string.Empty : row.Field<string>("phonenoformatted");
         entity.emailaddr = row.IsNull("emailaddr") ? string.Empty : row.Field<string>("emailaddr");
         entity.addr1 = row.IsNull("addr1") ? string.Empty : row.Field<string>("addr1");
         entity.addr2 = row.IsNull("addr2") ? string.Empty : row.Field<string>("addr2");
         entity.addr3 = row.IsNull("addr3") ? string.Empty : row.Field<string>("addr3");
         entity.city = row.IsNull("city") ? string.Empty : row.Field<string>("city");
         entity.faxphoneno = row.IsNull("faxphoneno") ? string.Empty : row.Field<string>("faxphoneno");
         entity.state = row.IsNull("state") ? string.Empty : row.Field<string>("state");
         entity.zipcd = row.IsNull("zipcd") ? string.Empty : row.Field<string>("zipcd");
         entity.countrycd = row.IsNull("countrycd") ? string.Empty : row.Field<string>("countrycd");
         entity.others = row.IsNull("others") ? string.Empty : row.Field<string>("others");
         entity.cName = row.IsNull("cName") ? string.Empty : row.Field<string>("cName");
         entity.cAddr = row.IsNull("cAddr") ? string.Empty : row.Field<string>("cAddr");
         entity.cCityStateZip = row.IsNull("cCityStateZip") ? string.Empty : row.Field<string>("cCityStateZip");
         entity.cCountrycd = row.IsNull("cCountrycd") ? string.Empty : row.Field<string>("cCountrycd");
         entity.cSubject = row.IsNull("cSubject") ? string.Empty : row.Field<string>("cSubject");
         entity.contactsrecid = row.IsNull("contactsrecid") ? 0 : row.Field<long>("contactsrecid");
         entity.removefromsubject = row.Field<bool>("removefromsubject");
         entity.deletecontact = row.Field<bool>("deletecontact");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromCamcontactlist(ref DataRow row, Camcontactlist entity)
      {
         row.SetField("contactid", entity.contactid);
         row.SetField("firstnm", entity.firstnm);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("middlenm", entity.middlenm);
         row.SetField("lastnm", entity.lastnm);
         row.SetField("cotitle", entity.cotitle);
         row.SetField("comment", entity.comment);
         row.SetField("priority", entity.priority);
         row.SetField("salutation", entity.salutation);
         row.SetField("groupcd", entity.groupcd);
         row.SetField("contacttype", entity.contacttype);
         row.SetField("contacttypedesc", entity.contacttypedesc);
         row.SetField("phoneno", entity.phoneno);
         row.SetField("phonenoformatted", entity.phonenoformatted);
         row.SetField("emailaddr", entity.emailaddr);
         row.SetField("addr1", entity.addr1);
         row.SetField("addr2", entity.addr2);
         row.SetField("addr3", entity.addr3);
         row.SetField("city", entity.city);
         row.SetField("faxphoneno", entity.faxphoneno);
         row.SetField("state", entity.state);
         row.SetField("zipcd", entity.zipcd);
         row.SetField("countrycd", entity.countrycd);
         row.SetField("others", entity.others);
         row.SetField("cName", entity.cName);
         row.SetField("cAddr", entity.cAddr);
         row.SetField("cCityStateZip", entity.cCityStateZip);
         row.SetField("cCountrycd", entity.cCountrycd);
         row.SetField("cSubject", entity.cSubject);
         row.SetField("contactsrecid", entity.contactsrecid);
         row.SetField("removefromsubject", entity.removefromsubject);
         row.SetField("deletecontact", entity.deletecontact);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
