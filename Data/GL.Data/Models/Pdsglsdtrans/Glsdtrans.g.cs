//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.GL.Data.Models.Pdsglsdtrans
{
   [ModelName("Infor.Sxe.GL.Data.Models.Pdsglsdtrans.Glsdtrans")]
   public partial class Glsdtrans : ModelBase
   {
      [StringValidationAttribute]
      public string rowid { get; set; }
      [StringValidationAttribute]
      public string groupnm { get; set; }
      public int setno { get; set; }
      public int transno { get; set; }
      public bool reversefl { get; set; }
      [StringValidationAttribute]
      public string glno { get; set; }
      [StringValidationAttribute]
      public string glnm { get; set; }
      [StringValidationAttribute]
      public string gllookupnm { get; set; }
      [StringValidationAttribute]
      public string glnotesfl { get; set; }
      [StringValidationAttribute]
      public string baltype { get; set; }
      public bool oppositefl { get; set; }
      public decimal percent { get; set; }
      [StringValidationAttribute]
      public string refer { get; set; }
      public decimal maxamount { get; set; }
      public bool changedfl { get; set; }
      public bool newfl { get; set; }
      public bool deletedfl { get; set; }
      public bool oOppositefl { get; set; }
      public decimal oPercent { get; set; }
      public decimal proofdr { get; set; }
      public decimal proofcr { get; set; }
      public int glyr { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Glsdtrans BuildGlsdtransFromRow(DataRow row)
      {
         Glsdtrans entity = new Glsdtrans();
         entity.rowid = row.Field<byte[]>("rowid").ToStringEncoded();
         entity.groupnm = row.IsNull("groupnm") ? string.Empty : row.Field<string>("groupnm");
         entity.setno = row.IsNull("setno") ? 0 : row.Field<int>("setno");
         entity.transno = row.IsNull("transno") ? 0 : row.Field<int>("transno");
         entity.reversefl = row.Field<bool>("reversefl");
         entity.glno = row.IsNull("glno") ? string.Empty : row.Field<string>("glno");
         entity.glnm = row.IsNull("glnm") ? string.Empty : row.Field<string>("glnm");
         entity.gllookupnm = row.IsNull("gllookupnm") ? string.Empty : row.Field<string>("gllookupnm");
         entity.glnotesfl = row.IsNull("glnotesfl") ? string.Empty : row.Field<string>("glnotesfl");
         entity.baltype = row.IsNull("baltype") ? string.Empty : row.Field<string>("baltype");
         entity.oppositefl = row.Field<bool>("oppositefl");
         entity.percent = row.IsNull("percent") ? decimal.Zero : row.Field<decimal>("percent");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.maxamount = row.IsNull("maxamount") ? decimal.Zero : row.Field<decimal>("maxamount");
         entity.changedfl = row.Field<bool>("changedfl");
         entity.newfl = row.Field<bool>("newfl");
         entity.deletedfl = row.Field<bool>("deletedfl");
         entity.oOppositefl = row.Field<bool>("o-oppositefl");
         entity.oPercent = row.IsNull("o-percent") ? decimal.Zero : row.Field<decimal>("o-percent");
         entity.proofdr = row.IsNull("proofdr") ? decimal.Zero : row.Field<decimal>("proofdr");
         entity.proofcr = row.IsNull("proofcr") ? decimal.Zero : row.Field<decimal>("proofcr");
         entity.glyr = row.IsNull("glyr") ? 0 : row.Field<int>("glyr");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromGlsdtrans(ref DataRow row, Glsdtrans entity)
      {
         row.SetField("rowid", entity.rowid.ToByteArray());
         row.SetField("groupnm", entity.groupnm);
         row.SetField("setno", entity.setno);
         row.SetField("transno", entity.transno);
         row.SetField("reversefl", entity.reversefl);
         row.SetField("glno", entity.glno);
         row.SetField("glnm", entity.glnm);
         row.SetField("gllookupnm", entity.gllookupnm);
         row.SetField("glnotesfl", entity.glnotesfl);
         row.SetField("baltype", entity.baltype);
         row.SetField("oppositefl", entity.oppositefl);
         row.SetField("percent", entity.percent);
         row.SetField("refer", entity.refer);
         row.SetField("maxamount", entity.maxamount);
         row.SetField("changedfl", entity.changedfl);
         row.SetField("newfl", entity.newfl);
         row.SetField("deletedfl", entity.deletedfl);
         row.SetField("o-oppositefl", entity.oOppositefl);
         row.SetField("o-percent", entity.oPercent);
         row.SetField("proofdr", entity.proofdr);
         row.SetField("proofcr", entity.proofcr);
         row.SetField("glyr", entity.glyr);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
