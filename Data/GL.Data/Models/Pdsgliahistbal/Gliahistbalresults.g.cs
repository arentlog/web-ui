//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.GL.Data.Models.Pdsgliahistbal
{
   [ModelName("Infor.Sxe.GL.Data.Models.Pdsgliahistbal.Gliahistbalresults")]
   public partial class Gliahistbalresults : ModelBase
   {
      [StringValidationAttribute]
      public string cGLno { get; set; }
      public int glyr { get; set; }
      public DateTime? asofdt { get; set; }
      [StringValidationAttribute]
      public string notesfl { get; set; }
      [StringValidationAttribute]
      public string rptnm { get; set; }
      public decimal subbal { get; set; }
      public decimal glbal { get; set; }
      public decimal dDiff { get; set; }
      public decimal variance { get; set; }
      [StringValidationAttribute]
      public string cLookUpNm { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Gliahistbalresults BuildGliahistbalresultsFromRow(DataRow row)
      {
         Gliahistbalresults entity = new Gliahistbalresults();
         entity.cGLno = row.IsNull("cGLno") ? string.Empty : row.Field<string>("cGLno");
         entity.glyr = row.IsNull("glyr") ? 0 : row.Field<int>("glyr");
         entity.asofdt = row.Field<DateTime?>("asofdt");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.rptnm = row.IsNull("rptnm") ? string.Empty : row.Field<string>("rptnm");
         entity.subbal = row.IsNull("subbal") ? decimal.Zero : row.Field<decimal>("subbal");
         entity.glbal = row.IsNull("glbal") ? decimal.Zero : row.Field<decimal>("glbal");
         entity.dDiff = row.IsNull("dDiff") ? decimal.Zero : row.Field<decimal>("dDiff");
         entity.variance = row.IsNull("variance") ? decimal.Zero : row.Field<decimal>("variance");
         entity.cLookUpNm = row.IsNull("cLookUpNm") ? string.Empty : row.Field<string>("cLookUpNm");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromGliahistbalresults(ref DataRow row, Gliahistbalresults entity)
      {
         row.SetField("cGLno", entity.cGLno);
         row.SetField("glyr", entity.glyr);
         row.SetField("asofdt", entity.asofdt);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("rptnm", entity.rptnm);
         row.SetField("subbal", entity.subbal);
         row.SetField("glbal", entity.glbal);
         row.SetField("dDiff", entity.dDiff);
         row.SetField("variance", entity.variance);
         row.SetField("cLookUpNm", entity.cLookUpNm);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
