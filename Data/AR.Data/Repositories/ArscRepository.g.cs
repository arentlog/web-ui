//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.AR.Data.Repositories
{
   using Infor.Sxe.AR.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdsarsc;
   using Models.Pdsarcustomerlookup;
   using Models.Complex;

   public partial class ArscRepository : RepositoryBase
   {
      private ArscAdapter adapter;
  
      public ArscRepository(IProgressConnection connection)
      {
         this.adapter = new ArscAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public Arsc GetByRowId(string rowId, bool fillMode, string fldList)
      {
         return this.adapter.GetByRowId(rowId, fillMode, fldList);
      }

      public IEnumerable<Arsc> GetListByRowIdList(List<string> rowIds, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByRowIdList(rowIds, fillMode, batchsize, fldList);
      }
        
      public IEnumerable<Arsc> GetListAllByCono(int cono, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListAllByCono(cono, fillMode, batchsize, fldList);
      }
      public IEnumerable<Arsc> GetListByRowpointers(List<string> rowpointers, bool fillMode, string fldList)
      {
         return this.adapter.GetListByRowpointers(rowpointers, fillMode, fldList);
      }
	  
	  
      public Arsc Get(int cono, decimal custno, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.Get(cono, custno, fillMode, batchsize, fldList);
      }
      
      public IEnumerable<Arsc> GetList(string where, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetList(where, fillMode, batchsize, fldList);
      }
  
      public IEnumerable<Arsc> GetListByAddr(int cono, string state, string city, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByAddr(cono, state, city, fillMode, batchsize, fldList);
      }

      public IEnumerable<Arsc> GetListByAuthgrplist(string authGrpList, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByAuthgrplist(authGrpList, fillMode, batchsize, fldList);
      }

      public IEnumerable<Arsc> GetListByCredit(int cono, string creditmgr, decimal custno, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByCredit(cono, creditmgr, custno, fillMode, batchsize, fldList);
      }

      public IEnumerable<Arsc> GetListByCustno2(int cono, decimal custno2, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByCustno2(cono, custno2, fillMode, batchsize, fldList);
      }

      public IEnumerable<Arsc> GetListByEdiptnr(int cono, string edipartner, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByEdiptnr(cono, edipartner, fillMode, batchsize, fldList);
      }

      public IEnumerable<Arsc> GetListByGroup(int cono, string groupid, decimal custno, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByGroup(cono, groupid, custno, fillMode, batchsize, fldList);
      }

      public IEnumerable<Arsc> GetListByLkup(int cono, string lookupnm, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByLkup(cono, lookupnm, fillMode, batchsize, fldList);
      }

      public IEnumerable<Arsc> GetListByMasteraccount(int mastercono, decimal mastercustno, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByMasteraccount(mastercono, mastercustno, fillMode, batchsize, fldList);
      }

      public IEnumerable<Arsc> GetListByPhone(int cono, string phoneno, decimal custno, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByPhone(cono, phoneno, custno, fillMode, batchsize, fldList);
      }

      public Arsc GetByRowpointer(string rowpointer, bool fillMode, string fldList)
      {
         return this.adapter.GetByRowpointer(rowpointer, fillMode, fldList);
      }

      public IEnumerable<Arsc> GetListByTransdttmz(DateTime? transdttmz, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByTransdttmz(transdttmz, fillMode, batchsize, fldList);
      }

      public IEnumerable<Arsc> GetListByZipcd(int cono, string zipcd, string lookupnm, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByZipcd(cono, zipcd, lookupnm, fillMode, batchsize, fldList);
      }

      public Arsc Insert(Arsc record)
      {
         return this.adapter.Insert(record);        
      }
  
      public Arsc Update(Arsc record)
      {
         return this.adapter.Update(record);
      }
  
      public void Delete(Arsc record)
      {
         this.adapter.Delete(record);
      }
  
      public void DeleteListByRowIds(List<string> rowIds)
      {
         this.adapter.DeleteListByRowIds(rowIds);
      }
	   

      public void DeleteListByRowPointers(List<string> rowpointers)
      {
         this.adapter.DeleteListByRowPointers(rowpointers);
      }
	  
      public ArscLookupResponseAPI Lookup(Arcustomerlookupcriteria arcustomerlookupcriteria)
      {
         return this.adapter.Lookup(arcustomerlookupcriteria);
      }
  
      public IEnumerable<Arsc> GetListByWordIndex(string term, bool fillMode, int batchsize, string fldList)
      {
         return this.adapter.GetListByWordIndex(term, fillMode, batchsize, fldList);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  