//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.AR.Data.Models.Pdsarececoddata
{
   [ModelName("Infor.Sxe.AR.Data.Models.Pdsarececoddata.Arececoddata")]
   public partial class Arececoddata : ModelBase
   {
      public int cono { get; set; }
      [StringValidationAttribute]
      public string oper { get; set; }
      public int invno { get; set; }
      public int invsuf { get; set; }
      public decimal custno { get; set; }
      [StringValidationAttribute]
      public string shipto { get; set; }
      public DateTime? invdt { get; set; }
      public decimal amount { get; set; }
      public decimal applyamt { get; set; }
      public decimal origapplyamt { get; set; }
      [StringValidationAttribute]
      public string dispcd { get; set; }
      [StringValidationAttribute]
      public string dispcddesc { get; set; }
      public int seqno { get; set; }
      public long recno { get; set; }
      [StringValidationAttribute]
      public string aretRowid { get; set; }
      public bool launchinvlookup { get; set; }
      public decimal exchrate { get; set; }
      public bool exchrateasked { get; set; }
      public bool launchexchrate { get; set; }
      public bool piffl { get; set; }
      public bool disputefl { get; set; }
      public DateTime? discdt { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Arececoddata BuildArececoddataFromRow(DataRow row)
      {
         Arececoddata entity = new Arececoddata();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.oper = row.IsNull("oper") ? string.Empty : row.Field<string>("oper");
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.invdt = row.Field<DateTime?>("invdt");
         entity.amount = row.IsNull("amount") ? decimal.Zero : row.Field<decimal>("amount");
         entity.applyamt = row.IsNull("applyamt") ? decimal.Zero : row.Field<decimal>("applyamt");
         entity.origapplyamt = row.IsNull("origapplyamt") ? decimal.Zero : row.Field<decimal>("origapplyamt");
         entity.dispcd = row.IsNull("dispcd") ? string.Empty : row.Field<string>("dispcd");
         entity.dispcddesc = row.IsNull("dispcddesc") ? string.Empty : row.Field<string>("dispcddesc");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.recno = row.IsNull("recno") ? 0 : row.Field<long>("recno");
         entity.aretRowid = row.Field<byte[]>("aret-rowid").ToStringEncoded();
         entity.launchinvlookup = row.Field<bool>("launchinvlookup");
         entity.exchrate = row.IsNull("exchrate") ? decimal.Zero : row.Field<decimal>("exchrate");
         entity.exchrateasked = row.Field<bool>("exchrateasked");
         entity.launchexchrate = row.Field<bool>("launchexchrate");
         entity.piffl = row.Field<bool>("piffl");
         entity.disputefl = row.Field<bool>("disputefl");
         entity.discdt = row.Field<DateTime?>("discdt");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromArececoddata(ref DataRow row, Arececoddata entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("oper", entity.oper);
         row.SetField("invno", entity.invno);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("custno", entity.custno);
         row.SetField("shipto", entity.shipto);
         row.SetField("invdt", entity.invdt);
         row.SetField("amount", entity.amount);
         row.SetField("applyamt", entity.applyamt);
         row.SetField("origapplyamt", entity.origapplyamt);
         row.SetField("dispcd", entity.dispcd);
         row.SetField("dispcddesc", entity.dispcddesc);
         row.SetField("seqno", entity.seqno);
         row.SetField("recno", entity.recno);
         row.SetField("aret-rowid", entity.aretRowid.ToByteArray());
         row.SetField("launchinvlookup", entity.launchinvlookup);
         row.SetField("exchrate", entity.exchrate);
         row.SetField("exchrateasked", entity.exchrateasked);
         row.SetField("launchexchrate", entity.launchexchrate);
         row.SetField("piffl", entity.piffl);
         row.SetField("disputefl", entity.disputefl);
         row.SetField("discdt", entity.discdt);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
