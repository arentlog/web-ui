//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.AR.Data.Models.Pdsarelearetadd
{
   [ModelName("Infor.Sxe.AR.Data.Models.Pdsarelearetadd.Arelearetcriteria")]
   public partial class Arelearetcriteria : ModelBase
   {
      public decimal custno { get; set; }
      public int transcd { get; set; }
      [StringValidationAttribute]
      public string transcddesc { get; set; }
      public int invno { get; set; }
      public int invsuf { get; set; }
      public DateTime? invdt { get; set; }
      public decimal invamt { get; set; }
      [StringValidationAttribute]
      public string type { get; set; }
      public int originvno { get; set; }
      public int originvsuf { get; set; }
      public decimal origapplyamt { get; set; }
      public int recordcountlimit { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Arelearetcriteria BuildArelearetcriteriaFromRow(DataRow row)
      {
         Arelearetcriteria entity = new Arelearetcriteria();
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.transcd = row.IsNull("transcd") ? 0 : row.Field<int>("transcd");
         entity.transcddesc = row.IsNull("transcddesc") ? string.Empty : row.Field<string>("transcddesc");
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.invdt = row.Field<DateTime?>("invdt");
         entity.invamt = row.IsNull("invamt") ? decimal.Zero : row.Field<decimal>("invamt");
         entity.type = row.IsNull("type") ? string.Empty : row.Field<string>("type");
         entity.originvno = row.IsNull("originvno") ? 0 : row.Field<int>("originvno");
         entity.originvsuf = row.IsNull("originvsuf") ? 0 : row.Field<int>("originvsuf");
         entity.origapplyamt = row.IsNull("origapplyamt") ? decimal.Zero : row.Field<decimal>("origapplyamt");
         entity.recordcountlimit = row.IsNull("recordcountlimit") ? 0 : row.Field<int>("recordcountlimit");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromArelearetcriteria(ref DataRow row, Arelearetcriteria entity)
      {
         row.SetField("custno", entity.custno);
         row.SetField("transcd", entity.transcd);
         row.SetField("transcddesc", entity.transcddesc);
         row.SetField("invno", entity.invno);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("invdt", entity.invdt);
         row.SetField("invamt", entity.invamt);
         row.SetField("type", entity.type);
         row.SetField("originvno", entity.originvno);
         row.SetField("originvsuf", entity.originvsuf);
         row.SetField("origapplyamt", entity.origapplyamt);
         row.SetField("recordcountlimit", entity.recordcountlimit);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
