//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.AR.Data.Models.Pdsaretlookup
{
   [ModelName("Infor.Sxe.AR.Data.Models.Pdsaretlookup.Aretlookupcriteria")]
   public partial class Aretlookupcriteria : ModelBase
   {
      public int invno { get; set; }
      public int invsuf { get; set; }
      public bool invsufsent { get; set; }
      public DateTime? invdt { get; set; }
      public decimal custno { get; set; }
      public int transcd { get; set; }
      public bool statustype { get; set; }
      public int recordcountlimit { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Aretlookupcriteria BuildAretlookupcriteriaFromRow(DataRow row)
      {
         Aretlookupcriteria entity = new Aretlookupcriteria();
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.invsufsent = row.Field<bool>("invsufsent");
         entity.invdt = row.Field<DateTime?>("invdt");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.transcd = row.IsNull("transcd") ? 0 : row.Field<int>("transcd");
         entity.statustype = row.Field<bool>("statustype");
         entity.recordcountlimit = row.IsNull("recordcountlimit") ? 0 : row.Field<int>("recordcountlimit");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromAretlookupcriteria(ref DataRow row, Aretlookupcriteria entity)
      {
         row.SetField("invno", entity.invno);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("invsufsent", entity.invsufsent);
         row.SetField("invdt", entity.invdt);
         row.SetField("custno", entity.custno);
         row.SetField("transcd", entity.transcd);
         row.SetField("statustype", entity.statustype);
         row.SetField("recordcountlimit", entity.recordcountlimit);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
