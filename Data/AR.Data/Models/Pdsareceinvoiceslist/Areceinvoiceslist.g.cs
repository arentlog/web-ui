//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.AR.Data.Models.Pdsareceinvoiceslist
{
   [ModelName("Infor.Sxe.AR.Data.Models.Pdsareceinvoiceslist.Areceinvoiceslist")]
   public partial class Areceinvoiceslist : ModelBase, IUserFields
   {
      public int cono { get; set; }
      [StringValidationAttribute]
      public string oper { get; set; }
      public decimal allowdiscamt { get; set; }
      public decimal amount { get; set; }
      [StringValidationAttribute]
      public string apinvno { get; set; }
      public decimal applyamt { get; set; }
      public int credcounter { get; set; }
      public bool credorigdiscenabled { get; set; }
      public bool credwriteoffenabled { get; set; }
      public decimal custno { get; set; }
      [StringValidationAttribute]
      public string custpo { get; set; }
      public bool dbtcustnoenabled { get; set; }
      public bool dbtdivnoenabled { get; set; }
      [StringValidationAttribute]
      public string dbttxtmessage { get; set; }
      public decimal deltaApplydisc { get; set; }
      public decimal discamt { get; set; }
      public DateTime? discdt { get; set; }
      [StringValidationAttribute]
      public string dispcd { get; set; }
      public bool disputefl { get; set; }
      public int divno { get; set; }
      public DateTime? duedt { get; set; }
      [StringValidationAttribute]
      public string filter { get; set; }
      public bool filtered { get; set; }
      [StringValidationAttribute]
      public string groupid { get; set; }
      public decimal initApplyamt { get; set; }
      public decimal initApplydisc { get; set; }
      public bool initPiffl { get; set; }
      public bool invaddonsenabled { get; set; }
      public bool invapplyamtenabled { get; set; }
      public DateTime? invdt { get; set; }
      public bool invforceleaveofapplyamt { get; set; }
      public int invno { get; set; }
      [StringValidationAttribute]
      public string invoice { get; set; }
      public bool invorigdiscenabled { get; set; }
      public bool invreferenabled { get; set; }
      public bool invresetenabled { get; set; }
      [StringValidationAttribute]
      public string invrowcolor { get; set; }
      public int invsuf { get; set; }
      [StringValidationAttribute]
      public string invtype { get; set; }
      public bool invwriteoffenabled { get; set; }
      public int jrnlno { get; set; }
      [StringValidationAttribute]
      public string notesfl { get; set; }
      public decimal odiscamt { get; set; }
      public decimal origamount { get; set; }
      public decimal origdisc { get; set; }
      public int paymtno { get; set; }
      public int period { get; set; }
      public bool piffl { get; set; }
      public bool pifflsave { get; set; }
      public decimal prevapplyamt { get; set; }
      public decimal prevdiscamt { get; set; }
      public bool prevpiffl { get; set; }
      public long recno { get; set; }
      [StringValidationAttribute]
      public string refer { get; set; }
      public int seqno { get; set; }
      public int setno { get; set; }
      [StringValidationAttribute]
      public string shipto { get; set; }
      public bool slsytdfl { get; set; }
      public int sourcecd { get; set; }
      [StringValidationAttribute]
      public string termstype { get; set; }
      public decimal totaddon { get; set; }
      public decimal tottaxes { get; set; }
      public int transcd { get; set; }
      [StringValidationAttribute]
      public string transtype { get; set; }
      [StringValidationAttribute]
      public string user1 { get; set; }
      [StringValidationAttribute]
      public string user2 { get; set; }
      [StringValidationAttribute]
      public string user3 { get; set; }
      [StringValidationAttribute]
      public string user4 { get; set; }
      [StringValidationAttribute]
      public string user5 { get; set; }
      public decimal? user6 { get; set; }
      public decimal? user7 { get; set; }
      public DateTime? user8 { get; set; }
      public DateTime? user9 { get; set; }
      [StringValidationAttribute]
      public string webuifilter { get; set; }
      public bool wocancel { get; set; }
      [StringValidationAttribute]
      public string npclaimno { get; set; }
      [StringValidationAttribute]
      public string relateddocument { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Areceinvoiceslist BuildAreceinvoiceslistFromRow(DataRow row)
      {
         Areceinvoiceslist entity = new Areceinvoiceslist();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.oper = row.IsNull("oper") ? string.Empty : row.Field<string>("oper");
         entity.allowdiscamt = row.IsNull("allowdiscamt") ? decimal.Zero : row.Field<decimal>("allowdiscamt");
         entity.amount = row.IsNull("amount") ? decimal.Zero : row.Field<decimal>("amount");
         entity.apinvno = row.IsNull("apinvno") ? string.Empty : row.Field<string>("apinvno");
         entity.applyamt = row.IsNull("applyamt") ? decimal.Zero : row.Field<decimal>("applyamt");
         entity.credcounter = row.IsNull("credcounter") ? 0 : row.Field<int>("credcounter");
         entity.credorigdiscenabled = row.Field<bool>("credorigdiscenabled");
         entity.credwriteoffenabled = row.Field<bool>("credwriteoffenabled");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.custpo = row.IsNull("custpo") ? string.Empty : row.Field<string>("custpo");
         entity.dbtcustnoenabled = row.Field<bool>("dbtcustnoenabled");
         entity.dbtdivnoenabled = row.Field<bool>("dbtdivnoenabled");
         entity.dbttxtmessage = row.IsNull("dbttxtmessage") ? string.Empty : row.Field<string>("dbttxtmessage");
         entity.deltaApplydisc = row.IsNull("delta-applydisc") ? decimal.Zero : row.Field<decimal>("delta-applydisc");
         entity.discamt = row.IsNull("discamt") ? decimal.Zero : row.Field<decimal>("discamt");
         entity.discdt = row.Field<DateTime?>("discdt");
         entity.dispcd = row.IsNull("dispcd") ? string.Empty : row.Field<string>("dispcd");
         entity.disputefl = row.Field<bool>("disputefl");
         entity.divno = row.IsNull("divno") ? 0 : row.Field<int>("divno");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.filter = row.IsNull("filter") ? string.Empty : row.Field<string>("filter");
         entity.filtered = row.Field<bool>("filtered");
         entity.groupid = row.IsNull("groupid") ? string.Empty : row.Field<string>("groupid");
         entity.initApplyamt = row.IsNull("init-applyamt") ? decimal.Zero : row.Field<decimal>("init-applyamt");
         entity.initApplydisc = row.IsNull("init-applydisc") ? decimal.Zero : row.Field<decimal>("init-applydisc");
         entity.initPiffl = row.Field<bool>("init-piffl");
         entity.invaddonsenabled = row.Field<bool>("invaddonsenabled");
         entity.invapplyamtenabled = row.Field<bool>("invapplyamtenabled");
         entity.invdt = row.Field<DateTime?>("invdt");
         entity.invforceleaveofapplyamt = row.Field<bool>("invforceleaveofapplyamt");
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invoice = row.IsNull("invoice") ? string.Empty : row.Field<string>("invoice");
         entity.invorigdiscenabled = row.Field<bool>("invorigdiscenabled");
         entity.invreferenabled = row.Field<bool>("invreferenabled");
         entity.invresetenabled = row.Field<bool>("invresetenabled");
         entity.invrowcolor = row.IsNull("invrowcolor") ? string.Empty : row.Field<string>("invrowcolor");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.invtype = row.IsNull("invtype") ? string.Empty : row.Field<string>("invtype");
         entity.invwriteoffenabled = row.Field<bool>("invwriteoffenabled");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.odiscamt = row.IsNull("odiscamt") ? decimal.Zero : row.Field<decimal>("odiscamt");
         entity.origamount = row.IsNull("origamount") ? decimal.Zero : row.Field<decimal>("origamount");
         entity.origdisc = row.IsNull("origdisc") ? decimal.Zero : row.Field<decimal>("origdisc");
         entity.paymtno = row.IsNull("paymtno") ? 0 : row.Field<int>("paymtno");
         entity.period = row.IsNull("period") ? 0 : row.Field<int>("period");
         entity.piffl = row.Field<bool>("piffl");
         entity.pifflsave = row.Field<bool>("pifflsave");
         entity.prevapplyamt = row.IsNull("prevapplyamt") ? decimal.Zero : row.Field<decimal>("prevapplyamt");
         entity.prevdiscamt = row.IsNull("prevdiscamt") ? decimal.Zero : row.Field<decimal>("prevdiscamt");
         entity.prevpiffl = row.Field<bool>("prevpiffl");
         entity.recno = row.IsNull("recno") ? 0 : row.Field<long>("recno");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.setno = row.IsNull("setno") ? 0 : row.Field<int>("setno");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.slsytdfl = row.Field<bool>("slsytdfl");
         entity.sourcecd = row.IsNull("sourcecd") ? 0 : row.Field<int>("sourcecd");
         entity.termstype = row.IsNull("termstype") ? string.Empty : row.Field<string>("termstype");
         entity.totaddon = row.IsNull("totaddon") ? decimal.Zero : row.Field<decimal>("totaddon");
         entity.tottaxes = row.IsNull("tottaxes") ? decimal.Zero : row.Field<decimal>("tottaxes");
         entity.transcd = row.IsNull("transcd") ? 0 : row.Field<int>("transcd");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.webuifilter = row.IsNull("webuifilter") ? string.Empty : row.Field<string>("webuifilter");
         entity.wocancel = row.Field<bool>("wocancel");
         entity.npclaimno = row.IsNull("npclaimno") ? string.Empty : row.Field<string>("npclaimno");
         entity.relateddocument = row.IsNull("relateddocument") ? string.Empty : row.Field<string>("relateddocument");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromAreceinvoiceslist(ref DataRow row, Areceinvoiceslist entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("oper", entity.oper);
         row.SetField("allowdiscamt", entity.allowdiscamt);
         row.SetField("amount", entity.amount);
         row.SetField("apinvno", entity.apinvno);
         row.SetField("applyamt", entity.applyamt);
         row.SetField("credcounter", entity.credcounter);
         row.SetField("credorigdiscenabled", entity.credorigdiscenabled);
         row.SetField("credwriteoffenabled", entity.credwriteoffenabled);
         row.SetField("custno", entity.custno);
         row.SetField("custpo", entity.custpo);
         row.SetField("dbtcustnoenabled", entity.dbtcustnoenabled);
         row.SetField("dbtdivnoenabled", entity.dbtdivnoenabled);
         row.SetField("dbttxtmessage", entity.dbttxtmessage);
         row.SetField("delta-applydisc", entity.deltaApplydisc);
         row.SetField("discamt", entity.discamt);
         row.SetField("discdt", entity.discdt);
         row.SetField("dispcd", entity.dispcd);
         row.SetField("disputefl", entity.disputefl);
         row.SetField("divno", entity.divno);
         row.SetField("duedt", entity.duedt);
         row.SetField("filter", entity.filter);
         row.SetField("filtered", entity.filtered);
         row.SetField("groupid", entity.groupid);
         row.SetField("init-applyamt", entity.initApplyamt);
         row.SetField("init-applydisc", entity.initApplydisc);
         row.SetField("init-piffl", entity.initPiffl);
         row.SetField("invaddonsenabled", entity.invaddonsenabled);
         row.SetField("invapplyamtenabled", entity.invapplyamtenabled);
         row.SetField("invdt", entity.invdt);
         row.SetField("invforceleaveofapplyamt", entity.invforceleaveofapplyamt);
         row.SetField("invno", entity.invno);
         row.SetField("invoice", entity.invoice);
         row.SetField("invorigdiscenabled", entity.invorigdiscenabled);
         row.SetField("invreferenabled", entity.invreferenabled);
         row.SetField("invresetenabled", entity.invresetenabled);
         row.SetField("invrowcolor", entity.invrowcolor);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("invtype", entity.invtype);
         row.SetField("invwriteoffenabled", entity.invwriteoffenabled);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("odiscamt", entity.odiscamt);
         row.SetField("origamount", entity.origamount);
         row.SetField("origdisc", entity.origdisc);
         row.SetField("paymtno", entity.paymtno);
         row.SetField("period", entity.period);
         row.SetField("piffl", entity.piffl);
         row.SetField("pifflsave", entity.pifflsave);
         row.SetField("prevapplyamt", entity.prevapplyamt);
         row.SetField("prevdiscamt", entity.prevdiscamt);
         row.SetField("prevpiffl", entity.prevpiffl);
         row.SetField("recno", entity.recno);
         row.SetField("refer", entity.refer);
         row.SetField("seqno", entity.seqno);
         row.SetField("setno", entity.setno);
         row.SetField("shipto", entity.shipto);
         row.SetField("slsytdfl", entity.slsytdfl);
         row.SetField("sourcecd", entity.sourcecd);
         row.SetField("termstype", entity.termstype);
         row.SetField("totaddon", entity.totaddon);
         row.SetField("tottaxes", entity.tottaxes);
         row.SetField("transcd", entity.transcd);
         row.SetField("transtype", entity.transtype);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("webuifilter", entity.webuifilter);
         row.SetField("wocancel", entity.wocancel);
         row.SetField("npclaimno", entity.npclaimno);
         row.SetField("relateddocument", entity.relateddocument);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
