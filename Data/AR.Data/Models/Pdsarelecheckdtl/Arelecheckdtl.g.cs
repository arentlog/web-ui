//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.AR.Data.Models.Pdsarelecheckdtl
{
   [ModelName("Infor.Sxe.AR.Data.Models.Pdsarelecheckdtl.Arelecheckdtl")]
   public partial class Arelecheckdtl : ModelBase
   {
      [StringValidationAttribute]
      public string batch { get; set; }
      public decimal custno { get; set; }
      public int checkno { get; set; }
      [StringValidationAttribute]
      public string lbxinvno { get; set; }
      public decimal lbxamt { get; set; }
      public long aretid { get; set; }
      public int invno { get; set; }
      public int invsuf { get; set; }
      public int seqno { get; set; }
      public decimal invamt { get; set; }
      public DateTime? duedt { get; set; }
      [StringValidationAttribute]
      public string trancd { get; set; }
      public bool piffl { get; set; }
      public decimal applyamt { get; set; }
      public decimal discamt { get; set; }
      public decimal invcustno { get; set; }
      public bool aretnffl { get; set; }
      public bool statfl { get; set; }
      [StringValidationAttribute]
      public string refer { get; set; }
      public int prefix { get; set; }
      public int cbinvno { get; set; }
      [StringValidationAttribute]
      public string adddata1 { get; set; }
      [StringValidationAttribute]
      public string adddata2 { get; set; }
      [StringValidationAttribute]
      public string adddata3 { get; set; }
      [StringValidationAttribute]
      public string adddata4 { get; set; }
      [StringValidationAttribute]
      public string adddata5 { get; set; }
      [StringValidationAttribute]
      public string adddata6 { get; set; }
      [StringValidationAttribute]
      public string adddata7 { get; set; }
      [StringValidationAttribute]
      public string adddata8 { get; set; }
      [StringValidationAttribute]
      public string adddata9 { get; set; }
      [StringValidationAttribute]
      public string adddata10 { get; set; }
      public bool autopostfl { get; set; }
      public DateTime? transdt { get; set; }
      [StringValidationAttribute]
      public string transtm { get; set; }
      [StringValidationAttribute]
      public string operinit { get; set; }
      public bool chgfl { get; set; }
      public decimal dWOAmt { get; set; }
      public bool lRanWOFl { get; set; }
      public long arbclid { get; set; }
      [StringValidationAttribute]
      public string arbchid { get; set; }
      [StringValidationAttribute]
      public string dtlerror { get; set; }
      public bool deletefl { get; set; }
      [StringValidationAttribute]
      public string dtlrowid { get; set; }
      public decimal dMaxAmt { get; set; }
      public decimal dMinAmt { get; set; }
      public bool lCheckChgFl { get; set; }
      public bool lNSFFl { get; set; }
      public long rarbchid { get; set; }
      [StringValidationAttribute]
      public string trancddesc { get; set; }
      public decimal wOProof { get; set; }
      [StringValidationAttribute]
      public string arbclrowid { get; set; }
      [StringValidationAttribute]
      public string aretrowid { get; set; }
      public bool discamtenable { get; set; }
      public bool dtlfieldsenable { get; set; }
      public bool pifflenable { get; set; }
      public decimal origapplyamt { get; set; }
      public long origaretid { get; set; }
      public bool origaretnffl { get; set; }
      public int origcbinvno { get; set; }
      public decimal origcustno { get; set; }
      public decimal origdiscamt { get; set; }
      public DateTime? origduedt { get; set; }
      public decimal origdWOAmt { get; set; }
      public decimal originvamt { get; set; }
      public decimal originvcustno { get; set; }
      public int originvno { get; set; }
      public int originvsuf { get; set; }
      [StringValidationAttribute]
      public string origlbxinvno { get; set; }
      public decimal origlbxamt { get; set; }
      public bool origlRanWOFl { get; set; }
      [StringValidationAttribute]
      public string origoperinit { get; set; }
      public bool origpiffl { get; set; }
      public int origprefix { get; set; }
      [StringValidationAttribute]
      public string origrefer { get; set; }
      public int origseqno { get; set; }
      public bool origstatfl { get; set; }
      [StringValidationAttribute]
      public string origtrancd { get; set; }
      [StringValidationAttribute]
      public string origtrancddesc { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Arelecheckdtl BuildArelecheckdtlFromRow(DataRow row)
      {
         Arelecheckdtl entity = new Arelecheckdtl();
         entity.batch = row.IsNull("batch") ? string.Empty : row.Field<string>("batch");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.checkno = row.IsNull("checkno") ? 0 : row.Field<int>("checkno");
         entity.lbxinvno = row.IsNull("lbxinvno") ? string.Empty : row.Field<string>("lbxinvno");
         entity.lbxamt = row.IsNull("lbxamt") ? decimal.Zero : row.Field<decimal>("lbxamt");
         entity.aretid = row.IsNull("aretid") ? 0 : row.Field<long>("aretid");
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.invamt = row.IsNull("invamt") ? decimal.Zero : row.Field<decimal>("invamt");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.trancd = row.IsNull("trancd") ? string.Empty : row.Field<string>("trancd");
         entity.piffl = row.Field<bool>("piffl");
         entity.applyamt = row.IsNull("applyamt") ? decimal.Zero : row.Field<decimal>("applyamt");
         entity.discamt = row.IsNull("discamt") ? decimal.Zero : row.Field<decimal>("discamt");
         entity.invcustno = row.IsNull("invcustno") ? decimal.Zero : row.Field<decimal>("invcustno");
         entity.aretnffl = row.Field<bool>("aretnffl");
         entity.statfl = row.Field<bool>("statfl");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.prefix = row.IsNull("prefix") ? 0 : row.Field<int>("prefix");
         entity.cbinvno = row.IsNull("cbinvno") ? 0 : row.Field<int>("cbinvno");
         entity.adddata1 = row.IsNull("adddata1") ? string.Empty : row.Field<string>("adddata1");
         entity.adddata2 = row.IsNull("adddata2") ? string.Empty : row.Field<string>("adddata2");
         entity.adddata3 = row.IsNull("adddata3") ? string.Empty : row.Field<string>("adddata3");
         entity.adddata4 = row.IsNull("adddata4") ? string.Empty : row.Field<string>("adddata4");
         entity.adddata5 = row.IsNull("adddata5") ? string.Empty : row.Field<string>("adddata5");
         entity.adddata6 = row.IsNull("adddata6") ? string.Empty : row.Field<string>("adddata6");
         entity.adddata7 = row.IsNull("adddata7") ? string.Empty : row.Field<string>("adddata7");
         entity.adddata8 = row.IsNull("adddata8") ? string.Empty : row.Field<string>("adddata8");
         entity.adddata9 = row.IsNull("adddata9") ? string.Empty : row.Field<string>("adddata9");
         entity.adddata10 = row.IsNull("adddata10") ? string.Empty : row.Field<string>("adddata10");
         entity.autopostfl = row.Field<bool>("autopostfl");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.chgfl = row.Field<bool>("Chgfl");
         entity.dWOAmt = row.IsNull("dWOAmt") ? decimal.Zero : row.Field<decimal>("dWOAmt");
         entity.lRanWOFl = row.Field<bool>("lRanWOFl");
         entity.arbclid = row.IsNull("arbclid") ? 0 : row.Field<long>("arbclid");
         entity.arbchid = row.Field<byte[]>("arbchid").ToStringEncoded();
         entity.dtlerror = row.IsNull("dtlerror") ? string.Empty : row.Field<string>("dtlerror");
         entity.deletefl = row.Field<bool>("deletefl");
         entity.dtlrowid = row.Field<byte[]>("dtlrowid").ToStringEncoded();
         entity.dMaxAmt = row.IsNull("dMaxAmt") ? decimal.Zero : row.Field<decimal>("dMaxAmt");
         entity.dMinAmt = row.IsNull("dMinAmt") ? decimal.Zero : row.Field<decimal>("dMinAmt");
         entity.lCheckChgFl = row.Field<bool>("lCheckChgFl");
         entity.lNSFFl = row.Field<bool>("lNSFFl");
         entity.rarbchid = row.IsNull("rarbchid") ? 0 : row.Field<long>("rarbchid");
         entity.trancddesc = row.IsNull("trancddesc") ? string.Empty : row.Field<string>("trancddesc");
         entity.wOProof = row.IsNull("WOProof") ? decimal.Zero : row.Field<decimal>("WOProof");
         entity.arbclrowid = row.Field<byte[]>("arbclrowid").ToStringEncoded();
         entity.aretrowid = row.Field<byte[]>("aretrowid").ToStringEncoded();
         entity.discamtenable = row.Field<bool>("discamtenable");
         entity.dtlfieldsenable = row.Field<bool>("dtlfieldsenable");
         entity.pifflenable = row.Field<bool>("pifflenable");
         entity.origapplyamt = row.IsNull("origapplyamt") ? decimal.Zero : row.Field<decimal>("origapplyamt");
         entity.origaretid = row.IsNull("origaretid") ? 0 : row.Field<long>("origaretid");
         entity.origaretnffl = row.Field<bool>("origaretnffl");
         entity.origcbinvno = row.IsNull("origcbinvno") ? 0 : row.Field<int>("origcbinvno");
         entity.origcustno = row.IsNull("origcustno") ? decimal.Zero : row.Field<decimal>("origcustno");
         entity.origdiscamt = row.IsNull("origdiscamt") ? decimal.Zero : row.Field<decimal>("origdiscamt");
         entity.origduedt = row.Field<DateTime?>("origduedt");
         entity.origdWOAmt = row.IsNull("origdWOAmt") ? decimal.Zero : row.Field<decimal>("origdWOAmt");
         entity.originvamt = row.IsNull("originvamt") ? decimal.Zero : row.Field<decimal>("originvamt");
         entity.originvcustno = row.IsNull("originvcustno") ? decimal.Zero : row.Field<decimal>("originvcustno");
         entity.originvno = row.IsNull("originvno") ? 0 : row.Field<int>("originvno");
         entity.originvsuf = row.IsNull("originvsuf") ? 0 : row.Field<int>("originvsuf");
         entity.origlbxinvno = row.IsNull("origlbxinvno") ? string.Empty : row.Field<string>("origlbxinvno");
         entity.origlbxamt = row.IsNull("origlbxamt") ? decimal.Zero : row.Field<decimal>("origlbxamt");
         entity.origlRanWOFl = row.Field<bool>("origlRanWOFl");
         entity.origoperinit = row.IsNull("origoperinit") ? string.Empty : row.Field<string>("origoperinit");
         entity.origpiffl = row.Field<bool>("origpiffl");
         entity.origprefix = row.IsNull("origprefix") ? 0 : row.Field<int>("origprefix");
         entity.origrefer = row.IsNull("origrefer") ? string.Empty : row.Field<string>("origrefer");
         entity.origseqno = row.IsNull("origseqno") ? 0 : row.Field<int>("origseqno");
         entity.origstatfl = row.Field<bool>("origstatfl");
         entity.origtrancd = row.IsNull("origtrancd") ? string.Empty : row.Field<string>("origtrancd");
         entity.origtrancddesc = row.IsNull("origtrancddesc") ? string.Empty : row.Field<string>("origtrancddesc");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromArelecheckdtl(ref DataRow row, Arelecheckdtl entity)
      {
         row.SetField("batch", entity.batch);
         row.SetField("custno", entity.custno);
         row.SetField("checkno", entity.checkno);
         row.SetField("lbxinvno", entity.lbxinvno);
         row.SetField("lbxamt", entity.lbxamt);
         row.SetField("aretid", entity.aretid);
         row.SetField("invno", entity.invno);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("seqno", entity.seqno);
         row.SetField("invamt", entity.invamt);
         row.SetField("duedt", entity.duedt);
         row.SetField("trancd", entity.trancd);
         row.SetField("piffl", entity.piffl);
         row.SetField("applyamt", entity.applyamt);
         row.SetField("discamt", entity.discamt);
         row.SetField("invcustno", entity.invcustno);
         row.SetField("aretnffl", entity.aretnffl);
         row.SetField("statfl", entity.statfl);
         row.SetField("refer", entity.refer);
         row.SetField("prefix", entity.prefix);
         row.SetField("cbinvno", entity.cbinvno);
         row.SetField("adddata1", entity.adddata1);
         row.SetField("adddata2", entity.adddata2);
         row.SetField("adddata3", entity.adddata3);
         row.SetField("adddata4", entity.adddata4);
         row.SetField("adddata5", entity.adddata5);
         row.SetField("adddata6", entity.adddata6);
         row.SetField("adddata7", entity.adddata7);
         row.SetField("adddata8", entity.adddata8);
         row.SetField("adddata9", entity.adddata9);
         row.SetField("adddata10", entity.adddata10);
         row.SetField("autopostfl", entity.autopostfl);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("operinit", entity.operinit);
         row.SetField("Chgfl", entity.chgfl);
         row.SetField("dWOAmt", entity.dWOAmt);
         row.SetField("lRanWOFl", entity.lRanWOFl);
         row.SetField("arbclid", entity.arbclid);
         row.SetField("arbchid", entity.arbchid.ToByteArray());
         row.SetField("dtlerror", entity.dtlerror);
         row.SetField("deletefl", entity.deletefl);
         row.SetField("dtlrowid", entity.dtlrowid.ToByteArray());
         row.SetField("dMaxAmt", entity.dMaxAmt);
         row.SetField("dMinAmt", entity.dMinAmt);
         row.SetField("lCheckChgFl", entity.lCheckChgFl);
         row.SetField("lNSFFl", entity.lNSFFl);
         row.SetField("rarbchid", entity.rarbchid);
         row.SetField("trancddesc", entity.trancddesc);
         row.SetField("WOProof", entity.wOProof);
         row.SetField("arbclrowid", entity.arbclrowid.ToByteArray());
         row.SetField("aretrowid", entity.aretrowid.ToByteArray());
         row.SetField("discamtenable", entity.discamtenable);
         row.SetField("dtlfieldsenable", entity.dtlfieldsenable);
         row.SetField("pifflenable", entity.pifflenable);
         row.SetField("origapplyamt", entity.origapplyamt);
         row.SetField("origaretid", entity.origaretid);
         row.SetField("origaretnffl", entity.origaretnffl);
         row.SetField("origcbinvno", entity.origcbinvno);
         row.SetField("origcustno", entity.origcustno);
         row.SetField("origdiscamt", entity.origdiscamt);
         row.SetField("origduedt", entity.origduedt);
         row.SetField("origdWOAmt", entity.origdWOAmt);
         row.SetField("originvamt", entity.originvamt);
         row.SetField("originvcustno", entity.originvcustno);
         row.SetField("originvno", entity.originvno);
         row.SetField("originvsuf", entity.originvsuf);
         row.SetField("origlbxinvno", entity.origlbxinvno);
         row.SetField("origlbxamt", entity.origlbxamt);
         row.SetField("origlRanWOFl", entity.origlRanWOFl);
         row.SetField("origoperinit", entity.origoperinit);
         row.SetField("origpiffl", entity.origpiffl);
         row.SetField("origprefix", entity.origprefix);
         row.SetField("origrefer", entity.origrefer);
         row.SetField("origseqno", entity.origseqno);
         row.SetField("origstatfl", entity.origstatfl);
         row.SetField("origtrancd", entity.origtrancd);
         row.SetField("origtrancddesc", entity.origtrancddesc);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
