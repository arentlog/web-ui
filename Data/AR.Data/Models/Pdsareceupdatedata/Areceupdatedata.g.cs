//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.AR.Data.Models.Pdsareceupdatedata
{
   [ModelName("Infor.Sxe.AR.Data.Models.Pdsareceupdatedata.Areceupdatedata")]
   public partial class Areceupdatedata : ModelBase
   {
      public int cono { get; set; }
      [StringValidationAttribute]
      public string oper { get; set; }
      public decimal ckAmount { get; set; }
      public decimal ckAmountPosted { get; set; }
      [StringValidationAttribute]
      public string divamts { get; set; }
      [StringValidationAttribute]
      public string divnos { get; set; }
      public bool firstSplitCkfl { get; set; }
      public decimal gCustno { get; set; }
      public int gBankno { get; set; }
      public int gDivno { get; set; }
      [StringValidationAttribute]
      public string gGroupid { get; set; }
      [StringValidationAttribute]
      public string gShipto { get; set; }
      [StringValidationAttribute]
      public string mRefer { get; set; }
      public decimal mUnappliedCust { get; set; }
      public decimal proofAcctnoPost { get; set; }
      public decimal proofAmtPosted { get; set; }
      public decimal proofDeptnoPost { get; set; }
      public decimal proofDivnoPost { get; set; }
      public decimal proofSubnoPost { get; set; }
      public decimal sAmount { get; set; }
      public int sCheckno { get; set; }
      public decimal sMiscamt { get; set; }
      public DateTime? sPostdt { get; set; }
      [StringValidationAttribute]
      public string sPosttype { get; set; }
      [StringValidationAttribute]
      public string sPymttranscd { get; set; }
      public bool vChrecfl { get; set; }
      public int vNoapps { get; set; }
      [StringValidationAttribute]
      public string vUpdglty { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Areceupdatedata BuildAreceupdatedataFromRow(DataRow row)
      {
         Areceupdatedata entity = new Areceupdatedata();
         entity.cono = row.IsNull("cono") ? 0 : row.Field<int>("cono");
         entity.oper = row.IsNull("oper") ? string.Empty : row.Field<string>("oper");
         entity.ckAmount = row.IsNull("ck-amount") ? decimal.Zero : row.Field<decimal>("ck-amount");
         entity.ckAmountPosted = row.IsNull("ck-amount-posted") ? decimal.Zero : row.Field<decimal>("ck-amount-posted");
         entity.divamts = row.IsNull("divamts") ? string.Empty : row.Field<string>("divamts");
         entity.divnos = row.IsNull("divnos") ? string.Empty : row.Field<string>("divnos");
         entity.firstSplitCkfl = row.Field<bool>("first-split-ckfl");
         entity.gCustno = row.IsNull("g-custno") ? decimal.Zero : row.Field<decimal>("g-custno");
         entity.gBankno = row.IsNull("g-bankno") ? 0 : row.Field<int>("g-bankno");
         entity.gDivno = row.IsNull("g-divno") ? 0 : row.Field<int>("g-divno");
         entity.gGroupid = row.IsNull("g-groupid") ? string.Empty : row.Field<string>("g-groupid");
         entity.gShipto = row.IsNull("g-shipto") ? string.Empty : row.Field<string>("g-shipto");
         entity.mRefer = row.IsNull("m-refer") ? string.Empty : row.Field<string>("m-refer");
         entity.mUnappliedCust = row.IsNull("m-unapplied-cust") ? decimal.Zero : row.Field<decimal>("m-unapplied-cust");
         entity.proofAcctnoPost = row.IsNull("proof-acctno-post") ? decimal.Zero : row.Field<decimal>("proof-acctno-post");
         entity.proofAmtPosted = row.IsNull("proof-amt-posted") ? decimal.Zero : row.Field<decimal>("proof-amt-posted");
         entity.proofDeptnoPost = row.IsNull("proof-deptno-post") ? decimal.Zero : row.Field<decimal>("proof-deptno-post");
         entity.proofDivnoPost = row.IsNull("proof-divno-post") ? decimal.Zero : row.Field<decimal>("proof-divno-post");
         entity.proofSubnoPost = row.IsNull("proof-subno-post") ? decimal.Zero : row.Field<decimal>("proof-subno-post");
         entity.sAmount = row.IsNull("s-amount") ? decimal.Zero : row.Field<decimal>("s-amount");
         entity.sCheckno = row.IsNull("s-checkno") ? 0 : row.Field<int>("s-checkno");
         entity.sMiscamt = row.IsNull("s-miscamt") ? decimal.Zero : row.Field<decimal>("s-miscamt");
         entity.sPostdt = row.Field<DateTime?>("s-postdt");
         entity.sPosttype = row.IsNull("s-posttype") ? string.Empty : row.Field<string>("s-posttype");
         entity.sPymttranscd = row.IsNull("s-pymttranscd") ? string.Empty : row.Field<string>("s-pymttranscd");
         entity.vChrecfl = row.Field<bool>("v-chrecfl");
         entity.vNoapps = row.IsNull("v-noapps") ? 0 : row.Field<int>("v-noapps");
         entity.vUpdglty = row.IsNull("v-updglty") ? string.Empty : row.Field<string>("v-updglty");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromAreceupdatedata(ref DataRow row, Areceupdatedata entity)
      {
         row.SetField("cono", entity.cono);
         row.SetField("oper", entity.oper);
         row.SetField("ck-amount", entity.ckAmount);
         row.SetField("ck-amount-posted", entity.ckAmountPosted);
         row.SetField("divamts", entity.divamts);
         row.SetField("divnos", entity.divnos);
         row.SetField("first-split-ckfl", entity.firstSplitCkfl);
         row.SetField("g-custno", entity.gCustno);
         row.SetField("g-bankno", entity.gBankno);
         row.SetField("g-divno", entity.gDivno);
         row.SetField("g-groupid", entity.gGroupid);
         row.SetField("g-shipto", entity.gShipto);
         row.SetField("m-refer", entity.mRefer);
         row.SetField("m-unapplied-cust", entity.mUnappliedCust);
         row.SetField("proof-acctno-post", entity.proofAcctnoPost);
         row.SetField("proof-amt-posted", entity.proofAmtPosted);
         row.SetField("proof-deptno-post", entity.proofDeptnoPost);
         row.SetField("proof-divno-post", entity.proofDivnoPost);
         row.SetField("proof-subno-post", entity.proofSubnoPost);
         row.SetField("s-amount", entity.sAmount);
         row.SetField("s-checkno", entity.sCheckno);
         row.SetField("s-miscamt", entity.sMiscamt);
         row.SetField("s-postdt", entity.sPostdt);
         row.SetField("s-posttype", entity.sPosttype);
         row.SetField("s-pymttranscd", entity.sPymttranscd);
         row.SetField("v-chrecfl", entity.vChrecfl);
         row.SetField("v-noapps", entity.vNoapps);
         row.SetField("v-updglty", entity.vUpdglty);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
