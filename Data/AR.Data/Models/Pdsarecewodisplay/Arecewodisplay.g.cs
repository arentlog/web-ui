//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.AR.Data.Models.Pdsarecewodisplay
{
   [ModelName("Infor.Sxe.AR.Data.Models.Pdsarecewodisplay.Arecewodisplay")]
   public partial class Arecewodisplay : ModelBase
   {
      [StringValidationAttribute]
      public string acctname { get; set; }
      public bool acctnamevisible { get; set; }
      public decimal amount { get; set; }
      [StringValidationAttribute]
      public string btnaddlabel { get; set; }
      public bool btnlookupaccountenabled { get; set; }
      public bool btnlookupaccountvisible { get; set; }
      [StringValidationAttribute]
      public string account { get; set; }
      public bool accountenabled { get; set; }
      public bool accountvisible { get; set; }
      public bool dashvisible { get; set; }
      public bool amountenabled { get; set; }
      public bool amountvisible { get; set; }
      public decimal adjbaseamt { get; set; }
      public bool adjbaseamtenabled { get; set; }
      public bool adjbaseamtvisible { get; set; }
      public decimal taxexemptamt { get; set; }
      public bool taxexemptamtenabled { get; set; }
      public bool taxexemptamtvisible { get; set; }
      public int invno { get; set; }
      public bool invnoenabled { get; set; }
      public bool invnovisible { get; set; }
      public int invsuf { get; set; }
      public bool invsufenabled { get; set; }
      public bool invsufvisible { get; set; }
      public int glyear { get; set; }
      public decimal proof { get; set; }
      [StringValidationAttribute]
      public string proofcolor { get; set; }
      public int seqno { get; set; }
      public bool seqnoenabled { get; set; }
      public bool seqnovisible { get; set; }
      public bool writeofftaxamountsenabled { get; set; }
      public decimal vAmount { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Arecewodisplay BuildArecewodisplayFromRow(DataRow row)
      {
         Arecewodisplay entity = new Arecewodisplay();
         entity.acctname = row.IsNull("acctname") ? string.Empty : row.Field<string>("acctname");
         entity.acctnamevisible = row.Field<bool>("acctnamevisible");
         entity.amount = row.IsNull("amount") ? decimal.Zero : row.Field<decimal>("amount");
         entity.btnaddlabel = row.IsNull("btnaddlabel") ? string.Empty : row.Field<string>("btnaddlabel");
         entity.btnlookupaccountenabled = row.Field<bool>("btnlookupaccountenabled");
         entity.btnlookupaccountvisible = row.Field<bool>("btnlookupaccountvisible");
         entity.account = row.IsNull("account") ? string.Empty : row.Field<string>("account");
         entity.accountenabled = row.Field<bool>("accountenabled");
         entity.accountvisible = row.Field<bool>("accountvisible");
         entity.dashvisible = row.Field<bool>("dashvisible");
         entity.amountenabled = row.Field<bool>("amountenabled");
         entity.amountvisible = row.Field<bool>("amountvisible");
         entity.adjbaseamt = row.IsNull("adjbaseamt") ? decimal.Zero : row.Field<decimal>("adjbaseamt");
         entity.adjbaseamtenabled = row.Field<bool>("adjbaseamtenabled");
         entity.adjbaseamtvisible = row.Field<bool>("adjbaseamtvisible");
         entity.taxexemptamt = row.IsNull("taxexemptamt") ? decimal.Zero : row.Field<decimal>("taxexemptamt");
         entity.taxexemptamtenabled = row.Field<bool>("taxexemptamtenabled");
         entity.taxexemptamtvisible = row.Field<bool>("taxexemptamtvisible");
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invnoenabled = row.Field<bool>("invnoenabled");
         entity.invnovisible = row.Field<bool>("invnovisible");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.invsufenabled = row.Field<bool>("invsufenabled");
         entity.invsufvisible = row.Field<bool>("invsufvisible");
         entity.glyear = row.IsNull("glyear") ? 0 : row.Field<int>("glyear");
         entity.proof = row.IsNull("proof") ? decimal.Zero : row.Field<decimal>("proof");
         entity.proofcolor = row.IsNull("proofcolor") ? string.Empty : row.Field<string>("proofcolor");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.seqnoenabled = row.Field<bool>("seqnoenabled");
         entity.seqnovisible = row.Field<bool>("seqnovisible");
         entity.writeofftaxamountsenabled = row.Field<bool>("writeofftaxamountsenabled");
         entity.vAmount = row.IsNull("v-amount") ? decimal.Zero : row.Field<decimal>("v-amount");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromArecewodisplay(ref DataRow row, Arecewodisplay entity)
      {
         row.SetField("acctname", entity.acctname);
         row.SetField("acctnamevisible", entity.acctnamevisible);
         row.SetField("amount", entity.amount);
         row.SetField("btnaddlabel", entity.btnaddlabel);
         row.SetField("btnlookupaccountenabled", entity.btnlookupaccountenabled);
         row.SetField("btnlookupaccountvisible", entity.btnlookupaccountvisible);
         row.SetField("account", entity.account);
         row.SetField("accountenabled", entity.accountenabled);
         row.SetField("accountvisible", entity.accountvisible);
         row.SetField("dashvisible", entity.dashvisible);
         row.SetField("amountenabled", entity.amountenabled);
         row.SetField("amountvisible", entity.amountvisible);
         row.SetField("adjbaseamt", entity.adjbaseamt);
         row.SetField("adjbaseamtenabled", entity.adjbaseamtenabled);
         row.SetField("adjbaseamtvisible", entity.adjbaseamtvisible);
         row.SetField("taxexemptamt", entity.taxexemptamt);
         row.SetField("taxexemptamtenabled", entity.taxexemptamtenabled);
         row.SetField("taxexemptamtvisible", entity.taxexemptamtvisible);
         row.SetField("invno", entity.invno);
         row.SetField("invnoenabled", entity.invnoenabled);
         row.SetField("invnovisible", entity.invnovisible);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("invsufenabled", entity.invsufenabled);
         row.SetField("invsufvisible", entity.invsufvisible);
         row.SetField("glyear", entity.glyear);
         row.SetField("proof", entity.proof);
         row.SetField("proofcolor", entity.proofcolor);
         row.SetField("seqno", entity.seqno);
         row.SetField("seqnoenabled", entity.seqnoenabled);
         row.SetField("seqnovisible", entity.seqnovisible);
         row.SetField("writeofftaxamountsenabled", entity.writeofftaxamountsenabled);
         row.SetField("v-amount", entity.vAmount);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
