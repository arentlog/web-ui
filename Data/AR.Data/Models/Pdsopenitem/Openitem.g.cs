//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.AR.Data.Models.Pdsopenitem
{
   [ModelName("Infor.Sxe.AR.Data.Models.Pdsopenitem.Openitem")]
   public partial class Openitem : ModelBase
   {
      [StringValidationAttribute]
      public string invnosuf { get; set; }
      public decimal amount { get; set; }
      [StringValidationAttribute]
      public string currencyty { get; set; }
      public bool currencytyHidden { get; set; }
      public DateTime? invdt { get; set; }
      public DateTime? postdt { get; set; }
      public bool disputefl { get; set; }
      public bool disputeflHidden { get; set; }
      public DateTime? duedt { get; set; }
      public int duedays { get; set; }
      public DateTime? discdt { get; set; }
      public bool discdtHidden { get; set; }
      public int discdays { get; set; }
      public bool discdaysHidden { get; set; }
      public decimal discpct { get; set; }
      public bool discpctHidden { get; set; }
      [StringValidationAttribute]
      public string discpctval { get; set; }
      public bool discpctvalHidden { get; set; }
      public decimal origdisc { get; set; }
      public bool origdiscHidden { get; set; }
      [StringValidationAttribute]
      public string dollar { get; set; }
      public bool dollarHidden { get; set; }
      [StringValidationAttribute]
      public string refer { get; set; }
      [StringValidationAttribute]
      public string rowidOpenitem { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Openitem BuildOpenitemFromRow(DataRow row)
      {
         Openitem entity = new Openitem();
         entity.invnosuf = row.IsNull("invnosuf") ? string.Empty : row.Field<string>("invnosuf");
         entity.amount = row.IsNull("amount") ? decimal.Zero : row.Field<decimal>("amount");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.currencytyHidden = row.Field<bool>("currencyty-hidden");
         entity.invdt = row.Field<DateTime?>("invdt");
         entity.postdt = row.Field<DateTime?>("postdt");
         entity.disputefl = row.Field<bool>("disputefl");
         entity.disputeflHidden = row.Field<bool>("disputefl-hidden");
         entity.duedt = row.Field<DateTime?>("duedt");
         entity.duedays = row.IsNull("duedays") ? 0 : row.Field<int>("duedays");
         entity.discdt = row.Field<DateTime?>("discdt");
         entity.discdtHidden = row.Field<bool>("discdt-hidden");
         entity.discdays = row.IsNull("discdays") ? 0 : row.Field<int>("discdays");
         entity.discdaysHidden = row.Field<bool>("discdays-hidden");
         entity.discpct = row.IsNull("discpct") ? decimal.Zero : row.Field<decimal>("discpct");
         entity.discpctHidden = row.Field<bool>("discpct-hidden");
         entity.discpctval = row.IsNull("discpctval") ? string.Empty : row.Field<string>("discpctval");
         entity.discpctvalHidden = row.Field<bool>("discpctval-hidden");
         entity.origdisc = row.IsNull("origdisc") ? decimal.Zero : row.Field<decimal>("origdisc");
         entity.origdiscHidden = row.Field<bool>("origdisc-hidden");
         entity.dollar = row.IsNull("dollar") ? string.Empty : row.Field<string>("dollar");
         entity.dollarHidden = row.Field<bool>("dollar-hidden");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.rowidOpenitem = row.Field<byte[]>("rowid-openitem").ToStringEncoded();
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOpenitem(ref DataRow row, Openitem entity)
      {
         row.SetField("invnosuf", entity.invnosuf);
         row.SetField("amount", entity.amount);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("currencyty-hidden", entity.currencytyHidden);
         row.SetField("invdt", entity.invdt);
         row.SetField("postdt", entity.postdt);
         row.SetField("disputefl", entity.disputefl);
         row.SetField("disputefl-hidden", entity.disputeflHidden);
         row.SetField("duedt", entity.duedt);
         row.SetField("duedays", entity.duedays);
         row.SetField("discdt", entity.discdt);
         row.SetField("discdt-hidden", entity.discdtHidden);
         row.SetField("discdays", entity.discdays);
         row.SetField("discdays-hidden", entity.discdaysHidden);
         row.SetField("discpct", entity.discpct);
         row.SetField("discpct-hidden", entity.discpctHidden);
         row.SetField("discpctval", entity.discpctval);
         row.SetField("discpctval-hidden", entity.discpctvalHidden);
         row.SetField("origdisc", entity.origdisc);
         row.SetField("origdisc-hidden", entity.origdiscHidden);
         row.SetField("dollar", entity.dollar);
         row.SetField("dollar-hidden", entity.dollarHidden);
         row.SetField("refer", entity.refer);
         row.SetField("rowid-openitem", entity.rowidOpenitem.ToByteArray());
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
