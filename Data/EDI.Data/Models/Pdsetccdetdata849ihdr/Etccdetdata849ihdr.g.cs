//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.EDI.Data.Models.Pdsetccdetdata849ihdr
{
   [ModelName("Infor.Sxe.EDI.Data.Models.Pdsetccdetdata849ihdr.Etccdetdata849ihdr")]
   public partial class Etccdetdata849ihdr : ModelBase
   {
      [StringValidationAttribute]
      public string sxxmldocRowid { get; set; }
      [StringValidationAttribute]
      public string section { get; set; }
      [StringValidationAttribute]
      public string approvty { get; set; }
      [StringValidationAttribute]
      public string datasource { get; set; }
      [StringValidationAttribute]
      public string sectionD { get; set; }
      public int secseq { get; set; }
      public int errcnt { get; set; }
      public int exccnt { get; set; }
      public int infocnt { get; set; }
      [StringValidationAttribute]
      public string stageword { get; set; }
      public int stagecd { get; set; }
      public bool processedfl { get; set; }
      [StringValidationAttribute]
      public string partner { get; set; }
      public DateTime? headdt { get; set; }
      [StringValidationAttribute]
      public string purpose { get; set; }
      public decimal vendno { get; set; }
      [StringValidationAttribute]
      public string conoerpsysid { get; set; }
      [StringValidationAttribute]
      public string venderpsysid { get; set; }
      [StringValidationAttribute]
      public string venddunsno { get; set; }
      [StringValidationAttribute]
      public string contractno { get; set; }
      [StringValidationAttribute]
      public string contstatcd { get; set; }
      [StringValidationAttribute]
      public string contmsg { get; set; }
      [StringValidationAttribute]
      public string validcd { get; set; }
      [StringValidationAttribute]
      public string rejectcd { get; set; }
      [StringValidationAttribute]
      public string rejectmsg { get; set; }
      [StringValidationAttribute]
      public string follupcd { get; set; }
      [StringValidationAttribute]
      public string follupmsg { get; set; }
      [StringValidationAttribute]
      public string refer { get; set; }
      public int linecnt { get; set; }
      public DateTime? createdt { get; set; }
      [StringValidationAttribute]
      public string createtm { get; set; }
      public DateTime? transdt { get; set; }
      [StringValidationAttribute]
      public string transtm { get; set; }
      [StringValidationAttribute]
      public string transproc { get; set; }
      [StringValidationAttribute]
      public string operinit { get; set; }
      public int docid { get; set; }
      [StringValidationAttribute]
      public string origdata { get; set; }
      [StringValidationAttribute]
      public string ovrddata { get; set; }
      [StringValidationAttribute]
      public string transdata { get; set; }
      public int sortseq { get; set; }
      [StringValidationAttribute]
      public string docidD { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Etccdetdata849ihdr BuildEtccdetdata849ihdrFromRow(DataRow row)
      {
         Etccdetdata849ihdr entity = new Etccdetdata849ihdr();
         entity.sxxmldocRowid = row.Field<byte[]>("sxxmldoc-rowid").ToStringEncoded();
         entity.section = row.IsNull("section") ? string.Empty : row.Field<string>("section");
         entity.approvty = row.IsNull("approvty") ? string.Empty : row.Field<string>("approvty");
         entity.datasource = row.IsNull("datasource") ? string.Empty : row.Field<string>("datasource");
         entity.sectionD = row.IsNull("section-d") ? string.Empty : row.Field<string>("section-d");
         entity.secseq = row.IsNull("secseq") ? 0 : row.Field<int>("secseq");
         entity.errcnt = row.IsNull("errcnt") ? 0 : row.Field<int>("errcnt");
         entity.exccnt = row.IsNull("exccnt") ? 0 : row.Field<int>("exccnt");
         entity.infocnt = row.IsNull("infocnt") ? 0 : row.Field<int>("infocnt");
         entity.stageword = row.IsNull("stageword") ? string.Empty : row.Field<string>("stageword");
         entity.stagecd = row.IsNull("stagecd") ? 0 : row.Field<int>("stagecd");
         entity.processedfl = row.Field<bool>("processedfl");
         entity.partner = row.IsNull("partner") ? string.Empty : row.Field<string>("partner");
         entity.headdt = row.Field<DateTime?>("headdt");
         entity.purpose = row.IsNull("purpose") ? string.Empty : row.Field<string>("purpose");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.conoerpsysid = row.IsNull("conoerpsysid") ? string.Empty : row.Field<string>("conoerpsysid");
         entity.venderpsysid = row.IsNull("venderpsysid") ? string.Empty : row.Field<string>("venderpsysid");
         entity.venddunsno = row.IsNull("venddunsno") ? string.Empty : row.Field<string>("venddunsno");
         entity.contractno = row.IsNull("contractno") ? string.Empty : row.Field<string>("contractno");
         entity.contstatcd = row.IsNull("contstatcd") ? string.Empty : row.Field<string>("contstatcd");
         entity.contmsg = row.IsNull("contmsg") ? string.Empty : row.Field<string>("contmsg");
         entity.validcd = row.IsNull("validcd") ? string.Empty : row.Field<string>("validcd");
         entity.rejectcd = row.IsNull("rejectcd") ? string.Empty : row.Field<string>("rejectcd");
         entity.rejectmsg = row.IsNull("rejectmsg") ? string.Empty : row.Field<string>("rejectmsg");
         entity.follupcd = row.IsNull("follupcd") ? string.Empty : row.Field<string>("follupcd");
         entity.follupmsg = row.IsNull("follupmsg") ? string.Empty : row.Field<string>("follupmsg");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.linecnt = row.IsNull("linecnt") ? 0 : row.Field<int>("linecnt");
         entity.createdt = row.Field<DateTime?>("createdt");
         entity.createtm = row.IsNull("createtm") ? string.Empty : row.Field<string>("createtm");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.docid = row.IsNull("docid") ? 0 : row.Field<int>("docid");
         entity.origdata = row.IsNull("origdata") ? string.Empty : row.Field<string>("origdata");
         entity.ovrddata = row.IsNull("ovrddata") ? string.Empty : row.Field<string>("ovrddata");
         entity.transdata = row.IsNull("transdata") ? string.Empty : row.Field<string>("transdata");
         entity.sortseq = row.IsNull("sortseq") ? 0 : row.Field<int>("sortseq");
         entity.docidD = row.IsNull("docid-d") ? string.Empty : row.Field<string>("docid-d");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromEtccdetdata849ihdr(ref DataRow row, Etccdetdata849ihdr entity)
      {
         row.SetField("sxxmldoc-rowid", entity.sxxmldocRowid.ToByteArray());
         row.SetField("section", entity.section);
         row.SetField("approvty", entity.approvty);
         row.SetField("datasource", entity.datasource);
         row.SetField("section-d", entity.sectionD);
         row.SetField("secseq", entity.secseq);
         row.SetField("errcnt", entity.errcnt);
         row.SetField("exccnt", entity.exccnt);
         row.SetField("infocnt", entity.infocnt);
         row.SetField("stageword", entity.stageword);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("processedfl", entity.processedfl);
         row.SetField("partner", entity.partner);
         row.SetField("headdt", entity.headdt);
         row.SetField("purpose", entity.purpose);
         row.SetField("vendno", entity.vendno);
         row.SetField("conoerpsysid", entity.conoerpsysid);
         row.SetField("venderpsysid", entity.venderpsysid);
         row.SetField("venddunsno", entity.venddunsno);
         row.SetField("contractno", entity.contractno);
         row.SetField("contstatcd", entity.contstatcd);
         row.SetField("contmsg", entity.contmsg);
         row.SetField("validcd", entity.validcd);
         row.SetField("rejectcd", entity.rejectcd);
         row.SetField("rejectmsg", entity.rejectmsg);
         row.SetField("follupcd", entity.follupcd);
         row.SetField("follupmsg", entity.follupmsg);
         row.SetField("refer", entity.refer);
         row.SetField("linecnt", entity.linecnt);
         row.SetField("createdt", entity.createdt);
         row.SetField("createtm", entity.createtm);
         row.SetField("transdt", entity.transdt);
         row.SetField("transtm", entity.transtm);
         row.SetField("transproc", entity.transproc);
         row.SetField("operinit", entity.operinit);
         row.SetField("docid", entity.docid);
         row.SetField("origdata", entity.origdata);
         row.SetField("ovrddata", entity.ovrddata);
         row.SetField("transdata", entity.transdata);
         row.SetField("sortseq", entity.sortseq);
         row.SetField("docid-d", entity.docidD);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
