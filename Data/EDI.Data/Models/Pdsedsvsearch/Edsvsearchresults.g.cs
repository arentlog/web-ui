//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.EDI.Data.Models.Pdsedsvsearch
{
   [ModelName("Infor.Sxe.EDI.Data.Models.Pdsedsvsearch.Edsvsearchresults")]
   public partial class Edsvsearchresults : ModelBase, IUserFields
   {
      [StringValidationAttribute]
      public string contractno { get; set; }
      public decimal custno { get; set; }
      [StringValidationAttribute]
      public string customernotes { get; set; }
      [StringValidationAttribute]
      public string custrebty { get; set; }
      [StringValidationAttribute]
      public string custtype { get; set; }
      [StringValidationAttribute]
      public string keyindex { get; set; }
      [StringValidationAttribute]
      public string operinit { get; set; }
      [StringValidationAttribute]
      public string rowpointer { get; set; }
      [StringValidationAttribute]
      public string shipto { get; set; }
      [StringValidationAttribute]
      public string shiptonotes { get; set; }
      public DateTime? transdt { get; set; }
      [StringValidationAttribute]
      public string transproc { get; set; }
      [StringValidationAttribute]
      public string transtm { get; set; }
      [StringValidationAttribute]
      public string typecd { get; set; }
      [StringValidationAttribute]
      public string user1 { get; set; }
      [StringValidationAttribute]
      public string user2 { get; set; }
      [StringValidationAttribute]
      public string user3 { get; set; }
      [StringValidationAttribute]
      public string user4 { get; set; }
      [StringValidationAttribute]
      public string user5 { get; set; }
      public decimal? user6 { get; set; }
      public decimal? user7 { get; set; }
      public DateTime? user8 { get; set; }
      public DateTime? user9 { get; set; }
      public decimal vendno { get; set; }
      [StringValidationAttribute]
      public string vendornotes { get; set; }
      [StringValidationAttribute]
      public string vendorid { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      public bool wordindexfl { get; set; }
      [StringValidationAttribute]
      public string rowidEdsv { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Edsvsearchresults BuildEdsvsearchresultsFromRow(DataRow row)
      {
         Edsvsearchresults entity = new Edsvsearchresults();
         entity.contractno = row.IsNull("contractno") ? string.Empty : row.Field<string>("contractno");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.customernotes = row.IsNull("customernotes") ? string.Empty : row.Field<string>("customernotes");
         entity.custrebty = row.IsNull("custrebty") ? string.Empty : row.Field<string>("custrebty");
         entity.custtype = row.IsNull("custtype") ? string.Empty : row.Field<string>("custtype");
         entity.keyindex = row.IsNull("keyindex") ? string.Empty : row.Field<string>("keyindex");
         entity.operinit = row.IsNull("operinit") ? string.Empty : row.Field<string>("operinit");
         entity.rowpointer = row.IsNull("rowpointer") ? string.Empty : row.Field<string>("rowpointer");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.shiptonotes = row.IsNull("shiptonotes") ? string.Empty : row.Field<string>("shiptonotes");
         entity.transdt = row.Field<DateTime?>("transdt");
         entity.transproc = row.IsNull("transproc") ? string.Empty : row.Field<string>("transproc");
         entity.transtm = row.IsNull("transtm") ? string.Empty : row.Field<string>("transtm");
         entity.typecd = row.IsNull("typecd") ? string.Empty : row.Field<string>("typecd");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.vendornotes = row.IsNull("vendornotes") ? string.Empty : row.Field<string>("vendornotes");
         entity.vendorid = row.IsNull("vendorid") ? string.Empty : row.Field<string>("vendorid");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.wordindexfl = row.Field<bool>("wordindexfl");
         entity.rowidEdsv = row.Field<byte[]>("rowid-edsv").ToStringEncoded();
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromEdsvsearchresults(ref DataRow row, Edsvsearchresults entity)
      {
         row.SetField("contractno", entity.contractno);
         row.SetField("custno", entity.custno);
         row.SetField("customernotes", entity.customernotes);
         row.SetField("custrebty", entity.custrebty);
         row.SetField("custtype", entity.custtype);
         row.SetField("keyindex", entity.keyindex);
         row.SetField("operinit", entity.operinit);
         row.SetField("rowpointer", entity.rowpointer);
         row.SetField("shipto", entity.shipto);
         row.SetField("shiptonotes", entity.shiptonotes);
         row.SetField("transdt", entity.transdt);
         row.SetField("transproc", entity.transproc);
         row.SetField("transtm", entity.transtm);
         row.SetField("typecd", entity.typecd);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("vendno", entity.vendno);
         row.SetField("vendornotes", entity.vendornotes);
         row.SetField("vendorid", entity.vendorid);
         row.SetField("whse", entity.whse);
         row.SetField("wordindexfl", entity.wordindexfl);
         row.SetField("rowid-edsv", entity.rowidEdsv.ToByteArray());
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
