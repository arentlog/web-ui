//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.OT.Data.Models.Pdsotorderlookup
{
   [ModelName("Infor.Sxe.OT.Data.Models.Pdsotorderlookup.Otorderlookupcriteria")]
   public partial class Otorderlookupcriteria : ModelBase
   {
      public int trackno { get; set; }
      public decimal vendno { get; set; }
      [StringValidationAttribute]
      public string contno { get; set; }
      [StringValidationAttribute]
      public string stagecd { get; set; }
      public bool openonly { get; set; }
      public int recordcountlimit { get; set; }
      [StringValidationAttribute]
      public string customfield { get; set; }


      public static Otorderlookupcriteria BuildOtorderlookupcriteriaFromRow(DataRow row)
      {
         Otorderlookupcriteria entity = new Otorderlookupcriteria();
         entity.trackno = row.IsNull("trackno") ? 0 : row.Field<int>("trackno");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.contno = row.IsNull("contno") ? string.Empty : row.Field<string>("contno");
         entity.stagecd = row.IsNull("stagecd") ? string.Empty : row.Field<string>("stagecd");
         entity.openonly = row.Field<bool>("openonly");
         entity.recordcountlimit = row.IsNull("recordcountlimit") ? 0 : row.Field<int>("recordcountlimit");
         entity.customfield = row.IsNull("customfield") ? string.Empty : row.Field<string>("customfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOtorderlookupcriteria(ref DataRow row, Otorderlookupcriteria entity)
      {
         row.SetField("trackno", entity.trackno);
         row.SetField("vendno", entity.vendno);
         row.SetField("contno", entity.contno);
         row.SetField("stagecd", entity.stagecd);
         row.SetField("openonly", entity.openonly);
         row.SetField("recordcountlimit", entity.recordcountlimit);
         row.SetField("customfield", entity.customfield);

      }
   
   }
}
#pragma warning restore 1591
