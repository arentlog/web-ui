//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.OT.Data.Repositories
{
   using Infor.Sxe.OT.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdsotivvessellist;
   using Models.Pdsotivvessellinelist;
   using Models.Pdsotittracklist;
   using Models.Pdsotittrackbanner;
   using Models.Pdsotittrackheader;
   using Models.Pdsotittracktotals;
   using Models.Pdsotittrackline;
   using Models.Complex;

   public partial class AsotinquiryRepository : RepositoryBase
   {
      private AsotinquiryAdapter adapter;
  
      public AsotinquiryRepository(IProgressConnection connection)
      {
         this.adapter = new AsotinquiryAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public IEnumerable<Otivvesselresults> OTIVBuildVesselList(Otivvesselcriteria otivvesselcriteria)
      {
         return this.adapter.OTIVBuildVesselList(otivvesselcriteria);
      }
  
      public IEnumerable<Otivvesselline> OTIVBuildVesselLineList(int iVesselno)
      {
         return this.adapter.OTIVBuildVesselLineList(iVesselno);
      }
  
      public AsotinquiryOTITBuildTrackListResponseAPI OTITBuildTrackList(Otittrackcriteria otittrackcriteria)
      {
         return this.adapter.OTITBuildTrackList(otittrackcriteria);
      }
  
      public Otittrackbanner OTITTrackBannerLoad(int iTrackNo)
      {
         return this.adapter.OTITTrackBannerLoad(iTrackNo);
      }
  
      public Otittrackheader OTITTrackHeaderLoad(int iTrackNo)
      {
         return this.adapter.OTITTrackHeaderLoad(iTrackNo);
      }
  
      public Otittracktotals OTITTrackTotalsLoad(int iTrackNo)
      {
         return this.adapter.OTITTrackTotalsLoad(iTrackNo);
      }
  
      public IEnumerable<Otittrackline> OTITTrackLineLoad(int iTrackNo)
      {
         return this.adapter.OTITTrackLineLoad(iTrackNo);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  