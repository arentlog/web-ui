//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.OT.Data.Repositories
{
   using Infor.Sxe.OT.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdsotevvesselcriteria;
   using Models.Pdsotevvesseldata;
   using Models.Pdsotevvesselheader;
   using Models.Pdsmessaging;
   using Models.Pdsotivvessellinelist;
   using Models.Pdsotettrackcriteria;
   using Models.Pdsotettrackdata;
   using Models.Pdsotettrackdetail;
   using Models.Pdsotaddons;
   using Models.Pdsotettrackdelete;
   using Models.Pdsotetaddpoheader;
   using Models.Pdsotetaddpolines;
   using Models.Pdsotittrackline;
   using Models.Pdsaddotaddon;
   using Models.Complex;

   public partial class AsotentryRepository : RepositoryBase
   {
      private AsotentryAdapter adapter;
  
      public AsotentryRepository(IProgressConnection connection)
      {
         this.adapter = new AsotentryAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public IEnumerable<Otevvesseldata> OTEVBuildVesselList(Otevvesselcriteria otevvesselcriteria)
      {
         return this.adapter.OTEVBuildVesselList(otevvesselcriteria);
      }
  
      public Otevvesselheader OTEVVesselHeaderLoad(int iVesselNo)
      {
         return this.adapter.OTEVVesselHeaderLoad(iVesselNo);
      }
  
      public AsotentryOTEVVesselHeaderUpdateResponseAPI OTEVVesselHeaderUpdate(AsotentryOTEVVesselHeaderUpdateRequestAPI AsotentryOTEVVesselHeaderUpdateRequestAPI)
      {
         return this.adapter.OTEVVesselHeaderUpdate(AsotentryOTEVVesselHeaderUpdateRequestAPI);
      }
  
      public AsotentryOTEVAddVesselResponseAPI OTEVAddVessel()
      {
         return this.adapter.OTEVAddVessel();
      }
  
      public void OTEVDeleteVessel(int iVesselNo)
      {
         this.adapter.OTEVDeleteVessel(iVesselNo);
      }
  
      public Otivvesselline OTEVAddVesselLine(int iVesselNo, int iTrackNo)
      {
         return this.adapter.OTEVAddVesselLine(iVesselNo, iTrackNo);
      }
  
      public void OTEVDeleteVesselLine(int iVesselNo, int iLineNo)
      {
         this.adapter.OTEVDeleteVesselLine(iVesselNo, iLineNo);
      }
  
      public AsotentryOTEVUpdateVesselStageResponseAPI OTEVUpdateVesselStage(AsotentryOTEVUpdateVesselStageRequestAPI AsotentryOTEVUpdateVesselStageRequestAPI)
      {
         return this.adapter.OTEVUpdateVesselStage(AsotentryOTEVUpdateVesselStageRequestAPI);
      }
  
      public IEnumerable<Otettrackdata> OTETBuildTrackList(Otettrackcriteria otettrackcriteria)
      {
         return this.adapter.OTETBuildTrackList(otettrackcriteria);
      }
  
      public AsotentryOTETAddTrackNoResponseAPI OTETAddTrackNo()
      {
         return this.adapter.OTETAddTrackNo();
      }
  
      public AsotentryOTETTrackDetailInitializeResponseAPI OTETTrackDetailInitialize(int iTrackNo)
      {
         return this.adapter.OTETTrackDetailInitialize(iTrackNo);
      }
  
      public Otettrackdata OTETTrackDetailLeave(int iTrackNo)
      {
         return this.adapter.OTETTrackDetailLeave(iTrackNo);
      }
  
      public Otettrackdelete OTETDeleteTrackNo(Otettrackdelete otettrackdelete)
      {
         return this.adapter.OTETDeleteTrackNo(otettrackdelete);
      }
  
      public Otettrackdata OTETUpdateTrackStage(int iTrackNo, int iNewStage)
      {
         return this.adapter.OTETUpdateTrackStage(iTrackNo, iNewStage);
      }
  
      public Otettrackdetail OTETTrackDetailFieldLeave(AsotentryOTETTrackDetailFieldLeaveRequestAPI AsotentryOTETTrackDetailFieldLeaveRequestAPI)
      {
         return this.adapter.OTETTrackDetailFieldLeave(AsotentryOTETTrackDetailFieldLeaveRequestAPI);
      }
  
      public Otettrackdetail OTETTrackHeaderUpdate(Otettrackdetail otettrackdetail)
      {
         return this.adapter.OTETTrackHeaderUpdate(otettrackdetail);
      }
  
      public AsotentryOTETTrackTotalUpdateResponseAPI OTETTrackTotalUpdate(AsotentryOTETTrackTotalUpdateRequestAPI AsotentryOTETTrackTotalUpdateRequestAPI)
      {
         return this.adapter.OTETTrackTotalUpdate(AsotentryOTETTrackTotalUpdateRequestAPI);
      }
  
      public AsotentryOTETAddPOLineInitResponseAPI OTETAddPOLineInit(Otetaddpoheader otetaddpoheader)
      {
         return this.adapter.OTETAddPOLineInit(otetaddpoheader);
      }
  
      public AsotentryOTETAddPOLineUpdateResponseAPI OTETAddPOLineUpdate(AsotentryOTETAddPOLineUpdateRequestAPI AsotentryOTETAddPOLineUpdateRequestAPI)
      {
         return this.adapter.OTETAddPOLineUpdate(AsotentryOTETAddPOLineUpdateRequestAPI);
      }
  
      public Otettrackdetail OTETDeletePOLine(AsotentryOTETDeletePOLineRequestAPI AsotentryOTETDeletePOLineRequestAPI)
      {
         return this.adapter.OTETDeletePOLine(AsotentryOTETDeletePOLineRequestAPI);
      }
  
      public IEnumerable<Otaddons> AddOTAddon(AsotentryAddOTAddonRequestAPI AsotentryAddOTAddonRequestAPI)
      {
         return this.adapter.AddOTAddon(AsotentryAddOTAddonRequestAPI);
      }
  
      public AsotentryAddOTAddonFieldLeaveResponseAPI AddOTAddonFieldLeave(AsotentryAddOTAddonFieldLeaveRequestAPI AsotentryAddOTAddonFieldLeaveRequestAPI)
      {
         return this.adapter.AddOTAddonFieldLeave(AsotentryAddOTAddonFieldLeaveRequestAPI);
      }
  
      public AsotentryChangeOTAddonFieldLeaveResponseAPI ChangeOTAddonFieldLeave(AsotentryChangeOTAddonFieldLeaveRequestAPI AsotentryChangeOTAddonFieldLeaveRequestAPI)
      {
         return this.adapter.ChangeOTAddonFieldLeave(AsotentryChangeOTAddonFieldLeaveRequestAPI);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  