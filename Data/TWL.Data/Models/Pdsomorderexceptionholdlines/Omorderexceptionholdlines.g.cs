//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.TWL.Data.Models.Pdsomorderexceptionholdlines
{
   [ModelName("Infor.Sxe.TWL.Data.Models.Pdsomorderexceptionholdlines.Omorderexceptionholdlines")]
   public partial class Omorderexceptionholdlines : ModelBase
   {
      [StringValidationAttribute]
      public string coNum { get; set; }
      [StringValidationAttribute]
      public string whNum { get; set; }
      public int id { get; set; }
      [StringValidationAttribute]
      public string order { get; set; }
      [StringValidationAttribute]
      public string orderSuffix { get; set; }
      public decimal actualFreight { get; set; }
      public int line { get; set; }
      public int lineAltNumber { get; set; }
      [StringValidationAttribute]
      public string lineStatus { get; set; }
      public bool isHoldLine { get; set; }
      public int lineSequence { get; set; }
      [StringValidationAttribute]
      public string absNum { get; set; }
      [StringValidationAttribute]
      public string itemDesc { get; set; }
      public bool itemSerialFlag { get; set; }
      public decimal reqQty { get; set; }
      [StringValidationAttribute]
      public string itemUom { get; set; }
      [StringValidationAttribute]
      public string saleUom { get; set; }
      public decimal saleUomConv { get; set; }
      public decimal actQty { get; set; }
      [StringValidationAttribute]
      public string lastEmpNum { get; set; }
      public decimal origCube { get; set; }
      public decimal origReqQty { get; set; }
      public decimal origWeight { get; set; }
      public bool shipcompfl { get; set; }
      [StringValidationAttribute]
      public string rowid { get; set; }
      public bool isHoldEnabled { get; set; }
      public bool isUnHoldEnabled { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Omorderexceptionholdlines BuildOmorderexceptionholdlinesFromRow(DataRow row)
      {
         Omorderexceptionholdlines entity = new Omorderexceptionholdlines();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.id = row.IsNull("id") ? 0 : row.Field<int>("id");
         entity.order = row.IsNull("order") ? string.Empty : row.Field<string>("order");
         entity.orderSuffix = row.IsNull("order_suffix") ? string.Empty : row.Field<string>("order_suffix");
         entity.actualFreight = row.IsNull("actual_freight") ? decimal.Zero : row.Field<decimal>("actual_freight");
         entity.line = row.IsNull("line") ? 0 : row.Field<int>("line");
         entity.lineAltNumber = row.IsNull("line_alt_number") ? 0 : row.Field<int>("line_alt_number");
         entity.lineStatus = row.IsNull("line_status") ? string.Empty : row.Field<string>("line_status");
         entity.isHoldLine = row.Field<bool>("is_hold_line");
         entity.lineSequence = row.IsNull("line_sequence") ? 0 : row.Field<int>("line_sequence");
         entity.absNum = row.IsNull("abs_num") ? string.Empty : row.Field<string>("abs_num");
         entity.itemDesc = row.IsNull("item_desc") ? string.Empty : row.Field<string>("item_desc");
         entity.itemSerialFlag = row.Field<bool>("item_serial_flag");
         entity.reqQty = row.IsNull("req_qty") ? decimal.Zero : row.Field<decimal>("req_qty");
         entity.itemUom = row.IsNull("item_uom") ? string.Empty : row.Field<string>("item_uom");
         entity.saleUom = row.IsNull("sale_uom") ? string.Empty : row.Field<string>("sale_uom");
         entity.saleUomConv = row.IsNull("sale_uom_conv") ? decimal.Zero : row.Field<decimal>("sale_uom_conv");
         entity.actQty = row.IsNull("act_qty") ? decimal.Zero : row.Field<decimal>("act_qty");
         entity.lastEmpNum = row.IsNull("last_emp_num") ? string.Empty : row.Field<string>("last_emp_num");
         entity.origCube = row.IsNull("orig_cube") ? decimal.Zero : row.Field<decimal>("orig_cube");
         entity.origReqQty = row.IsNull("orig_req_qty") ? decimal.Zero : row.Field<decimal>("orig_req_qty");
         entity.origWeight = row.IsNull("orig_weight") ? decimal.Zero : row.Field<decimal>("orig_weight");
         entity.shipcompfl = row.Field<bool>("shipcompfl");
         entity.rowid = row.Field<byte[]>("rowid").ToStringEncoded();
         entity.isHoldEnabled = row.Field<bool>("isHoldEnabled");
         entity.isUnHoldEnabled = row.Field<bool>("isUnHoldEnabled");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOmorderexceptionholdlines(ref DataRow row, Omorderexceptionholdlines entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("id", entity.id);
         row.SetField("order", entity.order);
         row.SetField("order_suffix", entity.orderSuffix);
         row.SetField("actual_freight", entity.actualFreight);
         row.SetField("line", entity.line);
         row.SetField("line_alt_number", entity.lineAltNumber);
         row.SetField("line_status", entity.lineStatus);
         row.SetField("is_hold_line", entity.isHoldLine);
         row.SetField("line_sequence", entity.lineSequence);
         row.SetField("abs_num", entity.absNum);
         row.SetField("item_desc", entity.itemDesc);
         row.SetField("item_serial_flag", entity.itemSerialFlag);
         row.SetField("req_qty", entity.reqQty);
         row.SetField("item_uom", entity.itemUom);
         row.SetField("sale_uom", entity.saleUom);
         row.SetField("sale_uom_conv", entity.saleUomConv);
         row.SetField("act_qty", entity.actQty);
         row.SetField("last_emp_num", entity.lastEmpNum);
         row.SetField("orig_cube", entity.origCube);
         row.SetField("orig_req_qty", entity.origReqQty);
         row.SetField("orig_weight", entity.origWeight);
         row.SetField("shipcompfl", entity.shipcompfl);
         row.SetField("rowid", entity.rowid.ToByteArray());
         row.SetField("isHoldEnabled", entity.isHoldEnabled);
         row.SetField("isUnHoldEnabled", entity.isUnHoldEnabled);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
