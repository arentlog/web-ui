//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.TWL.Data.Models.Pdsinventorylistcriteria
{
   [ModelName("Infor.Sxe.TWL.Data.Models.Pdsinventorylistcriteria.Inventorylistcriteria")]
   public partial class Inventorylistcriteria : ModelBase
   {
      [StringValidationAttribute]
      public string coNum { get; set; }
      [StringValidationAttribute]
      public string whNum { get; set; }
      [StringValidationAttribute]
      public string binNum { get; set; }
      [StringValidationAttribute]
      public string whZone { get; set; }
      [StringValidationAttribute]
      public string absNum { get; set; }
      [StringValidationAttribute]
      public string palletId { get; set; }
      [StringValidationAttribute]
      public string statusCode { get; set; }
      public int qtyCompareType { get; set; }
      public decimal qtyCompareValue { get; set; }
      public int cycleCntType { get; set; }
      public int cycleId { get; set; }
      public int recordcountlimit { get; set; }
      [StringValidationAttribute]
      public string invlistuserfield { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Inventorylistcriteria BuildInventorylistcriteriaFromRow(DataRow row)
      {
         Inventorylistcriteria entity = new Inventorylistcriteria();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.binNum = row.IsNull("bin_num") ? string.Empty : row.Field<string>("bin_num");
         entity.whZone = row.IsNull("wh_zone") ? string.Empty : row.Field<string>("wh_zone");
         entity.absNum = row.IsNull("abs_num") ? string.Empty : row.Field<string>("abs_num");
         entity.palletId = row.IsNull("pallet_id") ? string.Empty : row.Field<string>("pallet_id");
         entity.statusCode = row.IsNull("status_code") ? string.Empty : row.Field<string>("status_code");
         entity.qtyCompareType = row.IsNull("qty_compare_type") ? 0 : row.Field<int>("qty_compare_type");
         entity.qtyCompareValue = row.IsNull("qty_compare_value") ? decimal.Zero : row.Field<decimal>("qty_compare_value");
         entity.cycleCntType = row.IsNull("cycle_cnt_type") ? 0 : row.Field<int>("cycle_cnt_type");
         entity.cycleId = row.IsNull("cycle_id") ? 0 : row.Field<int>("cycle_id");
         entity.recordcountlimit = row.IsNull("recordcountlimit") ? 0 : row.Field<int>("recordcountlimit");
         entity.invlistuserfield = row.IsNull("invlistuserfield") ? string.Empty : row.Field<string>("invlistuserfield");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromInventorylistcriteria(ref DataRow row, Inventorylistcriteria entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("bin_num", entity.binNum);
         row.SetField("wh_zone", entity.whZone);
         row.SetField("abs_num", entity.absNum);
         row.SetField("pallet_id", entity.palletId);
         row.SetField("status_code", entity.statusCode);
         row.SetField("qty_compare_type", entity.qtyCompareType);
         row.SetField("qty_compare_value", entity.qtyCompareValue);
         row.SetField("cycle_cnt_type", entity.cycleCntType);
         row.SetField("cycle_id", entity.cycleId);
         row.SetField("recordcountlimit", entity.recordcountlimit);
         row.SetField("invlistuserfield", entity.invlistuserfield);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
