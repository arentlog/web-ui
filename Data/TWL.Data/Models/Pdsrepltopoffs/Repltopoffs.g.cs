//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.TWL.Data.Models.Pdsrepltopoffs
{
   [ModelName("Infor.Sxe.TWL.Data.Models.Pdsrepltopoffs.Repltopoffs")]
   public partial class Repltopoffs : ModelBase
   {
      [StringValidationAttribute]
      public string coNum { get; set; }
      [StringValidationAttribute]
      public string whNum { get; set; }
      [StringValidationAttribute]
      public string chStat { get; set; }
      [StringValidationAttribute]
      public string chZone { get; set; }
      [StringValidationAttribute]
      public string chAisle { get; set; }
      [StringValidationAttribute]
      public string chBin { get; set; }
      public decimal dOnhand { get; set; }
      public decimal dMin { get; set; }
      public decimal dMax { get; set; }
      [StringValidationAttribute]
      public string chAbs { get; set; }
      [StringValidationAttribute]
      public string chType { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Repltopoffs BuildRepltopoffsFromRow(DataRow row)
      {
         Repltopoffs entity = new Repltopoffs();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.chStat = row.IsNull("ch_stat") ? string.Empty : row.Field<string>("ch_stat");
         entity.chZone = row.IsNull("ch_zone") ? string.Empty : row.Field<string>("ch_zone");
         entity.chAisle = row.IsNull("ch_aisle") ? string.Empty : row.Field<string>("ch_aisle");
         entity.chBin = row.IsNull("ch_bin") ? string.Empty : row.Field<string>("ch_bin");
         entity.dOnhand = row.IsNull("d_onhand") ? decimal.Zero : row.Field<decimal>("d_onhand");
         entity.dMin = row.IsNull("d_min") ? decimal.Zero : row.Field<decimal>("d_min");
         entity.dMax = row.IsNull("d_max") ? decimal.Zero : row.Field<decimal>("d_max");
         entity.chAbs = row.IsNull("ch_abs") ? string.Empty : row.Field<string>("ch_abs");
         entity.chType = row.IsNull("ch_type") ? string.Empty : row.Field<string>("ch_type");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromRepltopoffs(ref DataRow row, Repltopoffs entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("ch_stat", entity.chStat);
         row.SetField("ch_zone", entity.chZone);
         row.SetField("ch_aisle", entity.chAisle);
         row.SetField("ch_bin", entity.chBin);
         row.SetField("d_onhand", entity.dOnhand);
         row.SetField("d_min", entity.dMin);
         row.SetField("d_max", entity.dMax);
         row.SetField("ch_abs", entity.chAbs);
         row.SetField("ch_type", entity.chType);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
