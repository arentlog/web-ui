//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.TWL.Data.Models.Pdsccimpact
{
   [ModelName("Infor.Sxe.TWL.Data.Models.Pdsccimpact.Ccimpact")]
   public partial class Ccimpact : ModelBase
   {
      [StringValidationAttribute]
      public string coNum { get; set; }
      [StringValidationAttribute]
      public string whNum { get; set; }
      [StringValidationAttribute]
      public string empNum { get; set; }
      public int iNumItems { get; set; }
      public int iNumInv { get; set; }
      public int iEmptyBins { get; set; }
      public int iBinInWv { get; set; }
      public int iItmInWv { get; set; }
      public int iEmptyInWave { get; set; }
      public int iInvInWv { get; set; }
      public bool lSerialOkay { get; set; }
      [StringValidationAttribute]
      public string cBadSerialItem { get; set; }
      public bool lotsExist { get; set; }
      [StringValidationAttribute]
      public string buildTypeLot { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Ccimpact BuildCcimpactFromRow(DataRow row)
      {
         Ccimpact entity = new Ccimpact();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.empNum = row.IsNull("emp_num") ? string.Empty : row.Field<string>("emp_num");
         entity.iNumItems = row.IsNull("i_num_items") ? 0 : row.Field<int>("i_num_items");
         entity.iNumInv = row.IsNull("i_num_inv") ? 0 : row.Field<int>("i_num_inv");
         entity.iEmptyBins = row.IsNull("iEmptyBins") ? 0 : row.Field<int>("iEmptyBins");
         entity.iBinInWv = row.IsNull("i_bin_in_wv") ? 0 : row.Field<int>("i_bin_in_wv");
         entity.iItmInWv = row.IsNull("i_itm_in_wv") ? 0 : row.Field<int>("i_itm_in_wv");
         entity.iEmptyInWave = row.IsNull("iEmptyInWave") ? 0 : row.Field<int>("iEmptyInWave");
         entity.iInvInWv = row.IsNull("i_inv_in_wv") ? 0 : row.Field<int>("i_inv_in_wv");
         entity.lSerialOkay = row.Field<bool>("lSerialOkay");
         entity.cBadSerialItem = row.IsNull("cBadSerialItem") ? string.Empty : row.Field<string>("cBadSerialItem");
         entity.lotsExist = row.Field<bool>("LotsExist");
         entity.buildTypeLot = row.IsNull("build_type_lot") ? string.Empty : row.Field<string>("build_type_lot");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromCcimpact(ref DataRow row, Ccimpact entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("emp_num", entity.empNum);
         row.SetField("i_num_items", entity.iNumItems);
         row.SetField("i_num_inv", entity.iNumInv);
         row.SetField("iEmptyBins", entity.iEmptyBins);
         row.SetField("i_bin_in_wv", entity.iBinInWv);
         row.SetField("i_itm_in_wv", entity.iItmInWv);
         row.SetField("iEmptyInWave", entity.iEmptyInWave);
         row.SetField("i_inv_in_wv", entity.iInvInWv);
         row.SetField("lSerialOkay", entity.lSerialOkay);
         row.SetField("cBadSerialItem", entity.cBadSerialItem);
         row.SetField("LotsExist", entity.lotsExist);
         row.SetField("build_type_lot", entity.buildTypeLot);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
