//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.TWL.Data.Models.Pdsphysinv
{
   [ModelName("Infor.Sxe.TWL.Data.Models.Pdsphysinv.Physinv")]
   public partial class Physinv : ModelBase
   {
      [StringValidationAttribute]
      public string loc { get; set; }
      public bool locStatus { get; set; }
      [StringValidationAttribute]
      public string locType { get; set; }
      public bool primPick { get; set; }
      [StringValidationAttribute]
      public string zone { get; set; }
      [StringValidationAttribute]
      public string zoneType { get; set; }
      public int aisle { get; set; }
      [StringValidationAttribute]
      public string pallet { get; set; }
      [StringValidationAttribute]
      public string item { get; set; }
      public decimal qtyBefore { get; set; }
      public decimal qtyAfter { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Physinv BuildPhysinvFromRow(DataRow row)
      {
         Physinv entity = new Physinv();
         entity.loc = row.IsNull("loc") ? string.Empty : row.Field<string>("loc");
         entity.locStatus = row.Field<bool>("loc_status");
         entity.locType = row.IsNull("loc_type") ? string.Empty : row.Field<string>("loc_type");
         entity.primPick = row.Field<bool>("prim_pick");
         entity.zone = row.IsNull("zone") ? string.Empty : row.Field<string>("zone");
         entity.zoneType = row.IsNull("zone_type") ? string.Empty : row.Field<string>("zone_type");
         entity.aisle = row.IsNull("aisle") ? 0 : row.Field<int>("aisle");
         entity.pallet = row.IsNull("pallet") ? string.Empty : row.Field<string>("pallet");
         entity.item = row.IsNull("item") ? string.Empty : row.Field<string>("item");
         entity.qtyBefore = row.IsNull("qty_before") ? decimal.Zero : row.Field<decimal>("qty_before");
         entity.qtyAfter = row.IsNull("qty_after") ? decimal.Zero : row.Field<decimal>("qty_after");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPhysinv(ref DataRow row, Physinv entity)
      {
         row.SetField("loc", entity.loc);
         row.SetField("loc_status", entity.locStatus);
         row.SetField("loc_type", entity.locType);
         row.SetField("prim_pick", entity.primPick);
         row.SetField("zone", entity.zone);
         row.SetField("zone_type", entity.zoneType);
         row.SetField("aisle", entity.aisle);
         row.SetField("pallet", entity.pallet);
         row.SetField("item", entity.item);
         row.SetField("qty_before", entity.qtyBefore);
         row.SetField("qty_after", entity.qtyAfter);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
