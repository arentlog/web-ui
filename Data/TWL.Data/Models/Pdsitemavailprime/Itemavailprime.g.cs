//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.TWL.Data.Models.Pdsitemavailprime
{
   [ModelName("Infor.Sxe.TWL.Data.Models.Pdsitemavailprime.Itemavailprime")]
   public partial class Itemavailprime : ModelBase
   {
      [StringValidationAttribute]
      public string fullCase { get; set; }
      public decimal fcQty { get; set; }
      [StringValidationAttribute]
      public string splitCase { get; set; }
      public decimal scQty { get; set; }
      [StringValidationAttribute]
      public string counter { get; set; }
      public decimal counterQty { get; set; }
      [StringValidationAttribute]
      public string pallet { get; set; }
      public decimal palletQty { get; set; }
      [StringValidationAttribute]
      public string itemavailprimeuserfield { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Itemavailprime BuildItemavailprimeFromRow(DataRow row)
      {
         Itemavailprime entity = new Itemavailprime();
         entity.fullCase = row.IsNull("fullCase") ? string.Empty : row.Field<string>("fullCase");
         entity.fcQty = row.IsNull("fcQty") ? decimal.Zero : row.Field<decimal>("fcQty");
         entity.splitCase = row.IsNull("splitCase") ? string.Empty : row.Field<string>("splitCase");
         entity.scQty = row.IsNull("scQty") ? decimal.Zero : row.Field<decimal>("scQty");
         entity.counter = row.IsNull("counter") ? string.Empty : row.Field<string>("counter");
         entity.counterQty = row.IsNull("counterQty") ? decimal.Zero : row.Field<decimal>("counterQty");
         entity.pallet = row.IsNull("pallet") ? string.Empty : row.Field<string>("pallet");
         entity.palletQty = row.IsNull("palletQty") ? decimal.Zero : row.Field<decimal>("palletQty");
         entity.itemavailprimeuserfield = row.IsNull("itemavailprimeuserfield") ? string.Empty : row.Field<string>("itemavailprimeuserfield");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromItemavailprime(ref DataRow row, Itemavailprime entity)
      {
         row.SetField("fullCase", entity.fullCase);
         row.SetField("fcQty", entity.fcQty);
         row.SetField("splitCase", entity.splitCase);
         row.SetField("scQty", entity.scQty);
         row.SetField("counter", entity.counter);
         row.SetField("counterQty", entity.counterQty);
         row.SetField("pallet", entity.pallet);
         row.SetField("palletQty", entity.palletQty);
         row.SetField("itemavailprimeuserfield", entity.itemavailprimeuserfield);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
