//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.TWL.Data.Models.Pdsinvdisclistresults
{
   [ModelName("Infor.Sxe.TWL.Data.Models.Pdsinvdisclistresults.Invdisclistresults")]
   public partial class Invdisclistresults : ModelBase
   {
      [StringValidationAttribute]
      public string coNum { get; set; }
      [StringValidationAttribute]
      public string whNum { get; set; }
      [StringValidationAttribute]
      public string absNum { get; set; }
      [StringValidationAttribute]
      public string binNum { get; set; }
      [StringValidationAttribute]
      public string transType { get; set; }
      [StringValidationAttribute]
      public string empNum { get; set; }
      [StringValidationAttribute]
      public string dateTime { get; set; }
      [StringValidationAttribute]
      public string problem { get; set; }
      public decimal expQty { get; set; }
      public decimal actualQty { get; set; }
      [StringValidationAttribute]
      public string lot { get; set; }
      [StringValidationAttribute]
      public string lotBefore { get; set; }
      [StringValidationAttribute]
      public string invprobRowID { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Invdisclistresults BuildInvdisclistresultsFromRow(DataRow row)
      {
         Invdisclistresults entity = new Invdisclistresults();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.absNum = row.IsNull("abs_num") ? string.Empty : row.Field<string>("abs_num");
         entity.binNum = row.IsNull("bin_num") ? string.Empty : row.Field<string>("bin_num");
         entity.transType = row.IsNull("trans_type") ? string.Empty : row.Field<string>("trans_type");
         entity.empNum = row.IsNull("emp_num") ? string.Empty : row.Field<string>("emp_num");
         entity.dateTime = row.IsNull("date_time") ? string.Empty : row.Field<string>("date_time");
         entity.problem = row.IsNull("problem") ? string.Empty : row.Field<string>("problem");
         entity.expQty = row.IsNull("exp_qty") ? decimal.Zero : row.Field<decimal>("exp_qty");
         entity.actualQty = row.IsNull("actual_qty") ? decimal.Zero : row.Field<decimal>("actual_qty");
         entity.lot = row.IsNull("lot") ? string.Empty : row.Field<string>("lot");
         entity.lotBefore = row.IsNull("lot_before") ? string.Empty : row.Field<string>("lot_before");
         entity.invprobRowID = row.Field<byte[]>("invprobRowID").ToStringEncoded();
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromInvdisclistresults(ref DataRow row, Invdisclistresults entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("abs_num", entity.absNum);
         row.SetField("bin_num", entity.binNum);
         row.SetField("trans_type", entity.transType);
         row.SetField("emp_num", entity.empNum);
         row.SetField("date_time", entity.dateTime);
         row.SetField("problem", entity.problem);
         row.SetField("exp_qty", entity.expQty);
         row.SetField("actual_qty", entity.actualQty);
         row.SetField("lot", entity.lot);
         row.SetField("lot_before", entity.lotBefore);
         row.SetField("invprobRowID", entity.invprobRowID.ToByteArray());
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
