//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.TWL.Data.Models.Pdsomopencounts
{
   [ModelName("Infor.Sxe.TWL.Data.Models.Pdsomopencounts.Opencountsummary")]
   public partial class Opencountsummary : ModelBase
   {
      [StringValidationAttribute]
      public string coNum { get; set; }
      [StringValidationAttribute]
      public string whNum { get; set; }
      public int orders { get; set; }
      public int lines { get; set; }
      public int singles { get; set; }
      public int carriers { get; set; }
      public int customers { get; set; }
      public int types { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Opencountsummary BuildOpencountsummaryFromRow(DataRow row)
      {
         Opencountsummary entity = new Opencountsummary();
         entity.coNum = row.IsNull("co_num") ? string.Empty : row.Field<string>("co_num");
         entity.whNum = row.IsNull("wh_num") ? string.Empty : row.Field<string>("wh_num");
         entity.orders = row.IsNull("orders") ? 0 : row.Field<int>("orders");
         entity.lines = row.IsNull("lines") ? 0 : row.Field<int>("lines");
         entity.singles = row.IsNull("singles") ? 0 : row.Field<int>("singles");
         entity.carriers = row.IsNull("carriers") ? 0 : row.Field<int>("carriers");
         entity.customers = row.IsNull("customers") ? 0 : row.Field<int>("customers");
         entity.types = row.IsNull("types") ? 0 : row.Field<int>("types");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOpencountsummary(ref DataRow row, Opencountsummary entity)
      {
         row.SetField("co_num", entity.coNum);
         row.SetField("wh_num", entity.whNum);
         row.SetField("orders", entity.orders);
         row.SetField("lines", entity.lines);
         row.SetField("singles", entity.singles);
         row.SetField("carriers", entity.carriers);
         row.SetField("customers", entity.customers);
         row.SetField("types", entity.types);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
