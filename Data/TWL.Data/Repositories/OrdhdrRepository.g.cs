//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.TWL.Data.Repositories
{
   using Infor.Sxe.TWL.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdsordhdr;

   public partial class OrdhdrRepository : RepositoryBase
   {
      private OrdhdrAdapter adapter;
  
      public OrdhdrRepository(IProgressConnection connection)
      {
         this.adapter = new OrdhdrAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public Ordhdr GetByRowId(string rowId, string fldList)
      {
         return this.adapter.GetByRowId(rowId, fldList);
      }

      public IEnumerable<Ordhdr> GetListByRowIdList(List<string> rowIds, int batchsize, string fldList)
      {
         return this.adapter.GetListByRowIdList(rowIds, batchsize, fldList);
      }
        
      public Ordhdr Get(int id, int batchsize, string fldList)
      {
         return this.adapter.Get(id, batchsize, fldList);
      }
      
      public IEnumerable<Ordhdr> GetList(string where, int batchsize, string fldList)
      {
         return this.adapter.GetList(where, batchsize, fldList);
      }
  
      public IEnumerable<Ordhdr> GetListByBatch(int batch, int batchsize, string fldList)
      {
         return this.adapter.GetListByBatch(batch, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByClearance(bool clearanceRequired, string clearanceCode, int batchsize, string fldList)
      {
         return this.adapter.GetListByClearance(clearanceRequired, clearanceCode, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhAssignedCselector(string coNum, string whNum, bool assigned, string customSelector, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhAssignedCselector(coNum, whNum, assigned, customSelector, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhAssignedHostbatch(string coNum, string whNum, bool assigned, string hostBatch, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhAssignedHostbatch(coNum, whNum, assigned, hostBatch, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhAssignedHselector(string coNum, string whNum, bool assigned, string hostSelector, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhAssignedHselector(coNum, whNum, assigned, hostSelector, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhAssignedType(string coNum, string whNum, bool assigned, string type, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhAssignedType(coNum, whNum, assigned, type, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhAssPriCarSer(string coNum, string whNum, bool assigned, bool printed, string carrier, string service, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhAssPriCarSer(coNum, whNum, assigned, printed, carrier, service, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhBatch(string coNum, string whNum, int batch, bool assigned, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhBatch(coNum, whNum, batch, assigned, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhBranchAssigned(string coNum, string whNum, string branchId, bool assigned, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhBranchAssigned(coNum, whNum, branchId, assigned, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhCarrierAssigned(string coNum, string whNum, string carrier, bool assigned, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhCarrierAssigned(coNum, whNum, carrier, assigned, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhClassAssigned(string coNum, string whNum, string @class, bool assigned, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhClassAssigned(coNum, whNum, @class, assigned, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhCustShipto(string coNum, string whNum, string shipCustCode, string shipToCode, bool assigned, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhCustShipto(coNum, whNum, shipCustCode, shipToCode, assigned, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhDate(string coNum, string whNum, DateTime? orderDate, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhDate(coNum, whNum, orderDate, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhExpship(string coNum, string whNum, DateTime? expShipDate, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhExpship(coNum, whNum, expShipDate, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhHostbatchHostsequence(string coNum, string whNum, string hostBatch, int hostSequence, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhHostbatchHostsequence(coNum, whNum, hostBatch, hostSequence, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhOrderSuffix(string coNum, string whNum, string order, string orderSuffix, bool assigned, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhOrderSuffix(coNum, whNum, order, orderSuffix, assigned, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhPriorityAssigned(string coNum, string whNum, int priority, bool assigned, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhPriorityAssigned(coNum, whNum, priority, assigned, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhProdLinecntAssigned(string coNum, string whNum, string product, int lineCount, bool assigned, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhProdLinecntAssigned(coNum, whNum, product, lineCount, assigned, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhRouteStatus(string coNum, string whNum, string route, string orderStatus, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhRouteStatus(coNum, whNum, route, orderStatus, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhShip(string coNum, string whNum, DateTime? shipDate, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhShip(coNum, whNum, shipDate, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhStatus(string coNum, string whNum, string orderStatus, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhStatus(coNum, whNum, orderStatus, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhStatusAssigned(string coNum, string whNum, string orderStatus, bool assigned, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhStatusAssigned(coNum, whNum, orderStatus, assigned, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByCoWhTypeAssigned(string coNum, string whNum, string type, bool assigned, int batchsize, string fldList)
      {
         return this.adapter.GetListByCoWhTypeAssigned(coNum, whNum, type, assigned, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByShipname(string shipName, int batchsize, string fldList)
      {
         return this.adapter.GetListByShipname(shipName, batchsize, fldList);
      }

      public IEnumerable<Ordhdr> GetListByShipzip(string shipZip, int batchsize, string fldList)
      {
         return this.adapter.GetListByShipzip(shipZip, batchsize, fldList);
      }

      public Ordhdr Insert(Ordhdr record)
      {
         return this.adapter.Insert(record);        
      }
  
      public Ordhdr Update(Ordhdr record)
      {
         return this.adapter.Update(record);
      }
  
      public void Delete(Ordhdr record)
      {
         this.adapter.Delete(record);
      }
  
      public void DeleteListByRowIds(List<string> rowIds)
      {
         this.adapter.DeleteListByRowIds(rowIds);
      }
	  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  