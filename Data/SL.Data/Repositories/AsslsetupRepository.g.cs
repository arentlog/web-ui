//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.SL.Data.Repositories
{
   using Infor.Sxe.SL.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdsslimportdefcopy;
   using Models.Pdsslehgetheadlist;
   using Models.Pdssledgetprodlist;
   using Models.Pdssledgetproddetail;
   using Models.Pdssledgetheadlist;
   using Models.Pdssleeprodlistcriteria;
   using Models.Pdssleeprodlistresults;
   using Models.Pdssleeproductfull;
   using Models.Pdssleeproderrorholdcd;
   using Models.Pdssleechgstatuscode;
   using Models.Pdsslpricecostmultcopy;
   using Models.Pdsslnewitemdefaultscopy;
   using Models.Pdsslimportdeffix;
   using Models.Complex;

   public partial class AsslsetupRepository : RepositoryBase
   {
      private AsslsetupAdapter adapter;
  
      public AsslsetupRepository(IProgressConnection connection)
      {
         this.adapter = new AsslsetupAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public Slimportdefcopy SLImportDefCopy(Slimportdefcopy slimportdefcopy)
      {
         return this.adapter.SLImportDefCopy(slimportdefcopy);
      }
  
      public AsslsetupSLEHGetHeaderListResponseAPI SLEHGetHeaderList(string cImptype, string cDisplayType, int iRecordLimit)
      {
         return this.adapter.SLEHGetHeaderList(cImptype, cDisplayType, iRecordLimit);
      }
  
      public IEnumerable<Sledgetprodlistresults> SLEDGetProdList(AsslsetupSLEDGetProdListRequestAPI AsslsetupSLEDGetProdListRequestAPI)
      {
         return this.adapter.SLEDGetProdList(AsslsetupSLEDGetProdListRequestAPI);
      }
  
      public Sledgetproddetailresults SLEDGetProdDetail(string cImptype, bool lStatusType, string cSLUpdtNo, string cProd, string cWhse)
      {
         return this.adapter.SLEDGetProdDetail(cImptype, lStatusType, cSLUpdtNo, cProd, cWhse);
      }
  
      public IEnumerable<Sledgetheadlistresults> SLEDGetHeadList(string cProd, string cWhse)
      {
         return this.adapter.SLEDGetHeadList(cProd, cWhse);
      }
  
      public AsslsetupSLEEGetProductListResponseAPI SLEEGetProductList(Sleeprodlistcriteria sleeprodlistcriteria)
      {
         return this.adapter.SLEEGetProductList(sleeprodlistcriteria);
      }
  
      public void SLEEProductListDelete(IEnumerable<Sleeprodlistresults> sleeprodlistresults)
      {
         this.adapter.SLEEProductListDelete(sleeprodlistresults);
      }
  
      public AsslsetupSLEEProductListUpdateResponseAPI SLEEProductListUpdate(AsslsetupSLEEProductListUpdateRequestAPI AsslsetupSLEEProductListUpdateRequestAPI)
      {
         return this.adapter.SLEEProductListUpdate(AsslsetupSLEEProductListUpdateRequestAPI);
      }
  
      public Sleeproductfull SLEEProductFullRetrieve(Sleeproductfull sleeproductfull)
      {
         return this.adapter.SLEEProductFullRetrieve(sleeproductfull);
      }
  
      public Sleeprodlistresults SLEEProductFullUpdate(AsslsetupSLEEProductFullUpdateRequestAPI AsslsetupSLEEProductFullUpdateRequestAPI)
      {
         return this.adapter.SLEEProductFullUpdate(AsslsetupSLEEProductFullUpdateRequestAPI);
      }
  
      public Sleeproductfull SLEEProductAddPrepare()
      {
         return this.adapter.SLEEProductAddPrepare();
      }
  
      public Sleeproductfull SLEEProductAddFieldChange(AsslsetupSLEEProductAddFieldChangeRequestAPI AsslsetupSLEEProductAddFieldChangeRequestAPI)
      {
         return this.adapter.SLEEProductAddFieldChange(AsslsetupSLEEProductAddFieldChangeRequestAPI);
      }
  
      public Sleeprodlistresults SLEEProductAddUpdate(AsslsetupSLEEProductAddUpdateRequestAPI AsslsetupSLEEProductAddUpdateRequestAPI)
      {
         return this.adapter.SLEEProductAddUpdate(AsslsetupSLEEProductAddUpdateRequestAPI);
      }
  
      public IEnumerable<Sleeproderrorholdcd> SLEEProductErrorHoldCodes(Sleeprodlistresults sleeprodlistresults)
      {
         return this.adapter.SLEEProductErrorHoldCodes(sleeprodlistresults);
      }
  
      public void SLEEChangeStatusCode(Sleechgstatuscode sleechgstatuscode)
      {
         this.adapter.SLEEChangeStatusCode(sleechgstatuscode);
      }
  
      public Slpricecostmultcopy SLPriceCostMultCopy(Slpricecostmultcopy slpricecostmultcopy)
      {
         return this.adapter.SLPriceCostMultCopy(slpricecostmultcopy);
      }
  
      public Slnewitemdefaultscopy SLNewItemDefaultsCopy(Slnewitemdefaultscopy slnewitemdefaultscopy)
      {
         return this.adapter.SLNewItemDefaultsCopy(slnewitemdefaultscopy);
      }
  
      public Slimportdeffix SLSIImportDefFix(Slimportdeffix slimportdeffix)
      {
         return this.adapter.SLSIImportDefFix(slimportdeffix);
      }
  
      public int SlsiGetLastRecNo()
      {
         return this.adapter.SlsiGetLastRecNo();
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  