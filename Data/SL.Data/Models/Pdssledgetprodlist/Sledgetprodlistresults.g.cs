//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.SL.Data.Models.Pdssledgetprodlist
{
   [ModelName("Infor.Sxe.SL.Data.Models.Pdssledgetprodlist.Sledgetprodlistresults")]
   public partial class Sledgetprodlistresults : ModelBase
   {
      [StringValidationAttribute]
      public string sledrowid { get; set; }
      [StringValidationAttribute]
      public string prod { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      [StringValidationAttribute]
      public string statuscd { get; set; }
      [StringValidationAttribute]
      public string action { get; set; }
      public bool statustype { get; set; }
      [StringValidationAttribute]
      public string descrip1 { get; set; }
      [StringValidationAttribute]
      public string descrip2 { get; set; }
      [StringValidationAttribute]
      public string descrip3 { get; set; }
      public decimal vendno { get; set; }
      public int slpbseqno { get; set; }
      [StringValidationAttribute]
      public string notesfl { get; set; }
      [StringValidationAttribute]
      public string lookupnm { get; set; }
      public int seqno { get; set; }
      public decimal baseprice { get; set; }
      public bool icscfl { get; set; }
      public decimal listprice { get; set; }
      public bool icspfl { get; set; }
      public decimal stndcost { get; set; }
      public bool icswfl { get; set; }
      public decimal replcost { get; set; }
      public decimal lastcostfor { get; set; }
      [StringValidationAttribute]
      public string prodline { get; set; }
      [StringValidationAttribute]
      public string unitstock { get; set; }
      [StringValidationAttribute]
      public string unitstnd { get; set; }
      [StringValidationAttribute]
      public string prodcat { get; set; }
      public decimal termspct { get; set; }
      [StringValidationAttribute]
      public string pricetype { get; set; }
      [StringValidationAttribute]
      public string priceonty { get; set; }
      [StringValidationAttribute]
      public string slgroup { get; set; }
      public decimal cubes { get; set; }
      public decimal weight { get; set; }
      public DateTime? effectdt { get; set; }
      [StringValidationAttribute]
      public string costtext { get; set; }
      [StringValidationAttribute]
      public string slspeccostty { get; set; }
      [StringValidationAttribute]
      public string slprccostper { get; set; }
      public bool morerecords { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Sledgetprodlistresults BuildSledgetprodlistresultsFromRow(DataRow row)
      {
         Sledgetprodlistresults entity = new Sledgetprodlistresults();
         entity.sledrowid = row.Field<byte[]>("sledrowid").ToStringEncoded();
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.statuscd = row.IsNull("statuscd") ? string.Empty : row.Field<string>("statuscd");
         entity.action = row.IsNull("action") ? string.Empty : row.Field<string>("action");
         entity.statustype = row.Field<bool>("statustype");
         entity.descrip1 = row.IsNull("descrip1") ? string.Empty : row.Field<string>("descrip1");
         entity.descrip2 = row.IsNull("descrip2") ? string.Empty : row.Field<string>("descrip2");
         entity.descrip3 = row.IsNull("descrip3") ? string.Empty : row.Field<string>("descrip3");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.slpbseqno = row.IsNull("slpbseqno") ? 0 : row.Field<int>("slpbseqno");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.lookupnm = row.IsNull("lookupnm") ? string.Empty : row.Field<string>("lookupnm");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.baseprice = row.IsNull("baseprice") ? decimal.Zero : row.Field<decimal>("baseprice");
         entity.icscfl = row.Field<bool>("icscfl");
         entity.listprice = row.IsNull("listprice") ? decimal.Zero : row.Field<decimal>("listprice");
         entity.icspfl = row.Field<bool>("icspfl");
         entity.stndcost = row.IsNull("stndcost") ? decimal.Zero : row.Field<decimal>("stndcost");
         entity.icswfl = row.Field<bool>("icswfl");
         entity.replcost = row.IsNull("replcost") ? decimal.Zero : row.Field<decimal>("replcost");
         entity.lastcostfor = row.IsNull("lastcostfor") ? decimal.Zero : row.Field<decimal>("lastcostfor");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.unitstock = row.IsNull("unitstock") ? string.Empty : row.Field<string>("unitstock");
         entity.unitstnd = row.IsNull("unitstnd") ? string.Empty : row.Field<string>("unitstnd");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.termspct = row.IsNull("termspct") ? decimal.Zero : row.Field<decimal>("termspct");
         entity.pricetype = row.IsNull("pricetype") ? string.Empty : row.Field<string>("pricetype");
         entity.priceonty = row.IsNull("priceonty") ? string.Empty : row.Field<string>("priceonty");
         entity.slgroup = row.IsNull("slgroup") ? string.Empty : row.Field<string>("slgroup");
         entity.cubes = row.IsNull("cubes") ? decimal.Zero : row.Field<decimal>("cubes");
         entity.weight = row.IsNull("weight") ? decimal.Zero : row.Field<decimal>("weight");
         entity.effectdt = row.Field<DateTime?>("effectdt");
         entity.costtext = row.IsNull("costtext") ? string.Empty : row.Field<string>("costtext");
         entity.slspeccostty = row.IsNull("slspeccostty") ? string.Empty : row.Field<string>("slspeccostty");
         entity.slprccostper = row.IsNull("slprccostper") ? string.Empty : row.Field<string>("slprccostper");
         entity.morerecords = row.Field<bool>("morerecords");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromSledgetprodlistresults(ref DataRow row, Sledgetprodlistresults entity)
      {
         row.SetField("sledrowid", entity.sledrowid.ToByteArray());
         row.SetField("prod", entity.prod);
         row.SetField("whse", entity.whse);
         row.SetField("statuscd", entity.statuscd);
         row.SetField("action", entity.action);
         row.SetField("statustype", entity.statustype);
         row.SetField("descrip1", entity.descrip1);
         row.SetField("descrip2", entity.descrip2);
         row.SetField("descrip3", entity.descrip3);
         row.SetField("vendno", entity.vendno);
         row.SetField("slpbseqno", entity.slpbseqno);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("lookupnm", entity.lookupnm);
         row.SetField("seqno", entity.seqno);
         row.SetField("baseprice", entity.baseprice);
         row.SetField("icscfl", entity.icscfl);
         row.SetField("listprice", entity.listprice);
         row.SetField("icspfl", entity.icspfl);
         row.SetField("stndcost", entity.stndcost);
         row.SetField("icswfl", entity.icswfl);
         row.SetField("replcost", entity.replcost);
         row.SetField("lastcostfor", entity.lastcostfor);
         row.SetField("prodline", entity.prodline);
         row.SetField("unitstock", entity.unitstock);
         row.SetField("unitstnd", entity.unitstnd);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("termspct", entity.termspct);
         row.SetField("pricetype", entity.pricetype);
         row.SetField("priceonty", entity.priceonty);
         row.SetField("slgroup", entity.slgroup);
         row.SetField("cubes", entity.cubes);
         row.SetField("weight", entity.weight);
         row.SetField("effectdt", entity.effectdt);
         row.SetField("costtext", entity.costtext);
         row.SetField("slspeccostty", entity.slspeccostty);
         row.SetField("slprccostper", entity.slprccostper);
         row.SetField("morerecords", entity.morerecords);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
