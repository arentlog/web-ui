//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.VA.Data.Repositories
{
   using Infor.Sxe.VA.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdsvaordercfg;
   using Models.Pdsvaorderdelete;
   using Models.Pdsmessaging;
   using Models.Pdstiecreatetiett;
   using Models.Pdsvaheaderaddchg;
   using Models.Pdsvaheaderlist;
   using Models.Pdsvaheadersettings;
   using Models.Pdsvanonstockvalidate;
   using Models.Pdsvaheadercopy;
   using Models.Pdsvaheaderprint;
   using Models.Pdsvaheaderextrafields;
   using Models.Pdsvaheaderallcomponent;
   using Models.Complex;

   public partial class AsvaheaderRepository : RepositoryBase
   {
      private AsvaheaderAdapter adapter;
  
      public AsvaheaderRepository(IProgressConnection connection)
      {
         this.adapter = new AsvaheaderAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public AsvaheaderVAOrderCfgExecFuncResponseAPI VAOrderCfgExecFunc(Vaordercfg vaordercfg)
      {
         return this.adapter.VAOrderCfgExecFunc(vaordercfg);
      }
  
      public bool VAOrderCfgFinish(Vaordercfg vaordercfg)
      {
         return this.adapter.VAOrderCfgFinish(vaordercfg);
      }
  
      public string VAOrderCfgLaunch(Vaordercfg vaordercfg)
      {
         return this.adapter.VAOrderCfgLaunch(vaordercfg);
      }
  
      public IEnumerable<Messaging> VADeleteOrder(Vaorderdelete vaorderdelete)
      {
         return this.adapter.VADeleteOrder(vaorderdelete);
      }
  
      public void VAHeaderSoftLock(int pvVano, int pvVasuf)
      {
         this.adapter.VAHeaderSoftLock(pvVano, pvVasuf);
      }
  
      public void VAHeaderSoftLockV2(int pvVano, int pvVasuf, string pvTransproc)
      {
         this.adapter.VAHeaderSoftLockV2(pvVano, pvVasuf, pvTransproc);
      }
  
      public IEnumerable<Tiecreatetiettresults> VAHeaderTies(Tiecreatetiettcriteria tiecreatetiettcriteria)
      {
         return this.adapter.VAHeaderTies(tiecreatetiettcriteria);
      }
  
      public AsvaheaderVAHeaderTieEditValidateResponseAPI VAHeaderTieEditValidate(AsvaheaderVAHeaderTieEditValidateRequestAPI AsvaheaderVAHeaderTieEditValidateRequestAPI)
      {
         return this.adapter.VAHeaderTieEditValidate(AsvaheaderVAHeaderTieEditValidateRequestAPI);
      }
  
      public IEnumerable<Messaging> VAHeaderTieFinalUpdate(AsvaheaderVAHeaderTieFinalUpdateRequestAPI AsvaheaderVAHeaderTieFinalUpdateRequestAPI)
      {
         return this.adapter.VAHeaderTieFinalUpdate(AsvaheaderVAHeaderTieFinalUpdateRequestAPI);
      }
  
      public AsvaheaderVAHeaderAddRecordResponseAPI VAHeaderAddRecord(Vaheaderaddchg vaheaderaddchg)
      {
         return this.adapter.VAHeaderAddRecord(vaheaderaddchg);
      }
  
      public AsvaheaderVAHeaderChangeRecordResponseAPI VAHeaderChangeRecord(Vaheaderaddchg vaheaderaddchg)
      {
         return this.adapter.VAHeaderChangeRecord(vaheaderaddchg);
      }
  
      public AsvaheaderVAHeaderRetrieveResponseAPI VAHeaderRetrieve(Vaheaderlistcriteria vaheaderlistcriteria)
      {
         return this.adapter.VAHeaderRetrieve(vaheaderlistcriteria);
      }
  
      public IEnumerable<Messaging> VAHeaderDetailCheckAccess(int iVANo, int iVASuf)
      {
         return this.adapter.VAHeaderDetailCheckAccess(iVANo, iVASuf);
      }
  
      public void VAHeaderRemoveSoftLock(int pvVano, int pvVasuf)
      {
         this.adapter.VAHeaderRemoveSoftLock(pvVano, pvVasuf);
      }
  
      public Vaheaderaddchg VAHeaderInitialize(int iVANo, int iVASuf)
      {
         return this.adapter.VAHeaderInitialize(iVANo, iVASuf);
      }
  
      public Vaheaderaddchg VAHeaderLeaveField(AsvaheaderVAHeaderLeaveFieldRequestAPI AsvaheaderVAHeaderLeaveFieldRequestAPI)
      {
         return this.adapter.VAHeaderLeaveField(AsvaheaderVAHeaderLeaveFieldRequestAPI);
      }
  
      public Vaheadersettings VAHeaderGetSettings()
      {
         return this.adapter.VAHeaderGetSettings();
      }
  
      public void VAHeaderSetSettings(Vaheadersettings vaheadersettings)
      {
         this.adapter.VAHeaderSetSettings(vaheadersettings);
      }
  
      public Vanonstockvalidate VAHeaderNonStockVal(Vanonstockvalidate vanonstockvalidate)
      {
         return this.adapter.VAHeaderNonStockVal(vanonstockvalidate);
      }
  
      public Vaheaderlistresults VAHeaderQuickEntry(Vaheaderlistcriteria vaheaderlistcriteria)
      {
         return this.adapter.VAHeaderQuickEntry(vaheaderlistcriteria);
      }
  
      public Vaheadercopy VAHeaderCopyRetrieve(int pvVano, int pvVasuf)
      {
         return this.adapter.VAHeaderCopyRetrieve(pvVano, pvVasuf);
      }
  
      public Vaheadercopy VAHeaderCopyLeaveField(AsvaheaderVAHeaderCopyLeaveFieldRequestAPI AsvaheaderVAHeaderCopyLeaveFieldRequestAPI)
      {
         return this.adapter.VAHeaderCopyLeaveField(AsvaheaderVAHeaderCopyLeaveFieldRequestAPI);
      }
  
      public AsvaheaderVAHeaderCopyCreateResponseAPI VAHeaderCopyCreate(Vaheadercopy vaheadercopy)
      {
         return this.adapter.VAHeaderCopyCreate(vaheadercopy);
      }
  
      public IEnumerable<Vaheaderprint> VAHeaderPrintInitialize(int pvVano, int pvVasuf)
      {
         return this.adapter.VAHeaderPrintInitialize(pvVano, pvVasuf);
      }
  
      public IEnumerable<Messaging> VAHeaderPrintRun(AsvaheaderVAHeaderPrintRunRequestAPI AsvaheaderVAHeaderPrintRunRequestAPI)
      {
         return this.adapter.VAHeaderPrintRun(AsvaheaderVAHeaderPrintRunRequestAPI);
      }
  
      public AsvaheaderVAHeaderDetailLoadResponseAPI VAHeaderDetailLoad(int pvVano, int pvVasuf)
      {
         return this.adapter.VAHeaderDetailLoad(pvVano, pvVasuf);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  