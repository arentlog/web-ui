//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Text;
using NLog;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.VA.Data.Adapters
{
   using com.infor.sxproxy.vaproxy;
   using com.infor.sxproxy.vaproxy.StrongTypesNS;
    
   using Models.PdsContext;
   using Models.Pdsvaec;
   using Models.Pdsmessaging;
   using Models.Pdsvaifbuildvalist;
   using Models.Complex;

   public partial class AsvainquiryAdapter : AdapterBase<pdsContextDataSet>
   {
      private VAProxyAppObject proxyAppObject;
      
      public AsvainquiryAdapter(IProgressConnection connection) : base(connection)
      {
         try 
         {
            this.proxyAppObject = new VAProxyAppObject(connection.Connection);
            this.pdsContext = new pdsContextDataSet();
            
            this.OnCreated();
         }
         catch (Exception ex)
         {
            NLogLogger.ErrorException("Failed in adapter ", ex);
            ErrorReportingHelper.ReportProgramErrors($"Error in AsvainquiryAdapter constructor - {ex.Message}");
         }
      }
  
      partial void OnCreated();
    
      public AsvainquiryVAECCreateTempTableResponseAPI VAECCreateTempTable(Vaeccriteria vaeccriteria)
      {   
         var result = new AsvainquiryVAECCreateTempTableResponseAPI();
         
         var pdsvaec = new pdsvaecDataSet();
            
         var pdsmessaging = new pdsmessagingDataSet();
            
         DataRow ttblvaeccriteriaCriteria = pdsvaec.ttblvaeccriteria.NewttblvaeccriteriaRow();
         Vaeccriteria.UpdateRowFromVaeccriteria(ref ttblvaeccriteriaCriteria, vaeccriteria);
         pdsvaec.ttblvaeccriteria.AddttblvaeccriteriaRow((pdsvaecDataSet.ttblvaeccriteriaRow)ttblvaeccriteriaCriteria);
            
         string cErrorMessage = string.Empty;
   
         
         NLogLoggerP.Trace("VAECCreateTempTable - Asvainquiry - Before Call");
         StopwatchUtil.Time(
         () =>
            {
               using (var poAsvainquiryproxy = this.proxyAppObject.CreatePO_asvainquiryproxy())
               {
                   this.SetRequiredContextParameters();
                   poAsvainquiryproxy.VAECCreateTempTable(ref pdsContext, ref pdsvaec, out pdsmessaging, out cErrorMessage);
               }
            });
         NLogLoggerP.Info("VAECCreateTempTable - Asvainquiry - After Call");

         
         this.ReportErrors(cErrorMessage);
         this.ReportErrors(this.pdsContext);
         this.ReportErrors(pdsvaec); 
    
         foreach (DataRow row in pdsmessaging.ttblmessaging)
         {
            result.messaging.Add(Messaging.BuildMessagingFromRow(row));
         }     
         foreach (DataRow row in pdsvaec.ttblvaecresults)
         {
            result.vaecresults.Add(Vaecresults.BuildVaecresultsFromRow(row));
         }     
          
         return result;
          
      }

      public AsvainquiryVAIFBuildVAListResponseAPI VAIFBuildVAList(Vaifbuildvalistcriteria vaifbuildvalistcriteria)
      {   
         var result = new AsvainquiryVAIFBuildVAListResponseAPI();
         
         var pdsvaifbuildvalist = new pdsvaifbuildvalistDataSet();
            
         DataRow ttblvaifbuildvalistcriteriaCriteria = pdsvaifbuildvalist.ttblvaifbuildvalistcriteria.NewttblvaifbuildvalistcriteriaRow();
         Vaifbuildvalistcriteria.UpdateRowFromVaifbuildvalistcriteria(ref ttblvaifbuildvalistcriteriaCriteria, vaifbuildvalistcriteria);
         pdsvaifbuildvalist.ttblvaifbuildvalistcriteria.AddttblvaifbuildvalistcriteriaRow((pdsvaifbuildvalistDataSet.ttblvaifbuildvalistcriteriaRow)ttblvaifbuildvalistcriteriaCriteria);
            
         string cErrorMessage = string.Empty;
         bool lMoreRecords = false;
   
         
         NLogLoggerP.Trace("VAIFBuildVAList - Asvainquiry - Before Call");
         StopwatchUtil.Time(
         () =>
            {
               using (var poAsvainquiryproxy = this.proxyAppObject.CreatePO_asvainquiryproxy())
               {
                   this.SetRequiredContextParameters();
                   poAsvainquiryproxy.VAIFBuildVAList(ref pdsContext, ref pdsvaifbuildvalist, out cErrorMessage, out lMoreRecords);
               }
            });
         NLogLoggerP.Info("VAIFBuildVAList - Asvainquiry - After Call");

         
         this.ReportErrors(cErrorMessage);
         this.ReportErrors(this.pdsContext);
         this.ReportErrors(pdsvaifbuildvalist); 
    
         foreach (DataRow row in pdsvaifbuildvalist.ttblvaifbuildvahdrlistresults)
         {
            result.vaifbuildvahdrlistresults.Add(Vaifbuildvahdrlistresults.BuildVaifbuildvahdrlistresultsFromRow(row));
         }     
         foreach (DataRow row in pdsvaifbuildvalist.ttblvaifbuildvalaborlistresults)
         {
            result.vaifbuildvalaborlistresults.Add(Vaifbuildvalaborlistresults.BuildVaifbuildvalaborlistresultsFromRow(row));
         }     
         foreach (DataRow row in pdsvaifbuildvalist.ttblvaifbuildvalinelistresults)
         {
            result.vaifbuildvalinelistresults.Add(Vaifbuildvalinelistresults.BuildVaifbuildvalinelistresultsFromRow(row));
         }     
         result.lMoreRecords = lMoreRecords;
          
         return result;
          
      }

      public AsvainquiryVAIFBuildVAListbyFetchWhereResponseAPI VAIFBuildVAListbyFetchWhere()
      {   
         var result = new AsvainquiryVAIFBuildVAListbyFetchWhereResponseAPI();
         
         var pdsvaifbuildvalist = new pdsvaifbuildvalistDataSet();
            
         var pdsmessaging = new pdsmessagingDataSet();
            
         string cErrorMessage = string.Empty;
         bool lMoreRecords = false;
   
         
         NLogLoggerP.Trace("VAIFBuildVAListbyFetchWhere - Asvainquiry - Before Call");
         StopwatchUtil.Time(
         () =>
            {
               using (var poAsvainquiryproxy = this.proxyAppObject.CreatePO_asvainquiryproxy())
               {
                   this.SetRequiredContextParameters();
                   poAsvainquiryproxy.VAIFBuildVAListbyFetchWhere(ref pdsContext, out pdsvaifbuildvalist, out pdsmessaging, out cErrorMessage, out lMoreRecords);
               }
            });
         NLogLoggerP.Info("VAIFBuildVAListbyFetchWhere - Asvainquiry - After Call");

         
         this.ReportErrors(cErrorMessage);
         this.ReportErrors(this.pdsContext);
         this.ReportErrors(pdsvaifbuildvalist); 
    
         foreach (DataRow row in pdsmessaging.ttblmessaging)
         {
            result.messaging.Add(Messaging.BuildMessagingFromRow(row));
         }     
         foreach (DataRow row in pdsvaifbuildvalist.ttblvaifbuildvahdrlistresults)
         {
            result.vaifbuildvahdrlistresults.Add(Vaifbuildvahdrlistresults.BuildVaifbuildvahdrlistresultsFromRow(row));
         }     
         foreach (DataRow row in pdsvaifbuildvalist.ttblvaifbuildvalaborlistresults)
         {
            result.vaifbuildvalaborlistresults.Add(Vaifbuildvalaborlistresults.BuildVaifbuildvalaborlistresultsFromRow(row));
         }     
         foreach (DataRow row in pdsvaifbuildvalist.ttblvaifbuildvalinelistresults)
         {
            result.vaifbuildvalinelistresults.Add(Vaifbuildvalinelistresults.BuildVaifbuildvalinelistresultsFromRow(row));
         }     
         result.lMoreRecords = lMoreRecords;
          
         return result;
          
      }

      public AsvainquiryVAIFBuildVAListbySearchWordIndexResponseAPI VAIFBuildVAListbySearchWordIndex(AsvainquiryVAIFBuildVAListbySearchWordIndexRequestAPI AsvainquiryVAIFBuildVAListbySearchWordIndexRequestAPI)
      {   
         var result = new AsvainquiryVAIFBuildVAListbySearchWordIndexResponseAPI();
         
         var pdsvaifbuildvalist = new pdsvaifbuildvalistDataSet();
            
         var pdsmessaging = new pdsmessagingDataSet();
            
         string cErrorMessage = string.Empty;
         bool lMoreRecords = false;
   
         var  iBatchSize = AsvainquiryVAIFBuildVAListbySearchWordIndexRequestAPI.iBatchSize;
            
         var  cSearchString = AsvainquiryVAIFBuildVAListbySearchWordIndexRequestAPI.cSearchString;
            
         
         NLogLoggerP.Trace("VAIFBuildVAListbySearchWordIndex - Asvainquiry - Before Call");
         StopwatchUtil.Time(
         () =>
            {
               using (var poAsvainquiryproxy = this.proxyAppObject.CreatePO_asvainquiryproxy())
               {
                   this.SetRequiredContextParameters();
                   poAsvainquiryproxy.VAIFBuildVAListbySearchWordIndex(ref pdsContext,  iBatchSize,  cSearchString, out pdsvaifbuildvalist, out pdsmessaging, out cErrorMessage, out lMoreRecords);
               }
            });
         NLogLoggerP.Info("VAIFBuildVAListbySearchWordIndex - Asvainquiry - After Call");

         
         this.ReportErrors(cErrorMessage);
         this.ReportErrors(this.pdsContext);
         this.ReportErrors(pdsvaifbuildvalist); 
    
         foreach (DataRow row in pdsmessaging.ttblmessaging)
         {
            result.messaging.Add(Messaging.BuildMessagingFromRow(row));
         }     
         foreach (DataRow row in pdsvaifbuildvalist.ttblvaifbuildvahdrlistresults)
         {
            result.vaifbuildvahdrlistresults.Add(Vaifbuildvahdrlistresults.BuildVaifbuildvahdrlistresultsFromRow(row));
         }     
         foreach (DataRow row in pdsvaifbuildvalist.ttblvaifbuildvalaborlistresults)
         {
            result.vaifbuildvalaborlistresults.Add(Vaifbuildvalaborlistresults.BuildVaifbuildvalaborlistresultsFromRow(row));
         }     
         foreach (DataRow row in pdsvaifbuildvalist.ttblvaifbuildvalinelistresults)
         {
            result.vaifbuildvalinelistresults.Add(Vaifbuildvalinelistresults.BuildVaifbuildvalinelistresultsFromRow(row));
         }     
         result.lMoreRecords = lMoreRecords;
          
         return result;
          
      }

      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }	
         this.proxyAppObject?.Dispose();

         base.Dispose(true);
      }
  
   }
}
#pragma warning restore 1591
  