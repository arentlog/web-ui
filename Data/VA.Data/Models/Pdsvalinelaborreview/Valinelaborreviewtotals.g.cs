//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.VA.Data.Models.Pdsvalinelaborreview
{
   [ModelName("Infor.Sxe.VA.Data.Models.Pdsvalinelaborreview.Valinelaborreviewtotals")]
   public partial class Valinelaborreviewtotals : ModelBase
   {
      public decimal completeactualcost { get; set; }
      public decimal completeestimatedcost { get; set; }
      public decimal unitactualcost { get; set; }
      public decimal unitestimatedcost { get; set; }
      public decimal controlledactualcost { get; set; }
      public decimal controlledestimatedcost { get; set; }
      public decimal controlledappliedcost { get; set; }
      public bool actualandestimatedexist { get; set; }


      public static Valinelaborreviewtotals BuildValinelaborreviewtotalsFromRow(DataRow row)
      {
         Valinelaborreviewtotals entity = new Valinelaborreviewtotals();
         entity.completeactualcost = row.IsNull("completeactualcost") ? decimal.Zero : row.Field<decimal>("completeactualcost");
         entity.completeestimatedcost = row.IsNull("completeestimatedcost") ? decimal.Zero : row.Field<decimal>("completeestimatedcost");
         entity.unitactualcost = row.IsNull("unitactualcost") ? decimal.Zero : row.Field<decimal>("unitactualcost");
         entity.unitestimatedcost = row.IsNull("unitestimatedcost") ? decimal.Zero : row.Field<decimal>("unitestimatedcost");
         entity.controlledactualcost = row.IsNull("controlledactualcost") ? decimal.Zero : row.Field<decimal>("controlledactualcost");
         entity.controlledestimatedcost = row.IsNull("controlledestimatedcost") ? decimal.Zero : row.Field<decimal>("controlledestimatedcost");
         entity.controlledappliedcost = row.IsNull("controlledappliedcost") ? decimal.Zero : row.Field<decimal>("controlledappliedcost");
         entity.actualandestimatedexist = row.Field<bool>("actualandestimatedexist");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromValinelaborreviewtotals(ref DataRow row, Valinelaborreviewtotals entity)
      {
         row.SetField("completeactualcost", entity.completeactualcost);
         row.SetField("completeestimatedcost", entity.completeestimatedcost);
         row.SetField("unitactualcost", entity.unitactualcost);
         row.SetField("unitestimatedcost", entity.unitestimatedcost);
         row.SetField("controlledactualcost", entity.controlledactualcost);
         row.SetField("controlledestimatedcost", entity.controlledestimatedcost);
         row.SetField("controlledappliedcost", entity.controlledappliedcost);
         row.SetField("actualandestimatedexist", entity.actualandestimatedexist);

      }
   
   }
}
#pragma warning restore 1591
