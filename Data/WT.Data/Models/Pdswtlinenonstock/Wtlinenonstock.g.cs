//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.WT.Data.Models.Pdswtlinenonstock
{
   [ModelName("Infor.Sxe.WT.Data.Models.Pdswtlinenonstock.Wtlinenonstock")]
   public partial class Wtlinenonstock : ModelBase
   {
      [StringValidationAttribute]
      public string prod { get; set; }
      public bool prodenabled { get; set; }
      [StringValidationAttribute]
      public string proddesc1 { get; set; }
      [StringValidationAttribute]
      public string proddesc2 { get; set; }
      public bool proddescenabled { get; set; }
      public decimal prodcost { get; set; }
      public bool prodcostenabled { get; set; }
      public decimal vendno { get; set; }
      public bool vendnoenabled { get; set; }
      [StringValidationAttribute]
      public string vendname { get; set; }
      [StringValidationAttribute]
      public string prodline { get; set; }
      public bool prodlineenabled { get; set; }
      [StringValidationAttribute]
      public string arpwhse { get; set; }
      public bool arpwhseenabled { get; set; }
      public decimal foreigncost { get; set; }
      public bool foreigncosthidden { get; set; }
      public decimal exchangerate { get; set; }
      public bool exchangeratehidden { get; set; }
      [StringValidationAttribute]
      public string currencyty { get; set; }
      public bool currencytyhidden { get; set; }
      [StringValidationAttribute]
      public string currencytyshort { get; set; }
      public bool currencytyshorthidden { get; set; }
      [StringValidationAttribute]
      public string prodcato { get; set; }
      public bool prodcatoenabled { get; set; }
      [StringValidationAttribute]
      public string prodcati { get; set; }
      public bool prodcatienabled { get; set; }
      public bool costcalculatebtnenabled { get; set; }
      public bool costcalculatebtnhidden { get; set; }
      [StringValidationAttribute]
      public string nonstockty { get; set; }
      [StringValidationAttribute]
      public string unit { get; set; }
      [StringValidationAttribute]
      public string quesanswer { get; set; }
      [StringValidationAttribute]
      public string quesdescrip1 { get; set; }
      [StringValidationAttribute]
      public string quesdescrip2 { get; set; }
      [StringValidationAttribute]
      public string quespriceavail { get; set; }
      [StringValidationAttribute]
      public string quesprodcat { get; set; }
      [StringValidationAttribute]
      public string quesmessage { get; set; }
      [StringValidationAttribute]
      public string quesoantext { get; set; }
      public bool quesoananswer { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Wtlinenonstock BuildWtlinenonstockFromRow(DataRow row)
      {
         Wtlinenonstock entity = new Wtlinenonstock();
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.prodenabled = row.Field<bool>("prodenabled");
         entity.proddesc1 = row.IsNull("proddesc1") ? string.Empty : row.Field<string>("proddesc1");
         entity.proddesc2 = row.IsNull("proddesc2") ? string.Empty : row.Field<string>("proddesc2");
         entity.proddescenabled = row.Field<bool>("proddescenabled");
         entity.prodcost = row.IsNull("prodcost") ? decimal.Zero : row.Field<decimal>("prodcost");
         entity.prodcostenabled = row.Field<bool>("prodcostenabled");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.vendnoenabled = row.Field<bool>("vendnoenabled");
         entity.vendname = row.IsNull("vendname") ? string.Empty : row.Field<string>("vendname");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.prodlineenabled = row.Field<bool>("prodlineenabled");
         entity.arpwhse = row.IsNull("arpwhse") ? string.Empty : row.Field<string>("arpwhse");
         entity.arpwhseenabled = row.Field<bool>("arpwhseenabled");
         entity.foreigncost = row.IsNull("foreigncost") ? decimal.Zero : row.Field<decimal>("foreigncost");
         entity.foreigncosthidden = row.Field<bool>("foreigncosthidden");
         entity.exchangerate = row.IsNull("exchangerate") ? decimal.Zero : row.Field<decimal>("exchangerate");
         entity.exchangeratehidden = row.Field<bool>("exchangeratehidden");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.currencytyhidden = row.Field<bool>("currencytyhidden");
         entity.currencytyshort = row.IsNull("currencytyshort") ? string.Empty : row.Field<string>("currencytyshort");
         entity.currencytyshorthidden = row.Field<bool>("currencytyshorthidden");
         entity.prodcato = row.IsNull("prodcato") ? string.Empty : row.Field<string>("prodcato");
         entity.prodcatoenabled = row.Field<bool>("prodcatoenabled");
         entity.prodcati = row.IsNull("prodcati") ? string.Empty : row.Field<string>("prodcati");
         entity.prodcatienabled = row.Field<bool>("prodcatienabled");
         entity.costcalculatebtnenabled = row.Field<bool>("costcalculatebtnenabled");
         entity.costcalculatebtnhidden = row.Field<bool>("costcalculatebtnhidden");
         entity.nonstockty = row.IsNull("nonstockty") ? string.Empty : row.Field<string>("nonstockty");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.quesanswer = row.IsNull("quesanswer") ? string.Empty : row.Field<string>("quesanswer");
         entity.quesdescrip1 = row.IsNull("quesdescrip1") ? string.Empty : row.Field<string>("quesdescrip1");
         entity.quesdescrip2 = row.IsNull("quesdescrip2") ? string.Empty : row.Field<string>("quesdescrip2");
         entity.quespriceavail = row.IsNull("quespriceavail") ? string.Empty : row.Field<string>("quespriceavail");
         entity.quesprodcat = row.IsNull("quesprodcat") ? string.Empty : row.Field<string>("quesprodcat");
         entity.quesmessage = row.IsNull("quesmessage") ? string.Empty : row.Field<string>("quesmessage");
         entity.quesoantext = row.IsNull("quesoantext") ? string.Empty : row.Field<string>("quesoantext");
         entity.quesoananswer = row.Field<bool>("quesoananswer");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromWtlinenonstock(ref DataRow row, Wtlinenonstock entity)
      {
         row.SetField("prod", entity.prod);
         row.SetField("prodenabled", entity.prodenabled);
         row.SetField("proddesc1", entity.proddesc1);
         row.SetField("proddesc2", entity.proddesc2);
         row.SetField("proddescenabled", entity.proddescenabled);
         row.SetField("prodcost", entity.prodcost);
         row.SetField("prodcostenabled", entity.prodcostenabled);
         row.SetField("vendno", entity.vendno);
         row.SetField("vendnoenabled", entity.vendnoenabled);
         row.SetField("vendname", entity.vendname);
         row.SetField("prodline", entity.prodline);
         row.SetField("prodlineenabled", entity.prodlineenabled);
         row.SetField("arpwhse", entity.arpwhse);
         row.SetField("arpwhseenabled", entity.arpwhseenabled);
         row.SetField("foreigncost", entity.foreigncost);
         row.SetField("foreigncosthidden", entity.foreigncosthidden);
         row.SetField("exchangerate", entity.exchangerate);
         row.SetField("exchangeratehidden", entity.exchangeratehidden);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("currencytyhidden", entity.currencytyhidden);
         row.SetField("currencytyshort", entity.currencytyshort);
         row.SetField("currencytyshorthidden", entity.currencytyshorthidden);
         row.SetField("prodcato", entity.prodcato);
         row.SetField("prodcatoenabled", entity.prodcatoenabled);
         row.SetField("prodcati", entity.prodcati);
         row.SetField("prodcatienabled", entity.prodcatienabled);
         row.SetField("costcalculatebtnenabled", entity.costcalculatebtnenabled);
         row.SetField("costcalculatebtnhidden", entity.costcalculatebtnhidden);
         row.SetField("nonstockty", entity.nonstockty);
         row.SetField("unit", entity.unit);
         row.SetField("quesanswer", entity.quesanswer);
         row.SetField("quesdescrip1", entity.quesdescrip1);
         row.SetField("quesdescrip2", entity.quesdescrip2);
         row.SetField("quespriceavail", entity.quespriceavail);
         row.SetField("quesprodcat", entity.quesprodcat);
         row.SetField("quesmessage", entity.quesmessage);
         row.SetField("quesoantext", entity.quesoantext);
         row.SetField("quesoananswer", entity.quesoananswer);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
