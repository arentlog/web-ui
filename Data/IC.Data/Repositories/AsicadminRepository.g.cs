//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.IC.Data.Repositories
{
   using Infor.Sxe.IC.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdsloadusagehistory;
   using Models.Pdsicswloadsensitivity;
   using Models.Pdsloadsafetyallowance;
   using Models.Pdsicamrdropdowns;
   using Models.Pdsicamrupdselectmethod;
   using Models.Pdsicamrupdusagerateanalysis;
   using Models.Pdsicamrcalcmethodrate;
   using Models.Pdsicamrusagesensitivity;
   using Models.Pdsicamrloadusagerateanalysistt;
   using Models.Pdssinglemethodwaschosen;
   using Models.Pdsrecalcorderingcontrols;
   using Models.Pdsicamrresults;
   using Models.Pdsloadleadtimehist;
   using Models.Pdsicamuinvvalchg;
   using Models.Pdsicamudropdowns;
   using Models.Pdsmessaging;
   using Models.Pdsicamumanprodlist;
   using Models.Pdsicamuexception;
   using Models.Pdsicamuusage;
   using Models.Pdsicamumain;
   using Models.Pdsicamumassupdateinit;
   using Models.Pdsicamumassupdate;
   using Models.Pdsicamudeleterecord;
   using Models.Pdsicamuimportfile;
   using Models.Complex;

   public partial class AsicadminRepository : RepositoryBase
   {
      private AsicadminAdapter adapter;
  
      public AsicadminRepository(IProgressConnection connection)
      {
         this.adapter = new AsicadminAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public AsicadminLoadUsageHistoryResponseAPI LoadUsageHistory(Loadusagecriteria loadusagecriteria)
      {
         return this.adapter.LoadUsageHistory(loadusagecriteria);
      }
  
      public IEnumerable<Loadusagehistoryresults> RebuildUsageHistoryDates(AsicadminRebuildUsageHistoryDatesRequestAPI AsicadminRebuildUsageHistoryDatesRequestAPI)
      {
         return this.adapter.RebuildUsageHistoryDates(AsicadminRebuildUsageHistoryDatesRequestAPI);
      }
  
      public Icswloadsensitivitysingle ICSWLoadOrderingControlsSensitivity(Icswloadsensitivitycriteria icswloadsensitivitycriteria)
      {
         return this.adapter.ICSWLoadOrderingControlsSensitivity(icswloadsensitivitycriteria);
      }
  
      public Safetyallowanceresults ICSWDisplaySafetyAllowance(Safetyallowancecriteria safetyallowancecriteria)
      {
         return this.adapter.ICSWDisplaySafetyAllowance(safetyallowancecriteria);
      }
  
      public IEnumerable<Icamrdropdownsresults> ICAMRLoadDropDowns(Icamrdropdownscriteria icamrdropdownscriteria)
      {
         return this.adapter.ICAMRLoadDropDowns(icamrdropdownscriteria);
      }
  
      public void ICAMRUpdateSelectMethod(AsicadminICAMRUpdateSelectMethodRequestAPI AsicadminICAMRUpdateSelectMethodRequestAPI)
      {
         this.adapter.ICAMRUpdateSelectMethod(AsicadminICAMRUpdateSelectMethodRequestAPI);
      }
  
      public void ICAMRUpdateUsageRateAnalysis(Icamrupdusageratecriteria icamrupdusageratecriteria)
      {
         this.adapter.ICAMRUpdateUsageRateAnalysis(icamrupdusageratecriteria);
      }
  
      public AsicadminICAMRLoadCalcMethodRateResponseAPI ICAMRLoadCalcMethodRate(Icamrcalcmethodcriteria icamrcalcmethodcriteria)
      {
         return this.adapter.ICAMRLoadCalcMethodRate(icamrcalcmethodcriteria);
      }
  
      public AsicadminICAMRLoadUsageRateAnalysisTTResponseAPI ICAMRLoadUsageRateAnalysisTT(AsicadminICAMRLoadUsageRateAnalysisTTRequestAPI AsicadminICAMRLoadUsageRateAnalysisTTRequestAPI)
      {
         return this.adapter.ICAMRLoadUsageRateAnalysisTT(AsicadminICAMRLoadUsageRateAnalysisTTRequestAPI);
      }
  
      public AsicadminICAMRSingleMethodWasChosenResponseAPI ICAMRSingleMethodWasChosen(AsicadminICAMRSingleMethodWasChosenRequestAPI AsicadminICAMRSingleMethodWasChosenRequestAPI)
      {
         return this.adapter.ICAMRSingleMethodWasChosen(AsicadminICAMRSingleMethodWasChosenRequestAPI);
      }
  
      public void ICAMRUpdateICSWURecord(AsicadminICAMRUpdateICSWURecordRequestAPI AsicadminICAMRUpdateICSWURecordRequestAPI)
      {
         this.adapter.ICAMRUpdateICSWURecord(AsicadminICAMRUpdateICSWURecordRequestAPI);
      }
  
      public IEnumerable<Recalcorderingcontrolscrit> ICAMRRecalcOrderingControls(IEnumerable<Recalcorderingcontrolscrit> recalcorderingcontrolscrit)
      {
         return this.adapter.ICAMRRecalcOrderingControls(recalcorderingcontrolscrit);
      }
  
      public IEnumerable<Icamrresults> ICAMRGetResults(int iReportNo)
      {
         return this.adapter.ICAMRGetResults(iReportNo);
      }
  
      public IEnumerable<Loadleadtimehistresults> ICAMULoadLeadTimeHistory(Loadleadtimehistcriteria loadleadtimehistcriteria)
      {
         return this.adapter.ICAMULoadLeadTimeHistory(loadleadtimehistcriteria);
      }
  
      public AsicadminICAMURecalcLeadTimeResponseAPI ICAMURecalcLeadTime(AsicadminICAMURecalcLeadTimeRequestAPI AsicadminICAMURecalcLeadTimeRequestAPI)
      {
         return this.adapter.ICAMURecalcLeadTime(AsicadminICAMURecalcLeadTimeRequestAPI);
      }
  
      public IEnumerable<Loadleadtimehistresults> ICAMUUpdateLeadTime(AsicadminICAMUUpdateLeadTimeRequestAPI AsicadminICAMUUpdateLeadTimeRequestAPI)
      {
         return this.adapter.ICAMUUpdateLeadTime(AsicadminICAMUUpdateLeadTimeRequestAPI);
      }
  
      public AsicadminICAMUInitializeValueChangeResponseAPI ICAMUInitializeValueChange(AsicadminICAMUInitializeValueChangeRequestAPI AsicadminICAMUInitializeValueChangeRequestAPI)
      {
         return this.adapter.ICAMUInitializeValueChange(AsicadminICAMUInitializeValueChangeRequestAPI);
      }
  
      public AsicadminICAMUBuildValueChangeTableResponseAPI ICAMUBuildValueChangeTable(Icamuinvvalchgcriteria icamuinvvalchgcriteria)
      {
         return this.adapter.ICAMUBuildValueChangeTable(icamuinvvalchgcriteria);
      }
  
      public AsicadminICAMUValidateManualProductListResponseAPI ICAMUValidateManualProductList(Icamumanprodlistcriteria icamumanprodlistcriteria)
      {
         return this.adapter.ICAMUValidateManualProductList(icamumanprodlistcriteria);
      }
  
      public AsicadminICAMUCreateManualProductListResponseAPI ICAMUCreateManualProductList(AsicadminICAMUCreateManualProductListRequestAPI AsicadminICAMUCreateManualProductListRequestAPI)
      {
         return this.adapter.ICAMUCreateManualProductList(AsicadminICAMUCreateManualProductListRequestAPI);
      }
  
      public AsicadminICAMULoadExceptionResponseAPI ICAMULoadException(Icamuexceptioncriteria icamuexceptioncriteria)
      {
         return this.adapter.ICAMULoadException(icamuexceptioncriteria);
      }
  
      public AsicadminICAMUUpdateUsageRateFromAnalysisTTResponseAPI ICAMUUpdateUsageRateFromAnalysisTT(AsicadminICAMUUpdateUsageRateFromAnalysisTTRequestAPI AsicadminICAMUUpdateUsageRateFromAnalysisTTRequestAPI)
      {
         return this.adapter.ICAMUUpdateUsageRateFromAnalysisTT(AsicadminICAMUUpdateUsageRateFromAnalysisTTRequestAPI);
      }
  
      public Icamuusagesingle ICAMUUsageDisplayScreenFields(Icamuusagecriteria icamuusagecriteria)
      {
         return this.adapter.ICAMUUsageDisplayScreenFields(icamuusagecriteria);
      }
  
      public IEnumerable<Messaging> ICAMUUsageUpdate(AsicadminICAMUUsageUpdateRequestAPI AsicadminICAMUUsageUpdateRequestAPI)
      {
         return this.adapter.ICAMUUsageUpdate(AsicadminICAMUUsageUpdateRequestAPI);
      }
  
      public AsicadminICAMUInitializeMainResponseAPI ICAMUInitializeMain(AsicadminICAMUInitializeMainRequestAPI AsicadminICAMUInitializeMainRequestAPI)
      {
         return this.adapter.ICAMUInitializeMain(AsicadminICAMUInitializeMainRequestAPI);
      }
  
      public AsicadminICAMUValidateMainResponseAPI ICAMUValidateMain(AsicadminICAMUValidateMainRequestAPI AsicadminICAMUValidateMainRequestAPI)
      {
         return this.adapter.ICAMUValidateMain(AsicadminICAMUValidateMainRequestAPI);
      }
  
      public AsicadminICAMUBuildMainListResponseAPI ICAMUBuildMainList(AsicadminICAMUBuildMainListRequestAPI AsicadminICAMUBuildMainListRequestAPI)
      {
         return this.adapter.ICAMUBuildMainList(AsicadminICAMUBuildMainListRequestAPI);
      }
  
      public AsicadminICAMUFrozenReasonChangeResponseAPI ICAMUFrozenReasonChange(AsicadminICAMUFrozenReasonChangeRequestAPI AsicadminICAMUFrozenReasonChangeRequestAPI)
      {
         return this.adapter.ICAMUFrozenReasonChange(AsicadminICAMUFrozenReasonChangeRequestAPI);
      }
  
      public AsicadminICAMUSetFieldsBasedOnStatusResponseAPI ICAMUSetFieldsBasedOnStatus(AsicadminICAMUSetFieldsBasedOnStatusRequestAPI AsicadminICAMUSetFieldsBasedOnStatusRequestAPI)
      {
         return this.adapter.ICAMUSetFieldsBasedOnStatus(AsicadminICAMUSetFieldsBasedOnStatusRequestAPI);
      }
  
      public AsicadminICAMUInitializeMassUpdateResponseAPI ICAMUInitializeMassUpdate()
      {
         return this.adapter.ICAMUInitializeMassUpdate();
      }
  
      public AsicadminICAMUMassUpdateResponseAPI ICAMUMassUpdate(AsicadminICAMUMassUpdateRequestAPI AsicadminICAMUMassUpdateRequestAPI)
      {
         return this.adapter.ICAMUMassUpdate(AsicadminICAMUMassUpdateRequestAPI);
      }
  
      public void ICAMUDeleteRecord(Icamudeleterecordcriteria icamudeleterecordcriteria)
      {
         this.adapter.ICAMUDeleteRecord(icamudeleterecordcriteria);
      }
  
      public AsicadminICAMUFilterImportDataResponseAPI ICAMUFilterImportData(IEnumerable<Icamuimportfileraw> icamuimportfileraw)
      {
         return this.adapter.ICAMUFilterImportData(icamuimportfileraw);
      }
  
      public IEnumerable<Messaging> ICAMUImportFileOK(IEnumerable<Icamuimportfilefiltered> icamuimportfilefiltered)
      {
         return this.adapter.ICAMUImportFileOK(icamuimportfilefiltered);
      }
  
      public void ICAMRDeleteRecords(AsicadminICAMRDeleteRecordsRequestAPI AsicadminICAMRDeleteRecordsRequestAPI)
      {
         this.adapter.ICAMRDeleteRecords(AsicadminICAMRDeleteRecordsRequestAPI);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  