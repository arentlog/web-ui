//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.IC.Data.Repositories
{
   using Infor.Sxe.IC.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdsicsec;
   using Models.Pdsicseccustprodlookup;
   using Models.Pdsicxrefreferlookup;
   using Models.Pdsicxrefcustlookup;
   using Models.Pdsicxrefvendlookup;
   using Models.Pdsnsinvhdrlookup;
   using Models.Complex;

   public partial class IcsecRepository : RepositoryBase
   {
      private IcsecAdapter adapter;
  
      public IcsecRepository(IProgressConnection connection)
      {
         this.adapter = new IcsecAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public Icsec GetByRowId(string rowId, string fldList)
      {
         return this.adapter.GetByRowId(rowId, fldList);
      }

      public IEnumerable<Icsec> GetListByRowIdList(List<string> rowIds, int batchsize, string fldList)
      {
         return this.adapter.GetListByRowIdList(rowIds, batchsize, fldList);
      }
        
      public IEnumerable<Icsec> GetListAllByCono(int cono, int batchsize, string fldList)
      {
         return this.adapter.GetListAllByCono(cono, batchsize, fldList);
      }
      public IEnumerable<Icsec> GetListByRowpointers(List<string> rowpointers, string fldList)
      {
         return this.adapter.GetListByRowpointers(rowpointers, fldList);
      }
	  
	  
      public Icsec Get(int cono, string rectype, string prod, decimal keyno, int batchsize, string fldList)
      {
         return this.adapter.Get(cono, rectype, prod, keyno, batchsize, fldList);
      }
      
      public IEnumerable<Icsec> GetList(string where, int batchsize, string fldList)
      {
         return this.adapter.GetList(where, batchsize, fldList);
      }
  
      public IEnumerable<Icsec> GetListByAltprod(int cono, string altprod, string rectype, decimal custno, int batchsize, string fldList)
      {
         return this.adapter.GetListByAltprod(cono, altprod, rectype, custno, batchsize, fldList);
      }

      public IEnumerable<Icsec> GetListByCustno(int cono, string rectype, decimal custno, string prod, int batchsize, string fldList)
      {
         return this.adapter.GetListByCustno(cono, rectype, custno, prod, batchsize, fldList);
      }

      public IEnumerable<Icsec> GetListByKeyno(int cono, string rectype, decimal keyno, int batchsize, string fldList)
      {
         return this.adapter.GetListByKeyno(cono, rectype, keyno, batchsize, fldList);
      }

      public IEnumerable<Icsec> GetListByProd(int cono, string prod, string rectype, decimal keyno, int batchsize, string fldList)
      {
         return this.adapter.GetListByProd(cono, prod, rectype, keyno, batchsize, fldList);
      }

      public Icsec GetByRowpointer(string rowpointer, string fldList)
      {
         return this.adapter.GetByRowpointer(rowpointer, fldList);
      }

      public IEnumerable<Icsec> GetListByTransdttmz(DateTime? transdttmz, int batchsize, string fldList)
      {
         return this.adapter.GetListByTransdttmz(transdttmz, batchsize, fldList);
      }

      public Icsec Insert(Icsec record)
      {
         return this.adapter.Insert(record);        
      }
  
      public Icsec Update(Icsec record)
      {
         return this.adapter.Update(record);
      }
  
      public void Delete(Icsec record)
      {
         this.adapter.Delete(record);
      }
  
      public void DeleteListByRowIds(List<string> rowIds)
      {
         this.adapter.DeleteListByRowIds(rowIds);
      }
	   

      public void DeleteListByRowPointers(List<string> rowpointers)
      {
         this.adapter.DeleteListByRowPointers(rowpointers);
      }
	  
      public IEnumerable<Icseccustprodlookupresults> LookupCustomerProduct(Icseccustprodlookupcriteria icseccustprodlookupcriteria)
      {
         return this.adapter.LookupCustomerProduct(icseccustprodlookupcriteria);
      }
  
      public IcsecLookupReferenceResponseAPI LookupReference(Icxrefreferlookupcriteria icxrefreferlookupcriteria)
      {
         return this.adapter.LookupReference(icxrefreferlookupcriteria);
      }
  
      public IcsecLookupCustomerReferenceResponseAPI LookupCustomerReference(Icxrefcustlookupcriteria icxrefcustlookupcriteria)
      {
         return this.adapter.LookupCustomerReference(icxrefcustlookupcriteria);
      }
  
      public IcsecLookupVendorReferenceResponseAPI LookupVendorReference(Icxrefvendlookupcriteria icxrefvendlookupcriteria)
      {
         return this.adapter.LookupVendorReference(icxrefvendlookupcriteria);
      }
  
      public IcsecLookupNonStockInventoryResponseAPI LookupNonStockInventory(Nsinvhdrlookupcriteria nsinvhdrlookupcriteria)
      {
         return this.adapter.LookupNonStockInventory(nsinvhdrlookupcriteria);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  