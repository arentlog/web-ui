//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.IC.Data.Models.Pdsloadcrossreftt
{
   [ModelName("Infor.Sxe.IC.Data.Models.Pdsloadcrossreftt.Loadcrossrefttcriteria")]
   public partial class Loadcrossrefttcriteria : ModelBase
   {
      [StringValidationAttribute]
      public string prod { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      [StringValidationAttribute]
      public string altprod { get; set; }
      public decimal custno { get; set; }
      [StringValidationAttribute]
      public string shipto { get; set; }
      public decimal vendno { get; set; }
      [StringValidationAttribute]
      public string rectype { get; set; }
      public int recordcountlimit { get; set; }
      [StringValidationAttribute]
      public string customparam { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Loadcrossrefttcriteria BuildLoadcrossrefttcriteriaFromRow(DataRow row)
      {
         Loadcrossrefttcriteria entity = new Loadcrossrefttcriteria();
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.altprod = row.IsNull("altprod") ? string.Empty : row.Field<string>("altprod");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.rectype = row.IsNull("rectype") ? string.Empty : row.Field<string>("rectype");
         entity.recordcountlimit = row.IsNull("recordcountlimit") ? 0 : row.Field<int>("recordcountlimit");
         entity.customparam = row.IsNull("customparam") ? string.Empty : row.Field<string>("customparam");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromLoadcrossrefttcriteria(ref DataRow row, Loadcrossrefttcriteria entity)
      {
         row.SetField("prod", entity.prod);
         row.SetField("whse", entity.whse);
         row.SetField("altprod", entity.altprod);
         row.SetField("custno", entity.custno);
         row.SetField("shipto", entity.shipto);
         row.SetField("vendno", entity.vendno);
         row.SetField("rectype", entity.rectype);
         row.SetField("recordcountlimit", entity.recordcountlimit);
         row.SetField("customparam", entity.customparam);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
