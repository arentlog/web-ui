//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.IC.Data.Models.Pdsicamuusage
{
   [ModelName("Infor.Sxe.IC.Data.Models.Pdsicamuusage.Icamuusagesingle")]
   public partial class Icamuusagesingle : ModelBase
   {
      public int secure { get; set; }
      [StringValidationAttribute]
      public string prod { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      [StringValidationAttribute]
      public string frozentype { get; set; }
      [StringValidationAttribute]
      public string frozenmmyy { get; set; }
      public int frozenmos { get; set; }
      public bool so15fl { get; set; }
      public int nodaysso { get; set; }
      public int notimesso { get; set; }
      public DateTime? availsodt { get; set; }
      public DateTime? lastsodt { get; set; }
      public DateTime? enterdt { get; set; }
      public DateTime? acquiredt { get; set; }
      public bool superfl { get; set; }
      public bool icacquiredtfl { get; set; }
      public bool fiAcquireDtSensitive { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Icamuusagesingle BuildIcamuusagesingleFromRow(DataRow row)
      {
         Icamuusagesingle entity = new Icamuusagesingle();
         entity.secure = row.IsNull("secure") ? 0 : row.Field<int>("secure");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.frozentype = row.IsNull("frozentype") ? string.Empty : row.Field<string>("frozentype");
         entity.frozenmmyy = row.IsNull("frozenmmyy") ? string.Empty : row.Field<string>("frozenmmyy");
         entity.frozenmos = row.IsNull("frozenmos") ? 0 : row.Field<int>("frozenmos");
         entity.so15fl = row.Field<bool>("so15fl");
         entity.nodaysso = row.IsNull("nodaysso") ? 0 : row.Field<int>("nodaysso");
         entity.notimesso = row.IsNull("notimesso") ? 0 : row.Field<int>("notimesso");
         entity.availsodt = row.Field<DateTime?>("availsodt");
         entity.lastsodt = row.Field<DateTime?>("lastsodt");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.acquiredt = row.Field<DateTime?>("acquiredt");
         entity.superfl = row.Field<bool>("superfl");
         entity.icacquiredtfl = row.Field<bool>("icacquiredtfl");
         entity.fiAcquireDtSensitive = row.Field<bool>("fiAcquireDt-sensitive");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcamuusagesingle(ref DataRow row, Icamuusagesingle entity)
      {
         row.SetField("secure", entity.secure);
         row.SetField("prod", entity.prod);
         row.SetField("whse", entity.whse);
         row.SetField("frozentype", entity.frozentype);
         row.SetField("frozenmmyy", entity.frozenmmyy);
         row.SetField("frozenmos", entity.frozenmos);
         row.SetField("so15fl", entity.so15fl);
         row.SetField("nodaysso", entity.nodaysso);
         row.SetField("notimesso", entity.notimesso);
         row.SetField("availsodt", entity.availsodt);
         row.SetField("lastsodt", entity.lastsodt);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("acquiredt", entity.acquiredt);
         row.SetField("superfl", entity.superfl);
         row.SetField("icacquiredtfl", entity.icacquiredtfl);
         row.SetField("fiAcquireDt-sensitive", entity.fiAcquireDtSensitive);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
