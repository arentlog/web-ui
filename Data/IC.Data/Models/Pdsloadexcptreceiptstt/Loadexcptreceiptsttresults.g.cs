//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.IC.Data.Models.Pdsloadexcptreceiptstt
{
   [ModelName("Infor.Sxe.IC.Data.Models.Pdsloadexcptreceiptstt.Loadexcptreceiptsttresults")]
   public partial class Loadexcptreceiptsttresults : ModelBase
   {
      public DateTime? receiptdt { get; set; }
      public int pono { get; set; }
      public int posuf { get; set; }
      public int lineno { get; set; }
      public decimal rcvnetavl { get; set; }
      public decimal rcvsafety { get; set; }
      public int leadtime { get; set; }
      public bool ignoreltfl { get; set; }
      public decimal safetypct { get; set; }
      public decimal qtyord { get; set; }
      public decimal qtyrcv { get; set; }
      [StringValidationAttribute]
      public string unit { get; set; }
      public decimal qtycosted { get; set; }
      public decimal netamt { get; set; }
      public decimal netrcv { get; set; }
      public DateTime? enterdt { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Loadexcptreceiptsttresults BuildLoadexcptreceiptsttresultsFromRow(DataRow row)
      {
         Loadexcptreceiptsttresults entity = new Loadexcptreceiptsttresults();
         entity.receiptdt = row.Field<DateTime?>("receiptdt");
         entity.pono = row.IsNull("pono") ? 0 : row.Field<int>("pono");
         entity.posuf = row.IsNull("posuf") ? 0 : row.Field<int>("posuf");
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.rcvnetavl = row.IsNull("rcvnetavl") ? decimal.Zero : row.Field<decimal>("rcvnetavl");
         entity.rcvsafety = row.IsNull("rcvsafety") ? decimal.Zero : row.Field<decimal>("rcvsafety");
         entity.leadtime = row.IsNull("leadtime") ? 0 : row.Field<int>("leadtime");
         entity.ignoreltfl = row.Field<bool>("ignoreltfl");
         entity.safetypct = row.IsNull("safetypct") ? decimal.Zero : row.Field<decimal>("safetypct");
         entity.qtyord = row.IsNull("qtyord") ? decimal.Zero : row.Field<decimal>("qtyord");
         entity.qtyrcv = row.IsNull("qtyrcv") ? decimal.Zero : row.Field<decimal>("qtyrcv");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.qtycosted = row.IsNull("qtycosted") ? decimal.Zero : row.Field<decimal>("qtycosted");
         entity.netamt = row.IsNull("netamt") ? decimal.Zero : row.Field<decimal>("netamt");
         entity.netrcv = row.IsNull("netrcv") ? decimal.Zero : row.Field<decimal>("netrcv");
         entity.enterdt = row.Field<DateTime?>("enterdt");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromLoadexcptreceiptsttresults(ref DataRow row, Loadexcptreceiptsttresults entity)
      {
         row.SetField("receiptdt", entity.receiptdt);
         row.SetField("pono", entity.pono);
         row.SetField("posuf", entity.posuf);
         row.SetField("lineno", entity.lineno);
         row.SetField("rcvnetavl", entity.rcvnetavl);
         row.SetField("rcvsafety", entity.rcvsafety);
         row.SetField("leadtime", entity.leadtime);
         row.SetField("ignoreltfl", entity.ignoreltfl);
         row.SetField("safetypct", entity.safetypct);
         row.SetField("qtyord", entity.qtyord);
         row.SetField("qtyrcv", entity.qtyrcv);
         row.SetField("unit", entity.unit);
         row.SetField("qtycosted", entity.qtycosted);
         row.SetField("netamt", entity.netamt);
         row.SetField("netrcv", entity.netrcv);
         row.SetField("enterdt", entity.enterdt);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
