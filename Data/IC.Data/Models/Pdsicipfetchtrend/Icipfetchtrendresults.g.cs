//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.IC.Data.Models.Pdsicipfetchtrend
{
   [ModelName("Infor.Sxe.IC.Data.Models.Pdsicipfetchtrend.Icipfetchtrendresults")]
   public partial class Icipfetchtrendresults : ModelBase
   {
      [StringValidationAttribute]
      public string cmessage { get; set; }
      public decimal calcusage { get; set; }
      public decimal seastrendmax { get; set; }
      public int seastrendlyu { get; set; }
      public decimal calcusagelyr { get; set; }
      public decimal seastrendmin { get; set; }
      public int seastrendtyu { get; set; }
      public decimal calcusagetyr { get; set; }
      [StringValidationAttribute]
      public string recordlevel { get; set; }
      public DateTime? seastrendexpdt { get; set; }
      public decimal calctrendpct { get; set; }
      public decimal usedtrendpct { get; set; }
      public decimal usagerate { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Icipfetchtrendresults BuildIcipfetchtrendresultsFromRow(DataRow row)
      {
         Icipfetchtrendresults entity = new Icipfetchtrendresults();
         entity.cmessage = row.IsNull("cmessage") ? string.Empty : row.Field<string>("cmessage");
         entity.calcusage = row.IsNull("calcusage") ? decimal.Zero : row.Field<decimal>("calcusage");
         entity.seastrendmax = row.IsNull("seastrendmax") ? decimal.Zero : row.Field<decimal>("seastrendmax");
         entity.seastrendlyu = row.IsNull("seastrendlyu") ? 0 : row.Field<int>("seastrendlyu");
         entity.calcusagelyr = row.IsNull("calcusagelyr") ? decimal.Zero : row.Field<decimal>("calcusagelyr");
         entity.seastrendmin = row.IsNull("seastrendmin") ? decimal.Zero : row.Field<decimal>("seastrendmin");
         entity.seastrendtyu = row.IsNull("seastrendtyu") ? 0 : row.Field<int>("seastrendtyu");
         entity.calcusagetyr = row.IsNull("calcusagetyr") ? decimal.Zero : row.Field<decimal>("calcusagetyr");
         entity.recordlevel = row.IsNull("recordlevel") ? string.Empty : row.Field<string>("recordlevel");
         entity.seastrendexpdt = row.Field<DateTime?>("seastrendexpdt");
         entity.calctrendpct = row.IsNull("calctrendpct") ? decimal.Zero : row.Field<decimal>("calctrendpct");
         entity.usedtrendpct = row.IsNull("usedtrendpct") ? decimal.Zero : row.Field<decimal>("usedtrendpct");
         entity.usagerate = row.IsNull("usagerate") ? decimal.Zero : row.Field<decimal>("usagerate");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcipfetchtrendresults(ref DataRow row, Icipfetchtrendresults entity)
      {
         row.SetField("cmessage", entity.cmessage);
         row.SetField("calcusage", entity.calcusage);
         row.SetField("seastrendmax", entity.seastrendmax);
         row.SetField("seastrendlyu", entity.seastrendlyu);
         row.SetField("calcusagelyr", entity.calcusagelyr);
         row.SetField("seastrendmin", entity.seastrendmin);
         row.SetField("seastrendtyu", entity.seastrendtyu);
         row.SetField("calcusagetyr", entity.calcusagetyr);
         row.SetField("recordlevel", entity.recordlevel);
         row.SetField("seastrendexpdt", entity.seastrendexpdt);
         row.SetField("calctrendpct", entity.calctrendpct);
         row.SetField("usedtrendpct", entity.usedtrendpct);
         row.SetField("usagerate", entity.usagerate);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
