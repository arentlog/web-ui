//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.IC.Data.Models.Pdsicamumain
{
   [ModelName("Infor.Sxe.IC.Data.Models.Pdsicamumain.Icamusingle")]
   public partial class Icamusingle : ModelBase
   {
      [StringValidationAttribute]
      public string statustype { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      [StringValidationAttribute]
      public string whsename { get; set; }
      [StringValidationAttribute]
      public string buyeroroperator { get; set; }
      [StringValidationAttribute]
      public string buyername { get; set; }
      [StringValidationAttribute]
      public string frozenreason { get; set; }
      public decimal vendno { get; set; }
      [StringValidationAttribute]
      public string vendorname { get; set; }
      [StringValidationAttribute]
      public string vendornotesfl { get; set; }
      [StringValidationAttribute]
      public string prodline { get; set; }
      [StringValidationAttribute]
      public string productlinedesc { get; set; }
      [StringValidationAttribute]
      public string fmprodcat { get; set; }
      [StringValidationAttribute]
      public string fromprodcatdesc { get; set; }
      [StringValidationAttribute]
      public string toprodcat { get; set; }
      [StringValidationAttribute]
      public string toprodcatdesc { get; set; }
      public int fmclass { get; set; }
      public int toclass { get; set; }
      [StringValidationAttribute]
      public string fmrank { get; set; }
      [StringValidationAttribute]
      public string torank { get; set; }
      public int numranks { get; set; }
      public bool homewhsefl { get; set; }
      [StringValidationAttribute]
      public string homewhse { get; set; }
      public bool superfl { get; set; }
      [StringValidationAttribute]
      public string icmanlistty { get; set; }
      public bool icmanlistoverfl { get; set; }
      public bool icmassmaintfl { get; set; }
      public bool icswstchgfl { get; set; }
      [StringValidationAttribute]
      public string countryoforigin { get; set; }
      public bool linehitsHidden { get; set; }
      public bool oorderptHidden { get; set; }
      public bool olineptHidden { get; set; }
      public bool whserankHidden { get; set; }
      public bool safetyqtyHidden { get; set; }
      public bool usageHidden { get; set; }
      public bool rsStatusSensitive { get; set; }
      [StringValidationAttribute]
      public string txtBuyerorOperator { get; set; }
      public bool fiBuyerorOperatorSensitive { get; set; }
      public bool cbFrozenReasonSensitive { get; set; }
      public bool cbFromRankHidden { get; set; }
      public bool cbFromRankSensitive { get; set; }
      public bool cbToRankHidden { get; set; }
      public bool cbToRankSensitive { get; set; }
      public bool btnExceptionsHidden { get; set; }
      public bool btnExceptionsSensitive { get; set; }
      [StringValidationAttribute]
      public string exceptlist { get; set; }
      public int recordcountlimit { get; set; }
      public bool morerecords { get; set; }
      [StringValidationAttribute]
      public string paramdata { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Icamusingle BuildIcamusingleFromRow(DataRow row)
      {
         Icamusingle entity = new Icamusingle();
         entity.statustype = row.IsNull("statustype") ? string.Empty : row.Field<string>("statustype");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.whsename = row.IsNull("whsename") ? string.Empty : row.Field<string>("whsename");
         entity.buyeroroperator = row.IsNull("buyeroroperator") ? string.Empty : row.Field<string>("buyeroroperator");
         entity.buyername = row.IsNull("buyername") ? string.Empty : row.Field<string>("buyername");
         entity.frozenreason = row.IsNull("frozenreason") ? string.Empty : row.Field<string>("frozenreason");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.vendorname = row.IsNull("vendorname") ? string.Empty : row.Field<string>("vendorname");
         entity.vendornotesfl = row.IsNull("vendornotesfl") ? string.Empty : row.Field<string>("vendornotesfl");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.productlinedesc = row.IsNull("productlinedesc") ? string.Empty : row.Field<string>("productlinedesc");
         entity.fmprodcat = row.IsNull("fmprodcat") ? string.Empty : row.Field<string>("fmprodcat");
         entity.fromprodcatdesc = row.IsNull("fromprodcatdesc") ? string.Empty : row.Field<string>("fromprodcatdesc");
         entity.toprodcat = row.IsNull("toprodcat") ? string.Empty : row.Field<string>("toprodcat");
         entity.toprodcatdesc = row.IsNull("toprodcatdesc") ? string.Empty : row.Field<string>("toprodcatdesc");
         entity.fmclass = row.IsNull("fmclass") ? 0 : row.Field<int>("fmclass");
         entity.toclass = row.IsNull("toclass") ? 0 : row.Field<int>("toclass");
         entity.fmrank = row.IsNull("fmrank") ? string.Empty : row.Field<string>("fmrank");
         entity.torank = row.IsNull("torank") ? string.Empty : row.Field<string>("torank");
         entity.numranks = row.IsNull("numranks") ? 0 : row.Field<int>("numranks");
         entity.homewhsefl = row.Field<bool>("homewhsefl");
         entity.homewhse = row.IsNull("homewhse") ? string.Empty : row.Field<string>("homewhse");
         entity.superfl = row.Field<bool>("superfl");
         entity.icmanlistty = row.IsNull("icmanlistty") ? string.Empty : row.Field<string>("icmanlistty");
         entity.icmanlistoverfl = row.Field<bool>("icmanlistoverfl");
         entity.icmassmaintfl = row.Field<bool>("icmassmaintfl");
         entity.icswstchgfl = row.Field<bool>("icswstchgfl");
         entity.countryoforigin = row.IsNull("countryoforigin") ? string.Empty : row.Field<string>("countryoforigin");
         entity.linehitsHidden = row.Field<bool>("linehits-hidden");
         entity.oorderptHidden = row.Field<bool>("oorderpt-hidden");
         entity.olineptHidden = row.Field<bool>("olinept-hidden");
         entity.whserankHidden = row.Field<bool>("whserank-hidden");
         entity.safetyqtyHidden = row.Field<bool>("safetyqty-hidden");
         entity.usageHidden = row.Field<bool>("usage-hidden");
         entity.rsStatusSensitive = row.Field<bool>("rsStatus-sensitive");
         entity.txtBuyerorOperator = row.IsNull("txtBuyerorOperator") ? string.Empty : row.Field<string>("txtBuyerorOperator");
         entity.fiBuyerorOperatorSensitive = row.Field<bool>("fiBuyerorOperator-sensitive");
         entity.cbFrozenReasonSensitive = row.Field<bool>("cbFrozenReason-sensitive");
         entity.cbFromRankHidden = row.Field<bool>("cbFromRank-hidden");
         entity.cbFromRankSensitive = row.Field<bool>("cbFromRank-sensitive");
         entity.cbToRankHidden = row.Field<bool>("cbToRank-hidden");
         entity.cbToRankSensitive = row.Field<bool>("cbToRank-sensitive");
         entity.btnExceptionsHidden = row.Field<bool>("btnExceptions-hidden");
         entity.btnExceptionsSensitive = row.Field<bool>("btnExceptions-sensitive");
         entity.exceptlist = row.IsNull("exceptlist") ? string.Empty : row.Field<string>("exceptlist");
         entity.recordcountlimit = row.IsNull("recordcountlimit") ? 0 : row.Field<int>("recordcountlimit");
         entity.morerecords = row.Field<bool>("morerecords");
         entity.paramdata = row.IsNull("paramdata") ? string.Empty : row.Field<string>("paramdata");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcamusingle(ref DataRow row, Icamusingle entity)
      {
         row.SetField("statustype", entity.statustype);
         row.SetField("whse", entity.whse);
         row.SetField("whsename", entity.whsename);
         row.SetField("buyeroroperator", entity.buyeroroperator);
         row.SetField("buyername", entity.buyername);
         row.SetField("frozenreason", entity.frozenreason);
         row.SetField("vendno", entity.vendno);
         row.SetField("vendorname", entity.vendorname);
         row.SetField("vendornotesfl", entity.vendornotesfl);
         row.SetField("prodline", entity.prodline);
         row.SetField("productlinedesc", entity.productlinedesc);
         row.SetField("fmprodcat", entity.fmprodcat);
         row.SetField("fromprodcatdesc", entity.fromprodcatdesc);
         row.SetField("toprodcat", entity.toprodcat);
         row.SetField("toprodcatdesc", entity.toprodcatdesc);
         row.SetField("fmclass", entity.fmclass);
         row.SetField("toclass", entity.toclass);
         row.SetField("fmrank", entity.fmrank);
         row.SetField("torank", entity.torank);
         row.SetField("numranks", entity.numranks);
         row.SetField("homewhsefl", entity.homewhsefl);
         row.SetField("homewhse", entity.homewhse);
         row.SetField("superfl", entity.superfl);
         row.SetField("icmanlistty", entity.icmanlistty);
         row.SetField("icmanlistoverfl", entity.icmanlistoverfl);
         row.SetField("icmassmaintfl", entity.icmassmaintfl);
         row.SetField("icswstchgfl", entity.icswstchgfl);
         row.SetField("countryoforigin", entity.countryoforigin);
         row.SetField("linehits-hidden", entity.linehitsHidden);
         row.SetField("oorderpt-hidden", entity.oorderptHidden);
         row.SetField("olinept-hidden", entity.olineptHidden);
         row.SetField("whserank-hidden", entity.whserankHidden);
         row.SetField("safetyqty-hidden", entity.safetyqtyHidden);
         row.SetField("usage-hidden", entity.usageHidden);
         row.SetField("rsStatus-sensitive", entity.rsStatusSensitive);
         row.SetField("txtBuyerorOperator", entity.txtBuyerorOperator);
         row.SetField("fiBuyerorOperator-sensitive", entity.fiBuyerorOperatorSensitive);
         row.SetField("cbFrozenReason-sensitive", entity.cbFrozenReasonSensitive);
         row.SetField("cbFromRank-hidden", entity.cbFromRankHidden);
         row.SetField("cbFromRank-sensitive", entity.cbFromRankSensitive);
         row.SetField("cbToRank-hidden", entity.cbToRankHidden);
         row.SetField("cbToRank-sensitive", entity.cbToRankSensitive);
         row.SetField("btnExceptions-hidden", entity.btnExceptionsHidden);
         row.SetField("btnExceptions-sensitive", entity.btnExceptionsSensitive);
         row.SetField("exceptlist", entity.exceptlist);
         row.SetField("recordcountlimit", entity.recordcountlimit);
         row.SetField("morerecords", entity.morerecords);
         row.SetField("paramdata", entity.paramdata);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
