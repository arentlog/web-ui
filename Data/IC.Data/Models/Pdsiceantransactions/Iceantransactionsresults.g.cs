//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.IC.Data.Models.Pdsiceantransactions
{
   [ModelName("Infor.Sxe.IC.Data.Models.Pdsiceantransactions.Iceantransactionsresults")]
   public partial class Iceantransactionsresults : ModelBase
   {
      [StringValidationAttribute]
      public string prod { get; set; }
      [StringValidationAttribute]
      public string prodnote { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      [StringValidationAttribute]
      public string prodcat { get; set; }
      [StringValidationAttribute]
      public string order { get; set; }
      public decimal vendno { get; set; }
      public int jrnlno { get; set; }
      [StringValidationAttribute]
      public string disptypecd { get; set; }
      public DateTime? opendt { get; set; }
      public DateTime? closedt { get; set; }
      [StringValidationAttribute]
      public string module { get; set; }
      [StringValidationAttribute]
      public string closety { get; set; }
      public bool activefl { get; set; }
      [StringValidationAttribute]
      public string binloc1 { get; set; }
      [StringValidationAttribute]
      public string binloc2 { get; set; }
      public bool binlocenabled { get; set; }
      public decimal tiedqty { get; set; }
      public decimal tiedval { get; set; }
      public decimal availqty { get; set; }
      public decimal availval { get; set; }
      public bool brokentiefl { get; set; }
      public int seqno { get; set; }
      [StringValidationAttribute]
      public string icenhRowid { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Iceantransactionsresults BuildIceantransactionsresultsFromRow(DataRow row)
      {
         Iceantransactionsresults entity = new Iceantransactionsresults();
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.prodnote = row.IsNull("prodnote") ? string.Empty : row.Field<string>("prodnote");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.order = row.IsNull("order") ? string.Empty : row.Field<string>("order");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.jrnlno = row.IsNull("jrnlno") ? 0 : row.Field<int>("jrnlno");
         entity.disptypecd = row.IsNull("disptypecd") ? string.Empty : row.Field<string>("disptypecd");
         entity.opendt = row.Field<DateTime?>("opendt");
         entity.closedt = row.Field<DateTime?>("closedt");
         entity.module = row.IsNull("module") ? string.Empty : row.Field<string>("module");
         entity.closety = row.IsNull("closety") ? string.Empty : row.Field<string>("closety");
         entity.activefl = row.Field<bool>("activefl");
         entity.binloc1 = row.IsNull("binloc1") ? string.Empty : row.Field<string>("binloc1");
         entity.binloc2 = row.IsNull("binloc2") ? string.Empty : row.Field<string>("binloc2");
         entity.binlocenabled = row.Field<bool>("binlocenabled");
         entity.tiedqty = row.IsNull("tiedqty") ? decimal.Zero : row.Field<decimal>("tiedqty");
         entity.tiedval = row.IsNull("tiedval") ? decimal.Zero : row.Field<decimal>("tiedval");
         entity.availqty = row.IsNull("availqty") ? decimal.Zero : row.Field<decimal>("availqty");
         entity.availval = row.IsNull("availval") ? decimal.Zero : row.Field<decimal>("availval");
         entity.brokentiefl = row.Field<bool>("brokentiefl");
         entity.seqno = row.IsNull("seqno") ? 0 : row.Field<int>("seqno");
         entity.icenhRowid = row.Field<byte[]>("icenh-rowid").ToStringEncoded();
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIceantransactionsresults(ref DataRow row, Iceantransactionsresults entity)
      {
         row.SetField("prod", entity.prod);
         row.SetField("prodnote", entity.prodnote);
         row.SetField("whse", entity.whse);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("order", entity.order);
         row.SetField("vendno", entity.vendno);
         row.SetField("jrnlno", entity.jrnlno);
         row.SetField("disptypecd", entity.disptypecd);
         row.SetField("opendt", entity.opendt);
         row.SetField("closedt", entity.closedt);
         row.SetField("module", entity.module);
         row.SetField("closety", entity.closety);
         row.SetField("activefl", entity.activefl);
         row.SetField("binloc1", entity.binloc1);
         row.SetField("binloc2", entity.binloc2);
         row.SetField("binlocenabled", entity.binlocenabled);
         row.SetField("tiedqty", entity.tiedqty);
         row.SetField("tiedval", entity.tiedval);
         row.SetField("availqty", entity.availqty);
         row.SetField("availval", entity.availval);
         row.SetField("brokentiefl", entity.brokentiefl);
         row.SetField("seqno", entity.seqno);
         row.SetField("icenh-rowid", entity.icenhRowid.ToByteArray());
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
