//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.IC.Data.Models.Pdsicamuexception
{
   [ModelName("Infor.Sxe.IC.Data.Models.Pdsicamuexception.Icamuexceptionsingle")]
   public partial class Icamuexceptionsingle : ModelBase
   {
      [StringValidationAttribute]
      public string exctype { get; set; }
      [StringValidationAttribute]
      public string excmsg { get; set; }
      public int calcop { get; set; }
      public int calclp { get; set; }
      public int linehits { get; set; }
      public decimal calcDiff { get; set; }
      public decimal calcusage { get; set; }
      public int fivehiop { get; set; }
      public int thresholdop { get; set; }
      public int mergeop { get; set; }
      public int mergelp { get; set; }
      public int mthusage { get; set; }
      [StringValidationAttribute]
      public string usagemethod { get; set; }
      public decimal usage { get; set; }
      public decimal safetyqty { get; set; }
      public int minhits { get; set; }
      [StringValidationAttribute]
      public string minhitslev { get; set; }
      public decimal maxdolldiff { get; set; }
      [StringValidationAttribute]
      public string maxdolllev { get; set; }
      public bool transferfl { get; set; }
      [StringValidationAttribute]
      public string transferlev { get; set; }
      [StringValidationAttribute]
      public string txtlabelop { get; set; }
      [StringValidationAttribute]
      public string txtlabellp { get; set; }
      public int asqop { get; set; }
      public decimal calcqty { get; set; }
      public decimal highsale1 { get; set; }
      public decimal highsale2 { get; set; }
      public decimal highsale3 { get; set; }
      public decimal highsale4 { get; set; }
      public decimal highsale5 { get; set; }
      [StringValidationAttribute]
      public string highchar1 { get; set; }
      [StringValidationAttribute]
      public string highchar2 { get; set; }
      [StringValidationAttribute]
      public string highchar3 { get; set; }
      [StringValidationAttribute]
      public string highchar4 { get; set; }
      [StringValidationAttribute]
      public string highchar5 { get; set; }
      public DateTime? highsaledt1 { get; set; }
      public DateTime? highsaledt2 { get; set; }
      public DateTime? highsaledt3 { get; set; }
      public DateTime? highsaledt4 { get; set; }
      public DateTime? highsaledt5 { get; set; }
      [StringValidationAttribute]
      public string highsaleno1 { get; set; }
      [StringValidationAttribute]
      public string highsaleno2 { get; set; }
      [StringValidationAttribute]
      public string highsaleno3 { get; set; }
      [StringValidationAttribute]
      public string highsaleno4 { get; set; }
      [StringValidationAttribute]
      public string highsaleno5 { get; set; }
      [StringValidationAttribute]
      public string txtlabel { get; set; }
      public int minthreshold { get; set; }
      public DateTime? minthreshexpdt { get; set; }
      [StringValidationAttribute]
      public string threshrefer { get; set; }
      [StringValidationAttribute]
      public string currsymbol { get; set; }
      [StringValidationAttribute]
      public string frozentype { get; set; }
      [StringValidationAttribute]
      public string frozenmmyy { get; set; }
      public int frozenmos { get; set; }
      [StringValidationAttribute]
      public string statustype { get; set; }
      public int orderpoint { get; set; }
      public decimal tminhits { get; set; }
      public int tminmonths { get; set; }
      [StringValidationAttribute]
      public string recordlevel { get; set; }
      [StringValidationAttribute]
      public string frozenexpdt { get; set; }
      public int usagerate { get; set; }
      public int orderpt { get; set; }
      public int oorderpt { get; set; }
      public int linept { get; set; }
      public int olinept { get; set; }
      public decimal newusage { get; set; }
      public decimal avgusage { get; set; }
      public decimal priorusage { get; set; }
      public decimal usagemult { get; set; }
      [StringValidationAttribute]
      public string usagemultlev { get; set; }
      public int excusemths { get; set; }
      [StringValidationAttribute]
      public string excusemthslev { get; set; }
      public decimal annualusage { get; set; }
      public decimal prodcost { get; set; }
      public decimal orderqty { get; set; }
      public int lowusemax { get; set; }
      public int leadtmavg { get; set; }
      [StringValidationAttribute]
      public string frozenltty { get; set; }
      [StringValidationAttribute]
      public string whserank { get; set; }
      public decimal netavail { get; set; }
      public decimal porcptlt { get; set; }
      public decimal ltexcminpct { get; set; }
      public decimal rcptltavg { get; set; }
      [StringValidationAttribute]
      public string ltexcminpctlev { get; set; }
      [StringValidationAttribute]
      public string ltexcmaxpctlev { get; set; }
      public decimal ltexcmaxpct { get; set; }
      [StringValidationAttribute]
      public string icswrank { get; set; }
      public int safetymajority { get; set; }
      [StringValidationAttribute]
      public string safetymajoritylev { get; set; }
      public int safetyrcpts { get; set; }
      [StringValidationAttribute]
      public string safetyrcptslev { get; set; }
      public decimal minsafety { get; set; }
      [StringValidationAttribute]
      public string minsafetylev { get; set; }
      public int safetymonths { get; set; }
      [StringValidationAttribute]
      public string safetymonthslev { get; set; }
      public decimal maxsafety { get; set; }
      [StringValidationAttribute]
      public string maxsafetylev { get; set; }
      public decimal seastrendmax { get; set; }
      public int seastrendlyu { get; set; }
      public decimal calcusagelyr { get; set; }
      public decimal seastrendmin { get; set; }
      public int seastrendtyu { get; set; }
      public decimal calcusagetyr { get; set; }
      public DateTime? seastrendexpdt { get; set; }
      public decimal calctrendpct { get; set; }
      public decimal usedtrendpct { get; set; }
      public bool fiCalcOPVisible { get; set; }
      public bool fiCalcLPVisible { get; set; }
      public bool fiLineHitsVisible { get; set; }
      public bool fiCalcDiffVisible { get; set; }
      public bool fiCalcUsageVisible { get; set; }
      public bool fi5HiOPVisible { get; set; }
      public bool fiThresholdOPVisible { get; set; }
      public bool fiMergeOPVisible { get; set; }
      public bool fiMergeLPVisible { get; set; }
      public bool fiMthUsageVisible { get; set; }
      public bool fiUsageMethodVisible { get; set; }
      public bool fiUsageVisible { get; set; }
      public bool fiSafetyQtyVisible { get; set; }
      public bool fiMinHitsVisible { get; set; }
      public bool fiMinHitsLevVisible { get; set; }
      public bool fiMaxDollDiffVisible { get; set; }
      public bool fiMaxDollLevVisible { get; set; }
      public bool fiTransferFlVisible { get; set; }
      public bool fiTransferLevVisible { get; set; }
      public bool txtlabelopVisible { get; set; }
      public bool txtlabellpVisible { get; set; }
      public bool fiASQOPVisible { get; set; }
      public bool fiCalcQtyVisible { get; set; }
      public bool fiHighSale1Visible { get; set; }
      public bool fiHighSale2Visible { get; set; }
      public bool fiHighSale3Visible { get; set; }
      public bool fiHighSale4Visible { get; set; }
      public bool fiHighSale5Visible { get; set; }
      public bool fiHighChar1Visible { get; set; }
      public bool fiHighChar2Visible { get; set; }
      public bool fiHighChar3Visible { get; set; }
      public bool fiHighChar4Visible { get; set; }
      public bool fiHighChar5Visible { get; set; }
      public bool fiHighSaleDt1Visible { get; set; }
      public bool fiHighSaleDt2Visible { get; set; }
      public bool fiHighSaleDt3Visible { get; set; }
      public bool fiHighSaleDt4Visible { get; set; }
      public bool fiHighSaleDt5Visible { get; set; }
      public bool fiHighSaleNo1Visible { get; set; }
      public bool fiHighSaleNo2Visible { get; set; }
      public bool fiHighSaleNo3Visible { get; set; }
      public bool fiHighSaleNo4Visible { get; set; }
      public bool fiHighSaleNo5Visible { get; set; }
      public bool txtlabelVisible { get; set; }
      public bool fiMinThresholdVisible { get; set; }
      public bool fiMinThreshExpDtVisible { get; set; }
      public bool fiThreshReferVisible { get; set; }
      public bool fiFrozenTypeVisible { get; set; }
      public bool fiFrozenMMYYVisible { get; set; }
      public bool fiFrozenMosVisible { get; set; }
      public bool fiStatusTypeVisible { get; set; }
      public bool fiOrderPointVisible { get; set; }
      public bool fiTMinHitsVisible { get; set; }
      public bool fiTMinMonthsVisible { get; set; }
      public bool fiRecordLevelVisible { get; set; }
      public bool fiFrozenExpDtVisible { get; set; }
      public bool fiUsageRateVisible { get; set; }
      public bool fiOrderPtVisible { get; set; }
      public bool fiOOrderPtVisible { get; set; }
      public bool fiLinePtVisible { get; set; }
      public bool fiOLinePtVisible { get; set; }
      public bool fiNewUsageVisible { get; set; }
      public bool fiAvgUsageVisible { get; set; }
      public bool fiPriorUsageVisible { get; set; }
      public bool fiUsageMultVisible { get; set; }
      public bool fiUsageMultLevVisible { get; set; }
      public bool fiExcUseMthsVisible { get; set; }
      public bool fiExcUseMthsLevVisible { get; set; }
      public bool fiAnnualUsageVisible { get; set; }
      public bool fiProdCostVisible { get; set; }
      public bool fiOrderQtyVisible { get; set; }
      public bool fiLowUseMaxVisible { get; set; }
      public bool fiLeadTmAvgVisible { get; set; }
      public bool fiFrozenLTTyVisible { get; set; }
      public bool fiWhseRankVisible { get; set; }
      public bool fiNetAvailVisible { get; set; }
      public bool fiPORcptLTVisible { get; set; }
      public bool fiLTExcMinPctVisible { get; set; }
      public bool fiLTExcMinPctLevVisible { get; set; }
      public bool fiRcptLTAvgVisible { get; set; }
      public bool fiLTExcMaxPctLevVisible { get; set; }
      public bool fiLTExcMaxPctVisible { get; set; }
      public bool fiICSWRankVisible { get; set; }
      public bool fiSafetyMajorityVisible { get; set; }
      public bool fiSafetyMajorityLevVisible { get; set; }
      public bool fiSafetyRcptsVisible { get; set; }
      public bool fiSafetyRcptsLevVisible { get; set; }
      public bool fiMinSafetyVisible { get; set; }
      public bool fiMinSafetyLevVisible { get; set; }
      public bool fiSafetyMonthsVisible { get; set; }
      public bool fiSafetyMonthsLevVisible { get; set; }
      public bool fiMaxSafetyVisible { get; set; }
      public bool fiMaxSafetyLevVisible { get; set; }
      public bool fiSeasTrendMaxVisible { get; set; }
      public bool fiSeasTrendLYUVisible { get; set; }
      public bool fiCalcUsageLYrVisible { get; set; }
      public bool fiSeasTrendMinVisible { get; set; }
      public bool fiSeasTrendTYUVisible { get; set; }
      public bool fiCalcUsageTYrVisible { get; set; }
      public bool fiSeasTrendExpDtVisible { get; set; }
      public bool fiCalcTrendPctVisible { get; set; }
      public bool fiUsedTrendPctVisible { get; set; }
      public bool bicamuexcptusageVisible { get; set; }
      public bool bicamuexcptrcptsVisible { get; set; }
      [StringValidationAttribute]
      public string fiCalcDiffLabel { get; set; }
      [StringValidationAttribute]
      public string fiMaxDollDiffLabel { get; set; }
      [StringValidationAttribute]
      public string orderlist { get; set; }
      [StringValidationAttribute]
      public string linenolist { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Icamuexceptionsingle BuildIcamuexceptionsingleFromRow(DataRow row)
      {
         Icamuexceptionsingle entity = new Icamuexceptionsingle();
         entity.exctype = row.IsNull("exctype") ? string.Empty : row.Field<string>("exctype");
         entity.excmsg = row.IsNull("excmsg") ? string.Empty : row.Field<string>("excmsg");
         entity.calcop = row.IsNull("calcop") ? 0 : row.Field<int>("calcop");
         entity.calclp = row.IsNull("calclp") ? 0 : row.Field<int>("calclp");
         entity.linehits = row.IsNull("linehits") ? 0 : row.Field<int>("linehits");
         entity.calcDiff = row.IsNull("calc$diff") ? decimal.Zero : row.Field<decimal>("calc$diff");
         entity.calcusage = row.IsNull("calcusage") ? decimal.Zero : row.Field<decimal>("calcusage");
         entity.fivehiop = row.IsNull("fivehiop") ? 0 : row.Field<int>("fivehiop");
         entity.thresholdop = row.IsNull("thresholdop") ? 0 : row.Field<int>("thresholdop");
         entity.mergeop = row.IsNull("mergeop") ? 0 : row.Field<int>("mergeop");
         entity.mergelp = row.IsNull("mergelp") ? 0 : row.Field<int>("mergelp");
         entity.mthusage = row.IsNull("mthusage") ? 0 : row.Field<int>("mthusage");
         entity.usagemethod = row.IsNull("usagemethod") ? string.Empty : row.Field<string>("usagemethod");
         entity.usage = row.IsNull("usage") ? decimal.Zero : row.Field<decimal>("usage");
         entity.safetyqty = row.IsNull("safetyqty") ? decimal.Zero : row.Field<decimal>("safetyqty");
         entity.minhits = row.IsNull("minhits") ? 0 : row.Field<int>("minhits");
         entity.minhitslev = row.IsNull("minhitslev") ? string.Empty : row.Field<string>("minhitslev");
         entity.maxdolldiff = row.IsNull("maxdolldiff") ? decimal.Zero : row.Field<decimal>("maxdolldiff");
         entity.maxdolllev = row.IsNull("maxdolllev") ? string.Empty : row.Field<string>("maxdolllev");
         entity.transferfl = row.Field<bool>("transferfl");
         entity.transferlev = row.IsNull("transferlev") ? string.Empty : row.Field<string>("transferlev");
         entity.txtlabelop = row.IsNull("txtlabelop") ? string.Empty : row.Field<string>("txtlabelop");
         entity.txtlabellp = row.IsNull("txtlabellp") ? string.Empty : row.Field<string>("txtlabellp");
         entity.asqop = row.IsNull("asqop") ? 0 : row.Field<int>("asqop");
         entity.calcqty = row.IsNull("calcqty") ? decimal.Zero : row.Field<decimal>("calcqty");
         entity.highsale1 = row.IsNull("highsale1") ? decimal.Zero : row.Field<decimal>("highsale1");
         entity.highsale2 = row.IsNull("highsale2") ? decimal.Zero : row.Field<decimal>("highsale2");
         entity.highsale3 = row.IsNull("highsale3") ? decimal.Zero : row.Field<decimal>("highsale3");
         entity.highsale4 = row.IsNull("highsale4") ? decimal.Zero : row.Field<decimal>("highsale4");
         entity.highsale5 = row.IsNull("highsale5") ? decimal.Zero : row.Field<decimal>("highsale5");
         entity.highchar1 = row.IsNull("highchar1") ? string.Empty : row.Field<string>("highchar1");
         entity.highchar2 = row.IsNull("highchar2") ? string.Empty : row.Field<string>("highchar2");
         entity.highchar3 = row.IsNull("highchar3") ? string.Empty : row.Field<string>("highchar3");
         entity.highchar4 = row.IsNull("highchar4") ? string.Empty : row.Field<string>("highchar4");
         entity.highchar5 = row.IsNull("highchar5") ? string.Empty : row.Field<string>("highchar5");
         entity.highsaledt1 = row.Field<DateTime?>("highsaledt1");
         entity.highsaledt2 = row.Field<DateTime?>("highsaledt2");
         entity.highsaledt3 = row.Field<DateTime?>("highsaledt3");
         entity.highsaledt4 = row.Field<DateTime?>("highsaledt4");
         entity.highsaledt5 = row.Field<DateTime?>("highsaledt5");
         entity.highsaleno1 = row.IsNull("highsaleno1") ? string.Empty : row.Field<string>("highsaleno1");
         entity.highsaleno2 = row.IsNull("highsaleno2") ? string.Empty : row.Field<string>("highsaleno2");
         entity.highsaleno3 = row.IsNull("highsaleno3") ? string.Empty : row.Field<string>("highsaleno3");
         entity.highsaleno4 = row.IsNull("highsaleno4") ? string.Empty : row.Field<string>("highsaleno4");
         entity.highsaleno5 = row.IsNull("highsaleno5") ? string.Empty : row.Field<string>("highsaleno5");
         entity.txtlabel = row.IsNull("txtlabel") ? string.Empty : row.Field<string>("txtlabel");
         entity.minthreshold = row.IsNull("minthreshold") ? 0 : row.Field<int>("minthreshold");
         entity.minthreshexpdt = row.Field<DateTime?>("minthreshexpdt");
         entity.threshrefer = row.IsNull("threshrefer") ? string.Empty : row.Field<string>("threshrefer");
         entity.currsymbol = row.IsNull("currsymbol") ? string.Empty : row.Field<string>("currsymbol");
         entity.frozentype = row.IsNull("frozentype") ? string.Empty : row.Field<string>("frozentype");
         entity.frozenmmyy = row.IsNull("frozenmmyy") ? string.Empty : row.Field<string>("frozenmmyy");
         entity.frozenmos = row.IsNull("frozenmos") ? 0 : row.Field<int>("frozenmos");
         entity.statustype = row.IsNull("statustype") ? string.Empty : row.Field<string>("statustype");
         entity.orderpoint = row.IsNull("orderpoint") ? 0 : row.Field<int>("orderpoint");
         entity.tminhits = row.IsNull("tminhits") ? decimal.Zero : row.Field<decimal>("tminhits");
         entity.tminmonths = row.IsNull("tminmonths") ? 0 : row.Field<int>("tminmonths");
         entity.recordlevel = row.IsNull("recordlevel") ? string.Empty : row.Field<string>("recordlevel");
         entity.frozenexpdt = row.IsNull("frozenexpdt") ? string.Empty : row.Field<string>("frozenexpdt");
         entity.usagerate = row.IsNull("usagerate") ? 0 : row.Field<int>("usagerate");
         entity.orderpt = row.IsNull("orderpt") ? 0 : row.Field<int>("orderpt");
         entity.oorderpt = row.IsNull("oorderpt") ? 0 : row.Field<int>("oorderpt");
         entity.linept = row.IsNull("linept") ? 0 : row.Field<int>("linept");
         entity.olinept = row.IsNull("olinept") ? 0 : row.Field<int>("olinept");
         entity.newusage = row.IsNull("newusage") ? decimal.Zero : row.Field<decimal>("newusage");
         entity.avgusage = row.IsNull("avgusage") ? decimal.Zero : row.Field<decimal>("avgusage");
         entity.priorusage = row.IsNull("priorusage") ? decimal.Zero : row.Field<decimal>("priorusage");
         entity.usagemult = row.IsNull("usagemult") ? decimal.Zero : row.Field<decimal>("usagemult");
         entity.usagemultlev = row.IsNull("usagemultlev") ? string.Empty : row.Field<string>("usagemultlev");
         entity.excusemths = row.IsNull("excusemths") ? 0 : row.Field<int>("excusemths");
         entity.excusemthslev = row.IsNull("excusemthslev") ? string.Empty : row.Field<string>("excusemthslev");
         entity.annualusage = row.IsNull("annualusage") ? decimal.Zero : row.Field<decimal>("annualusage");
         entity.prodcost = row.IsNull("prodcost") ? decimal.Zero : row.Field<decimal>("prodcost");
         entity.orderqty = row.IsNull("orderqty") ? decimal.Zero : row.Field<decimal>("orderqty");
         entity.lowusemax = row.IsNull("lowusemax") ? 0 : row.Field<int>("lowusemax");
         entity.leadtmavg = row.IsNull("leadtmavg") ? 0 : row.Field<int>("leadtmavg");
         entity.frozenltty = row.IsNull("frozenltty") ? string.Empty : row.Field<string>("frozenltty");
         entity.whserank = row.IsNull("whserank") ? string.Empty : row.Field<string>("whserank");
         entity.netavail = row.IsNull("netavail") ? decimal.Zero : row.Field<decimal>("netavail");
         entity.porcptlt = row.IsNull("porcptlt") ? decimal.Zero : row.Field<decimal>("porcptlt");
         entity.ltexcminpct = row.IsNull("ltexcminpct") ? decimal.Zero : row.Field<decimal>("ltexcminpct");
         entity.rcptltavg = row.IsNull("rcptltavg") ? decimal.Zero : row.Field<decimal>("rcptltavg");
         entity.ltexcminpctlev = row.IsNull("ltexcminpctlev") ? string.Empty : row.Field<string>("ltexcminpctlev");
         entity.ltexcmaxpctlev = row.IsNull("ltexcmaxpctlev") ? string.Empty : row.Field<string>("ltexcmaxpctlev");
         entity.ltexcmaxpct = row.IsNull("ltexcmaxpct") ? decimal.Zero : row.Field<decimal>("ltexcmaxpct");
         entity.icswrank = row.IsNull("icswrank") ? string.Empty : row.Field<string>("icswrank");
         entity.safetymajority = row.IsNull("safetymajority") ? 0 : row.Field<int>("safetymajority");
         entity.safetymajoritylev = row.IsNull("safetymajoritylev") ? string.Empty : row.Field<string>("safetymajoritylev");
         entity.safetyrcpts = row.IsNull("safetyrcpts") ? 0 : row.Field<int>("safetyrcpts");
         entity.safetyrcptslev = row.IsNull("safetyrcptslev") ? string.Empty : row.Field<string>("safetyrcptslev");
         entity.minsafety = row.IsNull("minsafety") ? decimal.Zero : row.Field<decimal>("minsafety");
         entity.minsafetylev = row.IsNull("minsafetylev") ? string.Empty : row.Field<string>("minsafetylev");
         entity.safetymonths = row.IsNull("safetymonths") ? 0 : row.Field<int>("safetymonths");
         entity.safetymonthslev = row.IsNull("safetymonthslev") ? string.Empty : row.Field<string>("safetymonthslev");
         entity.maxsafety = row.IsNull("maxsafety") ? decimal.Zero : row.Field<decimal>("maxsafety");
         entity.maxsafetylev = row.IsNull("maxsafetylev") ? string.Empty : row.Field<string>("maxsafetylev");
         entity.seastrendmax = row.IsNull("seastrendmax") ? decimal.Zero : row.Field<decimal>("seastrendmax");
         entity.seastrendlyu = row.IsNull("seastrendlyu") ? 0 : row.Field<int>("seastrendlyu");
         entity.calcusagelyr = row.IsNull("calcusagelyr") ? decimal.Zero : row.Field<decimal>("calcusagelyr");
         entity.seastrendmin = row.IsNull("seastrendmin") ? decimal.Zero : row.Field<decimal>("seastrendmin");
         entity.seastrendtyu = row.IsNull("seastrendtyu") ? 0 : row.Field<int>("seastrendtyu");
         entity.calcusagetyr = row.IsNull("calcusagetyr") ? decimal.Zero : row.Field<decimal>("calcusagetyr");
         entity.seastrendexpdt = row.Field<DateTime?>("seastrendexpdt");
         entity.calctrendpct = row.IsNull("calctrendpct") ? decimal.Zero : row.Field<decimal>("calctrendpct");
         entity.usedtrendpct = row.IsNull("usedtrendpct") ? decimal.Zero : row.Field<decimal>("usedtrendpct");
         entity.fiCalcOPVisible = row.Field<bool>("fiCalcOP-visible");
         entity.fiCalcLPVisible = row.Field<bool>("fiCalcLP-visible");
         entity.fiLineHitsVisible = row.Field<bool>("fiLineHits-visible");
         entity.fiCalcDiffVisible = row.Field<bool>("fiCalc$Diff-visible");
         entity.fiCalcUsageVisible = row.Field<bool>("fiCalcUsage-visible");
         entity.fi5HiOPVisible = row.Field<bool>("fi5HiOP-visible");
         entity.fiThresholdOPVisible = row.Field<bool>("fiThresholdOP-visible");
         entity.fiMergeOPVisible = row.Field<bool>("fiMergeOP-visible");
         entity.fiMergeLPVisible = row.Field<bool>("fiMergeLP-visible");
         entity.fiMthUsageVisible = row.Field<bool>("fiMthUsage-visible");
         entity.fiUsageMethodVisible = row.Field<bool>("fiUsageMethod-visible");
         entity.fiUsageVisible = row.Field<bool>("fiUsage-visible");
         entity.fiSafetyQtyVisible = row.Field<bool>("fiSafetyQty-visible");
         entity.fiMinHitsVisible = row.Field<bool>("fiMinHits-visible");
         entity.fiMinHitsLevVisible = row.Field<bool>("fiMinHitsLev-visible");
         entity.fiMaxDollDiffVisible = row.Field<bool>("fiMaxDollDiff-visible");
         entity.fiMaxDollLevVisible = row.Field<bool>("fiMaxDollLev-visible");
         entity.fiTransferFlVisible = row.Field<bool>("fiTransferFl-visible");
         entity.fiTransferLevVisible = row.Field<bool>("fiTransferLev-visible");
         entity.txtlabelopVisible = row.Field<bool>("txtlabelop-visible");
         entity.txtlabellpVisible = row.Field<bool>("txtlabellp-visible");
         entity.fiASQOPVisible = row.Field<bool>("fiASQOP-visible");
         entity.fiCalcQtyVisible = row.Field<bool>("fiCalcQty-visible");
         entity.fiHighSale1Visible = row.Field<bool>("fiHighSale1-visible");
         entity.fiHighSale2Visible = row.Field<bool>("fiHighSale2-visible");
         entity.fiHighSale3Visible = row.Field<bool>("fiHighSale3-visible");
         entity.fiHighSale4Visible = row.Field<bool>("fiHighSale4-visible");
         entity.fiHighSale5Visible = row.Field<bool>("fiHighSale5-visible");
         entity.fiHighChar1Visible = row.Field<bool>("fiHighChar1-visible");
         entity.fiHighChar2Visible = row.Field<bool>("fiHighChar2-visible");
         entity.fiHighChar3Visible = row.Field<bool>("fiHighChar3-visible");
         entity.fiHighChar4Visible = row.Field<bool>("fiHighChar4-visible");
         entity.fiHighChar5Visible = row.Field<bool>("fiHighChar5-visible");
         entity.fiHighSaleDt1Visible = row.Field<bool>("fiHighSaleDt1-visible");
         entity.fiHighSaleDt2Visible = row.Field<bool>("fiHighSaleDt2-visible");
         entity.fiHighSaleDt3Visible = row.Field<bool>("fiHighSaleDt3-visible");
         entity.fiHighSaleDt4Visible = row.Field<bool>("fiHighSaleDt4-visible");
         entity.fiHighSaleDt5Visible = row.Field<bool>("fiHighSaleDt5-visible");
         entity.fiHighSaleNo1Visible = row.Field<bool>("fiHighSaleNo1-visible");
         entity.fiHighSaleNo2Visible = row.Field<bool>("fiHighSaleNo2-visible");
         entity.fiHighSaleNo3Visible = row.Field<bool>("fiHighSaleNo3-visible");
         entity.fiHighSaleNo4Visible = row.Field<bool>("fiHighSaleNo4-visible");
         entity.fiHighSaleNo5Visible = row.Field<bool>("fiHighSaleNo5-visible");
         entity.txtlabelVisible = row.Field<bool>("txtlabel-visible");
         entity.fiMinThresholdVisible = row.Field<bool>("fiMinThreshold-visible");
         entity.fiMinThreshExpDtVisible = row.Field<bool>("fiMinThreshExpDt-visible");
         entity.fiThreshReferVisible = row.Field<bool>("fiThreshRefer-visible");
         entity.fiFrozenTypeVisible = row.Field<bool>("fiFrozenType-visible");
         entity.fiFrozenMMYYVisible = row.Field<bool>("fiFrozenMMYY-visible");
         entity.fiFrozenMosVisible = row.Field<bool>("fiFrozenMos-visible");
         entity.fiStatusTypeVisible = row.Field<bool>("fiStatusType-visible");
         entity.fiOrderPointVisible = row.Field<bool>("fiOrderPoint-visible");
         entity.fiTMinHitsVisible = row.Field<bool>("fiTMinHits-visible");
         entity.fiTMinMonthsVisible = row.Field<bool>("fiTMinMonths-visible");
         entity.fiRecordLevelVisible = row.Field<bool>("fiRecordLevel-visible");
         entity.fiFrozenExpDtVisible = row.Field<bool>("fiFrozenExpDt-visible");
         entity.fiUsageRateVisible = row.Field<bool>("fiUsageRate-visible");
         entity.fiOrderPtVisible = row.Field<bool>("fiOrderPt-visible");
         entity.fiOOrderPtVisible = row.Field<bool>("fiOOrderPt-visible");
         entity.fiLinePtVisible = row.Field<bool>("fiLinePt-visible");
         entity.fiOLinePtVisible = row.Field<bool>("fiOLinePt-visible");
         entity.fiNewUsageVisible = row.Field<bool>("fiNewUsage-visible");
         entity.fiAvgUsageVisible = row.Field<bool>("fiAvgUsage-visible");
         entity.fiPriorUsageVisible = row.Field<bool>("fiPriorUsage-visible");
         entity.fiUsageMultVisible = row.Field<bool>("fiUsageMult-visible");
         entity.fiUsageMultLevVisible = row.Field<bool>("fiUsageMultLev-visible");
         entity.fiExcUseMthsVisible = row.Field<bool>("fiExcUseMths-visible");
         entity.fiExcUseMthsLevVisible = row.Field<bool>("fiExcUseMthsLev-visible");
         entity.fiAnnualUsageVisible = row.Field<bool>("fiAnnualUsage-visible");
         entity.fiProdCostVisible = row.Field<bool>("fiProdCost-visible");
         entity.fiOrderQtyVisible = row.Field<bool>("fiOrderQty-visible");
         entity.fiLowUseMaxVisible = row.Field<bool>("fiLowUseMax-visible");
         entity.fiLeadTmAvgVisible = row.Field<bool>("fiLeadTmAvg-visible");
         entity.fiFrozenLTTyVisible = row.Field<bool>("fiFrozenLTTy-visible");
         entity.fiWhseRankVisible = row.Field<bool>("fiWhseRank-visible");
         entity.fiNetAvailVisible = row.Field<bool>("fiNetAvail-visible");
         entity.fiPORcptLTVisible = row.Field<bool>("fiPORcptLT-visible");
         entity.fiLTExcMinPctVisible = row.Field<bool>("fiLTExcMinPct-visible");
         entity.fiLTExcMinPctLevVisible = row.Field<bool>("fiLTExcMinPctLev-visible");
         entity.fiRcptLTAvgVisible = row.Field<bool>("fiRcptLTAvg-visible");
         entity.fiLTExcMaxPctLevVisible = row.Field<bool>("fiLTExcMaxPctLev-visible");
         entity.fiLTExcMaxPctVisible = row.Field<bool>("fiLTExcMaxPct-visible");
         entity.fiICSWRankVisible = row.Field<bool>("fiICSWRank-visible");
         entity.fiSafetyMajorityVisible = row.Field<bool>("fiSafetyMajority-visible");
         entity.fiSafetyMajorityLevVisible = row.Field<bool>("fiSafetyMajorityLev-visible");
         entity.fiSafetyRcptsVisible = row.Field<bool>("fiSafetyRcpts-visible");
         entity.fiSafetyRcptsLevVisible = row.Field<bool>("fiSafetyRcptsLev-visible");
         entity.fiMinSafetyVisible = row.Field<bool>("fiMinSafety-visible");
         entity.fiMinSafetyLevVisible = row.Field<bool>("fiMinSafetyLev-visible");
         entity.fiSafetyMonthsVisible = row.Field<bool>("fiSafetyMonths-visible");
         entity.fiSafetyMonthsLevVisible = row.Field<bool>("fiSafetyMonthsLev-visible");
         entity.fiMaxSafetyVisible = row.Field<bool>("fiMaxSafety-visible");
         entity.fiMaxSafetyLevVisible = row.Field<bool>("fiMaxSafetyLev-visible");
         entity.fiSeasTrendMaxVisible = row.Field<bool>("fiSeasTrendMax-visible");
         entity.fiSeasTrendLYUVisible = row.Field<bool>("fiSeasTrendLYU-visible");
         entity.fiCalcUsageLYrVisible = row.Field<bool>("fiCalcUsageLYr-visible");
         entity.fiSeasTrendMinVisible = row.Field<bool>("fiSeasTrendMin-visible");
         entity.fiSeasTrendTYUVisible = row.Field<bool>("fiSeasTrendTYU-visible");
         entity.fiCalcUsageTYrVisible = row.Field<bool>("fiCalcUsageTYr-visible");
         entity.fiSeasTrendExpDtVisible = row.Field<bool>("fiSeasTrendExpDt-visible");
         entity.fiCalcTrendPctVisible = row.Field<bool>("fiCalcTrendPct-visible");
         entity.fiUsedTrendPctVisible = row.Field<bool>("fiUsedTrendPct-visible");
         entity.bicamuexcptusageVisible = row.Field<bool>("bicamuexcptusage-visible");
         entity.bicamuexcptrcptsVisible = row.Field<bool>("bicamuexcptrcpts-visible");
         entity.fiCalcDiffLabel = row.IsNull("fiCalc$Diff-label") ? string.Empty : row.Field<string>("fiCalc$Diff-label");
         entity.fiMaxDollDiffLabel = row.IsNull("fiMaxDollDiff-label") ? string.Empty : row.Field<string>("fiMaxDollDiff-label");
         entity.orderlist = row.IsNull("orderlist") ? string.Empty : row.Field<string>("orderlist");
         entity.linenolist = row.IsNull("linenolist") ? string.Empty : row.Field<string>("linenolist");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcamuexceptionsingle(ref DataRow row, Icamuexceptionsingle entity)
      {
         row.SetField("exctype", entity.exctype);
         row.SetField("excmsg", entity.excmsg);
         row.SetField("calcop", entity.calcop);
         row.SetField("calclp", entity.calclp);
         row.SetField("linehits", entity.linehits);
         row.SetField("calc$diff", entity.calcDiff);
         row.SetField("calcusage", entity.calcusage);
         row.SetField("fivehiop", entity.fivehiop);
         row.SetField("thresholdop", entity.thresholdop);
         row.SetField("mergeop", entity.mergeop);
         row.SetField("mergelp", entity.mergelp);
         row.SetField("mthusage", entity.mthusage);
         row.SetField("usagemethod", entity.usagemethod);
         row.SetField("usage", entity.usage);
         row.SetField("safetyqty", entity.safetyqty);
         row.SetField("minhits", entity.minhits);
         row.SetField("minhitslev", entity.minhitslev);
         row.SetField("maxdolldiff", entity.maxdolldiff);
         row.SetField("maxdolllev", entity.maxdolllev);
         row.SetField("transferfl", entity.transferfl);
         row.SetField("transferlev", entity.transferlev);
         row.SetField("txtlabelop", entity.txtlabelop);
         row.SetField("txtlabellp", entity.txtlabellp);
         row.SetField("asqop", entity.asqop);
         row.SetField("calcqty", entity.calcqty);
         row.SetField("highsale1", entity.highsale1);
         row.SetField("highsale2", entity.highsale2);
         row.SetField("highsale3", entity.highsale3);
         row.SetField("highsale4", entity.highsale4);
         row.SetField("highsale5", entity.highsale5);
         row.SetField("highchar1", entity.highchar1);
         row.SetField("highchar2", entity.highchar2);
         row.SetField("highchar3", entity.highchar3);
         row.SetField("highchar4", entity.highchar4);
         row.SetField("highchar5", entity.highchar5);
         row.SetField("highsaledt1", entity.highsaledt1);
         row.SetField("highsaledt2", entity.highsaledt2);
         row.SetField("highsaledt3", entity.highsaledt3);
         row.SetField("highsaledt4", entity.highsaledt4);
         row.SetField("highsaledt5", entity.highsaledt5);
         row.SetField("highsaleno1", entity.highsaleno1);
         row.SetField("highsaleno2", entity.highsaleno2);
         row.SetField("highsaleno3", entity.highsaleno3);
         row.SetField("highsaleno4", entity.highsaleno4);
         row.SetField("highsaleno5", entity.highsaleno5);
         row.SetField("txtlabel", entity.txtlabel);
         row.SetField("minthreshold", entity.minthreshold);
         row.SetField("minthreshexpdt", entity.minthreshexpdt);
         row.SetField("threshrefer", entity.threshrefer);
         row.SetField("currsymbol", entity.currsymbol);
         row.SetField("frozentype", entity.frozentype);
         row.SetField("frozenmmyy", entity.frozenmmyy);
         row.SetField("frozenmos", entity.frozenmos);
         row.SetField("statustype", entity.statustype);
         row.SetField("orderpoint", entity.orderpoint);
         row.SetField("tminhits", entity.tminhits);
         row.SetField("tminmonths", entity.tminmonths);
         row.SetField("recordlevel", entity.recordlevel);
         row.SetField("frozenexpdt", entity.frozenexpdt);
         row.SetField("usagerate", entity.usagerate);
         row.SetField("orderpt", entity.orderpt);
         row.SetField("oorderpt", entity.oorderpt);
         row.SetField("linept", entity.linept);
         row.SetField("olinept", entity.olinept);
         row.SetField("newusage", entity.newusage);
         row.SetField("avgusage", entity.avgusage);
         row.SetField("priorusage", entity.priorusage);
         row.SetField("usagemult", entity.usagemult);
         row.SetField("usagemultlev", entity.usagemultlev);
         row.SetField("excusemths", entity.excusemths);
         row.SetField("excusemthslev", entity.excusemthslev);
         row.SetField("annualusage", entity.annualusage);
         row.SetField("prodcost", entity.prodcost);
         row.SetField("orderqty", entity.orderqty);
         row.SetField("lowusemax", entity.lowusemax);
         row.SetField("leadtmavg", entity.leadtmavg);
         row.SetField("frozenltty", entity.frozenltty);
         row.SetField("whserank", entity.whserank);
         row.SetField("netavail", entity.netavail);
         row.SetField("porcptlt", entity.porcptlt);
         row.SetField("ltexcminpct", entity.ltexcminpct);
         row.SetField("rcptltavg", entity.rcptltavg);
         row.SetField("ltexcminpctlev", entity.ltexcminpctlev);
         row.SetField("ltexcmaxpctlev", entity.ltexcmaxpctlev);
         row.SetField("ltexcmaxpct", entity.ltexcmaxpct);
         row.SetField("icswrank", entity.icswrank);
         row.SetField("safetymajority", entity.safetymajority);
         row.SetField("safetymajoritylev", entity.safetymajoritylev);
         row.SetField("safetyrcpts", entity.safetyrcpts);
         row.SetField("safetyrcptslev", entity.safetyrcptslev);
         row.SetField("minsafety", entity.minsafety);
         row.SetField("minsafetylev", entity.minsafetylev);
         row.SetField("safetymonths", entity.safetymonths);
         row.SetField("safetymonthslev", entity.safetymonthslev);
         row.SetField("maxsafety", entity.maxsafety);
         row.SetField("maxsafetylev", entity.maxsafetylev);
         row.SetField("seastrendmax", entity.seastrendmax);
         row.SetField("seastrendlyu", entity.seastrendlyu);
         row.SetField("calcusagelyr", entity.calcusagelyr);
         row.SetField("seastrendmin", entity.seastrendmin);
         row.SetField("seastrendtyu", entity.seastrendtyu);
         row.SetField("calcusagetyr", entity.calcusagetyr);
         row.SetField("seastrendexpdt", entity.seastrendexpdt);
         row.SetField("calctrendpct", entity.calctrendpct);
         row.SetField("usedtrendpct", entity.usedtrendpct);
         row.SetField("fiCalcOP-visible", entity.fiCalcOPVisible);
         row.SetField("fiCalcLP-visible", entity.fiCalcLPVisible);
         row.SetField("fiLineHits-visible", entity.fiLineHitsVisible);
         row.SetField("fiCalc$Diff-visible", entity.fiCalcDiffVisible);
         row.SetField("fiCalcUsage-visible", entity.fiCalcUsageVisible);
         row.SetField("fi5HiOP-visible", entity.fi5HiOPVisible);
         row.SetField("fiThresholdOP-visible", entity.fiThresholdOPVisible);
         row.SetField("fiMergeOP-visible", entity.fiMergeOPVisible);
         row.SetField("fiMergeLP-visible", entity.fiMergeLPVisible);
         row.SetField("fiMthUsage-visible", entity.fiMthUsageVisible);
         row.SetField("fiUsageMethod-visible", entity.fiUsageMethodVisible);
         row.SetField("fiUsage-visible", entity.fiUsageVisible);
         row.SetField("fiSafetyQty-visible", entity.fiSafetyQtyVisible);
         row.SetField("fiMinHits-visible", entity.fiMinHitsVisible);
         row.SetField("fiMinHitsLev-visible", entity.fiMinHitsLevVisible);
         row.SetField("fiMaxDollDiff-visible", entity.fiMaxDollDiffVisible);
         row.SetField("fiMaxDollLev-visible", entity.fiMaxDollLevVisible);
         row.SetField("fiTransferFl-visible", entity.fiTransferFlVisible);
         row.SetField("fiTransferLev-visible", entity.fiTransferLevVisible);
         row.SetField("txtlabelop-visible", entity.txtlabelopVisible);
         row.SetField("txtlabellp-visible", entity.txtlabellpVisible);
         row.SetField("fiASQOP-visible", entity.fiASQOPVisible);
         row.SetField("fiCalcQty-visible", entity.fiCalcQtyVisible);
         row.SetField("fiHighSale1-visible", entity.fiHighSale1Visible);
         row.SetField("fiHighSale2-visible", entity.fiHighSale2Visible);
         row.SetField("fiHighSale3-visible", entity.fiHighSale3Visible);
         row.SetField("fiHighSale4-visible", entity.fiHighSale4Visible);
         row.SetField("fiHighSale5-visible", entity.fiHighSale5Visible);
         row.SetField("fiHighChar1-visible", entity.fiHighChar1Visible);
         row.SetField("fiHighChar2-visible", entity.fiHighChar2Visible);
         row.SetField("fiHighChar3-visible", entity.fiHighChar3Visible);
         row.SetField("fiHighChar4-visible", entity.fiHighChar4Visible);
         row.SetField("fiHighChar5-visible", entity.fiHighChar5Visible);
         row.SetField("fiHighSaleDt1-visible", entity.fiHighSaleDt1Visible);
         row.SetField("fiHighSaleDt2-visible", entity.fiHighSaleDt2Visible);
         row.SetField("fiHighSaleDt3-visible", entity.fiHighSaleDt3Visible);
         row.SetField("fiHighSaleDt4-visible", entity.fiHighSaleDt4Visible);
         row.SetField("fiHighSaleDt5-visible", entity.fiHighSaleDt5Visible);
         row.SetField("fiHighSaleNo1-visible", entity.fiHighSaleNo1Visible);
         row.SetField("fiHighSaleNo2-visible", entity.fiHighSaleNo2Visible);
         row.SetField("fiHighSaleNo3-visible", entity.fiHighSaleNo3Visible);
         row.SetField("fiHighSaleNo4-visible", entity.fiHighSaleNo4Visible);
         row.SetField("fiHighSaleNo5-visible", entity.fiHighSaleNo5Visible);
         row.SetField("txtlabel-visible", entity.txtlabelVisible);
         row.SetField("fiMinThreshold-visible", entity.fiMinThresholdVisible);
         row.SetField("fiMinThreshExpDt-visible", entity.fiMinThreshExpDtVisible);
         row.SetField("fiThreshRefer-visible", entity.fiThreshReferVisible);
         row.SetField("fiFrozenType-visible", entity.fiFrozenTypeVisible);
         row.SetField("fiFrozenMMYY-visible", entity.fiFrozenMMYYVisible);
         row.SetField("fiFrozenMos-visible", entity.fiFrozenMosVisible);
         row.SetField("fiStatusType-visible", entity.fiStatusTypeVisible);
         row.SetField("fiOrderPoint-visible", entity.fiOrderPointVisible);
         row.SetField("fiTMinHits-visible", entity.fiTMinHitsVisible);
         row.SetField("fiTMinMonths-visible", entity.fiTMinMonthsVisible);
         row.SetField("fiRecordLevel-visible", entity.fiRecordLevelVisible);
         row.SetField("fiFrozenExpDt-visible", entity.fiFrozenExpDtVisible);
         row.SetField("fiUsageRate-visible", entity.fiUsageRateVisible);
         row.SetField("fiOrderPt-visible", entity.fiOrderPtVisible);
         row.SetField("fiOOrderPt-visible", entity.fiOOrderPtVisible);
         row.SetField("fiLinePt-visible", entity.fiLinePtVisible);
         row.SetField("fiOLinePt-visible", entity.fiOLinePtVisible);
         row.SetField("fiNewUsage-visible", entity.fiNewUsageVisible);
         row.SetField("fiAvgUsage-visible", entity.fiAvgUsageVisible);
         row.SetField("fiPriorUsage-visible", entity.fiPriorUsageVisible);
         row.SetField("fiUsageMult-visible", entity.fiUsageMultVisible);
         row.SetField("fiUsageMultLev-visible", entity.fiUsageMultLevVisible);
         row.SetField("fiExcUseMths-visible", entity.fiExcUseMthsVisible);
         row.SetField("fiExcUseMthsLev-visible", entity.fiExcUseMthsLevVisible);
         row.SetField("fiAnnualUsage-visible", entity.fiAnnualUsageVisible);
         row.SetField("fiProdCost-visible", entity.fiProdCostVisible);
         row.SetField("fiOrderQty-visible", entity.fiOrderQtyVisible);
         row.SetField("fiLowUseMax-visible", entity.fiLowUseMaxVisible);
         row.SetField("fiLeadTmAvg-visible", entity.fiLeadTmAvgVisible);
         row.SetField("fiFrozenLTTy-visible", entity.fiFrozenLTTyVisible);
         row.SetField("fiWhseRank-visible", entity.fiWhseRankVisible);
         row.SetField("fiNetAvail-visible", entity.fiNetAvailVisible);
         row.SetField("fiPORcptLT-visible", entity.fiPORcptLTVisible);
         row.SetField("fiLTExcMinPct-visible", entity.fiLTExcMinPctVisible);
         row.SetField("fiLTExcMinPctLev-visible", entity.fiLTExcMinPctLevVisible);
         row.SetField("fiRcptLTAvg-visible", entity.fiRcptLTAvgVisible);
         row.SetField("fiLTExcMaxPctLev-visible", entity.fiLTExcMaxPctLevVisible);
         row.SetField("fiLTExcMaxPct-visible", entity.fiLTExcMaxPctVisible);
         row.SetField("fiICSWRank-visible", entity.fiICSWRankVisible);
         row.SetField("fiSafetyMajority-visible", entity.fiSafetyMajorityVisible);
         row.SetField("fiSafetyMajorityLev-visible", entity.fiSafetyMajorityLevVisible);
         row.SetField("fiSafetyRcpts-visible", entity.fiSafetyRcptsVisible);
         row.SetField("fiSafetyRcptsLev-visible", entity.fiSafetyRcptsLevVisible);
         row.SetField("fiMinSafety-visible", entity.fiMinSafetyVisible);
         row.SetField("fiMinSafetyLev-visible", entity.fiMinSafetyLevVisible);
         row.SetField("fiSafetyMonths-visible", entity.fiSafetyMonthsVisible);
         row.SetField("fiSafetyMonthsLev-visible", entity.fiSafetyMonthsLevVisible);
         row.SetField("fiMaxSafety-visible", entity.fiMaxSafetyVisible);
         row.SetField("fiMaxSafetyLev-visible", entity.fiMaxSafetyLevVisible);
         row.SetField("fiSeasTrendMax-visible", entity.fiSeasTrendMaxVisible);
         row.SetField("fiSeasTrendLYU-visible", entity.fiSeasTrendLYUVisible);
         row.SetField("fiCalcUsageLYr-visible", entity.fiCalcUsageLYrVisible);
         row.SetField("fiSeasTrendMin-visible", entity.fiSeasTrendMinVisible);
         row.SetField("fiSeasTrendTYU-visible", entity.fiSeasTrendTYUVisible);
         row.SetField("fiCalcUsageTYr-visible", entity.fiCalcUsageTYrVisible);
         row.SetField("fiSeasTrendExpDt-visible", entity.fiSeasTrendExpDtVisible);
         row.SetField("fiCalcTrendPct-visible", entity.fiCalcTrendPctVisible);
         row.SetField("fiUsedTrendPct-visible", entity.fiUsedTrendPctVisible);
         row.SetField("bicamuexcptusage-visible", entity.bicamuexcptusageVisible);
         row.SetField("bicamuexcptrcpts-visible", entity.bicamuexcptrcptsVisible);
         row.SetField("fiCalc$Diff-label", entity.fiCalcDiffLabel);
         row.SetField("fiMaxDollDiff-label", entity.fiMaxDollDiffLabel);
         row.SetField("orderlist", entity.orderlist);
         row.SetField("linenolist", entity.linenolist);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
