//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.IC.Data.Models.Pdsicamumassupdateinit
{
   [ModelName("Infor.Sxe.IC.Data.Models.Pdsicamumassupdateinit.Icamumassupdatesingle")]
   public partial class Icamumassupdatesingle : ModelBase
   {
      public bool fiWhseRankSensitive { get; set; }
      public bool tbWhseRankSensitive { get; set; }
      public bool tbRankFreezeEnteredSensitive { get; set; }
      public bool tbRankFreezeSensitive { get; set; }
      public bool tbUsMthsFrzEnteredSensitive { get; set; }
      public bool tbUsMthsFrzSensitive { get; set; }
      public bool tbRollOANUsageflSensitive { get; set; }
      public bool tbRollOANUsageUpdateflSensitive { get; set; }
      public bool tbRollOANUsageflHidden { get; set; }
      public bool tbRollOANUsageUpdateflHidden { get; set; }
      [StringValidationAttribute]
      public string fiRollOANUsageLblLabel { get; set; }
      public bool fiMinThresholdSensitive { get; set; }
      public bool tbMinThresholdSensitive { get; set; }
      public bool fiMinThreshExpDtSensitive { get; set; }
      public bool tbMinThreshExpDtSensitive { get; set; }
      public bool tbAsqFlEnteredSensitive { get; set; }
      public bool tbAsqFlSensitive { get; set; }
      public bool fiASQDiffSensitive { get; set; }
      public bool tbASQDiffSensitive { get; set; }
      public bool tbHi5FlEnteredSensitive { get; set; }
      public bool tbHi5FlSensitive { get; set; }
      public bool fiHi5DiffSensitive { get; set; }
      public bool tbHi5DiffSensitive { get; set; }
      public bool fiAcquireDtSensitive { get; set; }
      public bool tbAcquireDtSensitive { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Icamumassupdatesingle BuildIcamumassupdatesingleFromRow(DataRow row)
      {
         Icamumassupdatesingle entity = new Icamumassupdatesingle();
         entity.fiWhseRankSensitive = row.Field<bool>("fiWhseRank-sensitive");
         entity.tbWhseRankSensitive = row.Field<bool>("tbWhseRank-sensitive");
         entity.tbRankFreezeEnteredSensitive = row.Field<bool>("tbRankFreezeEntered-sensitive");
         entity.tbRankFreezeSensitive = row.Field<bool>("tbRankFreeze-sensitive");
         entity.tbUsMthsFrzEnteredSensitive = row.Field<bool>("tbUsMthsFrzEntered-sensitive");
         entity.tbUsMthsFrzSensitive = row.Field<bool>("tbUsMthsFrz-sensitive");
         entity.tbRollOANUsageflSensitive = row.Field<bool>("tbRollOANUsagefl-sensitive");
         entity.tbRollOANUsageUpdateflSensitive = row.Field<bool>("tbRollOANUsageUpdatefl-sensitive");
         entity.tbRollOANUsageflHidden = row.Field<bool>("tbRollOANUsagefl-hidden");
         entity.tbRollOANUsageUpdateflHidden = row.Field<bool>("tbRollOANUsageUpdatefl-hidden");
         entity.fiRollOANUsageLblLabel = row.IsNull("fiRollOANUsageLbl-label") ? string.Empty : row.Field<string>("fiRollOANUsageLbl-label");
         entity.fiMinThresholdSensitive = row.Field<bool>("fiMinThreshold-sensitive");
         entity.tbMinThresholdSensitive = row.Field<bool>("tbMinThreshold-sensitive");
         entity.fiMinThreshExpDtSensitive = row.Field<bool>("fiMinThreshExpDt-sensitive");
         entity.tbMinThreshExpDtSensitive = row.Field<bool>("tbMinThreshExpDt-sensitive");
         entity.tbAsqFlEnteredSensitive = row.Field<bool>("tbAsqFlEntered-sensitive");
         entity.tbAsqFlSensitive = row.Field<bool>("tbAsqFl-sensitive");
         entity.fiASQDiffSensitive = row.Field<bool>("fiASQDiff-sensitive");
         entity.tbASQDiffSensitive = row.Field<bool>("tbASQDiff-sensitive");
         entity.tbHi5FlEnteredSensitive = row.Field<bool>("tbHi5FlEntered-sensitive");
         entity.tbHi5FlSensitive = row.Field<bool>("tbHi5Fl-sensitive");
         entity.fiHi5DiffSensitive = row.Field<bool>("fiHi5Diff-sensitive");
         entity.tbHi5DiffSensitive = row.Field<bool>("tbHi5Diff-sensitive");
         entity.fiAcquireDtSensitive = row.Field<bool>("fiAcquireDt-sensitive");
         entity.tbAcquireDtSensitive = row.Field<bool>("tbAcquireDt-sensitive");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcamumassupdatesingle(ref DataRow row, Icamumassupdatesingle entity)
      {
         row.SetField("fiWhseRank-sensitive", entity.fiWhseRankSensitive);
         row.SetField("tbWhseRank-sensitive", entity.tbWhseRankSensitive);
         row.SetField("tbRankFreezeEntered-sensitive", entity.tbRankFreezeEnteredSensitive);
         row.SetField("tbRankFreeze-sensitive", entity.tbRankFreezeSensitive);
         row.SetField("tbUsMthsFrzEntered-sensitive", entity.tbUsMthsFrzEnteredSensitive);
         row.SetField("tbUsMthsFrz-sensitive", entity.tbUsMthsFrzSensitive);
         row.SetField("tbRollOANUsagefl-sensitive", entity.tbRollOANUsageflSensitive);
         row.SetField("tbRollOANUsageUpdatefl-sensitive", entity.tbRollOANUsageUpdateflSensitive);
         row.SetField("tbRollOANUsagefl-hidden", entity.tbRollOANUsageflHidden);
         row.SetField("tbRollOANUsageUpdatefl-hidden", entity.tbRollOANUsageUpdateflHidden);
         row.SetField("fiRollOANUsageLbl-label", entity.fiRollOANUsageLblLabel);
         row.SetField("fiMinThreshold-sensitive", entity.fiMinThresholdSensitive);
         row.SetField("tbMinThreshold-sensitive", entity.tbMinThresholdSensitive);
         row.SetField("fiMinThreshExpDt-sensitive", entity.fiMinThreshExpDtSensitive);
         row.SetField("tbMinThreshExpDt-sensitive", entity.tbMinThreshExpDtSensitive);
         row.SetField("tbAsqFlEntered-sensitive", entity.tbAsqFlEnteredSensitive);
         row.SetField("tbAsqFl-sensitive", entity.tbAsqFlSensitive);
         row.SetField("fiASQDiff-sensitive", entity.fiASQDiffSensitive);
         row.SetField("tbASQDiff-sensitive", entity.tbASQDiffSensitive);
         row.SetField("tbHi5FlEntered-sensitive", entity.tbHi5FlEnteredSensitive);
         row.SetField("tbHi5Fl-sensitive", entity.tbHi5FlSensitive);
         row.SetField("fiHi5Diff-sensitive", entity.fiHi5DiffSensitive);
         row.SetField("tbHi5Diff-sensitive", entity.tbHi5DiffSensitive);
         row.SetField("fiAcquireDt-sensitive", entity.fiAcquireDtSensitive);
         row.SetField("tbAcquireDt-sensitive", entity.tbAcquireDtSensitive);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
