//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.IC.Data.Models.Pdsicepeload
{
   [ModelName("Infor.Sxe.IC.Data.Models.Pdsicepeload.Icepeloadresults")]
   public partial class Icepeloadresults : ModelBase
   {
      [StringValidationAttribute]
      public string whse { get; set; }
      public int runno { get; set; }
      public int ticketno { get; set; }
      [StringValidationAttribute]
      public string displayty { get; set; }
      [StringValidationAttribute]
      public string prod { get; set; }
      [StringValidationAttribute]
      public string proddesc { get; set; }
      [StringValidationAttribute]
      public string prodnotesfl { get; set; }
      [StringValidationAttribute]
      public string binloc { get; set; }
      public bool entfl { get; set; }
      [StringValidationAttribute]
      public string unit { get; set; }
      public int uticketno { get; set; }
      public bool uticketnoenabled { get; set; }
      [StringValidationAttribute]
      public string serlotty { get; set; }
      [StringValidationAttribute]
      public string rectype { get; set; }
      [StringValidationAttribute]
      public string qtyexp { get; set; }
      public decimal qtycnt { get; set; }
      [StringValidationAttribute]
      public string brandcode { get; set; }
      [StringValidationAttribute]
      public string mfgprod { get; set; }
      [StringValidationAttribute]
      public string vendprod { get; set; }
      [StringValidationAttribute]
      public string icsetrowid { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Icepeloadresults BuildIcepeloadresultsFromRow(DataRow row)
      {
         Icepeloadresults entity = new Icepeloadresults();
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.runno = row.IsNull("runno") ? 0 : row.Field<int>("runno");
         entity.ticketno = row.IsNull("ticketno") ? 0 : row.Field<int>("ticketno");
         entity.displayty = row.IsNull("displayty") ? string.Empty : row.Field<string>("displayty");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.proddesc = row.IsNull("proddesc") ? string.Empty : row.Field<string>("proddesc");
         entity.prodnotesfl = row.IsNull("prodnotesfl") ? string.Empty : row.Field<string>("prodnotesfl");
         entity.binloc = row.IsNull("binloc") ? string.Empty : row.Field<string>("binloc");
         entity.entfl = row.Field<bool>("entfl");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.uticketno = row.IsNull("uticketno") ? 0 : row.Field<int>("uticketno");
         entity.uticketnoenabled = row.Field<bool>("uticketnoenabled");
         entity.serlotty = row.IsNull("serlotty") ? string.Empty : row.Field<string>("serlotty");
         entity.rectype = row.IsNull("rectype") ? string.Empty : row.Field<string>("rectype");
         entity.qtyexp = row.IsNull("qtyexp") ? string.Empty : row.Field<string>("qtyexp");
         entity.qtycnt = row.IsNull("qtycnt") ? decimal.Zero : row.Field<decimal>("qtycnt");
         entity.brandcode = row.IsNull("brandcode") ? string.Empty : row.Field<string>("brandcode");
         entity.mfgprod = row.IsNull("mfgprod") ? string.Empty : row.Field<string>("mfgprod");
         entity.vendprod = row.IsNull("vendprod") ? string.Empty : row.Field<string>("vendprod");
         entity.icsetrowid = row.Field<byte[]>("icsetrowid").ToStringEncoded();
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcepeloadresults(ref DataRow row, Icepeloadresults entity)
      {
         row.SetField("whse", entity.whse);
         row.SetField("runno", entity.runno);
         row.SetField("ticketno", entity.ticketno);
         row.SetField("displayty", entity.displayty);
         row.SetField("prod", entity.prod);
         row.SetField("proddesc", entity.proddesc);
         row.SetField("prodnotesfl", entity.prodnotesfl);
         row.SetField("binloc", entity.binloc);
         row.SetField("entfl", entity.entfl);
         row.SetField("unit", entity.unit);
         row.SetField("uticketno", entity.uticketno);
         row.SetField("uticketnoenabled", entity.uticketnoenabled);
         row.SetField("serlotty", entity.serlotty);
         row.SetField("rectype", entity.rectype);
         row.SetField("qtyexp", entity.qtyexp);
         row.SetField("qtycnt", entity.qtycnt);
         row.SetField("brandcode", entity.brandcode);
         row.SetField("mfgprod", entity.mfgprod);
         row.SetField("vendprod", entity.vendprod);
         row.SetField("icsetrowid", entity.icsetrowid.ToByteArray());
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
