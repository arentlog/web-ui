//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.IC.Data.Models.Pdsicepesavecriteria
{
   [ModelName("Infor.Sxe.IC.Data.Models.Pdsicepesavecriteria.Icepesavecriteria")]
   public partial class Icepesavecriteria : ModelBase
   {
      [StringValidationAttribute]
      public string whse { get; set; }
      [StringValidationAttribute]
      public string prod { get; set; }
      public int runno { get; set; }
      public int ticketno { get; set; }
      public int uticketno { get; set; }
      public decimal qtycnt { get; set; }
      public decimal qtyexp { get; set; }
      public bool uticketenabled { get; set; }
      public bool setnotcountedfl { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Icepesavecriteria BuildIcepesavecriteriaFromRow(DataRow row)
      {
         Icepesavecriteria entity = new Icepesavecriteria();
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.runno = row.IsNull("runno") ? 0 : row.Field<int>("runno");
         entity.ticketno = row.IsNull("ticketno") ? 0 : row.Field<int>("ticketno");
         entity.uticketno = row.IsNull("uticketno") ? 0 : row.Field<int>("uticketno");
         entity.qtycnt = row.IsNull("qtycnt") ? decimal.Zero : row.Field<decimal>("qtycnt");
         entity.qtyexp = row.IsNull("qtyexp") ? decimal.Zero : row.Field<decimal>("qtyexp");
         entity.uticketenabled = row.Field<bool>("uticketenabled");
         entity.setnotcountedfl = row.Field<bool>("setnotcountedfl");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcepesavecriteria(ref DataRow row, Icepesavecriteria entity)
      {
         row.SetField("whse", entity.whse);
         row.SetField("prod", entity.prod);
         row.SetField("runno", entity.runno);
         row.SetField("ticketno", entity.ticketno);
         row.SetField("uticketno", entity.uticketno);
         row.SetField("qtycnt", entity.qtycnt);
         row.SetField("qtyexp", entity.qtyexp);
         row.SetField("uticketenabled", entity.uticketenabled);
         row.SetField("setnotcountedfl", entity.setnotcountedfl);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
