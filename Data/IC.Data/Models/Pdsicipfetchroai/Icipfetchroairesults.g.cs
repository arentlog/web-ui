//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.IC.Data.Models.Pdsicipfetchroai
{
   [ModelName("Infor.Sxe.IC.Data.Models.Pdsicipfetchroai.Icipfetchroairesults")]
   public partial class Icipfetchroairesults : ModelBase
   {
      public decimal netavail { get; set; }
      [StringValidationAttribute]
      public string unit { get; set; }
      public decimal onorder { get; set; }
      public decimal netmonth { get; set; }
      public decimal ordqty { get; set; }
      [StringValidationAttribute]
      public string purunit { get; set; }
      public decimal ordmonth { get; set; }
      public decimal linept { get; set; }
      [StringValidationAttribute]
      public string cmessage { get; set; }
      public decimal usagerate { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Icipfetchroairesults BuildIcipfetchroairesultsFromRow(DataRow row)
      {
         Icipfetchroairesults entity = new Icipfetchroairesults();
         entity.netavail = row.IsNull("netavail") ? decimal.Zero : row.Field<decimal>("netavail");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.onorder = row.IsNull("onorder") ? decimal.Zero : row.Field<decimal>("onorder");
         entity.netmonth = row.IsNull("netmonth") ? decimal.Zero : row.Field<decimal>("netmonth");
         entity.ordqty = row.IsNull("ordqty") ? decimal.Zero : row.Field<decimal>("ordqty");
         entity.purunit = row.IsNull("purunit") ? string.Empty : row.Field<string>("purunit");
         entity.ordmonth = row.IsNull("ordmonth") ? decimal.Zero : row.Field<decimal>("ordmonth");
         entity.linept = row.IsNull("linept") ? decimal.Zero : row.Field<decimal>("linept");
         entity.cmessage = row.IsNull("cmessage") ? string.Empty : row.Field<string>("cmessage");
         entity.usagerate = row.IsNull("usagerate") ? decimal.Zero : row.Field<decimal>("usagerate");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromIcipfetchroairesults(ref DataRow row, Icipfetchroairesults entity)
      {
         row.SetField("netavail", entity.netavail);
         row.SetField("unit", entity.unit);
         row.SetField("onorder", entity.onorder);
         row.SetField("netmonth", entity.netmonth);
         row.SetField("ordqty", entity.ordqty);
         row.SetField("purunit", entity.purunit);
         row.SetField("ordmonth", entity.ordmonth);
         row.SetField("linept", entity.linept);
         row.SetField("cmessage", entity.cmessage);
         row.SetField("usagerate", entity.usagerate);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
