//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.OE.Data.Repositories
{
   using Infor.Sxe.OE.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdsoeel;
   using Models.Pdsloadoeeltt;
   using Models.Complex;

   public partial class OeelRepository : RepositoryBase
   {
      private OeelAdapter adapter;
  
      public OeelRepository(IProgressConnection connection)
      {
         this.adapter = new OeelAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public Oeel GetByRowId(string rowId, string fldList)
      {
         return this.adapter.GetByRowId(rowId, fldList);
      }

      public IEnumerable<Oeel> GetListByRowIdList(List<string> rowIds, int batchsize, string fldList)
      {
         return this.adapter.GetListByRowIdList(rowIds, batchsize, fldList);
      }
        
      public IEnumerable<Oeel> GetListAllByCono(int cono, int batchsize, string fldList)
      {
         return this.adapter.GetListAllByCono(cono, batchsize, fldList);
      }
      public IEnumerable<Oeel> GetListByRowpointers(List<string> rowpointers, string fldList)
      {
         return this.adapter.GetListByRowpointers(rowpointers, fldList);
      }
	  
	  
      public Oeel Get(int cono, int orderno, int ordersuf, int lineno, int batchsize, string fldList)
      {
         return this.adapter.Get(cono, orderno, ordersuf, lineno, batchsize, fldList);
      }
      
      public IEnumerable<Oeel> GetList(string where, int batchsize, string fldList)
      {
         return this.adapter.GetList(where, batchsize, fldList);
      }
  
      public IEnumerable<Oeel> GetListByFill(int cono, string statustype, string whse, DateTime? invoicedt, string shipprod, string specnstype, int bono, string transtype, int batchsize, string fldList)
      {
         return this.adapter.GetListByFill(cono, statustype, whse, invoicedt, shipprod, specnstype, bono, transtype, batchsize, fldList);
      }

      public IEnumerable<Oeel> GetListByProd(int cono, string shipprod, decimal custno, DateTime? enterdt, int orderno, int ordersuf, int lineno, int batchsize, string fldList)
      {
         return this.adapter.GetListByProd(cono, shipprod, custno, enterdt, orderno, ordersuf, lineno, batchsize, fldList);
      }

      public Oeel GetByRowpointer(string rowpointer, string fldList)
      {
         return this.adapter.GetByRowpointer(rowpointer, fldList);
      }

      public IEnumerable<Oeel> GetListBySpecns(int cono, string statustype, string specnstype, string whse, string ordertype, decimal arpvendno, string arpprodline, string shipprod, int batchsize, string fldList)
      {
         return this.adapter.GetListBySpecns(cono, statustype, specnstype, whse, ordertype, arpvendno, arpprodline, shipprod, batchsize, fldList);
      }

      public IEnumerable<Oeel> GetListByTransdttmz(DateTime? transdttmz, int batchsize, string fldList)
      {
         return this.adapter.GetListByTransdttmz(transdttmz, batchsize, fldList);
      }

      public IEnumerable<Oeel> GetListByWhse(int cono, string whse, string shipprod, string transtype, decimal custno, int batchsize, string fldList)
      {
         return this.adapter.GetListByWhse(cono, whse, shipprod, transtype, custno, batchsize, fldList);
      }

      public Oeel Insert(Oeel record)
      {
         return this.adapter.Insert(record);        
      }
  
      public Oeel Update(Oeel record)
      {
         return this.adapter.Update(record);
      }
  
      public void Delete(Oeel record)
      {
         this.adapter.Delete(record);
      }
  
      public void DeleteListByRowIds(List<string> rowIds)
      {
         this.adapter.DeleteListByRowIds(rowIds);
      }
	   

      public void DeleteListByRowPointers(List<string> rowpointers)
      {
         this.adapter.DeleteListByRowPointers(rowpointers);
      }
	  
      public OeelLookupResponseAPI Lookup(Loadoeelttcriteria loadoeelttcriteria)
      {
         return this.adapter.Lookup(loadoeelttcriteria);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  