//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.OE.Data.Models.Pdsoelinepricetab
{
   [ModelName("Infor.Sxe.OE.Data.Models.Pdsoelinepricetab.Oelinepricetab")]
   public partial class Oelinepricetab : ModelBase
   {
      [StringValidationAttribute]
      public string shipprod { get; set; }
      public bool btnpricesheethidden { get; set; }
      public bool btnpricesheetenabled { get; set; }
      public bool btnapplyenabled { get; set; }
      public bool btnsystempricingenabled { get; set; }
      public bool btnignorequoteenabled { get; set; }
      public bool btnrestorepricingenabled { get; set; }
      public int discountlevel { get; set; }
      public bool discountlevelenabled { get; set; }
      public int pricinglevel { get; set; }
      public bool pricinglevelenabled { get; set; }
      public decimal previousprc { get; set; }
      public long previousprcrecid { get; set; }
      [StringValidationAttribute]
      public string previousprcdspl { get; set; }
      public bool previousprcenabled { get; set; }
      public decimal percent { get; set; }
      public bool percentenabled { get; set; }
      [StringValidationAttribute]
      public string percentof { get; set; }
      public bool percentofenabled { get; set; }
      public bool firsthardpricefl { get; set; }
      public long pdscrecid { get; set; }
      public long icscrecid { get; set; }
      [StringValidationAttribute]
      public string kitrollty { get; set; }
      public bool pricingmodified { get; set; }
      public bool percentmodified { get; set; }
      public bool percentofmodified { get; set; }
      public decimal hightolprice { get; set; }
      public decimal lowtolprice { get; set; }
      public int lastdisclevel { get; set; }
      public int lastpricelevel { get; set; }
      public decimal lastpreviousprc { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Oelinepricetab BuildOelinepricetabFromRow(DataRow row)
      {
         Oelinepricetab entity = new Oelinepricetab();
         entity.shipprod = row.IsNull("shipprod") ? string.Empty : row.Field<string>("shipprod");
         entity.btnpricesheethidden = row.Field<bool>("btnpricesheethidden");
         entity.btnpricesheetenabled = row.Field<bool>("btnpricesheetenabled");
         entity.btnapplyenabled = row.Field<bool>("btnapplyenabled");
         entity.btnsystempricingenabled = row.Field<bool>("btnsystempricingenabled");
         entity.btnignorequoteenabled = row.Field<bool>("btnignorequoteenabled");
         entity.btnrestorepricingenabled = row.Field<bool>("btnrestorepricingenabled");
         entity.discountlevel = row.IsNull("discountlevel") ? 0 : row.Field<int>("discountlevel");
         entity.discountlevelenabled = row.Field<bool>("discountlevelenabled");
         entity.pricinglevel = row.IsNull("pricinglevel") ? 0 : row.Field<int>("pricinglevel");
         entity.pricinglevelenabled = row.Field<bool>("pricinglevelenabled");
         entity.previousprc = row.IsNull("previousprc") ? decimal.Zero : row.Field<decimal>("previousprc");
         entity.previousprcrecid = row.IsNull("previousprcrecid") ? 0 : row.Field<long>("previousprcrecid");
         entity.previousprcdspl = row.IsNull("previousprcdspl") ? string.Empty : row.Field<string>("previousprcdspl");
         entity.previousprcenabled = row.Field<bool>("previousprcenabled");
         entity.percent = row.IsNull("percent") ? decimal.Zero : row.Field<decimal>("percent");
         entity.percentenabled = row.Field<bool>("percentenabled");
         entity.percentof = row.IsNull("percentof") ? string.Empty : row.Field<string>("percentof");
         entity.percentofenabled = row.Field<bool>("percentofenabled");
         entity.firsthardpricefl = row.Field<bool>("firsthardpricefl");
         entity.pdscrecid = row.IsNull("pdscrecid") ? 0 : row.Field<long>("pdscrecid");
         entity.icscrecid = row.IsNull("icscrecid") ? 0 : row.Field<long>("icscrecid");
         entity.kitrollty = row.IsNull("kitrollty") ? string.Empty : row.Field<string>("kitrollty");
         entity.pricingmodified = row.Field<bool>("pricingmodified");
         entity.percentmodified = row.Field<bool>("percentmodified");
         entity.percentofmodified = row.Field<bool>("percentofmodified");
         entity.hightolprice = row.IsNull("hightolprice") ? decimal.Zero : row.Field<decimal>("hightolprice");
         entity.lowtolprice = row.IsNull("lowtolprice") ? decimal.Zero : row.Field<decimal>("lowtolprice");
         entity.lastdisclevel = row.IsNull("lastdisclevel") ? 0 : row.Field<int>("lastdisclevel");
         entity.lastpricelevel = row.IsNull("lastpricelevel") ? 0 : row.Field<int>("lastpricelevel");
         entity.lastpreviousprc = row.IsNull("lastpreviousprc") ? decimal.Zero : row.Field<decimal>("lastpreviousprc");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOelinepricetab(ref DataRow row, Oelinepricetab entity)
      {
         row.SetField("shipprod", entity.shipprod);
         row.SetField("btnpricesheethidden", entity.btnpricesheethidden);
         row.SetField("btnpricesheetenabled", entity.btnpricesheetenabled);
         row.SetField("btnapplyenabled", entity.btnapplyenabled);
         row.SetField("btnsystempricingenabled", entity.btnsystempricingenabled);
         row.SetField("btnignorequoteenabled", entity.btnignorequoteenabled);
         row.SetField("btnrestorepricingenabled", entity.btnrestorepricingenabled);
         row.SetField("discountlevel", entity.discountlevel);
         row.SetField("discountlevelenabled", entity.discountlevelenabled);
         row.SetField("pricinglevel", entity.pricinglevel);
         row.SetField("pricinglevelenabled", entity.pricinglevelenabled);
         row.SetField("previousprc", entity.previousprc);
         row.SetField("previousprcrecid", entity.previousprcrecid);
         row.SetField("previousprcdspl", entity.previousprcdspl);
         row.SetField("previousprcenabled", entity.previousprcenabled);
         row.SetField("percent", entity.percent);
         row.SetField("percentenabled", entity.percentenabled);
         row.SetField("percentof", entity.percentof);
         row.SetField("percentofenabled", entity.percentofenabled);
         row.SetField("firsthardpricefl", entity.firsthardpricefl);
         row.SetField("pdscrecid", entity.pdscrecid);
         row.SetField("icscrecid", entity.icscrecid);
         row.SetField("kitrollty", entity.kitrollty);
         row.SetField("pricingmodified", entity.pricingmodified);
         row.SetField("percentmodified", entity.percentmodified);
         row.SetField("percentofmodified", entity.percentofmodified);
         row.SetField("hightolprice", entity.hightolprice);
         row.SetField("lowtolprice", entity.lowtolprice);
         row.SetField("lastdisclevel", entity.lastdisclevel);
         row.SetField("lastpricelevel", entity.lastpricelevel);
         row.SetField("lastpreviousprc", entity.lastpreviousprc);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
