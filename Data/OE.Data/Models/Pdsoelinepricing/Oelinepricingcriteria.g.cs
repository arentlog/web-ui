//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.OE.Data.Models.Pdsoelinepricing
{
   [ModelName("Infor.Sxe.OE.Data.Models.Pdsoelinepricing.Oelinepricingcriteria")]
   public partial class Oelinepricingcriteria : ModelBase
   {
      public decimal custno { get; set; }
      [StringValidationAttribute]
      public string shipto { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      [StringValidationAttribute]
      public string prod { get; set; }
      public decimal qtyord { get; set; }
      [StringValidationAttribute]
      public string unit { get; set; }
      [StringValidationAttribute]
      public string lineid { get; set; }
      public int orderno { get; set; }
      public int ordersuf { get; set; }
      [StringValidationAttribute]
      public string customfield { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }
      public decimal price { get; set; }
      public bool checknonstandprods { get; set; }


      public static Oelinepricingcriteria BuildOelinepricingcriteriaFromRow(DataRow row)
      {
         Oelinepricingcriteria entity = new Oelinepricingcriteria();
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.qtyord = row.IsNull("qtyord") ? decimal.Zero : row.Field<decimal>("qtyord");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.lineid = row.IsNull("lineid") ? string.Empty : row.Field<string>("lineid");
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.customfield = row.IsNull("customfield") ? string.Empty : row.Field<string>("customfield");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         entity.price = row.IsNull("price") ? decimal.Zero : row.Field<decimal>("price");
         entity.checknonstandprods = row.Field<bool>("checknonstandprods");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOelinepricingcriteria(ref DataRow row, Oelinepricingcriteria entity)
      {
         row.SetField("custno", entity.custno);
         row.SetField("shipto", entity.shipto);
         row.SetField("whse", entity.whse);
         row.SetField("prod", entity.prod);
         row.SetField("qtyord", entity.qtyord);
         row.SetField("unit", entity.unit);
         row.SetField("lineid", entity.lineid);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("customfield", entity.customfield);
         row.SetField("userfield", entity.userfield);
         row.SetField("price", entity.price);
         row.SetField("checknonstandprods", entity.checknonstandprods);

      }
   
   }
}
#pragma warning restore 1591
