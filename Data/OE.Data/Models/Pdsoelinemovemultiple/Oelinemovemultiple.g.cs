//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.OE.Data.Models.Pdsoelinemovemultiple
{
   [ModelName("Infor.Sxe.OE.Data.Models.Pdsoelinemovemultiple.Oelinemovemultiple")]
   public partial class Oelinemovemultiple : ModelBase
   {
      public decimal internalseqno { get; set; }
      public bool selectedfl { get; set; }
      public int actlnewlineno { get; set; }
      public int actlnewcommintseq { get; set; }
      public int actlnewcommseq { get; set; }
      public decimal actlprice { get; set; }
      public decimal actlnetord { get; set; }
      public decimal actldiscamt { get; set; }
      public bool actldisctype { get; set; }
      public decimal actlqtyord { get; set; }
      public bool actlprintpricefl { get; set; }
      public decimal actltotalcost { get; set; }
      public decimal actlmarginamt { get; set; }
      public decimal actlmarginnet { get; set; }
      public decimal actlcustrebamt { get; set; }
      public decimal actlvendrebamt { get; set; }
      public decimal actlcost { get; set; }
      public decimal actlnetcost { get; set; }
      [StringValidationAttribute]
      public string dsplnewlineno { get; set; }
      [StringValidationAttribute]
      public string dsploriglineno { get; set; }
      [StringValidationAttribute]
      public string dsplqtyord { get; set; }
      [StringValidationAttribute]
      public string dsplprice { get; set; }
      [StringValidationAttribute]
      public string dspldiscamt { get; set; }
      [StringValidationAttribute]
      public string dspldisctype { get; set; }
      [StringValidationAttribute]
      public string dsplnetord { get; set; }
      [StringValidationAttribute]
      public string dsplprintpricefl { get; set; }
      [StringValidationAttribute]
      public string dsplcost { get; set; }
      [StringValidationAttribute]
      public string dsplnetcost { get; set; }
      public bool subtotalrecordfl { get; set; }
      [StringValidationAttribute]
      public string specnstype { get; set; }
      public int origcommln { get; set; }
      public int origcommintseq { get; set; }
      public int origcommseq { get; set; }
      [StringValidationAttribute]
      public string origshipprod { get; set; }
      [StringValidationAttribute]
      public string origdescrip { get; set; }
      public bool deletefl { get; set; }
      [StringValidationAttribute]
      public string botype { get; set; }
      [StringValidationAttribute]
      public string shipprod { get; set; }
      [StringValidationAttribute]
      public string descrip { get; set; }
      [StringValidationAttribute]
      public string lastupdate { get; set; }
      public long oeelrecid { get; set; }
      public decimal csunperstk { get; set; }
      public int specconv { get; set; }
      [StringValidationAttribute]
      public string prccostper { get; set; }
      [StringValidationAttribute]
      public string speccostty { get; set; }
      public int icspecrecno { get; set; }
      public bool commentfl { get; set; }
      [StringValidationAttribute]
      public string notesfl { get; set; }
      public int lineorderno { get; set; }
      public int lineordersuf { get; set; }
      [StringValidationAttribute]
      public string priceclty { get; set; }
      public decimal pricecd { get; set; }
      public bool manprice { get; set; }
      public decimal pricelevel { get; set; }
      public decimal priceover { get; set; }
      public bool pricereset { get; set; }
      public int pdrecno { get; set; }
      public bool hardpricefl { get; set; }
      public bool costoverfl { get; set; }
      [StringValidationAttribute]
      public string costtype { get; set; }
      [StringValidationAttribute]
      public string overridetype { get; set; }
      public decimal hightolprice { get; set; }
      public decimal lowtolprice { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Oelinemovemultiple BuildOelinemovemultipleFromRow(DataRow row)
      {
         Oelinemovemultiple entity = new Oelinemovemultiple();
         entity.internalseqno = row.IsNull("internalseqno") ? decimal.Zero : row.Field<decimal>("internalseqno");
         entity.selectedfl = row.Field<bool>("selectedfl");
         entity.actlnewlineno = row.IsNull("actlnewlineno") ? 0 : row.Field<int>("actlnewlineno");
         entity.actlnewcommintseq = row.IsNull("actlnewcommintseq") ? 0 : row.Field<int>("actlnewcommintseq");
         entity.actlnewcommseq = row.IsNull("actlnewcommseq") ? 0 : row.Field<int>("actlnewcommseq");
         entity.actlprice = row.IsNull("actlprice") ? decimal.Zero : row.Field<decimal>("actlprice");
         entity.actlnetord = row.IsNull("actlnetord") ? decimal.Zero : row.Field<decimal>("actlnetord");
         entity.actldiscamt = row.IsNull("actldiscamt") ? decimal.Zero : row.Field<decimal>("actldiscamt");
         entity.actldisctype = row.Field<bool>("actldisctype");
         entity.actlqtyord = row.IsNull("actlqtyord") ? decimal.Zero : row.Field<decimal>("actlqtyord");
         entity.actlprintpricefl = row.Field<bool>("actlprintpricefl");
         entity.actltotalcost = row.IsNull("actltotalcost") ? decimal.Zero : row.Field<decimal>("actltotalcost");
         entity.actlmarginamt = row.IsNull("actlmarginamt") ? decimal.Zero : row.Field<decimal>("actlmarginamt");
         entity.actlmarginnet = row.IsNull("actlmarginnet") ? decimal.Zero : row.Field<decimal>("actlmarginnet");
         entity.actlcustrebamt = row.IsNull("actlcustrebamt") ? decimal.Zero : row.Field<decimal>("actlcustrebamt");
         entity.actlvendrebamt = row.IsNull("actlvendrebamt") ? decimal.Zero : row.Field<decimal>("actlvendrebamt");
         entity.actlcost = row.IsNull("actlcost") ? decimal.Zero : row.Field<decimal>("actlcost");
         entity.actlnetcost = row.IsNull("actlnetcost") ? decimal.Zero : row.Field<decimal>("actlnetcost");
         entity.dsplnewlineno = row.IsNull("dsplnewlineno") ? string.Empty : row.Field<string>("dsplnewlineno");
         entity.dsploriglineno = row.IsNull("dsploriglineno") ? string.Empty : row.Field<string>("dsploriglineno");
         entity.dsplqtyord = row.IsNull("dsplqtyord") ? string.Empty : row.Field<string>("dsplqtyord");
         entity.dsplprice = row.IsNull("dsplprice") ? string.Empty : row.Field<string>("dsplprice");
         entity.dspldiscamt = row.IsNull("dspldiscamt") ? string.Empty : row.Field<string>("dspldiscamt");
         entity.dspldisctype = row.IsNull("dspldisctype") ? string.Empty : row.Field<string>("dspldisctype");
         entity.dsplnetord = row.IsNull("dsplnetord") ? string.Empty : row.Field<string>("dsplnetord");
         entity.dsplprintpricefl = row.IsNull("dsplprintpricefl") ? string.Empty : row.Field<string>("dsplprintpricefl");
         entity.dsplcost = row.IsNull("dsplcost") ? string.Empty : row.Field<string>("dsplcost");
         entity.dsplnetcost = row.IsNull("dsplnetcost") ? string.Empty : row.Field<string>("dsplnetcost");
         entity.subtotalrecordfl = row.Field<bool>("subtotalrecordfl");
         entity.specnstype = row.IsNull("specnstype") ? string.Empty : row.Field<string>("specnstype");
         entity.origcommln = row.IsNull("origcommln") ? 0 : row.Field<int>("origcommln");
         entity.origcommintseq = row.IsNull("origcommintseq") ? 0 : row.Field<int>("origcommintseq");
         entity.origcommseq = row.IsNull("origcommseq") ? 0 : row.Field<int>("origcommseq");
         entity.origshipprod = row.IsNull("origshipprod") ? string.Empty : row.Field<string>("origshipprod");
         entity.origdescrip = row.IsNull("origdescrip") ? string.Empty : row.Field<string>("origdescrip");
         entity.deletefl = row.Field<bool>("deletefl");
         entity.botype = row.IsNull("botype") ? string.Empty : row.Field<string>("botype");
         entity.shipprod = row.IsNull("shipprod") ? string.Empty : row.Field<string>("shipprod");
         entity.descrip = row.IsNull("descrip") ? string.Empty : row.Field<string>("descrip");
         entity.lastupdate = row.IsNull("lastupdate") ? string.Empty : row.Field<string>("lastupdate");
         entity.oeelrecid = row.IsNull("oeelrecid") ? 0 : row.Field<long>("oeelrecid");
         entity.csunperstk = row.IsNull("csunperstk") ? decimal.Zero : row.Field<decimal>("csunperstk");
         entity.specconv = row.IsNull("specconv") ? 0 : row.Field<int>("specconv");
         entity.prccostper = row.IsNull("prccostper") ? string.Empty : row.Field<string>("prccostper");
         entity.speccostty = row.IsNull("speccostty") ? string.Empty : row.Field<string>("speccostty");
         entity.icspecrecno = row.IsNull("icspecrecno") ? 0 : row.Field<int>("icspecrecno");
         entity.commentfl = row.Field<bool>("commentfl");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.lineorderno = row.IsNull("lineorderno") ? 0 : row.Field<int>("lineorderno");
         entity.lineordersuf = row.IsNull("lineordersuf") ? 0 : row.Field<int>("lineordersuf");
         entity.priceclty = row.IsNull("priceclty") ? string.Empty : row.Field<string>("priceclty");
         entity.pricecd = row.IsNull("pricecd") ? decimal.Zero : row.Field<decimal>("pricecd");
         entity.manprice = row.Field<bool>("manprice");
         entity.pricelevel = row.IsNull("pricelevel") ? decimal.Zero : row.Field<decimal>("pricelevel");
         entity.priceover = row.IsNull("priceover") ? decimal.Zero : row.Field<decimal>("priceover");
         entity.pricereset = row.Field<bool>("pricereset");
         entity.pdrecno = row.IsNull("pdrecno") ? 0 : row.Field<int>("pdrecno");
         entity.hardpricefl = row.Field<bool>("hardpricefl");
         entity.costoverfl = row.Field<bool>("costoverfl");
         entity.costtype = row.IsNull("costtype") ? string.Empty : row.Field<string>("costtype");
         entity.overridetype = row.IsNull("overridetype") ? string.Empty : row.Field<string>("overridetype");
         entity.hightolprice = row.IsNull("hightolprice") ? decimal.Zero : row.Field<decimal>("hightolprice");
         entity.lowtolprice = row.IsNull("lowtolprice") ? decimal.Zero : row.Field<decimal>("lowtolprice");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOelinemovemultiple(ref DataRow row, Oelinemovemultiple entity)
      {
         row.SetField("internalseqno", entity.internalseqno);
         row.SetField("selectedfl", entity.selectedfl);
         row.SetField("actlnewlineno", entity.actlnewlineno);
         row.SetField("actlnewcommintseq", entity.actlnewcommintseq);
         row.SetField("actlnewcommseq", entity.actlnewcommseq);
         row.SetField("actlprice", entity.actlprice);
         row.SetField("actlnetord", entity.actlnetord);
         row.SetField("actldiscamt", entity.actldiscamt);
         row.SetField("actldisctype", entity.actldisctype);
         row.SetField("actlqtyord", entity.actlqtyord);
         row.SetField("actlprintpricefl", entity.actlprintpricefl);
         row.SetField("actltotalcost", entity.actltotalcost);
         row.SetField("actlmarginamt", entity.actlmarginamt);
         row.SetField("actlmarginnet", entity.actlmarginnet);
         row.SetField("actlcustrebamt", entity.actlcustrebamt);
         row.SetField("actlvendrebamt", entity.actlvendrebamt);
         row.SetField("actlcost", entity.actlcost);
         row.SetField("actlnetcost", entity.actlnetcost);
         row.SetField("dsplnewlineno", entity.dsplnewlineno);
         row.SetField("dsploriglineno", entity.dsploriglineno);
         row.SetField("dsplqtyord", entity.dsplqtyord);
         row.SetField("dsplprice", entity.dsplprice);
         row.SetField("dspldiscamt", entity.dspldiscamt);
         row.SetField("dspldisctype", entity.dspldisctype);
         row.SetField("dsplnetord", entity.dsplnetord);
         row.SetField("dsplprintpricefl", entity.dsplprintpricefl);
         row.SetField("dsplcost", entity.dsplcost);
         row.SetField("dsplnetcost", entity.dsplnetcost);
         row.SetField("subtotalrecordfl", entity.subtotalrecordfl);
         row.SetField("specnstype", entity.specnstype);
         row.SetField("origcommln", entity.origcommln);
         row.SetField("origcommintseq", entity.origcommintseq);
         row.SetField("origcommseq", entity.origcommseq);
         row.SetField("origshipprod", entity.origshipprod);
         row.SetField("origdescrip", entity.origdescrip);
         row.SetField("deletefl", entity.deletefl);
         row.SetField("botype", entity.botype);
         row.SetField("shipprod", entity.shipprod);
         row.SetField("descrip", entity.descrip);
         row.SetField("lastupdate", entity.lastupdate);
         row.SetField("oeelrecid", entity.oeelrecid);
         row.SetField("csunperstk", entity.csunperstk);
         row.SetField("specconv", entity.specconv);
         row.SetField("prccostper", entity.prccostper);
         row.SetField("speccostty", entity.speccostty);
         row.SetField("icspecrecno", entity.icspecrecno);
         row.SetField("commentfl", entity.commentfl);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("lineorderno", entity.lineorderno);
         row.SetField("lineordersuf", entity.lineordersuf);
         row.SetField("priceclty", entity.priceclty);
         row.SetField("pricecd", entity.pricecd);
         row.SetField("manprice", entity.manprice);
         row.SetField("pricelevel", entity.pricelevel);
         row.SetField("priceover", entity.priceover);
         row.SetField("pricereset", entity.pricereset);
         row.SetField("pdrecno", entity.pdrecno);
         row.SetField("hardpricefl", entity.hardpricefl);
         row.SetField("costoverfl", entity.costoverfl);
         row.SetField("costtype", entity.costtype);
         row.SetField("overridetype", entity.overridetype);
         row.SetField("hightolprice", entity.hightolprice);
         row.SetField("lowtolprice", entity.lowtolprice);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
