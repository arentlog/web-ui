//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.OE.Data.Models.Pdsoeordercopy
{
   [ModelName("Infor.Sxe.OE.Data.Models.Pdsoeordercopy.Oeordercopy")]
   public partial class Oeordercopy : ModelBase
   {
      public bool autoapplycreditfl { get; set; }
      public bool btncancelenabled { get; set; }
      public bool btncopyenabled { get; set; }
      [StringValidationAttribute]
      public string btnexitlabel { get; set; }
      public bool btnordlistenabled { get; set; }
      public bool btnrevisionenabled { get; set; }
      public bool btnselectlinesenabled { get; set; }
      public bool btnvalidateenabled { get; set; }
      public bool copycommentsfl { get; set; }
      public bool copycommentsflenabled { get; set; }
      public bool copyedi { get; set; }
      public bool copyedienabled { get; set; }
      public bool copyintextsubtotsfl { get; set; }
      public bool copyintextsubtotsflenabled { get; set; }
      public bool copynotesfl { get; set; }
      public bool copynotesflenabled { get; set; }
      public bool copyncnrfl { get; set; }
      public bool copyncnrflenabled { get; set; }
      public decimal custno { get; set; }
      public bool custnoenabled { get; set; }
      [StringValidationAttribute]
      public string custpo { get; set; }
      public bool custpoenabled { get; set; }
      [StringValidationAttribute]
      public string disposition { get; set; }
      public bool dispositionenabled { get; set; }
      [StringValidationAttribute]
      public string fabwhsemethod { get; set; }
      public bool fabwhsemethodenabled { get; set; }
      public decimal fpcustno { get; set; }
      public bool freezepricesfl { get; set; }
      public bool freezepricesflenabled { get; set; }
      public bool fulfillmentordfl { get; set; }
      public decimal invoiceto { get; set; }
      public bool invoicetoenabled { get; set; }
      [StringValidationAttribute]
      public string neworderno { get; set; }
      [StringValidationAttribute]
      public string neworderrowid { get; set; }
      [StringValidationAttribute]
      public string newordernotesfl { get; set; }
      public int orderno { get; set; }
      public bool ordernoenabled { get; set; }
      public int ordersuf { get; set; }
      [StringValidationAttribute]
      public string origincd { get; set; }
      public bool origincdenabled { get; set; }
      public DateTime? origpromisedt { get; set; }
      [StringValidationAttribute]
      public string pdscmessage { get; set; }
      public bool pdscmessagehidden { get; set; }
      [StringValidationAttribute]
      public string pdscmessagelabel { get; set; }
      public bool pdscmessagelabelhidden { get; set; }
      [StringValidationAttribute]
      public string reason { get; set; }
      public bool reasonenabled { get; set; }
      public bool reasonhidden { get; set; }
      public bool recalccostfl { get; set; }
      public bool recalccostflenabled { get; set; }
      public bool recalccostflhidden { get; set; }
      [StringValidationAttribute]
      public string refer { get; set; }
      public int repairordno { get; set; }
      public int repairordsuf { get; set; }
      public bool repricefl { get; set; }
      public bool repriceflenabled { get; set; }
      public bool resetaddonsfl { get; set; }
      public bool resetaddonsflenabled { get; set; }
      [StringValidationAttribute]
      public string saleswhse { get; set; }
      public bool savefl { get; set; }
      public bool saveflenabled { get; set; }
      public bool saveflhidden { get; set; }
      [StringValidationAttribute]
      public string shipto { get; set; }
      public bool shiptoenabled { get; set; }
      [StringValidationAttribute]
      public string shiptonm { get; set; }
      [StringValidationAttribute]
      public string slsrepin { get; set; }
      public bool slsrepinenabled { get; set; }
      [StringValidationAttribute]
      public string slsrepout { get; set; }
      public bool slsrepoutenabled { get; set; }
      [StringValidationAttribute]
      public string stage { get; set; }
      [StringValidationAttribute]
      public string transtype { get; set; }
      [StringValidationAttribute]
      public string type { get; set; }
      public bool typeenabled { get; set; }
      [StringValidationAttribute]
      public string varolllines { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      public bool whseenabled { get; set; }
      public bool mDOConfirmFl { get; set; }
      public int mDOCono { get; set; }
      public DateTime? mDODueDt { get; set; }
      public bool mDOFOBFl { get; set; }
      public int mDOShipFmNo { get; set; }
      [StringValidationAttribute]
      public string mDOShipViaTy { get; set; }
      [StringValidationAttribute]
      public string mDOType { get; set; }
      public decimal mDOVendNo { get; set; }
      [StringValidationAttribute]
      public string mDOWhse { get; set; }
      [StringValidationAttribute]
      public string mMaintMode { get; set; }
      [StringValidationAttribute]
      public string mTransType { get; set; }
      [StringValidationAttribute]
      public string mWhse { get; set; }
      [StringValidationAttribute]
      public string cCountry { get; set; }
      [StringValidationAttribute]
      public string cHomeWhse { get; set; }
      [StringValidationAttribute]
      public string cOESlsrepFl { get; set; }
      [StringValidationAttribute]
      public string cOETieType { get; set; }
      [StringValidationAttribute]
      public string cOETrnType { get; set; }
      [StringValidationAttribute]
      public string cOrderType { get; set; }
      [StringValidationAttribute]
      public string cOrigTransType { get; set; }
      [StringValidationAttribute]
      public string cTaxInterfaceTy { get; set; }
      [StringValidationAttribute]
      public string cTaxMethodTy { get; set; }
      public decimal dLumpBillAmt { get; set; }
      public int iSecure { get; set; }
      public bool lCredPostFl { get; set; }
      public bool lGLDivFl { get; set; }
      public bool lHomeWhseFl { get; set; }
      public bool lLumpBillFl { get; set; }
      public bool lLumpPriceFl { get; set; }
      public bool lOEDivFl { get; set; }
      public bool lOEDupFl { get; set; }
      public bool lOEOnlyFl { get; set; }
      public bool lOrdListFl { get; set; }
      public bool lPDLevel1Fl { get; set; }
      public bool lReturnPostFl { get; set; }
      public int invno { get; set; }
      public int invsuf { get; set; }
      public int crlineno { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Oeordercopy BuildOeordercopyFromRow(DataRow row)
      {
         Oeordercopy entity = new Oeordercopy();
         entity.autoapplycreditfl = row.Field<bool>("autoapplycreditfl");
         entity.btncancelenabled = row.Field<bool>("btncancelenabled");
         entity.btncopyenabled = row.Field<bool>("btncopyenabled");
         entity.btnexitlabel = row.IsNull("btnexitlabel") ? string.Empty : row.Field<string>("btnexitlabel");
         entity.btnordlistenabled = row.Field<bool>("btnordlistenabled");
         entity.btnrevisionenabled = row.Field<bool>("btnrevisionenabled");
         entity.btnselectlinesenabled = row.Field<bool>("btnselectlinesenabled");
         entity.btnvalidateenabled = row.Field<bool>("btnvalidateenabled");
         entity.copycommentsfl = row.Field<bool>("copycommentsfl");
         entity.copycommentsflenabled = row.Field<bool>("copycommentsflenabled");
         entity.copyedi = row.Field<bool>("copyedi");
         entity.copyedienabled = row.Field<bool>("copyedienabled");
         entity.copyintextsubtotsfl = row.Field<bool>("copyintextsubtotsfl");
         entity.copyintextsubtotsflenabled = row.Field<bool>("copyintextsubtotsflenabled");
         entity.copynotesfl = row.Field<bool>("copynotesfl");
         entity.copynotesflenabled = row.Field<bool>("copynotesflenabled");
         entity.copyncnrfl = row.Field<bool>("copyncnrfl");
         entity.copyncnrflenabled = row.Field<bool>("copyncnrflenabled");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.custnoenabled = row.Field<bool>("custnoenabled");
         entity.custpo = row.IsNull("custpo") ? string.Empty : row.Field<string>("custpo");
         entity.custpoenabled = row.Field<bool>("custpoenabled");
         entity.disposition = row.IsNull("disposition") ? string.Empty : row.Field<string>("disposition");
         entity.dispositionenabled = row.Field<bool>("dispositionenabled");
         entity.fabwhsemethod = row.IsNull("fabwhsemethod") ? string.Empty : row.Field<string>("fabwhsemethod");
         entity.fabwhsemethodenabled = row.Field<bool>("fabwhsemethodenabled");
         entity.fpcustno = row.IsNull("fpcustno") ? decimal.Zero : row.Field<decimal>("fpcustno");
         entity.freezepricesfl = row.Field<bool>("freezepricesfl");
         entity.freezepricesflenabled = row.Field<bool>("freezepricesflenabled");
         entity.fulfillmentordfl = row.Field<bool>("fulfillmentordfl");
         entity.invoiceto = row.IsNull("invoiceto") ? decimal.Zero : row.Field<decimal>("invoiceto");
         entity.invoicetoenabled = row.Field<bool>("invoicetoenabled");
         entity.neworderno = row.IsNull("neworderno") ? string.Empty : row.Field<string>("neworderno");
         entity.neworderrowid = row.Field<byte[]>("neworderrowid").ToStringEncoded();
         entity.newordernotesfl = row.IsNull("newordernotesfl") ? string.Empty : row.Field<string>("newordernotesfl");
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordernoenabled = row.Field<bool>("ordernoenabled");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.origincd = row.IsNull("origincd") ? string.Empty : row.Field<string>("origincd");
         entity.origincdenabled = row.Field<bool>("origincdenabled");
         entity.origpromisedt = row.Field<DateTime?>("origpromisedt");
         entity.pdscmessage = row.IsNull("pdscmessage") ? string.Empty : row.Field<string>("pdscmessage");
         entity.pdscmessagehidden = row.Field<bool>("pdscmessagehidden");
         entity.pdscmessagelabel = row.IsNull("pdscmessagelabel") ? string.Empty : row.Field<string>("pdscmessagelabel");
         entity.pdscmessagelabelhidden = row.Field<bool>("pdscmessagelabelhidden");
         entity.reason = row.IsNull("reason") ? string.Empty : row.Field<string>("reason");
         entity.reasonenabled = row.Field<bool>("reasonenabled");
         entity.reasonhidden = row.Field<bool>("reasonhidden");
         entity.recalccostfl = row.Field<bool>("recalccostfl");
         entity.recalccostflenabled = row.Field<bool>("recalccostflenabled");
         entity.recalccostflhidden = row.Field<bool>("recalccostflhidden");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.repairordno = row.IsNull("repairordno") ? 0 : row.Field<int>("repairordno");
         entity.repairordsuf = row.IsNull("repairordsuf") ? 0 : row.Field<int>("repairordsuf");
         entity.repricefl = row.Field<bool>("repricefl");
         entity.repriceflenabled = row.Field<bool>("repriceflenabled");
         entity.resetaddonsfl = row.Field<bool>("resetaddonsfl");
         entity.resetaddonsflenabled = row.Field<bool>("resetaddonsflenabled");
         entity.saleswhse = row.IsNull("saleswhse") ? string.Empty : row.Field<string>("saleswhse");
         entity.savefl = row.Field<bool>("savefl");
         entity.saveflenabled = row.Field<bool>("saveflenabled");
         entity.saveflhidden = row.Field<bool>("saveflhidden");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.shiptoenabled = row.Field<bool>("shiptoenabled");
         entity.shiptonm = row.IsNull("shiptonm") ? string.Empty : row.Field<string>("shiptonm");
         entity.slsrepin = row.IsNull("slsrepin") ? string.Empty : row.Field<string>("slsrepin");
         entity.slsrepinenabled = row.Field<bool>("slsrepinenabled");
         entity.slsrepout = row.IsNull("slsrepout") ? string.Empty : row.Field<string>("slsrepout");
         entity.slsrepoutenabled = row.Field<bool>("slsrepoutenabled");
         entity.stage = row.IsNull("stage") ? string.Empty : row.Field<string>("stage");
         entity.transtype = row.IsNull("transtype") ? string.Empty : row.Field<string>("transtype");
         entity.type = row.IsNull("type") ? string.Empty : row.Field<string>("type");
         entity.typeenabled = row.Field<bool>("typeenabled");
         entity.varolllines = row.IsNull("varolllines") ? string.Empty : row.Field<string>("varolllines");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.whseenabled = row.Field<bool>("whseenabled");
         entity.mDOConfirmFl = row.Field<bool>("mDOConfirmFl");
         entity.mDOCono = row.IsNull("mDOCono") ? 0 : row.Field<int>("mDOCono");
         entity.mDODueDt = row.Field<DateTime?>("mDODueDt");
         entity.mDOFOBFl = row.Field<bool>("mDOFOBFl");
         entity.mDOShipFmNo = row.IsNull("mDOShipFmNo") ? 0 : row.Field<int>("mDOShipFmNo");
         entity.mDOShipViaTy = row.IsNull("mDOShipViaTy") ? string.Empty : row.Field<string>("mDOShipViaTy");
         entity.mDOType = row.IsNull("mDOType") ? string.Empty : row.Field<string>("mDOType");
         entity.mDOVendNo = row.IsNull("mDOVendNo") ? decimal.Zero : row.Field<decimal>("mDOVendNo");
         entity.mDOWhse = row.IsNull("mDOWhse") ? string.Empty : row.Field<string>("mDOWhse");
         entity.mMaintMode = row.IsNull("mMaintMode") ? string.Empty : row.Field<string>("mMaintMode");
         entity.mTransType = row.IsNull("mTransType") ? string.Empty : row.Field<string>("mTransType");
         entity.mWhse = row.IsNull("mWhse") ? string.Empty : row.Field<string>("mWhse");
         entity.cCountry = row.IsNull("cCountry") ? string.Empty : row.Field<string>("cCountry");
         entity.cHomeWhse = row.IsNull("cHomeWhse") ? string.Empty : row.Field<string>("cHomeWhse");
         entity.cOESlsrepFl = row.IsNull("cOESlsrepFl") ? string.Empty : row.Field<string>("cOESlsrepFl");
         entity.cOETieType = row.IsNull("cOETieType") ? string.Empty : row.Field<string>("cOETieType");
         entity.cOETrnType = row.IsNull("cOETrnType") ? string.Empty : row.Field<string>("cOETrnType");
         entity.cOrderType = row.IsNull("cOrderType") ? string.Empty : row.Field<string>("cOrderType");
         entity.cOrigTransType = row.IsNull("cOrigTransType") ? string.Empty : row.Field<string>("cOrigTransType");
         entity.cTaxInterfaceTy = row.IsNull("cTaxInterfaceTy") ? string.Empty : row.Field<string>("cTaxInterfaceTy");
         entity.cTaxMethodTy = row.IsNull("cTaxMethodTy") ? string.Empty : row.Field<string>("cTaxMethodTy");
         entity.dLumpBillAmt = row.IsNull("dLumpBillAmt") ? decimal.Zero : row.Field<decimal>("dLumpBillAmt");
         entity.iSecure = row.IsNull("iSecure") ? 0 : row.Field<int>("iSecure");
         entity.lCredPostFl = row.Field<bool>("lCredPostFl");
         entity.lGLDivFl = row.Field<bool>("lGLDivFl");
         entity.lHomeWhseFl = row.Field<bool>("lHomeWhseFl");
         entity.lLumpBillFl = row.Field<bool>("lLumpBillFl");
         entity.lLumpPriceFl = row.Field<bool>("lLumpPriceFl");
         entity.lOEDivFl = row.Field<bool>("lOEDivFl");
         entity.lOEDupFl = row.Field<bool>("lOEDupFl");
         entity.lOEOnlyFl = row.Field<bool>("lOEOnlyFl");
         entity.lOrdListFl = row.Field<bool>("lOrdListFl");
         entity.lPDLevel1Fl = row.Field<bool>("lPDLevel1Fl");
         entity.lReturnPostFl = row.Field<bool>("lReturnPostFl");
         entity.invno = row.IsNull("invno") ? 0 : row.Field<int>("invno");
         entity.invsuf = row.IsNull("invsuf") ? 0 : row.Field<int>("invsuf");
         entity.crlineno = row.IsNull("crlineno") ? 0 : row.Field<int>("crlineno");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOeordercopy(ref DataRow row, Oeordercopy entity)
      {
         row.SetField("autoapplycreditfl", entity.autoapplycreditfl);
         row.SetField("btncancelenabled", entity.btncancelenabled);
         row.SetField("btncopyenabled", entity.btncopyenabled);
         row.SetField("btnexitlabel", entity.btnexitlabel);
         row.SetField("btnordlistenabled", entity.btnordlistenabled);
         row.SetField("btnrevisionenabled", entity.btnrevisionenabled);
         row.SetField("btnselectlinesenabled", entity.btnselectlinesenabled);
         row.SetField("btnvalidateenabled", entity.btnvalidateenabled);
         row.SetField("copycommentsfl", entity.copycommentsfl);
         row.SetField("copycommentsflenabled", entity.copycommentsflenabled);
         row.SetField("copyedi", entity.copyedi);
         row.SetField("copyedienabled", entity.copyedienabled);
         row.SetField("copyintextsubtotsfl", entity.copyintextsubtotsfl);
         row.SetField("copyintextsubtotsflenabled", entity.copyintextsubtotsflenabled);
         row.SetField("copynotesfl", entity.copynotesfl);
         row.SetField("copynotesflenabled", entity.copynotesflenabled);
         row.SetField("copyncnrfl", entity.copyncnrfl);
         row.SetField("copyncnrflenabled", entity.copyncnrflenabled);
         row.SetField("custno", entity.custno);
         row.SetField("custnoenabled", entity.custnoenabled);
         row.SetField("custpo", entity.custpo);
         row.SetField("custpoenabled", entity.custpoenabled);
         row.SetField("disposition", entity.disposition);
         row.SetField("dispositionenabled", entity.dispositionenabled);
         row.SetField("fabwhsemethod", entity.fabwhsemethod);
         row.SetField("fabwhsemethodenabled", entity.fabwhsemethodenabled);
         row.SetField("fpcustno", entity.fpcustno);
         row.SetField("freezepricesfl", entity.freezepricesfl);
         row.SetField("freezepricesflenabled", entity.freezepricesflenabled);
         row.SetField("fulfillmentordfl", entity.fulfillmentordfl);
         row.SetField("invoiceto", entity.invoiceto);
         row.SetField("invoicetoenabled", entity.invoicetoenabled);
         row.SetField("neworderno", entity.neworderno);
         row.SetField("neworderrowid", entity.neworderrowid.ToByteArray());
         row.SetField("newordernotesfl", entity.newordernotesfl);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordernoenabled", entity.ordernoenabled);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("origincd", entity.origincd);
         row.SetField("origincdenabled", entity.origincdenabled);
         row.SetField("origpromisedt", entity.origpromisedt);
         row.SetField("pdscmessage", entity.pdscmessage);
         row.SetField("pdscmessagehidden", entity.pdscmessagehidden);
         row.SetField("pdscmessagelabel", entity.pdscmessagelabel);
         row.SetField("pdscmessagelabelhidden", entity.pdscmessagelabelhidden);
         row.SetField("reason", entity.reason);
         row.SetField("reasonenabled", entity.reasonenabled);
         row.SetField("reasonhidden", entity.reasonhidden);
         row.SetField("recalccostfl", entity.recalccostfl);
         row.SetField("recalccostflenabled", entity.recalccostflenabled);
         row.SetField("recalccostflhidden", entity.recalccostflhidden);
         row.SetField("refer", entity.refer);
         row.SetField("repairordno", entity.repairordno);
         row.SetField("repairordsuf", entity.repairordsuf);
         row.SetField("repricefl", entity.repricefl);
         row.SetField("repriceflenabled", entity.repriceflenabled);
         row.SetField("resetaddonsfl", entity.resetaddonsfl);
         row.SetField("resetaddonsflenabled", entity.resetaddonsflenabled);
         row.SetField("saleswhse", entity.saleswhse);
         row.SetField("savefl", entity.savefl);
         row.SetField("saveflenabled", entity.saveflenabled);
         row.SetField("saveflhidden", entity.saveflhidden);
         row.SetField("shipto", entity.shipto);
         row.SetField("shiptoenabled", entity.shiptoenabled);
         row.SetField("shiptonm", entity.shiptonm);
         row.SetField("slsrepin", entity.slsrepin);
         row.SetField("slsrepinenabled", entity.slsrepinenabled);
         row.SetField("slsrepout", entity.slsrepout);
         row.SetField("slsrepoutenabled", entity.slsrepoutenabled);
         row.SetField("stage", entity.stage);
         row.SetField("transtype", entity.transtype);
         row.SetField("type", entity.type);
         row.SetField("typeenabled", entity.typeenabled);
         row.SetField("varolllines", entity.varolllines);
         row.SetField("whse", entity.whse);
         row.SetField("whseenabled", entity.whseenabled);
         row.SetField("mDOConfirmFl", entity.mDOConfirmFl);
         row.SetField("mDOCono", entity.mDOCono);
         row.SetField("mDODueDt", entity.mDODueDt);
         row.SetField("mDOFOBFl", entity.mDOFOBFl);
         row.SetField("mDOShipFmNo", entity.mDOShipFmNo);
         row.SetField("mDOShipViaTy", entity.mDOShipViaTy);
         row.SetField("mDOType", entity.mDOType);
         row.SetField("mDOVendNo", entity.mDOVendNo);
         row.SetField("mDOWhse", entity.mDOWhse);
         row.SetField("mMaintMode", entity.mMaintMode);
         row.SetField("mTransType", entity.mTransType);
         row.SetField("mWhse", entity.mWhse);
         row.SetField("cCountry", entity.cCountry);
         row.SetField("cHomeWhse", entity.cHomeWhse);
         row.SetField("cOESlsrepFl", entity.cOESlsrepFl);
         row.SetField("cOETieType", entity.cOETieType);
         row.SetField("cOETrnType", entity.cOETrnType);
         row.SetField("cOrderType", entity.cOrderType);
         row.SetField("cOrigTransType", entity.cOrigTransType);
         row.SetField("cTaxInterfaceTy", entity.cTaxInterfaceTy);
         row.SetField("cTaxMethodTy", entity.cTaxMethodTy);
         row.SetField("dLumpBillAmt", entity.dLumpBillAmt);
         row.SetField("iSecure", entity.iSecure);
         row.SetField("lCredPostFl", entity.lCredPostFl);
         row.SetField("lGLDivFl", entity.lGLDivFl);
         row.SetField("lHomeWhseFl", entity.lHomeWhseFl);
         row.SetField("lLumpBillFl", entity.lLumpBillFl);
         row.SetField("lLumpPriceFl", entity.lLumpPriceFl);
         row.SetField("lOEDivFl", entity.lOEDivFl);
         row.SetField("lOEDupFl", entity.lOEDupFl);
         row.SetField("lOEOnlyFl", entity.lOEOnlyFl);
         row.SetField("lOrdListFl", entity.lOrdListFl);
         row.SetField("lPDLevel1Fl", entity.lPDLevel1Fl);
         row.SetField("lReturnPostFl", entity.lReturnPostFl);
         row.SetField("invno", entity.invno);
         row.SetField("invsuf", entity.invsuf);
         row.SetField("crlineno", entity.crlineno);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
