//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.OE.Data.Models.Pdsoelineoptprod
{
   [ModelName("Infor.Sxe.OE.Data.Models.Pdsoelineoptprod.Oelineoptprodresults")]
   public partial class Oelineoptprodresults : ModelBase
   {
      public decimal seqno { get; set; }
      [StringValidationAttribute]
      public string prod { get; set; }
      [StringValidationAttribute]
      public string notesfl { get; set; }
      [StringValidationAttribute]
      public string proddesc { get; set; }
      [StringValidationAttribute]
      public string proddesc2 { get; set; }
      public decimal qtyship { get; set; }
      [StringValidationAttribute]
      public string unit { get; set; }
      [StringValidationAttribute]
      public string chrg { get; set; }
      public decimal qtyavail { get; set; }
      public decimal qtyavaild { get; set; }
      public decimal conv { get; set; }
      public decimal price { get; set; }
      public bool priceoverfl { get; set; }
      public bool discoverfl { get; set; }
      public decimal discamt { get; set; }
      public bool disctype { get; set; }
      public bool addswoptprodfl { get; set; }
      [StringValidationAttribute]
      public string prodcat { get; set; }
      public bool dsplchrg { get; set; }
      public bool dsplchrgenabled { get; set; }
      [StringValidationAttribute]
      public string optrowid { get; set; }
      public bool addswoptprodaskedfl { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Oelineoptprodresults BuildOelineoptprodresultsFromRow(DataRow row)
      {
         Oelineoptprodresults entity = new Oelineoptprodresults();
         entity.seqno = row.IsNull("seqno") ? decimal.Zero : row.Field<decimal>("seqno");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.proddesc = row.IsNull("proddesc") ? string.Empty : row.Field<string>("proddesc");
         entity.proddesc2 = row.IsNull("proddesc2") ? string.Empty : row.Field<string>("proddesc2");
         entity.qtyship = row.IsNull("qtyship") ? decimal.Zero : row.Field<decimal>("qtyship");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.chrg = row.IsNull("chrg") ? string.Empty : row.Field<string>("chrg");
         entity.qtyavail = row.IsNull("qtyavail") ? decimal.Zero : row.Field<decimal>("qtyavail");
         entity.qtyavaild = row.IsNull("qtyavaild") ? decimal.Zero : row.Field<decimal>("qtyavaild");
         entity.conv = row.IsNull("conv") ? decimal.Zero : row.Field<decimal>("conv");
         entity.price = row.IsNull("price") ? decimal.Zero : row.Field<decimal>("price");
         entity.priceoverfl = row.Field<bool>("priceoverfl");
         entity.discoverfl = row.Field<bool>("discoverfl");
         entity.discamt = row.IsNull("discamt") ? decimal.Zero : row.Field<decimal>("discamt");
         entity.disctype = row.Field<bool>("disctype");
         entity.addswoptprodfl = row.Field<bool>("addswoptprodfl");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.dsplchrg = row.Field<bool>("dsplchrg");
         entity.dsplchrgenabled = row.Field<bool>("dsplchrgenabled");
         entity.optrowid = row.Field<byte[]>("optrowid").ToStringEncoded();
         entity.addswoptprodaskedfl = row.Field<bool>("addswoptprodaskedfl");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOelineoptprodresults(ref DataRow row, Oelineoptprodresults entity)
      {
         row.SetField("seqno", entity.seqno);
         row.SetField("prod", entity.prod);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("proddesc", entity.proddesc);
         row.SetField("proddesc2", entity.proddesc2);
         row.SetField("qtyship", entity.qtyship);
         row.SetField("unit", entity.unit);
         row.SetField("chrg", entity.chrg);
         row.SetField("qtyavail", entity.qtyavail);
         row.SetField("qtyavaild", entity.qtyavaild);
         row.SetField("conv", entity.conv);
         row.SetField("price", entity.price);
         row.SetField("priceoverfl", entity.priceoverfl);
         row.SetField("discoverfl", entity.discoverfl);
         row.SetField("discamt", entity.discamt);
         row.SetField("disctype", entity.disctype);
         row.SetField("addswoptprodfl", entity.addswoptprodfl);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("dsplchrg", entity.dsplchrg);
         row.SetField("dsplchrgenabled", entity.dsplchrgenabled);
         row.SetField("optrowid", entity.optrowid.ToByteArray());
         row.SetField("addswoptprodaskedfl", entity.addswoptprodaskedfl);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
