//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.OE.Data.Models.Pdsloadoetaxsettings
{
   [ModelName("Infor.Sxe.OE.Data.Models.Pdsloadoetaxsettings.Loadoetaxsettingsresults")]
   public partial class Loadoetaxsettingsresults : ModelBase
   {
      [StringValidationAttribute]
      public string taxmethodty { get; set; }
      [StringValidationAttribute]
      public string taxinterfacety { get; set; }
      public bool canoverridefl { get; set; }
      [StringValidationAttribute]
      public string citycd { get; set; }
      [StringValidationAttribute]
      public string countycd { get; set; }
      [StringValidationAttribute]
      public string methodtype { get; set; }
      [StringValidationAttribute]
      public string nontaxtype { get; set; }
      [StringValidationAttribute]
      public string other1cd { get; set; }
      [StringValidationAttribute]
      public string other2cd { get; set; }
      [StringValidationAttribute]
      public string overridetype { get; set; }
      [StringValidationAttribute]
      public string pstlicenseno { get; set; }
      [StringValidationAttribute]
      public string spectaxcd { get; set; }
      [StringValidationAttribute]
      public string statecd { get; set; }
      public bool taxablefl { get; set; }
      [StringValidationAttribute]
      public string taxauth { get; set; }
      public bool taxoverfl { get; set; }
      public bool btnrecalculateenabled { get; set; }
      public bool btnrecalculatehidden { get; set; }
      public bool btnshowtaxableenabled { get; set; }
      public bool btnshowtaxablehidden { get; set; }
      [StringValidationAttribute]
      public string btnshowtaxablelabel { get; set; }
      public bool btntaxdetailenabled { get; set; }
      public bool btntaxdetailhidden { get; set; }
      public bool citycdenabled { get; set; }
      public bool citycdhidden { get; set; }
      public bool countycdenabled { get; set; }
      public bool countycdhidden { get; set; }
      public bool nontaxtypeenabled { get; set; }
      public bool nontaxtypehidden { get; set; }
      public bool other1cdenabled { get; set; }
      public bool other1cdhidden { get; set; }
      public bool other2cdenabled { get; set; }
      public bool other2cdhidden { get; set; }
      public bool overridetypeenabled { get; set; }
      public bool overridetypehidden { get; set; }
      public bool pstlicensenoenabled { get; set; }
      public bool pstlicensenohidden { get; set; }
      public bool spectaxcdenabled { get; set; }
      public bool spectaxcdhidden { get; set; }
      public bool statecdenabled { get; set; }
      public bool statecdhidden { get; set; }
      [StringValidationAttribute]
      public string statecdlabel { get; set; }
      public bool taxableflenabled { get; set; }
      public bool taxableflhidden { get; set; }
      [StringValidationAttribute]
      public string taxablefllabel { get; set; }
      public bool taxauthenabled { get; set; }
      public bool taxauthhidden { get; set; }
      public bool taxoverflhidden { get; set; }


      public static Loadoetaxsettingsresults BuildLoadoetaxsettingsresultsFromRow(DataRow row)
      {
         Loadoetaxsettingsresults entity = new Loadoetaxsettingsresults();
         entity.taxmethodty = row.IsNull("taxmethodty") ? string.Empty : row.Field<string>("taxmethodty");
         entity.taxinterfacety = row.IsNull("taxinterfacety") ? string.Empty : row.Field<string>("taxinterfacety");
         entity.canoverridefl = row.Field<bool>("canoverridefl");
         entity.citycd = row.IsNull("citycd") ? string.Empty : row.Field<string>("citycd");
         entity.countycd = row.IsNull("countycd") ? string.Empty : row.Field<string>("countycd");
         entity.methodtype = row.IsNull("methodtype") ? string.Empty : row.Field<string>("methodtype");
         entity.nontaxtype = row.IsNull("nontaxtype") ? string.Empty : row.Field<string>("nontaxtype");
         entity.other1cd = row.IsNull("other1cd") ? string.Empty : row.Field<string>("other1cd");
         entity.other2cd = row.IsNull("other2cd") ? string.Empty : row.Field<string>("other2cd");
         entity.overridetype = row.IsNull("overridetype") ? string.Empty : row.Field<string>("overridetype");
         entity.pstlicenseno = row.IsNull("pstlicenseno") ? string.Empty : row.Field<string>("pstlicenseno");
         entity.spectaxcd = row.IsNull("spectaxcd") ? string.Empty : row.Field<string>("spectaxcd");
         entity.statecd = row.IsNull("statecd") ? string.Empty : row.Field<string>("statecd");
         entity.taxablefl = row.Field<bool>("taxablefl");
         entity.taxauth = row.IsNull("taxauth") ? string.Empty : row.Field<string>("taxauth");
         entity.taxoverfl = row.Field<bool>("taxoverfl");
         entity.btnrecalculateenabled = row.Field<bool>("btnrecalculateenabled");
         entity.btnrecalculatehidden = row.Field<bool>("btnrecalculatehidden");
         entity.btnshowtaxableenabled = row.Field<bool>("btnshowtaxableenabled");
         entity.btnshowtaxablehidden = row.Field<bool>("btnshowtaxablehidden");
         entity.btnshowtaxablelabel = row.IsNull("btnshowtaxablelabel") ? string.Empty : row.Field<string>("btnshowtaxablelabel");
         entity.btntaxdetailenabled = row.Field<bool>("btntaxdetailenabled");
         entity.btntaxdetailhidden = row.Field<bool>("btntaxdetailhidden");
         entity.citycdenabled = row.Field<bool>("citycdenabled");
         entity.citycdhidden = row.Field<bool>("citycdhidden");
         entity.countycdenabled = row.Field<bool>("countycdenabled");
         entity.countycdhidden = row.Field<bool>("countycdhidden");
         entity.nontaxtypeenabled = row.Field<bool>("nontaxtypeenabled");
         entity.nontaxtypehidden = row.Field<bool>("nontaxtypehidden");
         entity.other1cdenabled = row.Field<bool>("other1cdenabled");
         entity.other1cdhidden = row.Field<bool>("other1cdhidden");
         entity.other2cdenabled = row.Field<bool>("other2cdenabled");
         entity.other2cdhidden = row.Field<bool>("other2cdhidden");
         entity.overridetypeenabled = row.Field<bool>("overridetypeenabled");
         entity.overridetypehidden = row.Field<bool>("overridetypehidden");
         entity.pstlicensenoenabled = row.Field<bool>("pstlicensenoenabled");
         entity.pstlicensenohidden = row.Field<bool>("pstlicensenohidden");
         entity.spectaxcdenabled = row.Field<bool>("spectaxcdenabled");
         entity.spectaxcdhidden = row.Field<bool>("spectaxcdhidden");
         entity.statecdenabled = row.Field<bool>("statecdenabled");
         entity.statecdhidden = row.Field<bool>("statecdhidden");
         entity.statecdlabel = row.IsNull("statecdlabel") ? string.Empty : row.Field<string>("statecdlabel");
         entity.taxableflenabled = row.Field<bool>("taxableflenabled");
         entity.taxableflhidden = row.Field<bool>("taxableflhidden");
         entity.taxablefllabel = row.IsNull("taxablefllabel") ? string.Empty : row.Field<string>("taxablefllabel");
         entity.taxauthenabled = row.Field<bool>("taxauthenabled");
         entity.taxauthhidden = row.Field<bool>("taxauthhidden");
         entity.taxoverflhidden = row.Field<bool>("taxoverflhidden");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromLoadoetaxsettingsresults(ref DataRow row, Loadoetaxsettingsresults entity)
      {
         row.SetField("taxmethodty", entity.taxmethodty);
         row.SetField("taxinterfacety", entity.taxinterfacety);
         row.SetField("canoverridefl", entity.canoverridefl);
         row.SetField("citycd", entity.citycd);
         row.SetField("countycd", entity.countycd);
         row.SetField("methodtype", entity.methodtype);
         row.SetField("nontaxtype", entity.nontaxtype);
         row.SetField("other1cd", entity.other1cd);
         row.SetField("other2cd", entity.other2cd);
         row.SetField("overridetype", entity.overridetype);
         row.SetField("pstlicenseno", entity.pstlicenseno);
         row.SetField("spectaxcd", entity.spectaxcd);
         row.SetField("statecd", entity.statecd);
         row.SetField("taxablefl", entity.taxablefl);
         row.SetField("taxauth", entity.taxauth);
         row.SetField("taxoverfl", entity.taxoverfl);
         row.SetField("btnrecalculateenabled", entity.btnrecalculateenabled);
         row.SetField("btnrecalculatehidden", entity.btnrecalculatehidden);
         row.SetField("btnshowtaxableenabled", entity.btnshowtaxableenabled);
         row.SetField("btnshowtaxablehidden", entity.btnshowtaxablehidden);
         row.SetField("btnshowtaxablelabel", entity.btnshowtaxablelabel);
         row.SetField("btntaxdetailenabled", entity.btntaxdetailenabled);
         row.SetField("btntaxdetailhidden", entity.btntaxdetailhidden);
         row.SetField("citycdenabled", entity.citycdenabled);
         row.SetField("citycdhidden", entity.citycdhidden);
         row.SetField("countycdenabled", entity.countycdenabled);
         row.SetField("countycdhidden", entity.countycdhidden);
         row.SetField("nontaxtypeenabled", entity.nontaxtypeenabled);
         row.SetField("nontaxtypehidden", entity.nontaxtypehidden);
         row.SetField("other1cdenabled", entity.other1cdenabled);
         row.SetField("other1cdhidden", entity.other1cdhidden);
         row.SetField("other2cdenabled", entity.other2cdenabled);
         row.SetField("other2cdhidden", entity.other2cdhidden);
         row.SetField("overridetypeenabled", entity.overridetypeenabled);
         row.SetField("overridetypehidden", entity.overridetypehidden);
         row.SetField("pstlicensenoenabled", entity.pstlicensenoenabled);
         row.SetField("pstlicensenohidden", entity.pstlicensenohidden);
         row.SetField("spectaxcdenabled", entity.spectaxcdenabled);
         row.SetField("spectaxcdhidden", entity.spectaxcdhidden);
         row.SetField("statecdenabled", entity.statecdenabled);
         row.SetField("statecdhidden", entity.statecdhidden);
         row.SetField("statecdlabel", entity.statecdlabel);
         row.SetField("taxableflenabled", entity.taxableflenabled);
         row.SetField("taxableflhidden", entity.taxableflhidden);
         row.SetField("taxablefllabel", entity.taxablefllabel);
         row.SetField("taxauthenabled", entity.taxauthenabled);
         row.SetField("taxauthhidden", entity.taxauthhidden);
         row.SetField("taxoverflhidden", entity.taxoverflhidden);

      }
   
   }
}
#pragma warning restore 1591
