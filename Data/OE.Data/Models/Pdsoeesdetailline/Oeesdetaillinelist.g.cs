//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.OE.Data.Models.Pdsoeesdetailline
{
   [ModelName("Infor.Sxe.OE.Data.Models.Pdsoeesdetailline.Oeesdetaillinelist")]
   public partial class Oeesdetaillinelist : ModelBase
   {
      public int lineno { get; set; }
      public int orderno { get; set; }
      public int ordersuf { get; set; }
      [StringValidationAttribute]
      public string specnstype { get; set; }
      [StringValidationAttribute]
      public string shipprod { get; set; }
      [StringValidationAttribute]
      public string proddesc { get; set; }
      [StringValidationAttribute]
      public string commentfl { get; set; }
      public decimal qtyord { get; set; }
      public decimal stkqtyord { get; set; }
      public decimal qtyship { get; set; }
      public decimal stkqtyship { get; set; }
      public decimal qtyunavail { get; set; }
      public bool returnfl { get; set; }
      public bool returnfl2 { get; set; }
      [StringValidationAttribute]
      public string unit { get; set; }
      public decimal unitconv { get; set; }
      public bool bofl { get; set; }
      [StringValidationAttribute]
      public string dofl { get; set; }
      [StringValidationAttribute]
      public string messagex { get; set; }
      public long oeelrecid { get; set; }
      public bool corechgfl { get; set; }
      public bool kitfl { get; set; }
      [StringValidationAttribute]
      public string serlottype { get; set; }
      public bool wmfl { get; set; }
      public decimal wmqtyship { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      [StringValidationAttribute]
      public string altwhse { get; set; }
      public int retorderno { get; set; }
      public int retordersuf { get; set; }
      public int retlineno { get; set; }
      [StringValidationAttribute]
      public string returnty { get; set; }
      [StringValidationAttribute]
      public string reasunavty { get; set; }
      public decimal csunperstk { get; set; }
      public int specconv { get; set; }
      [StringValidationAttribute]
      public string prccostper { get; set; }
      [StringValidationAttribute]
      public string speccostty { get; set; }
      public int icspecrecno { get; set; }
      [StringValidationAttribute]
      public string botype { get; set; }
      [StringValidationAttribute]
      public string icspstatustype { get; set; }
      [StringValidationAttribute]
      public string kitrollty { get; set; }
      [StringValidationAttribute]
      public string ordertype { get; set; }
      public decimal price { get; set; }
      public decimal prodcost { get; set; }
      public decimal nosnlots { get; set; }
      public bool tallyfl { get; set; }
      public decimal custno { get; set; }
      [StringValidationAttribute]
      public string shipto { get; set; }
      public bool memomixfl { get; set; }
      [StringValidationAttribute]
      public string binloc { get; set; }
      public bool priceoverfl { get; set; }
      [StringValidationAttribute]
      public string priceclty { get; set; }
      public decimal pricecd { get; set; }
      public decimal kitsplitamt { get; set; }
      public int bonoptl { get; set; }
      public decimal weight { get; set; }
      public decimal cube { get; set; }
      public decimal icspweight { get; set; }
      public decimal icspcube { get; set; }
      [StringValidationAttribute]
      public string prodnotes { get; set; }
      public bool qtyshipenabled { get; set; }
      public bool rowenabled { get; set; }
      public bool extendenabled { get; set; }
      public bool cartonlabelenabled { get; set; }
      public bool rereserveenabled { get; set; }
      public bool seriallotenabled { get; set; }
      public bool kitcomponentsenabled { get; set; }
      public bool tallyenabled { get; set; }
      public bool setqtyshiptozeroenabled { get; set; }
      [StringValidationAttribute]
      public string countryoforigin { get; set; }
      [StringValidationAttribute]
      public string tariffcd { get; set; }
      public bool reqbundleidfl { get; set; }
      public bool wmvisiblefl { get; set; }
      public bool msdsfl { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Oeesdetaillinelist BuildOeesdetaillinelistFromRow(DataRow row)
      {
         Oeesdetaillinelist entity = new Oeesdetaillinelist();
         entity.lineno = row.IsNull("lineno") ? 0 : row.Field<int>("lineno");
         entity.orderno = row.IsNull("orderno") ? 0 : row.Field<int>("orderno");
         entity.ordersuf = row.IsNull("ordersuf") ? 0 : row.Field<int>("ordersuf");
         entity.specnstype = row.IsNull("specnstype") ? string.Empty : row.Field<string>("specnstype");
         entity.shipprod = row.IsNull("shipprod") ? string.Empty : row.Field<string>("shipprod");
         entity.proddesc = row.IsNull("proddesc") ? string.Empty : row.Field<string>("proddesc");
         entity.commentfl = row.IsNull("commentfl") ? string.Empty : row.Field<string>("commentfl");
         entity.qtyord = row.IsNull("qtyord") ? decimal.Zero : row.Field<decimal>("qtyord");
         entity.stkqtyord = row.IsNull("stkqtyord") ? decimal.Zero : row.Field<decimal>("stkqtyord");
         entity.qtyship = row.IsNull("qtyship") ? decimal.Zero : row.Field<decimal>("qtyship");
         entity.stkqtyship = row.IsNull("stkqtyship") ? decimal.Zero : row.Field<decimal>("stkqtyship");
         entity.qtyunavail = row.IsNull("qtyunavail") ? decimal.Zero : row.Field<decimal>("qtyunavail");
         entity.returnfl = row.Field<bool>("returnfl");
         entity.returnfl2 = row.Field<bool>("returnfl2");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.unitconv = row.IsNull("unitconv") ? decimal.Zero : row.Field<decimal>("unitconv");
         entity.bofl = row.Field<bool>("bofl");
         entity.dofl = row.IsNull("dofl") ? string.Empty : row.Field<string>("dofl");
         entity.messagex = row.IsNull("messagex") ? string.Empty : row.Field<string>("messagex");
         entity.oeelrecid = row.IsNull("oeelrecid") ? 0 : row.Field<long>("oeelrecid");
         entity.corechgfl = row.Field<bool>("corechgfl");
         entity.kitfl = row.Field<bool>("kitfl");
         entity.serlottype = row.IsNull("serlottype") ? string.Empty : row.Field<string>("serlottype");
         entity.wmfl = row.Field<bool>("wmfl");
         entity.wmqtyship = row.IsNull("wmqtyship") ? decimal.Zero : row.Field<decimal>("wmqtyship");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.altwhse = row.IsNull("altwhse") ? string.Empty : row.Field<string>("altwhse");
         entity.retorderno = row.IsNull("retorderno") ? 0 : row.Field<int>("retorderno");
         entity.retordersuf = row.IsNull("retordersuf") ? 0 : row.Field<int>("retordersuf");
         entity.retlineno = row.IsNull("retlineno") ? 0 : row.Field<int>("retlineno");
         entity.returnty = row.IsNull("returnty") ? string.Empty : row.Field<string>("returnty");
         entity.reasunavty = row.IsNull("reasunavty") ? string.Empty : row.Field<string>("reasunavty");
         entity.csunperstk = row.IsNull("csunperstk") ? decimal.Zero : row.Field<decimal>("csunperstk");
         entity.specconv = row.IsNull("specconv") ? 0 : row.Field<int>("specconv");
         entity.prccostper = row.IsNull("prccostper") ? string.Empty : row.Field<string>("prccostper");
         entity.speccostty = row.IsNull("speccostty") ? string.Empty : row.Field<string>("speccostty");
         entity.icspecrecno = row.IsNull("icspecrecno") ? 0 : row.Field<int>("icspecrecno");
         entity.botype = row.IsNull("botype") ? string.Empty : row.Field<string>("botype");
         entity.icspstatustype = row.IsNull("icspstatustype") ? string.Empty : row.Field<string>("icspstatustype");
         entity.kitrollty = row.IsNull("kitrollty") ? string.Empty : row.Field<string>("kitrollty");
         entity.ordertype = row.IsNull("ordertype") ? string.Empty : row.Field<string>("ordertype");
         entity.price = row.IsNull("price") ? decimal.Zero : row.Field<decimal>("price");
         entity.prodcost = row.IsNull("prodcost") ? decimal.Zero : row.Field<decimal>("prodcost");
         entity.nosnlots = row.IsNull("nosnlots") ? decimal.Zero : row.Field<decimal>("nosnlots");
         entity.tallyfl = row.Field<bool>("tallyfl");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.memomixfl = row.Field<bool>("memomixfl");
         entity.binloc = row.IsNull("binloc") ? string.Empty : row.Field<string>("binloc");
         entity.priceoverfl = row.Field<bool>("priceoverfl");
         entity.priceclty = row.IsNull("priceclty") ? string.Empty : row.Field<string>("priceclty");
         entity.pricecd = row.IsNull("pricecd") ? decimal.Zero : row.Field<decimal>("pricecd");
         entity.kitsplitamt = row.IsNull("kitsplitamt") ? decimal.Zero : row.Field<decimal>("kitsplitamt");
         entity.bonoptl = row.IsNull("bonoptl") ? 0 : row.Field<int>("bonoptl");
         entity.weight = row.IsNull("weight") ? decimal.Zero : row.Field<decimal>("weight");
         entity.cube = row.IsNull("cube") ? decimal.Zero : row.Field<decimal>("cube");
         entity.icspweight = row.IsNull("icspweight") ? decimal.Zero : row.Field<decimal>("icspweight");
         entity.icspcube = row.IsNull("icspcube") ? decimal.Zero : row.Field<decimal>("icspcube");
         entity.prodnotes = row.IsNull("prodnotes") ? string.Empty : row.Field<string>("prodnotes");
         entity.qtyshipenabled = row.Field<bool>("qtyshipenabled");
         entity.rowenabled = row.Field<bool>("rowenabled");
         entity.extendenabled = row.Field<bool>("extendenabled");
         entity.cartonlabelenabled = row.Field<bool>("cartonlabelenabled");
         entity.rereserveenabled = row.Field<bool>("rereserveenabled");
         entity.seriallotenabled = row.Field<bool>("seriallotenabled");
         entity.kitcomponentsenabled = row.Field<bool>("kitcomponentsenabled");
         entity.tallyenabled = row.Field<bool>("tallyenabled");
         entity.setqtyshiptozeroenabled = row.Field<bool>("setqtyshiptozeroenabled");
         entity.countryoforigin = row.IsNull("countryoforigin") ? string.Empty : row.Field<string>("countryoforigin");
         entity.tariffcd = row.IsNull("tariffcd") ? string.Empty : row.Field<string>("tariffcd");
         entity.reqbundleidfl = row.Field<bool>("reqbundleidfl");
         entity.wmvisiblefl = row.Field<bool>("wmvisiblefl");
         entity.msdsfl = row.Field<bool>("msdsfl");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOeesdetaillinelist(ref DataRow row, Oeesdetaillinelist entity)
      {
         row.SetField("lineno", entity.lineno);
         row.SetField("orderno", entity.orderno);
         row.SetField("ordersuf", entity.ordersuf);
         row.SetField("specnstype", entity.specnstype);
         row.SetField("shipprod", entity.shipprod);
         row.SetField("proddesc", entity.proddesc);
         row.SetField("commentfl", entity.commentfl);
         row.SetField("qtyord", entity.qtyord);
         row.SetField("stkqtyord", entity.stkqtyord);
         row.SetField("qtyship", entity.qtyship);
         row.SetField("stkqtyship", entity.stkqtyship);
         row.SetField("qtyunavail", entity.qtyunavail);
         row.SetField("returnfl", entity.returnfl);
         row.SetField("returnfl2", entity.returnfl2);
         row.SetField("unit", entity.unit);
         row.SetField("unitconv", entity.unitconv);
         row.SetField("bofl", entity.bofl);
         row.SetField("dofl", entity.dofl);
         row.SetField("messagex", entity.messagex);
         row.SetField("oeelrecid", entity.oeelrecid);
         row.SetField("corechgfl", entity.corechgfl);
         row.SetField("kitfl", entity.kitfl);
         row.SetField("serlottype", entity.serlottype);
         row.SetField("wmfl", entity.wmfl);
         row.SetField("wmqtyship", entity.wmqtyship);
         row.SetField("whse", entity.whse);
         row.SetField("altwhse", entity.altwhse);
         row.SetField("retorderno", entity.retorderno);
         row.SetField("retordersuf", entity.retordersuf);
         row.SetField("retlineno", entity.retlineno);
         row.SetField("returnty", entity.returnty);
         row.SetField("reasunavty", entity.reasunavty);
         row.SetField("csunperstk", entity.csunperstk);
         row.SetField("specconv", entity.specconv);
         row.SetField("prccostper", entity.prccostper);
         row.SetField("speccostty", entity.speccostty);
         row.SetField("icspecrecno", entity.icspecrecno);
         row.SetField("botype", entity.botype);
         row.SetField("icspstatustype", entity.icspstatustype);
         row.SetField("kitrollty", entity.kitrollty);
         row.SetField("ordertype", entity.ordertype);
         row.SetField("price", entity.price);
         row.SetField("prodcost", entity.prodcost);
         row.SetField("nosnlots", entity.nosnlots);
         row.SetField("tallyfl", entity.tallyfl);
         row.SetField("custno", entity.custno);
         row.SetField("shipto", entity.shipto);
         row.SetField("memomixfl", entity.memomixfl);
         row.SetField("binloc", entity.binloc);
         row.SetField("priceoverfl", entity.priceoverfl);
         row.SetField("priceclty", entity.priceclty);
         row.SetField("pricecd", entity.pricecd);
         row.SetField("kitsplitamt", entity.kitsplitamt);
         row.SetField("bonoptl", entity.bonoptl);
         row.SetField("weight", entity.weight);
         row.SetField("cube", entity.cube);
         row.SetField("icspweight", entity.icspweight);
         row.SetField("icspcube", entity.icspcube);
         row.SetField("prodnotes", entity.prodnotes);
         row.SetField("qtyshipenabled", entity.qtyshipenabled);
         row.SetField("rowenabled", entity.rowenabled);
         row.SetField("extendenabled", entity.extendenabled);
         row.SetField("cartonlabelenabled", entity.cartonlabelenabled);
         row.SetField("rereserveenabled", entity.rereserveenabled);
         row.SetField("seriallotenabled", entity.seriallotenabled);
         row.SetField("kitcomponentsenabled", entity.kitcomponentsenabled);
         row.SetField("tallyenabled", entity.tallyenabled);
         row.SetField("setqtyshiptozeroenabled", entity.setqtyshiptozeroenabled);
         row.SetField("countryoforigin", entity.countryoforigin);
         row.SetField("tariffcd", entity.tariffcd);
         row.SetField("reqbundleidfl", entity.reqbundleidfl);
         row.SetField("wmvisiblefl", entity.wmvisiblefl);
         row.SetField("msdsfl", entity.msdsfl);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
