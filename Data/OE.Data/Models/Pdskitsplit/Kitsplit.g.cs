//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.OE.Data.Models.Pdskitsplit
{
   [ModelName("Infor.Sxe.OE.Data.Models.Pdskitsplit.Kitsplit")]
   public partial class Kitsplit : ModelBase
   {
      public decimal qtyord { get; set; }
      [StringValidationAttribute]
      public string unit { get; set; }
      public decimal price { get; set; }
      public decimal priceorig { get; set; }
      public decimal netamt { get; set; }
      public decimal netamtorig { get; set; }
      public decimal boamt { get; set; }
      public decimal boamtorig { get; set; }
      public decimal bopct { get; set; }
      public decimal unitconv { get; set; }
      [StringValidationAttribute]
      public string specnstype { get; set; }
      [StringValidationAttribute]
      public string speccostty { get; set; }
      public decimal csunperstk { get; set; }
      public decimal priceconv { get; set; }
      public decimal qtyorddspl { get; set; }
      [StringValidationAttribute]
      public string unitdspl { get; set; }
      public decimal pricedspl { get; set; }
      public decimal netamtdspl { get; set; }
      public decimal bopctdspl { get; set; }
      public decimal splitprcdspl { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Kitsplit BuildKitsplitFromRow(DataRow row)
      {
         Kitsplit entity = new Kitsplit();
         entity.qtyord = row.IsNull("qtyord") ? decimal.Zero : row.Field<decimal>("qtyord");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.price = row.IsNull("price") ? decimal.Zero : row.Field<decimal>("price");
         entity.priceorig = row.IsNull("priceorig") ? decimal.Zero : row.Field<decimal>("priceorig");
         entity.netamt = row.IsNull("netamt") ? decimal.Zero : row.Field<decimal>("netamt");
         entity.netamtorig = row.IsNull("netamtorig") ? decimal.Zero : row.Field<decimal>("netamtorig");
         entity.boamt = row.IsNull("boamt") ? decimal.Zero : row.Field<decimal>("boamt");
         entity.boamtorig = row.IsNull("boamtorig") ? decimal.Zero : row.Field<decimal>("boamtorig");
         entity.bopct = row.IsNull("bopct") ? decimal.Zero : row.Field<decimal>("bopct");
         entity.unitconv = row.IsNull("unitconv") ? decimal.Zero : row.Field<decimal>("unitconv");
         entity.specnstype = row.IsNull("specnstype") ? string.Empty : row.Field<string>("specnstype");
         entity.speccostty = row.IsNull("speccostty") ? string.Empty : row.Field<string>("speccostty");
         entity.csunperstk = row.IsNull("csunperstk") ? decimal.Zero : row.Field<decimal>("csunperstk");
         entity.priceconv = row.IsNull("priceconv") ? decimal.Zero : row.Field<decimal>("priceconv");
         entity.qtyorddspl = row.IsNull("qtyorddspl") ? decimal.Zero : row.Field<decimal>("qtyorddspl");
         entity.unitdspl = row.IsNull("unitdspl") ? string.Empty : row.Field<string>("unitdspl");
         entity.pricedspl = row.IsNull("pricedspl") ? decimal.Zero : row.Field<decimal>("pricedspl");
         entity.netamtdspl = row.IsNull("netamtdspl") ? decimal.Zero : row.Field<decimal>("netamtdspl");
         entity.bopctdspl = row.IsNull("bopctdspl") ? decimal.Zero : row.Field<decimal>("bopctdspl");
         entity.splitprcdspl = row.IsNull("splitprcdspl") ? decimal.Zero : row.Field<decimal>("splitprcdspl");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromKitsplit(ref DataRow row, Kitsplit entity)
      {
         row.SetField("qtyord", entity.qtyord);
         row.SetField("unit", entity.unit);
         row.SetField("price", entity.price);
         row.SetField("priceorig", entity.priceorig);
         row.SetField("netamt", entity.netamt);
         row.SetField("netamtorig", entity.netamtorig);
         row.SetField("boamt", entity.boamt);
         row.SetField("boamtorig", entity.boamtorig);
         row.SetField("bopct", entity.bopct);
         row.SetField("unitconv", entity.unitconv);
         row.SetField("specnstype", entity.specnstype);
         row.SetField("speccostty", entity.speccostty);
         row.SetField("csunperstk", entity.csunperstk);
         row.SetField("priceconv", entity.priceconv);
         row.SetField("qtyorddspl", entity.qtyorddspl);
         row.SetField("unitdspl", entity.unitdspl);
         row.SetField("pricedspl", entity.pricedspl);
         row.SetField("netamtdspl", entity.netamtdspl);
         row.SetField("bopctdspl", entity.bopctdspl);
         row.SetField("splitprcdspl", entity.splitprcdspl);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
