//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.OE.Data.Models.Pdsoeesloadorderlist
{
   [ModelName("Infor.Sxe.OE.Data.Models.Pdsoeesloadorderlist.Oeesloadorderlistcriteria")]
   public partial class Oeesloadorderlistcriteria : ModelBase
   {
      public decimal custno { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      [StringValidationAttribute]
      public string types { get; set; }
      [StringValidationAttribute]
      public string sort1 { get; set; }
      [StringValidationAttribute]
      public string sort2 { get; set; }
      [StringValidationAttribute]
      public string pickinit { get; set; }
      [StringValidationAttribute]
      public string stage { get; set; }
      public DateTime? reqshipdt { get; set; }
      [StringValidationAttribute]
      public string shipvia { get; set; }
      [StringValidationAttribute]
      public string route { get; set; }
      public bool tbnotheld { get; set; }
      public bool tbexceptions { get; set; }
      public bool tbship { get; set; }
      public int recordcountlimit { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Oeesloadorderlistcriteria BuildOeesloadorderlistcriteriaFromRow(DataRow row)
      {
         Oeesloadorderlistcriteria entity = new Oeesloadorderlistcriteria();
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.types = row.IsNull("types") ? string.Empty : row.Field<string>("types");
         entity.sort1 = row.IsNull("sort1") ? string.Empty : row.Field<string>("sort1");
         entity.sort2 = row.IsNull("sort2") ? string.Empty : row.Field<string>("sort2");
         entity.pickinit = row.IsNull("pickinit") ? string.Empty : row.Field<string>("pickinit");
         entity.stage = row.IsNull("stage") ? string.Empty : row.Field<string>("stage");
         entity.reqshipdt = row.Field<DateTime?>("reqshipdt");
         entity.shipvia = row.IsNull("shipvia") ? string.Empty : row.Field<string>("shipvia");
         entity.route = row.IsNull("route") ? string.Empty : row.Field<string>("route");
         entity.tbnotheld = row.Field<bool>("tbnotheld");
         entity.tbexceptions = row.Field<bool>("tbexceptions");
         entity.tbship = row.Field<bool>("tbship");
         entity.recordcountlimit = row.IsNull("recordcountlimit") ? 0 : row.Field<int>("recordcountlimit");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromOeesloadorderlistcriteria(ref DataRow row, Oeesloadorderlistcriteria entity)
      {
         row.SetField("custno", entity.custno);
         row.SetField("whse", entity.whse);
         row.SetField("types", entity.types);
         row.SetField("sort1", entity.sort1);
         row.SetField("sort2", entity.sort2);
         row.SetField("pickinit", entity.pickinit);
         row.SetField("stage", entity.stage);
         row.SetField("reqshipdt", entity.reqshipdt);
         row.SetField("shipvia", entity.shipvia);
         row.SetField("route", entity.route);
         row.SetField("tbnotheld", entity.tbnotheld);
         row.SetField("tbexceptions", entity.tbexceptions);
         row.SetField("tbship", entity.tbship);
         row.SetField("recordcountlimit", entity.recordcountlimit);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
