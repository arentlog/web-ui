//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.OE.Data.Models.Pdscoreallocation
{
   [ModelName("Infor.Sxe.OE.Data.Models.Pdscoreallocation.Coreallocationcriteria")]
   public partial class Coreallocationcriteria : ModelBase
   {
      public int iOrderno { get; set; }
      public int iOrdersuf { get; set; }
      public int iLineno { get; set; }
      [StringValidationAttribute]
      public string cProd { get; set; }
      public decimal dCustno { get; set; }
      public decimal dCSUnPerStk { get; set; }
      [StringValidationAttribute]
      public string cSpecCostTy { get; set; }
      [StringValidationAttribute]
      public string cMaintModeL { get; set; }
      [StringValidationAttribute]
      public string cWhse { get; set; }
      [StringValidationAttribute]
      public string cCallMode { get; set; }
      [StringValidationAttribute]
      public string cTransType { get; set; }
      public bool lSub { get; set; }
      public int iRepOrdNo { get; set; }
      public int iRepOrdSuf { get; set; }
      public int iRepLineNo { get; set; }
      public bool lWarrantyCore { get; set; }
      [StringValidationAttribute]
      public string cVendClaimNo { get; set; }
      public bool lKitFl { get; set; }
      public decimal dPrice { get; set; }
      public decimal dProdcost { get; set; }
      public decimal dQtyUnavail { get; set; }
      [StringValidationAttribute]
      public string cSerLotType { get; set; }
      [StringValidationAttribute]
      public string cSpecNSType { get; set; }
      public bool lCoreChgFl { get; set; }
      [StringValidationAttribute]
      public string cAltWhse { get; set; }
      public decimal dQtyOrd { get; set; }
      public decimal dQtyShip { get; set; }
      public decimal dStkQtyOrd { get; set; }
      public decimal dStkQtyShip { get; set; }
      [StringValidationAttribute]
      public string cUnit { get; set; }
      [StringValidationAttribute]
      public string cOrigCore { get; set; }
      [StringValidationAttribute]
      public string cShipProd { get; set; }
      public bool lRemanCore { get; set; }
      public bool lImpliedCore { get; set; }
      public bool lDirtyCore { get; set; }
      public int iImplyQty { get; set; }
      [StringValidationAttribute]
      public string cReasUnavTy { get; set; }
      public decimal dCoreQty { get; set; }
      [StringValidationAttribute]
      public string corertnty { get; set; }
      [StringValidationAttribute]
      public string warrantycd { get; set; }
      public bool coreunavailfl { get; set; }
      [StringValidationAttribute]
      public string cCustomParam { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Coreallocationcriteria BuildCoreallocationcriteriaFromRow(DataRow row)
      {
         Coreallocationcriteria entity = new Coreallocationcriteria();
         entity.iOrderno = row.IsNull("iOrderno") ? 0 : row.Field<int>("iOrderno");
         entity.iOrdersuf = row.IsNull("iOrdersuf") ? 0 : row.Field<int>("iOrdersuf");
         entity.iLineno = row.IsNull("iLineno") ? 0 : row.Field<int>("iLineno");
         entity.cProd = row.IsNull("cProd") ? string.Empty : row.Field<string>("cProd");
         entity.dCustno = row.IsNull("dCustno") ? decimal.Zero : row.Field<decimal>("dCustno");
         entity.dCSUnPerStk = row.IsNull("dCSUnPerStk") ? decimal.Zero : row.Field<decimal>("dCSUnPerStk");
         entity.cSpecCostTy = row.IsNull("cSpecCostTy") ? string.Empty : row.Field<string>("cSpecCostTy");
         entity.cMaintModeL = row.IsNull("cMaintModeL") ? string.Empty : row.Field<string>("cMaintModeL");
         entity.cWhse = row.IsNull("cWhse") ? string.Empty : row.Field<string>("cWhse");
         entity.cCallMode = row.IsNull("cCallMode") ? string.Empty : row.Field<string>("cCallMode");
         entity.cTransType = row.IsNull("cTransType") ? string.Empty : row.Field<string>("cTransType");
         entity.lSub = row.Field<bool>("lSub");
         entity.iRepOrdNo = row.IsNull("iRepOrdNo") ? 0 : row.Field<int>("iRepOrdNo");
         entity.iRepOrdSuf = row.IsNull("iRepOrdSuf") ? 0 : row.Field<int>("iRepOrdSuf");
         entity.iRepLineNo = row.IsNull("iRepLineNo") ? 0 : row.Field<int>("iRepLineNo");
         entity.lWarrantyCore = row.Field<bool>("lWarrantyCore");
         entity.cVendClaimNo = row.IsNull("cVendClaimNo") ? string.Empty : row.Field<string>("cVendClaimNo");
         entity.lKitFl = row.Field<bool>("lKitFl");
         entity.dPrice = row.IsNull("dPrice") ? decimal.Zero : row.Field<decimal>("dPrice");
         entity.dProdcost = row.IsNull("dProdcost") ? decimal.Zero : row.Field<decimal>("dProdcost");
         entity.dQtyUnavail = row.IsNull("dQtyUnavail") ? decimal.Zero : row.Field<decimal>("dQtyUnavail");
         entity.cSerLotType = row.IsNull("cSerLotType") ? string.Empty : row.Field<string>("cSerLotType");
         entity.cSpecNSType = row.IsNull("cSpecNSType") ? string.Empty : row.Field<string>("cSpecNSType");
         entity.lCoreChgFl = row.Field<bool>("lCoreChgFl");
         entity.cAltWhse = row.IsNull("cAltWhse") ? string.Empty : row.Field<string>("cAltWhse");
         entity.dQtyOrd = row.IsNull("dQtyOrd") ? decimal.Zero : row.Field<decimal>("dQtyOrd");
         entity.dQtyShip = row.IsNull("dQtyShip") ? decimal.Zero : row.Field<decimal>("dQtyShip");
         entity.dStkQtyOrd = row.IsNull("dStkQtyOrd") ? decimal.Zero : row.Field<decimal>("dStkQtyOrd");
         entity.dStkQtyShip = row.IsNull("dStkQtyShip") ? decimal.Zero : row.Field<decimal>("dStkQtyShip");
         entity.cUnit = row.IsNull("cUnit") ? string.Empty : row.Field<string>("cUnit");
         entity.cOrigCore = row.IsNull("cOrigCore") ? string.Empty : row.Field<string>("cOrigCore");
         entity.cShipProd = row.IsNull("cShipProd") ? string.Empty : row.Field<string>("cShipProd");
         entity.lRemanCore = row.Field<bool>("lRemanCore");
         entity.lImpliedCore = row.Field<bool>("lImpliedCore");
         entity.lDirtyCore = row.Field<bool>("lDirtyCore");
         entity.iImplyQty = row.IsNull("iImplyQty") ? 0 : row.Field<int>("iImplyQty");
         entity.cReasUnavTy = row.IsNull("cReasUnavTy") ? string.Empty : row.Field<string>("cReasUnavTy");
         entity.dCoreQty = row.IsNull("dCoreQty") ? decimal.Zero : row.Field<decimal>("dCoreQty");
         entity.corertnty = row.IsNull("corertnty") ? string.Empty : row.Field<string>("corertnty");
         entity.warrantycd = row.IsNull("warrantycd") ? string.Empty : row.Field<string>("warrantycd");
         entity.coreunavailfl = row.Field<bool>("coreunavailfl");
         entity.cCustomParam = row.IsNull("cCustomParam") ? string.Empty : row.Field<string>("cCustomParam");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromCoreallocationcriteria(ref DataRow row, Coreallocationcriteria entity)
      {
         row.SetField("iOrderno", entity.iOrderno);
         row.SetField("iOrdersuf", entity.iOrdersuf);
         row.SetField("iLineno", entity.iLineno);
         row.SetField("cProd", entity.cProd);
         row.SetField("dCustno", entity.dCustno);
         row.SetField("dCSUnPerStk", entity.dCSUnPerStk);
         row.SetField("cSpecCostTy", entity.cSpecCostTy);
         row.SetField("cMaintModeL", entity.cMaintModeL);
         row.SetField("cWhse", entity.cWhse);
         row.SetField("cCallMode", entity.cCallMode);
         row.SetField("cTransType", entity.cTransType);
         row.SetField("lSub", entity.lSub);
         row.SetField("iRepOrdNo", entity.iRepOrdNo);
         row.SetField("iRepOrdSuf", entity.iRepOrdSuf);
         row.SetField("iRepLineNo", entity.iRepLineNo);
         row.SetField("lWarrantyCore", entity.lWarrantyCore);
         row.SetField("cVendClaimNo", entity.cVendClaimNo);
         row.SetField("lKitFl", entity.lKitFl);
         row.SetField("dPrice", entity.dPrice);
         row.SetField("dProdcost", entity.dProdcost);
         row.SetField("dQtyUnavail", entity.dQtyUnavail);
         row.SetField("cSerLotType", entity.cSerLotType);
         row.SetField("cSpecNSType", entity.cSpecNSType);
         row.SetField("lCoreChgFl", entity.lCoreChgFl);
         row.SetField("cAltWhse", entity.cAltWhse);
         row.SetField("dQtyOrd", entity.dQtyOrd);
         row.SetField("dQtyShip", entity.dQtyShip);
         row.SetField("dStkQtyOrd", entity.dStkQtyOrd);
         row.SetField("dStkQtyShip", entity.dStkQtyShip);
         row.SetField("cUnit", entity.cUnit);
         row.SetField("cOrigCore", entity.cOrigCore);
         row.SetField("cShipProd", entity.cShipProd);
         row.SetField("lRemanCore", entity.lRemanCore);
         row.SetField("lImpliedCore", entity.lImpliedCore);
         row.SetField("lDirtyCore", entity.lDirtyCore);
         row.SetField("iImplyQty", entity.iImplyQty);
         row.SetField("cReasUnavTy", entity.cReasUnavTy);
         row.SetField("dCoreQty", entity.dCoreQty);
         row.SetField("corertnty", entity.corertnty);
         row.SetField("warrantycd", entity.warrantycd);
         row.SetField("coreunavailfl", entity.coreunavailfl);
         row.SetField("cCustomParam", entity.cCustomParam);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
