//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.AP.Data.Models.Pdsapemb
{
   [ModelName("Infor.Sxe.AP.Data.Models.Pdsapemb.Apembsingle")]
   public partial class Apembsingle : ModelBase
   {
      public decimal vendno { get; set; }
      [StringValidationAttribute]
      public string changefield { get; set; }
      public DateTime? changedate { get; set; }
      [StringValidationAttribute]
      public string changetime { get; set; }
      [StringValidationAttribute]
      public string changeoper { get; set; }
      [StringValidationAttribute]
      public string changetype { get; set; }
      [StringValidationAttribute]
      public string changevalue { get; set; }
      [StringValidationAttribute]
      public string newvalue { get; set; }
      [StringValidationAttribute]
      public string oldvalue { get; set; }
      [StringValidationAttribute]
      public string reason { get; set; }
      public bool appliedfl { get; set; }
      [StringValidationAttribute]
      public string currencyty { get; set; }
      [StringValidationAttribute]
      public string apsvrowid { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Apembsingle BuildApembsingleFromRow(DataRow row)
      {
         Apembsingle entity = new Apembsingle();
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.changefield = row.IsNull("changefield") ? string.Empty : row.Field<string>("changefield");
         entity.changedate = row.Field<DateTime?>("changedate");
         entity.changetime = row.IsNull("changetime") ? string.Empty : row.Field<string>("changetime");
         entity.changeoper = row.IsNull("changeoper") ? string.Empty : row.Field<string>("changeoper");
         entity.changetype = row.IsNull("changetype") ? string.Empty : row.Field<string>("changetype");
         entity.changevalue = row.IsNull("changevalue") ? string.Empty : row.Field<string>("changevalue");
         entity.newvalue = row.IsNull("newvalue") ? string.Empty : row.Field<string>("newvalue");
         entity.oldvalue = row.IsNull("oldvalue") ? string.Empty : row.Field<string>("oldvalue");
         entity.reason = row.IsNull("reason") ? string.Empty : row.Field<string>("reason");
         entity.appliedfl = row.Field<bool>("appliedfl");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.apsvrowid = row.Field<byte[]>("apsvrowid").ToStringEncoded();
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromApembsingle(ref DataRow row, Apembsingle entity)
      {
         row.SetField("vendno", entity.vendno);
         row.SetField("changefield", entity.changefield);
         row.SetField("changedate", entity.changedate);
         row.SetField("changetime", entity.changetime);
         row.SetField("changeoper", entity.changeoper);
         row.SetField("changetype", entity.changetype);
         row.SetField("changevalue", entity.changevalue);
         row.SetField("newvalue", entity.newvalue);
         row.SetField("oldvalue", entity.oldvalue);
         row.SetField("reason", entity.reason);
         row.SetField("appliedfl", entity.appliedfl);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("apsvrowid", entity.apsvrowid.ToByteArray());
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
