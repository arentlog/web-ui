//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.AP.Data.Models.Pdsapeiinvdetgldist
{
   [ModelName("Infor.Sxe.AP.Data.Models.Pdsapeiinvdetgldist.Apeiinvdetgldist")]
   public partial class Apeiinvdetgldist : ModelBase
   {
      public decimal amount { get; set; }
      public bool amountenabled { get; set; }
      [StringValidationAttribute]
      public string glname { get; set; }
      public DateTime? createddt { get; set; }
      [StringValidationAttribute]
      public string glno { get; set; }
      public bool glnoenabled { get; set; }
      public int gldivno { get; set; }
      public int gldeptno { get; set; }
      public int glacctno { get; set; }
      public int glsubno { get; set; }
      public int glseqno { get; set; }
      public bool statustype { get; set; }
      [StringValidationAttribute]
      public string groupnm { get; set; }
      public int groupseqno { get; set; }
      public int transcd { get; set; }
      public bool transcdenabled { get; set; }
      [StringValidationAttribute]
      public string gltype { get; set; }
      public bool notupdatablefl { get; set; }
      public bool postwhencostedfl { get; set; }
      public bool postwhencostedflenabled { get; set; }
      [StringValidationAttribute]
      public string drcr { get; set; }
      public bool convertpctenabled { get; set; }
      public bool amttoproofenabled { get; set; }
      [StringValidationAttribute]
      public string apeigRowid { get; set; }
      public bool btnaddsensitive { get; set; }
      public bool btndeletesensitive { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Apeiinvdetgldist BuildApeiinvdetgldistFromRow(DataRow row)
      {
         Apeiinvdetgldist entity = new Apeiinvdetgldist();
         entity.amount = row.IsNull("amount") ? decimal.Zero : row.Field<decimal>("amount");
         entity.amountenabled = row.Field<bool>("amountenabled");
         entity.glname = row.IsNull("glname") ? string.Empty : row.Field<string>("glname");
         entity.createddt = row.Field<DateTime?>("createddt");
         entity.glno = row.IsNull("glno") ? string.Empty : row.Field<string>("glno");
         entity.glnoenabled = row.Field<bool>("glnoenabled");
         entity.gldivno = row.IsNull("gldivno") ? 0 : row.Field<int>("gldivno");
         entity.gldeptno = row.IsNull("gldeptno") ? 0 : row.Field<int>("gldeptno");
         entity.glacctno = row.IsNull("glacctno") ? 0 : row.Field<int>("glacctno");
         entity.glsubno = row.IsNull("glsubno") ? 0 : row.Field<int>("glsubno");
         entity.glseqno = row.IsNull("glseqno") ? 0 : row.Field<int>("glseqno");
         entity.statustype = row.Field<bool>("statustype");
         entity.groupnm = row.IsNull("groupnm") ? string.Empty : row.Field<string>("groupnm");
         entity.groupseqno = row.IsNull("groupseqno") ? 0 : row.Field<int>("groupseqno");
         entity.transcd = row.IsNull("transcd") ? 0 : row.Field<int>("transcd");
         entity.transcdenabled = row.Field<bool>("transcdenabled");
         entity.gltype = row.IsNull("gltype") ? string.Empty : row.Field<string>("gltype");
         entity.notupdatablefl = row.Field<bool>("notupdatablefl");
         entity.postwhencostedfl = row.Field<bool>("postwhencostedfl");
         entity.postwhencostedflenabled = row.Field<bool>("postwhencostedflenabled");
         entity.drcr = row.IsNull("drcr") ? string.Empty : row.Field<string>("drcr");
         entity.convertpctenabled = row.Field<bool>("convertpctenabled");
         entity.amttoproofenabled = row.Field<bool>("amttoproofenabled");
         entity.apeigRowid = row.Field<byte[]>("apeig-rowid").ToStringEncoded();
         entity.btnaddsensitive = row.Field<bool>("btnaddsensitive");
         entity.btndeletesensitive = row.Field<bool>("btndeletesensitive");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromApeiinvdetgldist(ref DataRow row, Apeiinvdetgldist entity)
      {
         row.SetField("amount", entity.amount);
         row.SetField("amountenabled", entity.amountenabled);
         row.SetField("glname", entity.glname);
         row.SetField("createddt", entity.createddt);
         row.SetField("glno", entity.glno);
         row.SetField("glnoenabled", entity.glnoenabled);
         row.SetField("gldivno", entity.gldivno);
         row.SetField("gldeptno", entity.gldeptno);
         row.SetField("glacctno", entity.glacctno);
         row.SetField("glsubno", entity.glsubno);
         row.SetField("glseqno", entity.glseqno);
         row.SetField("statustype", entity.statustype);
         row.SetField("groupnm", entity.groupnm);
         row.SetField("groupseqno", entity.groupseqno);
         row.SetField("transcd", entity.transcd);
         row.SetField("transcdenabled", entity.transcdenabled);
         row.SetField("gltype", entity.gltype);
         row.SetField("notupdatablefl", entity.notupdatablefl);
         row.SetField("postwhencostedfl", entity.postwhencostedfl);
         row.SetField("postwhencostedflenabled", entity.postwhencostedflenabled);
         row.SetField("drcr", entity.drcr);
         row.SetField("convertpctenabled", entity.convertpctenabled);
         row.SetField("amttoproofenabled", entity.amttoproofenabled);
         row.SetField("apeig-rowid", entity.apeigRowid.ToByteArray());
         row.SetField("btnaddsensitive", entity.btnaddsensitive);
         row.SetField("btndeletesensitive", entity.btndeletesensitive);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
