//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.PD.Data.Repositories
{
   using Infor.Sxe.PD.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdspder;

   public partial class PderRepository : RepositoryBase
   {
      private PderAdapter adapter;
  
      public PderRepository(IProgressConnection connection)
      {
         this.adapter = new PderAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public Pder GetByRowId(string rowId, string fldList)
      {
         return this.adapter.GetByRowId(rowId, fldList);
      }

      public IEnumerable<Pder> GetListByRowIdList(List<string> rowIds, int batchsize, string fldList)
      {
         return this.adapter.GetListByRowIdList(rowIds, batchsize, fldList);
      }
        
      public IEnumerable<Pder> GetListAllByCono(int cono, int batchsize, string fldList)
      {
         return this.adapter.GetListAllByCono(cono, batchsize, fldList);
      }
      public Pder Get(int cono, int orderno, int ordersuf, int lineno, int seqno, string rebatecd, int pdersuf, int batchsize, string fldList)
      {
         return this.adapter.Get(cono, orderno, ordersuf, lineno, seqno, rebatecd, pdersuf, batchsize, fldList);
      }
      
      public IEnumerable<Pder> GetList(string where, int batchsize, string fldList)
      {
         return this.adapter.GetList(where, batchsize, fldList);
      }
  
      public IEnumerable<Pder> GetListByCommexcpty(int cono, string commexcpty, int batchsize, string fldList)
      {
         return this.adapter.GetListByCommexcpty(cono, commexcpty, batchsize, fldList);
      }

      public IEnumerable<Pder> GetListByContractno(int cono, string statustype, string rebatecd, decimal vendno, string contractno, decimal custno, int batchsize, string fldList)
      {
         return this.adapter.GetListByContractno(cono, statustype, rebatecd, vendno, contractno, custno, batchsize, fldList);
      }

      public IEnumerable<Pder> GetListByCustno(int cono, string statustype, string rebatecd, decimal custno, string shipto, decimal vendno, int batchsize, string fldList)
      {
         return this.adapter.GetListByCustno(cono, statustype, rebatecd, custno, shipto, vendno, batchsize, fldList);
      }

      public IEnumerable<Pder> GetListByIntclaimno(int cono, int intclaimno, string statustype, string contractno, int orderno, int ordersuf, int lineno, int batchsize, string fldList)
      {
         return this.adapter.GetListByIntclaimno(cono, intclaimno, statustype, contractno, orderno, ordersuf, lineno, batchsize, fldList);
      }

      public IEnumerable<Pder> GetListByJrnlno(int cono, int jrnlno, int setno, int batchsize, string fldList)
      {
         return this.adapter.GetListByJrnlno(cono, jrnlno, setno, batchsize, fldList);
      }

      public IEnumerable<Pder> GetListByRebrecno(int cono, decimal rebrecno, string statustype, int batchsize, string fldList)
      {
         return this.adapter.GetListByRebrecno(cono, rebrecno, statustype, batchsize, fldList);
      }

      public IEnumerable<Pder> GetListByTransdttmz(DateTime? transdttmz, int batchsize, string fldList)
      {
         return this.adapter.GetListByTransdttmz(transdttmz, batchsize, fldList);
      }

      public Pder Insert(Pder record)
      {
         return this.adapter.Insert(record);        
      }
  
      public Pder Update(Pder record)
      {
         return this.adapter.Update(record);
      }
  
      public void Delete(Pder record)
      {
         this.adapter.Delete(record);
      }
  
      public void DeleteListByRowIds(List<string> rowIds)
      {
         this.adapter.DeleteListByRowIds(rowIds);
      }
	  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  