//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.PD.Data.Repositories
{
   using Infor.Sxe.PD.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdspdevgetprod;
   using Models.Pdspdevloadcosts;
   using Models.Pdspdevupdatecosts;
   using Models.Pdspdecgetproduct;
   using Models.Pdspdecgetpricecost;
   using Models.Pdspdecupdpricecost;
   using Models.Pdspdeminitialload;
   using Models.Pdspdeminitializepdsc1;
   using Models.Pdspdemloadpdsc1;
   using Models.Pdsmessaging;
   using Models.Pdspdemgridupdatepdsc1;
   using Models.Pdspdeminitializepdsc2;
   using Models.Pdspdemloadpdsc2;
   using Models.Pdspdeminitializepdsc3;
   using Models.Pdspdemloadpdsc3;
   using Models.Pdspdeminitializepdsr;
   using Models.Pdspdemloadpdsr;
   using Models.Pdspdemgridupdatepdsr;
   using Models.Pdspdemupdaterptinit;
   using Models.Pdspdemupdaterptok;
   using Models.Pdsprintersettings;
   using Models.Pdspdemdeletefromset;
   using Models.Pdspdemimportexcelerrors;
   using Models.Pdspdemexcelimportnewinit;
   using Models.Pdspdemexcelimportonchgrcrdty;
   using Models.Pdspdemexcelimportnew;
   using Models.Pdspdemexcelnewsetupdtc;
   using Models.Pdspdemexcelnewsetupdtr;
   using Models.Pdspdemimportnewfile;
   using Models.Pdspdemlookup;
   using Models.Pdspderclaimtotal;
   using Models.Pdspderlockclaim;
   using Models.Pdspdergetclaim;
   using Models.Pdspdergetreceipt;
   using Models.Pdspdergetitem;
   using Models.Pdspderinitreceipt;
   using Models.Pdspderaddreceipt;
   using Models.Pdspderupdatereceipt;
   using Models.Pdspderupdateitem;
   using Models.Pdspderfinaledit;
   using Models.Pdspderfinalupdate;
   using Models.Pdsgleta;
   using Models.Pdspdemcolumncalculator;
   using Models.Pdspdemnewset;
   using Models.Pdspderreceiptvat;
   using Models.Complex;

   public partial class AspdentryRepository : RepositoryBase
   {
      private AspdentryAdapter adapter;
  
      public AspdentryRepository(IProgressConnection connection)
      {
         this.adapter = new AspdentryAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public Pdevgetprod PDEVGetProd(Pdevgetprod pdevgetprod)
      {
         return this.adapter.PDEVGetProd(pdevgetprod);
      }
  
      public Pdevloadcosts PDEVLoadCosts(Pdevloadcosts pdevloadcosts)
      {
         return this.adapter.PDEVLoadCosts(pdevloadcosts);
      }
  
      public IEnumerable<Pdevupdatecostsresults> PDEVUpdateCosts(Pdevupdatecostscriteria pdevupdatecostscriteria)
      {
         return this.adapter.PDEVUpdateCosts(pdevupdatecostscriteria);
      }
  
      public IEnumerable<Pdecgetproductresults> PDECGetProduct(Pdecgetproductcriteria pdecgetproductcriteria)
      {
         return this.adapter.PDECGetProduct(pdecgetproductcriteria);
      }
  
      public Pdecgetpricecostresults PDECGetPriceCost(Pdecgetpricecostcriteria pdecgetpricecostcriteria)
      {
         return this.adapter.PDECGetPriceCost(pdecgetpricecostcriteria);
      }
  
      public IEnumerable<Pdecupdpricecostresults> PDECUpdatePriceCost(Pdecupdpricecostcriteria pdecupdpricecostcriteria)
      {
         return this.adapter.PDECUpdatePriceCost(pdecupdpricecostcriteria);
      }
  
      public Pdeminitialloadresults PDEMInitialLoad(Pdeminitialloadcriteria pdeminitialloadcriteria)
      {
         return this.adapter.PDEMInitialLoad(pdeminitialloadcriteria);
      }
  
      public Pdeminitializepdsc1 PDEMInitializePDSC1(string cSetID)
      {
         return this.adapter.PDEMInitializePDSC1(cSetID);
      }
  
      public AspdentryPDEMLoadPDSC1ResponseAPI PDEMLoadPDSC1(AspdentryPDEMLoadPDSC1RequestAPI AspdentryPDEMLoadPDSC1RequestAPI)
      {
         return this.adapter.PDEMLoadPDSC1(AspdentryPDEMLoadPDSC1RequestAPI);
      }
  
      public AspdentryPDEMUpdateValPDSC1ResponseAPI PDEMUpdateValPDSC1(Pdemloadpdsc1criteria pdemloadpdsc1criteria)
      {
         return this.adapter.PDEMUpdateValPDSC1(pdemloadpdsc1criteria);
      }
  
      public IEnumerable<Messaging> PDEMGridUpdatePDSC1(AspdentryPDEMGridUpdatePDSC1RequestAPI AspdentryPDEMGridUpdatePDSC1RequestAPI)
      {
         return this.adapter.PDEMGridUpdatePDSC1(AspdentryPDEMGridUpdatePDSC1RequestAPI);
      }
  
      public Pdeminitializepdsc2 PDEMInitializePDSC2(string cSetID)
      {
         return this.adapter.PDEMInitializePDSC2(cSetID);
      }
  
      public AspdentryPDEMLoadPDSC2ResponseAPI PDEMLoadPDSC2(AspdentryPDEMLoadPDSC2RequestAPI AspdentryPDEMLoadPDSC2RequestAPI)
      {
         return this.adapter.PDEMLoadPDSC2(AspdentryPDEMLoadPDSC2RequestAPI);
      }
  
      public AspdentryPDEMUpdateValPDSC2ResponseAPI PDEMUpdateValPDSC2(Pdemloadpdsc2criteria pdemloadpdsc2criteria)
      {
         return this.adapter.PDEMUpdateValPDSC2(pdemloadpdsc2criteria);
      }
  
      public IEnumerable<Messaging> PDEMGridUpdatePDSC2(AspdentryPDEMGridUpdatePDSC2RequestAPI AspdentryPDEMGridUpdatePDSC2RequestAPI)
      {
         return this.adapter.PDEMGridUpdatePDSC2(AspdentryPDEMGridUpdatePDSC2RequestAPI);
      }
  
      public Pdeminitializepdsc3 PDEMInitializePDSC3(string cSetID)
      {
         return this.adapter.PDEMInitializePDSC3(cSetID);
      }
  
      public AspdentryPDEMLoadPDSC3ResponseAPI PDEMLoadPDSC3(AspdentryPDEMLoadPDSC3RequestAPI AspdentryPDEMLoadPDSC3RequestAPI)
      {
         return this.adapter.PDEMLoadPDSC3(AspdentryPDEMLoadPDSC3RequestAPI);
      }
  
      public AspdentryPDEMUpdateValPDSC3ResponseAPI PDEMUpdateValPDSC3(Pdemloadpdsc3criteria pdemloadpdsc3criteria)
      {
         return this.adapter.PDEMUpdateValPDSC3(pdemloadpdsc3criteria);
      }
  
      public IEnumerable<Messaging> PDEMGridUpdatePDSC3(AspdentryPDEMGridUpdatePDSC3RequestAPI AspdentryPDEMGridUpdatePDSC3RequestAPI)
      {
         return this.adapter.PDEMGridUpdatePDSC3(AspdentryPDEMGridUpdatePDSC3RequestAPI);
      }
  
      public Pdeminitializepdsr PDEMInitializePDSR(string cSetID)
      {
         return this.adapter.PDEMInitializePDSR(cSetID);
      }
  
      public AspdentryPDEMLoadPDSRResponseAPI PDEMLoadPDSR(AspdentryPDEMLoadPDSRRequestAPI AspdentryPDEMLoadPDSRRequestAPI)
      {
         return this.adapter.PDEMLoadPDSR(AspdentryPDEMLoadPDSRRequestAPI);
      }
  
      public AspdentryPDEMUpdateValPDSRResponseAPI PDEMUpdateValPDSR(Pdemloadpdsrcriteria pdemloadpdsrcriteria)
      {
         return this.adapter.PDEMUpdateValPDSR(pdemloadpdsrcriteria);
      }
  
      public IEnumerable<Messaging> PDEMGridUpdatePDSR(AspdentryPDEMGridUpdatePDSRRequestAPI AspdentryPDEMGridUpdatePDSRRequestAPI)
      {
         return this.adapter.PDEMGridUpdatePDSR(AspdentryPDEMGridUpdatePDSRRequestAPI);
      }
  
      public Pdemupdaterptinit PDEMUpdateRptInit(string cSetID)
      {
         return this.adapter.PDEMUpdateRptInit(cSetID);
      }
  
      public void PDEMUpdateRptOK(AspdentryPDEMUpdateRptOKRequestAPI AspdentryPDEMUpdateRptOKRequestAPI)
      {
         this.adapter.PDEMUpdateRptOK(AspdentryPDEMUpdateRptOKRequestAPI);
      }
  
      public void PDEMDeleteFromSet(IEnumerable<Pdemdeletefromset> pdemdeletefromset)
      {
         this.adapter.PDEMDeleteFromSet(pdemdeletefromset);
      }
  
      public AspdentryPDEMExcelImportUpdtPDSC1ResponseAPI PDEMExcelImportUpdtPDSC1(AspdentryPDEMExcelImportUpdtPDSC1RequestAPI AspdentryPDEMExcelImportUpdtPDSC1RequestAPI)
      {
         return this.adapter.PDEMExcelImportUpdtPDSC1(AspdentryPDEMExcelImportUpdtPDSC1RequestAPI);
      }
  
      public AspdentryPDEMExcelImportUpdtPDSC2ResponseAPI PDEMExcelImportUpdtPDSC2(AspdentryPDEMExcelImportUpdtPDSC2RequestAPI AspdentryPDEMExcelImportUpdtPDSC2RequestAPI)
      {
         return this.adapter.PDEMExcelImportUpdtPDSC2(AspdentryPDEMExcelImportUpdtPDSC2RequestAPI);
      }
  
      public AspdentryPDEMExcelImportUpdtPDSC3ResponseAPI PDEMExcelImportUpdtPDSC3(AspdentryPDEMExcelImportUpdtPDSC3RequestAPI AspdentryPDEMExcelImportUpdtPDSC3RequestAPI)
      {
         return this.adapter.PDEMExcelImportUpdtPDSC3(AspdentryPDEMExcelImportUpdtPDSC3RequestAPI);
      }
  
      public AspdentryPDEMExcelImportUpdtPDSRResponseAPI PDEMExcelImportUpdtPDSR(AspdentryPDEMExcelImportUpdtPDSRRequestAPI AspdentryPDEMExcelImportUpdtPDSRRequestAPI)
      {
         return this.adapter.PDEMExcelImportUpdtPDSR(AspdentryPDEMExcelImportUpdtPDSRRequestAPI);
      }
  
      public AspdentryPDEMExcelImportNewInitResponseAPI PDEMExcelImportNewInit()
      {
         return this.adapter.PDEMExcelImportNewInit();
      }
  
      public Pdemexcelimportonchgrcrdty PDEMExcelImportOnChgRcrdTy(string cRecordType)
      {
         return this.adapter.PDEMExcelImportOnChgRcrdTy(cRecordType);
      }
  
      public Pdemexcelimportnewsingle PDEMExcelImportAddNewSet(Pdemexcelimportnewcriteria pdemexcelimportnewcriteria)
      {
         return this.adapter.PDEMExcelImportAddNewSet(pdemexcelimportnewcriteria);
      }
  
      public Pdemexcelnewsetupdtcinit PDEMExcelNewSetUpdtCInit(string cRecordType)
      {
         return this.adapter.PDEMExcelNewSetUpdtCInit(cRecordType);
      }
  
      public AspdentryPDEMExcelNewSetUpdtCAddResponseAPI PDEMExcelNewSetUpdtCAdd(AspdentryPDEMExcelNewSetUpdtCAddRequestAPI AspdentryPDEMExcelNewSetUpdtCAddRequestAPI)
      {
         return this.adapter.PDEMExcelNewSetUpdtCAdd(AspdentryPDEMExcelNewSetUpdtCAddRequestAPI);
      }
  
      public AspdentryPDEMExcelNewSetUpdtRAddResponseAPI PDEMExcelNewSetUpdtRAdd(AspdentryPDEMExcelNewSetUpdtRAddRequestAPI AspdentryPDEMExcelNewSetUpdtRAddRequestAPI)
      {
         return this.adapter.PDEMExcelNewSetUpdtRAdd(AspdentryPDEMExcelNewSetUpdtRAddRequestAPI);
      }
  
      public AspdentryPDEMExcelImportNewOkResponseAPI PDEMExcelImportNewOk(AspdentryPDEMExcelImportNewOkRequestAPI AspdentryPDEMExcelImportNewOkRequestAPI)
      {
         return this.adapter.PDEMExcelImportNewOk(AspdentryPDEMExcelImportNewOkRequestAPI);
      }
  
      public AspdentryPDEMLookupSearchResponseAPI PDEMLookupSearch(Pdemlookupcriteria pdemlookupcriteria)
      {
         return this.adapter.PDEMLookupSearch(pdemlookupcriteria);
      }
  
      public AspdentryPDEMLookupSourceTypesResponseAPI PDEMLookupSourceTypes()
      {
         return this.adapter.PDEMLookupSourceTypes();
      }
  
      public IEnumerable<Pderclaimtotalresults> PDERClaimTotal(Pderclaimtotalcriteria pderclaimtotalcriteria)
      {
         return this.adapter.PDERClaimTotal(pderclaimtotalcriteria);
      }
  
      public void PDERLockClaim(Pderlockclaim pderlockclaim)
      {
         this.adapter.PDERLockClaim(pderlockclaim);
      }
  
      public void PDERUnlockClaim(Pderlockclaim pderlockclaim)
      {
         this.adapter.PDERUnlockClaim(pderlockclaim);
      }
  
      public AspdentryPDERGetClaimResponseAPI PDERGetClaim(Pdergetclaimcriteria pdergetclaimcriteria)
      {
         return this.adapter.PDERGetClaim(pdergetclaimcriteria);
      }
  
      public AspdentryPDERGetReceiptResponseAPI PDERGetReceipt(Pdergetreceiptcriteria pdergetreceiptcriteria)
      {
         return this.adapter.PDERGetReceipt(pdergetreceiptcriteria);
      }
  
      public AspdentryPDERGetItemResponseAPI PDERGetItem(Pdergetitemcriteria pdergetitemcriteria)
      {
         return this.adapter.PDERGetItem(pdergetitemcriteria);
      }
  
      public Pderinitreceiptresults PDERInitReceipt(Pderinitreceiptcriteria pderinitreceiptcriteria)
      {
         return this.adapter.PDERInitReceipt(pderinitreceiptcriteria);
      }
  
      public string PDERAddReceipt(Pderaddreceipt pderaddreceipt)
      {
         return this.adapter.PDERAddReceipt(pderaddreceipt);
      }
  
      public void PDERUpdateReceipt(Pderupdatereceipt pderupdatereceipt)
      {
         this.adapter.PDERUpdateReceipt(pderupdatereceipt);
      }
  
      public void PDERUpdateItem(Pderupdateitem pderupdateitem)
      {
         this.adapter.PDERUpdateItem(pderupdateitem);
      }
  
      public AspdentryPDERFinalEditResponseAPI PDERFinalEdit(Pderfinaleditcriteria pderfinaleditcriteria)
      {
         return this.adapter.PDERFinalEdit(pderfinaleditcriteria);
      }
  
      public void PDERFinalUpdate(AspdentryPDERFinalUpdateRequestAPI AspdentryPDERFinalUpdateRequestAPI)
      {
         this.adapter.PDERFinalUpdate(AspdentryPDERFinalUpdateRequestAPI);
      }
  
      public Pdemcolumncalculator PDEMColumnCalculatorValidate(Pdemcolumncalculator pdemcolumncalculator)
      {
         return this.adapter.PDEMColumnCalculatorValidate(pdemcolumncalculator);
      }
  
      public AspdentryPDEMNewSetInitializeResponseAPI PDEMNewSetInitialize(AspdentryPDEMNewSetInitializeRequestAPI AspdentryPDEMNewSetInitializeRequestAPI)
      {
         return this.adapter.PDEMNewSetInitialize(AspdentryPDEMNewSetInitializeRequestAPI);
      }
  
      public AspdentryPDEMNewSetValidateResponseAPI PDEMNewSetValidate(AspdentryPDEMNewSetValidateRequestAPI AspdentryPDEMNewSetValidateRequestAPI)
      {
         return this.adapter.PDEMNewSetValidate(AspdentryPDEMNewSetValidateRequestAPI);
      }
  
      public void PDEMNewSetFinal(AspdentryPDEMNewSetFinalRequestAPI AspdentryPDEMNewSetFinalRequestAPI)
      {
         this.adapter.PDEMNewSetFinal(AspdentryPDEMNewSetFinalRequestAPI);
      }
  
      public void PDERDeltemprcpt(AspdentryPDERDeltemprcptRequestAPI AspdentryPDERDeltemprcptRequestAPI)
      {
         this.adapter.PDERDeltemprcpt(AspdentryPDERDeltemprcptRequestAPI);
      }
  
      public Pderreceiptvat PDERVatProcessing(Pderreceiptvat pderreceiptvat)
      {
         return this.adapter.PDERVatProcessing(pderreceiptvat);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  