//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 21496 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.Collections.Generic;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Extensions;
using ServiceInterfaceClient.Interfaces;
using ServiceInterfaceClient.Progress;
    
namespace Infor.Sxe.PD.Data.Repositories
{
   using Infor.Sxe.PD.Data.Adapters;
   
   using Models.PdsContext;
   using Models.Pdspdsc;
   using Models.Pdspricesheetinq;
   using Models.Pdspdscpricinglookup;
   using Models.Complex;

   public partial class PdscRepository : RepositoryBase
   {
      private PdscAdapter adapter;
  
      public PdscRepository(IProgressConnection connection)
      {
         this.adapter = new PdscAdapter(connection);
         this.Cono = this.adapter.Cono;
         this.OnCreated();
      }
  
      partial void OnCreated();
      
      public Pdsc GetByRowId(string rowId, string fldList)
      {
         return this.adapter.GetByRowId(rowId, fldList);
      }

      public IEnumerable<Pdsc> GetListByRowIdList(List<string> rowIds, int batchsize, string fldList)
      {
         return this.adapter.GetListByRowIdList(rowIds, batchsize, fldList);
      }
        
      public IEnumerable<Pdsc> GetListAllByCono(int cono, int batchsize, string fldList)
      {
         return this.adapter.GetListAllByCono(cono, batchsize, fldList);
      }
      public IEnumerable<Pdsc> GetListByRowpointers(List<string> rowpointers, string fldList)
      {
         return this.adapter.GetListByRowpointers(rowpointers, fldList);
      }
	  
	  
      public Pdsc Get(int cono, int levelcd, string whse, decimal custno, string custtype, string prod, string units, DateTime? startdt, int batchsize, string fldList)
      {
         return this.adapter.Get(cono, levelcd, whse, custno, custtype, prod, units, startdt, batchsize, fldList);
      }
      
      public IEnumerable<Pdsc> GetList(string where, int batchsize, string fldList)
      {
         return this.adapter.GetList(where, batchsize, fldList);
      }
  
      public IEnumerable<Pdsc> GetListByCtprod(int cono, bool statustype, int levelcd, string custtype, string prod, string whse, string units, DateTime? startdt, int batchsize, string fldList)
      {
         return this.adapter.GetListByCtprod(cono, statustype, levelcd, custtype, prod, whse, units, startdt, batchsize, fldList);
      }

      public IEnumerable<Pdsc> GetListByCustprod(int cono, bool statustype, int levelcd, decimal custno, string prod, string whse, string custtype, string units, DateTime? startdt, int batchsize, string fldList)
      {
         return this.adapter.GetListByCustprod(cono, statustype, levelcd, custno, prod, whse, custtype, units, startdt, batchsize, fldList);
      }

      public IEnumerable<Pdsc> GetListByEnddt(int cono, bool statustype, DateTime? enddt, int batchsize, string fldList)
      {
         return this.adapter.GetListByEnddt(cono, statustype, enddt, batchsize, fldList);
      }

      public IEnumerable<Pdsc> GetListByPdprod(int cono, string prod, int batchsize, string fldList)
      {
         return this.adapter.GetListByPdprod(cono, prod, batchsize, fldList);
      }

      public IEnumerable<Pdsc> GetListByPdrecno(int cono, int pdrecno, int batchsize, string fldList)
      {
         return this.adapter.GetListByPdrecno(cono, pdrecno, batchsize, fldList);
      }

      public IEnumerable<Pdsc> GetListByProd(int cono, bool statustype, int levelcd, bool promofl, string prod, string whse, string units, DateTime? startdt, int batchsize, string fldList)
      {
         return this.adapter.GetListByProd(cono, statustype, levelcd, promofl, prod, whse, units, startdt, batchsize, fldList);
      }

      public IEnumerable<Pdsc> GetListByProdwh(int cono, string prod, string whse, int batchsize, string fldList)
      {
         return this.adapter.GetListByProdwh(cono, prod, whse, batchsize, fldList);
      }

      public Pdsc GetByRowpointer(string rowpointer, string fldList)
      {
         return this.adapter.GetByRowpointer(rowpointer, fldList);
      }

      public IEnumerable<Pdsc> GetListByTransdttmz(DateTime? transdttmz, int batchsize, string fldList)
      {
         return this.adapter.GetListByTransdttmz(transdttmz, batchsize, fldList);
      }

      public Pdsc Insert(Pdsc record)
      {
         return this.adapter.Insert(record);        
      }
  
      public Pdsc Update(Pdsc record)
      {
         return this.adapter.Update(record);
      }
  
      public void Delete(Pdsc record)
      {
         this.adapter.Delete(record);
      }
  
      public void DeleteListByRowIds(List<string> rowIds)
      {
         this.adapter.DeleteListByRowIds(rowIds);
      }
	   

      public void DeleteListByRowPointers(List<string> rowpointers)
      {
         this.adapter.DeleteListByRowPointers(rowpointers);
      }
	  
      public IEnumerable<Pricesheetinqresults> Lookup(Pricesheetinqcriteria pricesheetinqcriteria)
      {
         return this.adapter.Lookup(pricesheetinqcriteria);
      }
  
      public PdscLookupPricingResponseAPI LookupPricing(Pdsclookupcriteria pdsclookupcriteria)
      {
         return this.adapter.LookupPricing(pdsclookupcriteria);
      }
  
      public IEnumerable<Pdsc> GetListByWordIndex(string term, int batchsize, string fldList)
      {
         return this.adapter.GetListByWordIndex(term, batchsize, fldList);
      }
  
      protected override void Dispose(bool disposing)
      {
         if (this.disposed) { return; }
         if (!disposing)
         {
            return;
         }
         this.adapter?.Dispose();	
         this.adapter = null;
         base.Dispose(true);
      }
   }
}
#pragma warning restore 1591
  