//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.PD.Data.Models.Pdspdemupdaterptok
{
   [ModelName("Infor.Sxe.PD.Data.Models.Pdspdemupdaterptok.Pdemupdaterptok")]
   public partial class Pdemupdaterptok : ModelBase
   {
      [StringValidationAttribute]
      public string cSetID { get; set; }
      public bool immediateFl { get; set; }
      public DateTime? startDt { get; set; }
      public int hour { get; set; }
      public int minute { get; set; }
      [StringValidationAttribute]
      public string amPm { get; set; }
      public int period { get; set; }
      public DateTime? postDt { get; set; }
      public bool currPeriodFl { get; set; }
      public bool currDateFl { get; set; }
      public int iDelete { get; set; }
      public int iTimeZoneClient { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Pdemupdaterptok BuildPdemupdaterptokFromRow(DataRow row)
      {
         Pdemupdaterptok entity = new Pdemupdaterptok();
         entity.cSetID = row.IsNull("cSetID") ? string.Empty : row.Field<string>("cSetID");
         entity.immediateFl = row.Field<bool>("ImmediateFl");
         entity.startDt = row.Field<DateTime?>("StartDt");
         entity.hour = row.IsNull("Hour") ? 0 : row.Field<int>("Hour");
         entity.minute = row.IsNull("Minute") ? 0 : row.Field<int>("Minute");
         entity.amPm = row.IsNull("AmPm") ? string.Empty : row.Field<string>("AmPm");
         entity.period = row.IsNull("Period") ? 0 : row.Field<int>("Period");
         entity.postDt = row.Field<DateTime?>("PostDt");
         entity.currPeriodFl = row.Field<bool>("CurrPeriodFl");
         entity.currDateFl = row.Field<bool>("CurrDateFl");
         entity.iDelete = row.IsNull("iDelete") ? 0 : row.Field<int>("iDelete");
         entity.iTimeZoneClient = row.IsNull("iTimeZoneClient") ? 0 : row.Field<int>("iTimeZoneClient");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPdemupdaterptok(ref DataRow row, Pdemupdaterptok entity)
      {
         row.SetField("cSetID", entity.cSetID);
         row.SetField("ImmediateFl", entity.immediateFl);
         row.SetField("StartDt", entity.startDt);
         row.SetField("Hour", entity.hour);
         row.SetField("Minute", entity.minute);
         row.SetField("AmPm", entity.amPm);
         row.SetField("Period", entity.period);
         row.SetField("PostDt", entity.postDt);
         row.SetField("CurrPeriodFl", entity.currPeriodFl);
         row.SetField("CurrDateFl", entity.currDateFl);
         row.SetField("iDelete", entity.iDelete);
         row.SetField("iTimeZoneClient", entity.iTimeZoneClient);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
