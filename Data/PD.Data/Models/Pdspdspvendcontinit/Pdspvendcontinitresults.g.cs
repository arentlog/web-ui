//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.PD.Data.Models.Pdspdspvendcontinit
{
   [ModelName("Infor.Sxe.PD.Data.Models.Pdspdspvendcontinit.Pdspvendcontinitresults")]
   public partial class Pdspvendcontinitresults : ModelBase, IUserFields
   {
      [StringValidationAttribute]
      public string levelcd { get; set; }
      public int pdrecno { get; set; }
      [StringValidationAttribute]
      public string prod { get; set; }
      [StringValidationAttribute]
      public string prodpricety { get; set; }
      [StringValidationAttribute]
      public string rebtype { get; set; }
      [StringValidationAttribute]
      public string rebsubty { get; set; }
      [StringValidationAttribute]
      public string contractno { get; set; }
      public DateTime? startdt { get; set; }
      [StringValidationAttribute]
      public string unit { get; set; }
      public decimal vendno { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      public DateTime? enddt { get; set; }
      public bool statusfl { get; set; }
      [StringValidationAttribute]
      public string reference { get; set; }
      [StringValidationAttribute]
      public string quoteid { get; set; }
      [StringValidationAttribute]
      public string currencyty { get; set; }
      public decimal contractpr { get; set; }
      public decimal custno { get; set; }
      [StringValidationAttribute]
      public string custname { get; set; }
      [StringValidationAttribute]
      public string shipto { get; set; }
      [StringValidationAttribute]
      public string shiptoname { get; set; }
      public decimal maxqty { get; set; }
      public decimal actqty { get; set; }
      [StringValidationAttribute]
      public string maxqtytyli { get; set; }
      [StringValidationAttribute]
      public string maxqtytypd { get; set; }
      [StringValidationAttribute]
      public string maxqtytysv { get; set; }
      public bool hardmaxfl { get; set; }
      [StringValidationAttribute]
      public string qtytypeli { get; set; }
      [StringValidationAttribute]
      public string qtytypepd { get; set; }
      [StringValidationAttribute]
      public string qtytypesv { get; set; }
      [StringValidationAttribute]
      public string user1 { get; set; }
      [StringValidationAttribute]
      public string user2 { get; set; }
      [StringValidationAttribute]
      public string user3 { get; set; }
      [StringValidationAttribute]
      public string user4 { get; set; }
      [StringValidationAttribute]
      public string user5 { get; set; }
      public decimal? user6 { get; set; }
      public decimal? user7 { get; set; }
      public DateTime? user8 { get; set; }
      public DateTime? user9 { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Pdspvendcontinitresults BuildPdspvendcontinitresultsFromRow(DataRow row)
      {
         Pdspvendcontinitresults entity = new Pdspvendcontinitresults();
         entity.levelcd = row.IsNull("levelcd") ? string.Empty : row.Field<string>("levelcd");
         entity.pdrecno = row.IsNull("pdrecno") ? 0 : row.Field<int>("pdrecno");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.prodpricety = row.IsNull("prodpricety") ? string.Empty : row.Field<string>("prodpricety");
         entity.rebtype = row.IsNull("rebtype") ? string.Empty : row.Field<string>("rebtype");
         entity.rebsubty = row.IsNull("rebsubty") ? string.Empty : row.Field<string>("rebsubty");
         entity.contractno = row.IsNull("contractno") ? string.Empty : row.Field<string>("contractno");
         entity.startdt = row.Field<DateTime?>("startdt");
         entity.unit = row.IsNull("unit") ? string.Empty : row.Field<string>("unit");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.enddt = row.Field<DateTime?>("enddt");
         entity.statusfl = row.Field<bool>("statusfl");
         entity.reference = row.IsNull("reference") ? string.Empty : row.Field<string>("reference");
         entity.quoteid = row.IsNull("quoteid") ? string.Empty : row.Field<string>("quoteid");
         entity.currencyty = row.IsNull("currencyty") ? string.Empty : row.Field<string>("currencyty");
         entity.contractpr = row.IsNull("contractpr") ? decimal.Zero : row.Field<decimal>("contractpr");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.custname = row.IsNull("custname") ? string.Empty : row.Field<string>("custname");
         entity.shipto = row.IsNull("shipto") ? string.Empty : row.Field<string>("shipto");
         entity.shiptoname = row.IsNull("shiptoname") ? string.Empty : row.Field<string>("shiptoname");
         entity.maxqty = row.IsNull("maxqty") ? decimal.Zero : row.Field<decimal>("maxqty");
         entity.actqty = row.IsNull("actqty") ? decimal.Zero : row.Field<decimal>("actqty");
         entity.maxqtytyli = row.IsNull("maxqtytyli") ? string.Empty : row.Field<string>("maxqtytyli");
         entity.maxqtytypd = row.IsNull("maxqtytypd") ? string.Empty : row.Field<string>("maxqtytypd");
         entity.maxqtytysv = row.IsNull("maxqtytysv") ? string.Empty : row.Field<string>("maxqtytysv");
         entity.hardmaxfl = row.Field<bool>("hardmaxfl");
         entity.qtytypeli = row.IsNull("qtytypeli") ? string.Empty : row.Field<string>("qtytypeli");
         entity.qtytypepd = row.IsNull("qtytypepd") ? string.Empty : row.Field<string>("qtytypepd");
         entity.qtytypesv = row.IsNull("qtytypesv") ? string.Empty : row.Field<string>("qtytypesv");
         entity.user1 = row.IsNull("user1") ? string.Empty : row.Field<string>("user1");
         entity.user2 = row.IsNull("user2") ? string.Empty : row.Field<string>("user2");
         entity.user3 = row.IsNull("user3") ? string.Empty : row.Field<string>("user3");
         entity.user4 = row.IsNull("user4") ? string.Empty : row.Field<string>("user4");
         entity.user5 = row.IsNull("user5") ? string.Empty : row.Field<string>("user5");
         entity.user6 = row.Field<decimal?>("user6");
         entity.user7 = row.Field<decimal?>("user7");
         entity.user8 = row.Field<DateTime?>("user8");
         entity.user9 = row.Field<DateTime?>("user9");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPdspvendcontinitresults(ref DataRow row, Pdspvendcontinitresults entity)
      {
         row.SetField("levelcd", entity.levelcd);
         row.SetField("pdrecno", entity.pdrecno);
         row.SetField("prod", entity.prod);
         row.SetField("prodpricety", entity.prodpricety);
         row.SetField("rebtype", entity.rebtype);
         row.SetField("rebsubty", entity.rebsubty);
         row.SetField("contractno", entity.contractno);
         row.SetField("startdt", entity.startdt);
         row.SetField("unit", entity.unit);
         row.SetField("vendno", entity.vendno);
         row.SetField("whse", entity.whse);
         row.SetField("enddt", entity.enddt);
         row.SetField("statusfl", entity.statusfl);
         row.SetField("reference", entity.reference);
         row.SetField("quoteid", entity.quoteid);
         row.SetField("currencyty", entity.currencyty);
         row.SetField("contractpr", entity.contractpr);
         row.SetField("custno", entity.custno);
         row.SetField("custname", entity.custname);
         row.SetField("shipto", entity.shipto);
         row.SetField("shiptoname", entity.shiptoname);
         row.SetField("maxqty", entity.maxqty);
         row.SetField("actqty", entity.actqty);
         row.SetField("maxqtytyli", entity.maxqtytyli);
         row.SetField("maxqtytypd", entity.maxqtytypd);
         row.SetField("maxqtytysv", entity.maxqtytysv);
         row.SetField("hardmaxfl", entity.hardmaxfl);
         row.SetField("qtytypeli", entity.qtytypeli);
         row.SetField("qtytypepd", entity.qtytypepd);
         row.SetField("qtytypesv", entity.qtytypesv);
         row.SetField("user1", entity.user1);
         row.SetField("user2", entity.user2);
         row.SetField("user3", entity.user3);
         row.SetField("user4", entity.user4);
         row.SetField("user5", entity.user5);
         row.SetField("user6", entity.user6);
         row.SetField("user7", entity.user7);
         row.SetField("user8", entity.user8);
         row.SetField("user9", entity.user9);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
