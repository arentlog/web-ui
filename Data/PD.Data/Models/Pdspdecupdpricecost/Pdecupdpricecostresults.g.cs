//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.PD.Data.Models.Pdspdecupdpricecost
{
   [ModelName("Infor.Sxe.PD.Data.Models.Pdspdecupdpricecost.Pdecupdpricecostresults")]
   public partial class Pdecupdpricecostresults : ModelBase
   {
      [StringValidationAttribute]
      public string prod { get; set; }
      [StringValidationAttribute]
      public string notesfl { get; set; }
      [StringValidationAttribute]
      public string descrip1 { get; set; }
      [StringValidationAttribute]
      public string descrip2 { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      public bool homewhsefl { get; set; }
      [StringValidationAttribute]
      public string homewhse { get; set; }
      [StringValidationAttribute]
      public string pricetxt { get; set; }
      public DateTime? effectdt { get; set; }
      [StringValidationAttribute]
      public string basetype { get; set; }
      [StringValidationAttribute]
      public string basetypedesc { get; set; }
      public decimal baseprice { get; set; }
      public decimal basepricenew { get; set; }
      public decimal basepriceorig { get; set; }
      public DateTime? basedt { get; set; }
      [StringValidationAttribute]
      public string listtype { get; set; }
      [StringValidationAttribute]
      public string listtypedesc { get; set; }
      public decimal listprice { get; set; }
      public decimal listpricenew { get; set; }
      public decimal listpriceorig { get; set; }
      public DateTime? listdt { get; set; }
      [StringValidationAttribute]
      public string repltype { get; set; }
      [StringValidationAttribute]
      public string repltypedesc { get; set; }
      public decimal replcost { get; set; }
      public decimal replcostnew { get; set; }
      public decimal replcostorig { get; set; }
      public DateTime? repldt { get; set; }
      [StringValidationAttribute]
      public string stndtype { get; set; }
      [StringValidationAttribute]
      public string stndtypedesc { get; set; }
      public decimal stndcost { get; set; }
      public decimal stndcostnew { get; set; }
      public decimal stndcostorig { get; set; }
      public DateTime? stnddt { get; set; }
      public decimal lastcost { get; set; }
      [StringValidationAttribute]
      public string th1 { get; set; }
      [StringValidationAttribute]
      public string th2 { get; set; }
      [StringValidationAttribute]
      public string th3 { get; set; }
      [StringValidationAttribute]
      public string pround { get; set; }
      [StringValidationAttribute]
      public string prounddesc { get; set; }
      public int ptarget { get; set; }
      [StringValidationAttribute]
      public string ptargetdesc { get; set; }
      public decimal pexactrnd { get; set; }
      [StringValidationAttribute]
      public string pricetype { get; set; }
      public DateTime? newdt { get; set; }
      [StringValidationAttribute]
      public string icglcost { get; set; }
      public int icglbsty { get; set; }
      [StringValidationAttribute]
      public string updglty { get; set; }
      [StringValidationAttribute]
      public string calcord1 { get; set; }
      [StringValidationAttribute]
      public string calcord2 { get; set; }
      [StringValidationAttribute]
      public string calcord3 { get; set; }
      [StringValidationAttribute]
      public string msgtxt1 { get; set; }
      [StringValidationAttribute]
      public string msgtxt2 { get; set; }
      [StringValidationAttribute]
      public string msgtxt3 { get; set; }
      [StringValidationAttribute]
      public string msgtxt4 { get; set; }
      [StringValidationAttribute]
      public string ourproc { get; set; }
      [StringValidationAttribute]
      public string callproc { get; set; }
      public int secure { get; set; }
      public bool gldivfl { get; set; }
      public int divno { get; set; }
      public bool icincaddsm { get; set; }
      public bool icincaddgl { get; set; }
      public bool icscupdt { get; set; }
      [StringValidationAttribute]
      public string cErrorWarning { get; set; }
      [StringValidationAttribute]
      public string cMessage { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Pdecupdpricecostresults BuildPdecupdpricecostresultsFromRow(DataRow row)
      {
         Pdecupdpricecostresults entity = new Pdecupdpricecostresults();
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.notesfl = row.IsNull("notesfl") ? string.Empty : row.Field<string>("notesfl");
         entity.descrip1 = row.IsNull("descrip1") ? string.Empty : row.Field<string>("descrip1");
         entity.descrip2 = row.IsNull("descrip2") ? string.Empty : row.Field<string>("descrip2");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.homewhsefl = row.Field<bool>("homewhsefl");
         entity.homewhse = row.IsNull("homewhse") ? string.Empty : row.Field<string>("homewhse");
         entity.pricetxt = row.IsNull("pricetxt") ? string.Empty : row.Field<string>("pricetxt");
         entity.effectdt = row.Field<DateTime?>("effectdt");
         entity.basetype = row.IsNull("basetype") ? string.Empty : row.Field<string>("basetype");
         entity.basetypedesc = row.IsNull("basetypedesc") ? string.Empty : row.Field<string>("basetypedesc");
         entity.baseprice = row.IsNull("baseprice") ? decimal.Zero : row.Field<decimal>("baseprice");
         entity.basepricenew = row.IsNull("basepricenew") ? decimal.Zero : row.Field<decimal>("basepricenew");
         entity.basepriceorig = row.IsNull("basepriceorig") ? decimal.Zero : row.Field<decimal>("basepriceorig");
         entity.basedt = row.Field<DateTime?>("basedt");
         entity.listtype = row.IsNull("listtype") ? string.Empty : row.Field<string>("listtype");
         entity.listtypedesc = row.IsNull("listtypedesc") ? string.Empty : row.Field<string>("listtypedesc");
         entity.listprice = row.IsNull("listprice") ? decimal.Zero : row.Field<decimal>("listprice");
         entity.listpricenew = row.IsNull("listpricenew") ? decimal.Zero : row.Field<decimal>("listpricenew");
         entity.listpriceorig = row.IsNull("listpriceorig") ? decimal.Zero : row.Field<decimal>("listpriceorig");
         entity.listdt = row.Field<DateTime?>("listdt");
         entity.repltype = row.IsNull("repltype") ? string.Empty : row.Field<string>("repltype");
         entity.repltypedesc = row.IsNull("repltypedesc") ? string.Empty : row.Field<string>("repltypedesc");
         entity.replcost = row.IsNull("replcost") ? decimal.Zero : row.Field<decimal>("replcost");
         entity.replcostnew = row.IsNull("replcostnew") ? decimal.Zero : row.Field<decimal>("replcostnew");
         entity.replcostorig = row.IsNull("replcostorig") ? decimal.Zero : row.Field<decimal>("replcostorig");
         entity.repldt = row.Field<DateTime?>("repldt");
         entity.stndtype = row.IsNull("stndtype") ? string.Empty : row.Field<string>("stndtype");
         entity.stndtypedesc = row.IsNull("stndtypedesc") ? string.Empty : row.Field<string>("stndtypedesc");
         entity.stndcost = row.IsNull("stndcost") ? decimal.Zero : row.Field<decimal>("stndcost");
         entity.stndcostnew = row.IsNull("stndcostnew") ? decimal.Zero : row.Field<decimal>("stndcostnew");
         entity.stndcostorig = row.IsNull("stndcostorig") ? decimal.Zero : row.Field<decimal>("stndcostorig");
         entity.stnddt = row.Field<DateTime?>("stnddt");
         entity.lastcost = row.IsNull("lastcost") ? decimal.Zero : row.Field<decimal>("lastcost");
         entity.th1 = row.IsNull("th1") ? string.Empty : row.Field<string>("th1");
         entity.th2 = row.IsNull("th2") ? string.Empty : row.Field<string>("th2");
         entity.th3 = row.IsNull("th3") ? string.Empty : row.Field<string>("th3");
         entity.pround = row.IsNull("pround") ? string.Empty : row.Field<string>("pround");
         entity.prounddesc = row.IsNull("prounddesc") ? string.Empty : row.Field<string>("prounddesc");
         entity.ptarget = row.IsNull("ptarget") ? 0 : row.Field<int>("ptarget");
         entity.ptargetdesc = row.IsNull("ptargetdesc") ? string.Empty : row.Field<string>("ptargetdesc");
         entity.pexactrnd = row.IsNull("pexactrnd") ? decimal.Zero : row.Field<decimal>("pexactrnd");
         entity.pricetype = row.IsNull("pricetype") ? string.Empty : row.Field<string>("pricetype");
         entity.newdt = row.Field<DateTime?>("newdt");
         entity.icglcost = row.IsNull("icglcost") ? string.Empty : row.Field<string>("icglcost");
         entity.icglbsty = row.IsNull("icglbsty") ? 0 : row.Field<int>("icglbsty");
         entity.updglty = row.IsNull("updglty") ? string.Empty : row.Field<string>("updglty");
         entity.calcord1 = row.IsNull("calcord1") ? string.Empty : row.Field<string>("calcord1");
         entity.calcord2 = row.IsNull("calcord2") ? string.Empty : row.Field<string>("calcord2");
         entity.calcord3 = row.IsNull("calcord3") ? string.Empty : row.Field<string>("calcord3");
         entity.msgtxt1 = row.IsNull("msgtxt1") ? string.Empty : row.Field<string>("msgtxt1");
         entity.msgtxt2 = row.IsNull("msgtxt2") ? string.Empty : row.Field<string>("msgtxt2");
         entity.msgtxt3 = row.IsNull("msgtxt3") ? string.Empty : row.Field<string>("msgtxt3");
         entity.msgtxt4 = row.IsNull("msgtxt4") ? string.Empty : row.Field<string>("msgtxt4");
         entity.ourproc = row.IsNull("ourproc") ? string.Empty : row.Field<string>("ourproc");
         entity.callproc = row.IsNull("callproc") ? string.Empty : row.Field<string>("callproc");
         entity.secure = row.IsNull("secure") ? 0 : row.Field<int>("secure");
         entity.gldivfl = row.Field<bool>("gldivfl");
         entity.divno = row.IsNull("divno") ? 0 : row.Field<int>("divno");
         entity.icincaddsm = row.Field<bool>("icincaddsm");
         entity.icincaddgl = row.Field<bool>("icincaddgl");
         entity.icscupdt = row.Field<bool>("icscupdt");
         entity.cErrorWarning = row.IsNull("cErrorWarning") ? string.Empty : row.Field<string>("cErrorWarning");
         entity.cMessage = row.IsNull("cMessage") ? string.Empty : row.Field<string>("cMessage");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPdecupdpricecostresults(ref DataRow row, Pdecupdpricecostresults entity)
      {
         row.SetField("prod", entity.prod);
         row.SetField("notesfl", entity.notesfl);
         row.SetField("descrip1", entity.descrip1);
         row.SetField("descrip2", entity.descrip2);
         row.SetField("whse", entity.whse);
         row.SetField("homewhsefl", entity.homewhsefl);
         row.SetField("homewhse", entity.homewhse);
         row.SetField("pricetxt", entity.pricetxt);
         row.SetField("effectdt", entity.effectdt);
         row.SetField("basetype", entity.basetype);
         row.SetField("basetypedesc", entity.basetypedesc);
         row.SetField("baseprice", entity.baseprice);
         row.SetField("basepricenew", entity.basepricenew);
         row.SetField("basepriceorig", entity.basepriceorig);
         row.SetField("basedt", entity.basedt);
         row.SetField("listtype", entity.listtype);
         row.SetField("listtypedesc", entity.listtypedesc);
         row.SetField("listprice", entity.listprice);
         row.SetField("listpricenew", entity.listpricenew);
         row.SetField("listpriceorig", entity.listpriceorig);
         row.SetField("listdt", entity.listdt);
         row.SetField("repltype", entity.repltype);
         row.SetField("repltypedesc", entity.repltypedesc);
         row.SetField("replcost", entity.replcost);
         row.SetField("replcostnew", entity.replcostnew);
         row.SetField("replcostorig", entity.replcostorig);
         row.SetField("repldt", entity.repldt);
         row.SetField("stndtype", entity.stndtype);
         row.SetField("stndtypedesc", entity.stndtypedesc);
         row.SetField("stndcost", entity.stndcost);
         row.SetField("stndcostnew", entity.stndcostnew);
         row.SetField("stndcostorig", entity.stndcostorig);
         row.SetField("stnddt", entity.stnddt);
         row.SetField("lastcost", entity.lastcost);
         row.SetField("th1", entity.th1);
         row.SetField("th2", entity.th2);
         row.SetField("th3", entity.th3);
         row.SetField("pround", entity.pround);
         row.SetField("prounddesc", entity.prounddesc);
         row.SetField("ptarget", entity.ptarget);
         row.SetField("ptargetdesc", entity.ptargetdesc);
         row.SetField("pexactrnd", entity.pexactrnd);
         row.SetField("pricetype", entity.pricetype);
         row.SetField("newdt", entity.newdt);
         row.SetField("icglcost", entity.icglcost);
         row.SetField("icglbsty", entity.icglbsty);
         row.SetField("updglty", entity.updglty);
         row.SetField("calcord1", entity.calcord1);
         row.SetField("calcord2", entity.calcord2);
         row.SetField("calcord3", entity.calcord3);
         row.SetField("msgtxt1", entity.msgtxt1);
         row.SetField("msgtxt2", entity.msgtxt2);
         row.SetField("msgtxt3", entity.msgtxt3);
         row.SetField("msgtxt4", entity.msgtxt4);
         row.SetField("ourproc", entity.ourproc);
         row.SetField("callproc", entity.callproc);
         row.SetField("secure", entity.secure);
         row.SetField("gldivfl", entity.gldivfl);
         row.SetField("divno", entity.divno);
         row.SetField("icincaddsm", entity.icincaddsm);
         row.SetField("icincaddgl", entity.icincaddgl);
         row.SetField("icscupdt", entity.icscupdt);
         row.SetField("cErrorWarning", entity.cErrorWarning);
         row.SetField("cMessage", entity.cMessage);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
