//------------------------------------------------------------------------------
// 
//     This code was generated by a tool.
//     Template version $Rev: 13370 $
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//
//     (c) Infor Global Solutions 2018
// 
//------------------------------------------------------------------------------

#pragma warning disable 1591
using System;
using System.ComponentModel.DataAnnotations;
using System.Data;
using System.Collections.Generic;
using System.Linq;
using HelpPageErrorSimulator.HelpArea.Areas.HelpPage.ModelDescriptions;
using ServiceInterfaceClient.Attributes;
using ServiceInterfaceClient.BaseClasses;
using ServiceInterfaceClient.Helpers;
using ServiceInterfaceClient.Interfaces;

namespace Infor.Sxe.PD.Data.Models.Pdspdsprebatesearch
{
   [ModelName("Infor.Sxe.PD.Data.Models.Pdspdsprebatesearch.Pdsprebateresults")]
   public partial class Pdsprebateresults : ModelBase
   {
      public decimal rebrecno { get; set; }
      public decimal custno { get; set; }
      [StringValidationAttribute]
      public string custnotesfl { get; set; }
      [StringValidationAttribute]
      public string custtype { get; set; }
      [StringValidationAttribute]
      public string shiptonotesfl { get; set; }
      public decimal vendno { get; set; }
      [StringValidationAttribute]
      public string vendnotesfl { get; set; }
      [StringValidationAttribute]
      public string prod { get; set; }
      [StringValidationAttribute]
      public string prodnotesfl { get; set; }
      [StringValidationAttribute]
      public string custrebty { get; set; }
      [StringValidationAttribute]
      public string levelcd { get; set; }
      [StringValidationAttribute]
      public string clevelcd { get; set; }
      [StringValidationAttribute]
      public string rebatety { get; set; }
      [StringValidationAttribute]
      public string prodprcty { get; set; }
      [StringValidationAttribute]
      public string prodline { get; set; }
      [StringValidationAttribute]
      public string prodcat { get; set; }
      [StringValidationAttribute]
      public string whse { get; set; }
      public DateTime? startdt { get; set; }
      public DateTime? enddt { get; set; }
      [StringValidationAttribute]
      public string contractno { get; set; }
      public int contractlineno { get; set; }
      [StringValidationAttribute]
      public string refer { get; set; }
      [StringValidationAttribute]
      public string cRebateDesc { get; set; }
      [StringValidationAttribute]
      public string rebatecd { get; set; }
      [StringValidationAttribute]
      public string cDropShipty { get; set; }
      [StringValidationAttribute]
      public string dropshipty { get; set; }
      public int iRecordLimit { get; set; }
      [StringValidationAttribute]
      public string pdRowid { get; set; }
      public bool manualfl { get; set; }
      [StringValidationAttribute]
      public string custcurrency { get; set; }
      [StringValidationAttribute]
      public string vendcurrency { get; set; }
      public decimal price { get; set; }
      [StringValidationAttribute]
      public string prccurrencyty { get; set; }
      [StringValidationAttribute]
      public string userfield { get; set; }


      public static Pdsprebateresults BuildPdsprebateresultsFromRow(DataRow row)
      {
         Pdsprebateresults entity = new Pdsprebateresults();
         entity.rebrecno = row.IsNull("rebrecno") ? decimal.Zero : row.Field<decimal>("rebrecno");
         entity.custno = row.IsNull("custno") ? decimal.Zero : row.Field<decimal>("custno");
         entity.custnotesfl = row.IsNull("custnotesfl") ? string.Empty : row.Field<string>("custnotesfl");
         entity.custtype = row.IsNull("custtype") ? string.Empty : row.Field<string>("custtype");
         entity.shiptonotesfl = row.IsNull("shiptonotesfl") ? string.Empty : row.Field<string>("shiptonotesfl");
         entity.vendno = row.IsNull("vendno") ? decimal.Zero : row.Field<decimal>("vendno");
         entity.vendnotesfl = row.IsNull("vendnotesfl") ? string.Empty : row.Field<string>("vendnotesfl");
         entity.prod = row.IsNull("prod") ? string.Empty : row.Field<string>("prod");
         entity.prodnotesfl = row.IsNull("prodnotesfl") ? string.Empty : row.Field<string>("prodnotesfl");
         entity.custrebty = row.IsNull("custrebty") ? string.Empty : row.Field<string>("custrebty");
         entity.levelcd = row.IsNull("levelcd") ? string.Empty : row.Field<string>("levelcd");
         entity.clevelcd = row.IsNull("clevelcd") ? string.Empty : row.Field<string>("clevelcd");
         entity.rebatety = row.IsNull("rebatety") ? string.Empty : row.Field<string>("rebatety");
         entity.prodprcty = row.IsNull("prodprcty") ? string.Empty : row.Field<string>("prodprcty");
         entity.prodline = row.IsNull("prodline") ? string.Empty : row.Field<string>("prodline");
         entity.prodcat = row.IsNull("prodcat") ? string.Empty : row.Field<string>("prodcat");
         entity.whse = row.IsNull("whse") ? string.Empty : row.Field<string>("whse");
         entity.startdt = row.Field<DateTime?>("startdt");
         entity.enddt = row.Field<DateTime?>("enddt");
         entity.contractno = row.IsNull("contractno") ? string.Empty : row.Field<string>("contractno");
         entity.contractlineno = row.IsNull("contractlineno") ? 0 : row.Field<int>("contractlineno");
         entity.refer = row.IsNull("refer") ? string.Empty : row.Field<string>("refer");
         entity.cRebateDesc = row.IsNull("cRebateDesc") ? string.Empty : row.Field<string>("cRebateDesc");
         entity.rebatecd = row.IsNull("rebatecd") ? string.Empty : row.Field<string>("rebatecd");
         entity.cDropShipty = row.IsNull("cDropShipty") ? string.Empty : row.Field<string>("cDropShipty");
         entity.dropshipty = row.IsNull("dropshipty") ? string.Empty : row.Field<string>("dropshipty");
         entity.iRecordLimit = row.IsNull("iRecordLimit") ? 0 : row.Field<int>("iRecordLimit");
         entity.pdRowid = row.Field<byte[]>("pd_rowid").ToStringEncoded();
         entity.manualfl = row.Field<bool>("manualfl");
         entity.custcurrency = row.IsNull("custcurrency") ? string.Empty : row.Field<string>("custcurrency");
         entity.vendcurrency = row.IsNull("vendcurrency") ? string.Empty : row.Field<string>("vendcurrency");
         entity.price = row.IsNull("price") ? decimal.Zero : row.Field<decimal>("price");
         entity.prccurrencyty = row.IsNull("prccurrencyty") ? string.Empty : row.Field<string>("prccurrencyty");
         entity.userfield = row.IsNull("userfield") ? string.Empty : row.Field<string>("userfield");
         return entity;
      }

      /// <summary>
      /// Update a database row from a class
      /// </summary>
      public static void UpdateRowFromPdsprebateresults(ref DataRow row, Pdsprebateresults entity)
      {
         row.SetField("rebrecno", entity.rebrecno);
         row.SetField("custno", entity.custno);
         row.SetField("custnotesfl", entity.custnotesfl);
         row.SetField("custtype", entity.custtype);
         row.SetField("shiptonotesfl", entity.shiptonotesfl);
         row.SetField("vendno", entity.vendno);
         row.SetField("vendnotesfl", entity.vendnotesfl);
         row.SetField("prod", entity.prod);
         row.SetField("prodnotesfl", entity.prodnotesfl);
         row.SetField("custrebty", entity.custrebty);
         row.SetField("levelcd", entity.levelcd);
         row.SetField("clevelcd", entity.clevelcd);
         row.SetField("rebatety", entity.rebatety);
         row.SetField("prodprcty", entity.prodprcty);
         row.SetField("prodline", entity.prodline);
         row.SetField("prodcat", entity.prodcat);
         row.SetField("whse", entity.whse);
         row.SetField("startdt", entity.startdt);
         row.SetField("enddt", entity.enddt);
         row.SetField("contractno", entity.contractno);
         row.SetField("contractlineno", entity.contractlineno);
         row.SetField("refer", entity.refer);
         row.SetField("cRebateDesc", entity.cRebateDesc);
         row.SetField("rebatecd", entity.rebatecd);
         row.SetField("cDropShipty", entity.cDropShipty);
         row.SetField("dropshipty", entity.dropshipty);
         row.SetField("iRecordLimit", entity.iRecordLimit);
         row.SetField("pd_rowid", entity.pdRowid.ToByteArray());
         row.SetField("manualfl", entity.manualfl);
         row.SetField("custcurrency", entity.custcurrency);
         row.SetField("vendcurrency", entity.vendcurrency);
         row.SetField("price", entity.price);
         row.SetField("prccurrencyty", entity.prccurrencyty);
         row.SetField("userfield", entity.userfield);

      }
   
   }
}
#pragma warning restore 1591
